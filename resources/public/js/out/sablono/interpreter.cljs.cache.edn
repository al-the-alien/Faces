;; Analyzed by ClojureScript 0.0-2816
{:defs {input {:file "resources/public/js/out/sablono/interpreter.cljs", :line 47, :column 8, :end-line 47, :end-column 18, :test true, :name sablono.interpreter/input}, attributes {:protocol-inline nil, :name sablono.interpreter/attributes, :variadic false, :file "resources/public/js/out/sablono/interpreter.cljs", :end-column 17, :method-params ([attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil object any array string clj-nil}, :variadic false, :max-fixed-arity 1}), :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attrs])), :test true}, interpret {:protocol-inline nil, :protocol sablono.interpreter/IInterpreter, :name sablono.interpreter/interpret, :variadic false, :file "resources/public/js/out/sablono/interpreter.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 7, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, wrap-form-element {:protocol-inline nil, :name sablono.interpreter/wrap-form-element, :variadic false, :file "resources/public/js/out/sablono/interpreter.cljs", :end-column 24, :method-params ([ctor display-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctor display-name])), :test true}, element {:protocol-inline nil, :name sablono.interpreter/element, :variadic false, :file "resources/public/js/out/sablono/interpreter.cljs", :end-column 14, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element])), :doc "Render an element vector as a HTML element.", :test true}, IInterpreter {:protocol-symbol true, :name sablono.interpreter/IInterpreter, :file "resources/public/js/out/sablono/interpreter.cljs", :end-column 26, :column 1, :line 7, :protocol-info {:methods {interpret [[this]]}}, :info nil, :end-line 7, :impls #{nil cljs.core/Cons cljs.core/IndexedSeq cljs.core/LazySeq cljs.core/Subvec default cljs.core/PersistentVector cljs.core/List cljs.core/ChunkedSeq}, :test true}, option {:file "resources/public/js/out/sablono/interpreter.cljs", :line 48, :column 8, :end-line 48, :end-column 19, :test true, :name sablono.interpreter/option}, textarea {:file "resources/public/js/out/sablono/interpreter.cljs", :line 49, :column 8, :end-line 49, :end-column 21, :test true, :name sablono.interpreter/textarea}, interpret-seq {:protocol-inline nil, :private true, :name sablono.interpreter/interpret-seq, :variadic false, :file "resources/public/js/out/sablono/interpreter.cljs", :end-column 21, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag array, :variadic false, :max-fixed-arity 1}), :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, create-element {:protocol-inline nil, :name sablono.interpreter/create-element, :variadic true, :file "resources/public/js/out/sablono/interpreter.cljs", :end-column 21, :method-params ([type props children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 2}), :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type props & children])), :test true}}, :name sablono.interpreter, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {join clojure.string, blank? clojure.string}, :requires {cljsjs.react cljsjs.react, gobject goog.object, goog.object goog.object, util sablono.util, sablono.util sablono.util, clojure.string clojure.string}, :imports nil}