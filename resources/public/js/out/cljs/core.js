// Compiled by ClojureScript 0.0-2816 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__24236__delegate = function (args){
return console.log.apply(console,(function (){var G__24235 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__24235) : cljs.core.into_array.call(null,G__24235));
})());
};
var G__24236 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24237__i = 0, G__24237__a = new Array(arguments.length -  0);
while (G__24237__i < G__24237__a.length) {G__24237__a[G__24237__i] = arguments[G__24237__i + 0]; ++G__24237__i;}
  args = new cljs.core.IndexedSeq(G__24237__a,0);
} 
return G__24236__delegate.call(this,args);};
G__24236.cljs$lang$maxFixedArity = 0;
G__24236.cljs$lang$applyTo = (function (arglist__24238){
var args = cljs.core.seq(arglist__24238);
return G__24236__delegate(args);
});
G__24236.cljs$core$IFn$_invoke$arity$variadic = G__24236__delegate;
return G__24236;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__24240 = x;
return goog.isString(G__24240);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__24242 = x__$1;
return goog.typeOf(G__24242);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__14432__auto__ = ty;
if(cljs.core.truth_(and__14432__auto__)){
return ty.cljs$lang$type;
} else {
return and__14432__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__24244 = obj;
return goog.typeOf(G__24244);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4404__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4404__auto__)){
var s = temp__4404__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__24246 = Symbol;
return goog.typeOf(G__24246);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__15331__auto___24248 = len;
var i_24249 = (0);
while(true){
if((i_24249 < n__15331__auto___24248)){
(new_arr[i_24249] = (arr[i_24249]));

var G__24250 = (i_24249 + (1));
i_24249 = G__24250;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__24251 = (i + (1));
i = G__24251;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__24260__delegate = function (array,i,idxs){
var G__24257 = aget;
var G__24258 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__24259 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__24257,G__24258,G__24259) : cljs.core.apply.call(null,G__24257,G__24258,G__24259));
};
var G__24260 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__24261__i = 0, G__24261__a = new Array(arguments.length -  2);
while (G__24261__i < G__24261__a.length) {G__24261__a[G__24261__i] = arguments[G__24261__i + 2]; ++G__24261__i;}
  idxs = new cljs.core.IndexedSeq(G__24261__a,0);
} 
return G__24260__delegate.call(this,array,i,idxs);};
G__24260.cljs$lang$maxFixedArity = 2;
G__24260.cljs$lang$applyTo = (function (arglist__24262){
var array = cljs.core.first(arglist__24262);
arglist__24262 = cljs.core.next(arglist__24262);
var i = cljs.core.first(arglist__24262);
var idxs = cljs.core.rest(arglist__24262);
return G__24260__delegate(array,i,idxs);
});
G__24260.cljs$core$IFn$_invoke$arity$variadic = G__24260__delegate;
return G__24260;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__24263 = null;
if (arguments.length > 2) {
var G__24264__i = 0, G__24264__a = new Array(arguments.length -  2);
while (G__24264__i < G__24264__a.length) {G__24264__a[G__24264__i] = arguments[G__24264__i + 2]; ++G__24264__i;}
G__24263 = new cljs.core.IndexedSeq(G__24264__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__24263);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__24273__delegate = function (array,idx,idx2,idxv){
var G__24269 = aset;
var G__24270 = (array[idx]);
var G__24271 = idx2;
var G__24272 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__24269,G__24270,G__24271,G__24272) : cljs.core.apply.call(null,G__24269,G__24270,G__24271,G__24272));
};
var G__24273 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__24274__i = 0, G__24274__a = new Array(arguments.length -  3);
while (G__24274__i < G__24274__a.length) {G__24274__a[G__24274__i] = arguments[G__24274__i + 3]; ++G__24274__i;}
  idxv = new cljs.core.IndexedSeq(G__24274__a,0);
} 
return G__24273__delegate.call(this,array,idx,idx2,idxv);};
G__24273.cljs$lang$maxFixedArity = 3;
G__24273.cljs$lang$applyTo = (function (arglist__24275){
var array = cljs.core.first(arglist__24275);
arglist__24275 = cljs.core.next(arglist__24275);
var idx = cljs.core.first(arglist__24275);
arglist__24275 = cljs.core.next(arglist__24275);
var idx2 = cljs.core.first(arglist__24275);
var idxv = cljs.core.rest(arglist__24275);
return G__24273__delegate(array,idx,idx2,idxv);
});
G__24273.cljs$core$IFn$_invoke$arity$variadic = G__24273__delegate;
return G__24273;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__24276 = null;
if (arguments.length > 3) {
var G__24277__i = 0, G__24277__a = new Array(arguments.length -  3);
while (G__24277__i < G__24277__a.length) {G__24277__a[G__24277__i] = arguments[G__24277__i + 3]; ++G__24277__i;}
G__24276 = new cljs.core.IndexedSeq(G__24277__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__24276);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__24283 = (function (a,x){
a.push(x);

return a;
});
var G__24284 = [];
var G__24285 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24283,G__24284,G__24285) : cljs.core.reduce.call(null,G__24283,G__24284,G__24285));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__24286__i = 0, G__24286__a = new Array(arguments.length -  2);
while (G__24286__i < G__24286__a.length) {G__24286__a[G__24286__i] = arguments[G__24286__i + 2]; ++G__24286__i;}
  args = new cljs.core.IndexedSeq(G__24286__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__24287){
var obj = cljs.core.first(arglist__24287);
arglist__24287 = cljs.core.next(arglist__24287);
var s = cljs.core.first(arglist__24287);
var args = cljs.core.rest(arglist__24287);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj24289 = {};
return obj24289;
})();


cljs.core.IFn = (function (){var obj24291 = {};
return obj24291;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24337 = x__15088__auto__;
return goog.typeOf(G__24337);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24339 = x__15088__auto__;
return goog.typeOf(G__24339);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24341 = x__15088__auto__;
return goog.typeOf(G__24341);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24343 = x__15088__auto__;
return goog.typeOf(G__24343);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24345 = x__15088__auto__;
return goog.typeOf(G__24345);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24347 = x__15088__auto__;
return goog.typeOf(G__24347);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24349 = x__15088__auto__;
return goog.typeOf(G__24349);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24351 = x__15088__auto__;
return goog.typeOf(G__24351);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24353 = x__15088__auto__;
return goog.typeOf(G__24353);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24355 = x__15088__auto__;
return goog.typeOf(G__24355);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24357 = x__15088__auto__;
return goog.typeOf(G__24357);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24359 = x__15088__auto__;
return goog.typeOf(G__24359);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24361 = x__15088__auto__;
return goog.typeOf(G__24361);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24363 = x__15088__auto__;
return goog.typeOf(G__24363);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24365 = x__15088__auto__;
return goog.typeOf(G__24365);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24367 = x__15088__auto__;
return goog.typeOf(G__24367);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24369 = x__15088__auto__;
return goog.typeOf(G__24369);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24371 = x__15088__auto__;
return goog.typeOf(G__24371);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24373 = x__15088__auto__;
return goog.typeOf(G__24373);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24375 = x__15088__auto__;
return goog.typeOf(G__24375);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24377 = x__15088__auto__;
return goog.typeOf(G__24377);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__24379 = x__15088__auto__;
return goog.typeOf(G__24379);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj24381 = {};
return obj24381;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__14432__auto__ = value;
if(and__14432__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__14432__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__15088__auto__ = (((value == null))?null:value);
return (function (){var or__14444__auto__ = (cljs.core._clone[(function (){var G__24385 = x__15088__auto__;
return goog.typeOf(G__24385);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._clone["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj24387 = {};
return obj24387;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._count[(function (){var G__24391 = x__15088__auto__;
return goog.typeOf(G__24391);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._count["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj24393 = {};
return obj24393;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._empty[(function (){var G__24397 = x__15088__auto__;
return goog.typeOf(G__24397);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._empty["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj24399 = {};
return obj24399;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._conj[(function (){var G__24403 = x__15088__auto__;
return goog.typeOf(G__24403);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._conj["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj24405 = {};
return obj24405;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._nth[(function (){var G__24411 = x__15088__auto__;
return goog.typeOf(G__24411);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._nth["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._nth[(function (){var G__24413 = x__15088__auto__;
return goog.typeOf(G__24413);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._nth["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj24415 = {};
return obj24415;
})();


cljs.core.ISeq = (function (){var obj24417 = {};
return obj24417;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._first[(function (){var G__24421 = x__15088__auto__;
return goog.typeOf(G__24421);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._first["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._rest[(function (){var G__24425 = x__15088__auto__;
return goog.typeOf(G__24425);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._rest["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj24427 = {};
return obj24427;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._next[(function (){var G__24431 = x__15088__auto__;
return goog.typeOf(G__24431);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._next["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj24433 = {};
return obj24433;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._lookup[(function (){var G__24439 = x__15088__auto__;
return goog.typeOf(G__24439);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._lookup["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._lookup[(function (){var G__24441 = x__15088__auto__;
return goog.typeOf(G__24441);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._lookup["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj24443 = {};
return obj24443;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__24447 = x__15088__auto__;
return goog.typeOf(G__24447);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._assoc[(function (){var G__24451 = x__15088__auto__;
return goog.typeOf(G__24451);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._assoc["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj24453 = {};
return obj24453;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._dissoc[(function (){var G__24457 = x__15088__auto__;
return goog.typeOf(G__24457);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._dissoc["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj24459 = {};
return obj24459;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._key[(function (){var G__24463 = x__15088__auto__;
return goog.typeOf(G__24463);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._key["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._val[(function (){var G__24467 = x__15088__auto__;
return goog.typeOf(G__24467);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._val["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj24469 = {};
return obj24469;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._disjoin[(function (){var G__24473 = x__15088__auto__;
return goog.typeOf(G__24473);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._disjoin["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj24475 = {};
return obj24475;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._peek[(function (){var G__24479 = x__15088__auto__;
return goog.typeOf(G__24479);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._peek["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._pop[(function (){var G__24483 = x__15088__auto__;
return goog.typeOf(G__24483);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._pop["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj24485 = {};
return obj24485;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._assoc_n[(function (){var G__24489 = x__15088__auto__;
return goog.typeOf(G__24489);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj24491 = {};
return obj24491;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._deref[(function (){var G__24495 = x__15088__auto__;
return goog.typeOf(G__24495);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._deref["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj24497 = {};
return obj24497;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._deref_with_timeout[(function (){var G__24501 = x__15088__auto__;
return goog.typeOf(G__24501);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj24503 = {};
return obj24503;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._meta[(function (){var G__24507 = x__15088__auto__;
return goog.typeOf(G__24507);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._meta["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj24509 = {};
return obj24509;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._with_meta[(function (){var G__24513 = x__15088__auto__;
return goog.typeOf(G__24513);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._with_meta["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj24515 = {};
return obj24515;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._reduce[(function (){var G__24521 = x__15088__auto__;
return goog.typeOf(G__24521);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._reduce["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._reduce[(function (){var G__24523 = x__15088__auto__;
return goog.typeOf(G__24523);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._reduce["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj24525 = {};
return obj24525;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._kv_reduce[(function (){var G__24529 = x__15088__auto__;
return goog.typeOf(G__24529);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj24531 = {};
return obj24531;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._equiv[(function (){var G__24535 = x__15088__auto__;
return goog.typeOf(G__24535);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._equiv["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj24537 = {};
return obj24537;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._hash[(function (){var G__24541 = x__15088__auto__;
return goog.typeOf(G__24541);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._hash["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj24543 = {};
return obj24543;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._seq[(function (){var G__24547 = x__15088__auto__;
return goog.typeOf(G__24547);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._seq["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj24549 = {};
return obj24549;
})();


cljs.core.IList = (function (){var obj24551 = {};
return obj24551;
})();


cljs.core.IRecord = (function (){var obj24553 = {};
return obj24553;
})();


cljs.core.IReversible = (function (){var obj24555 = {};
return obj24555;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._rseq[(function (){var G__24559 = x__15088__auto__;
return goog.typeOf(G__24559);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._rseq["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj24561 = {};
return obj24561;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._sorted_seq[(function (){var G__24565 = x__15088__auto__;
return goog.typeOf(G__24565);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._sorted_seq_from[(function (){var G__24569 = x__15088__auto__;
return goog.typeOf(G__24569);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._entry_key[(function (){var G__24573 = x__15088__auto__;
return goog.typeOf(G__24573);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._entry_key["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._comparator[(function (){var G__24577 = x__15088__auto__;
return goog.typeOf(G__24577);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._comparator["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj24579 = {};
return obj24579;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__14432__auto__ = writer;
if(and__14432__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__14432__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__15088__auto__ = (((writer == null))?null:writer);
return (function (){var or__14444__auto__ = (cljs.core._write[(function (){var G__24583 = x__15088__auto__;
return goog.typeOf(G__24583);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._write["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__14432__auto__ = writer;
if(and__14432__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__14432__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__15088__auto__ = (((writer == null))?null:writer);
return (function (){var or__14444__auto__ = (cljs.core._flush[(function (){var G__24587 = x__15088__auto__;
return goog.typeOf(G__24587);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._flush["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj24589 = {};
return obj24589;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._pr_writer[(function (){var G__24593 = x__15088__auto__;
return goog.typeOf(G__24593);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj24595 = {};
return obj24595;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__14432__auto__ = d;
if(and__14432__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__14432__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__15088__auto__ = (((d == null))?null:d);
return (function (){var or__14444__auto__ = (cljs.core._realized_QMARK_[(function (){var G__24599 = x__15088__auto__;
return goog.typeOf(G__24599);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj24601 = {};
return obj24601;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._notify_watches[(function (){var G__24605 = x__15088__auto__;
return goog.typeOf(G__24605);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._add_watch[(function (){var G__24609 = x__15088__auto__;
return goog.typeOf(G__24609);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._add_watch["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._remove_watch[(function (){var G__24613 = x__15088__auto__;
return goog.typeOf(G__24613);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj24615 = {};
return obj24615;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._as_transient[(function (){var G__24619 = x__15088__auto__;
return goog.typeOf(G__24619);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._as_transient["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj24621 = {};
return obj24621;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._conj_BANG_[(function (){var G__24625 = x__15088__auto__;
return goog.typeOf(G__24625);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._persistent_BANG_[(function (){var G__24629 = x__15088__auto__;
return goog.typeOf(G__24629);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj24631 = {};
return obj24631;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._assoc_BANG_[(function (){var G__24635 = x__15088__auto__;
return goog.typeOf(G__24635);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj24637 = {};
return obj24637;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__24641 = x__15088__auto__;
return goog.typeOf(G__24641);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj24643 = {};
return obj24643;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__24647 = x__15088__auto__;
return goog.typeOf(G__24647);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._pop_BANG_[(function (){var G__24651 = x__15088__auto__;
return goog.typeOf(G__24651);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj24653 = {};
return obj24653;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__24657 = x__15088__auto__;
return goog.typeOf(G__24657);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj24659 = {};
return obj24659;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._compare[(function (){var G__24663 = x__15088__auto__;
return goog.typeOf(G__24663);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._compare["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj24665 = {};
return obj24665;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._drop_first[(function (){var G__24669 = x__15088__auto__;
return goog.typeOf(G__24669);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._drop_first["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj24671 = {};
return obj24671;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._chunked_first[(function (){var G__24675 = x__15088__auto__;
return goog.typeOf(G__24675);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._chunked_rest[(function (){var G__24679 = x__15088__auto__;
return goog.typeOf(G__24679);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj24681 = {};
return obj24681;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._chunked_next[(function (){var G__24685 = x__15088__auto__;
return goog.typeOf(G__24685);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj24687 = {};
return obj24687;
})();

cljs.core._name = (function _name(x){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._name[(function (){var G__24691 = x__15088__auto__;
return goog.typeOf(G__24691);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._name["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._namespace[(function (){var G__24695 = x__15088__auto__;
return goog.typeOf(G__24695);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._namespace["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj24697 = {};
return obj24697;
})();


cljs.core.IReset = (function (){var obj24699 = {};
return obj24699;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._reset_BANG_[(function (){var G__24703 = x__15088__auto__;
return goog.typeOf(G__24703);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj24705 = {};
return obj24705;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._swap_BANG_[(function (){var G__24715 = x__15088__auto__;
return goog.typeOf(G__24715);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._swap_BANG_[(function (){var G__24717 = x__15088__auto__;
return goog.typeOf(G__24717);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._swap_BANG_[(function (){var G__24719 = x__15088__auto__;
return goog.typeOf(G__24719);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._swap_BANG_[(function (){var G__24721 = x__15088__auto__;
return goog.typeOf(G__24721);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj24723 = {};
return obj24723;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._vreset_BANG_[(function (){var G__24727 = x__15088__auto__;
return goog.typeOf(G__24727);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj24729 = {};
return obj24729;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._iterator[(function (){var G__24733 = x__15088__auto__;
return goog.typeOf(G__24733);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._iterator["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__24736 = (4294967295);
var G__24737 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24736,G__24737) : Math.imul.call(null,G__24736,G__24737));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__24740 = a;
var G__24741 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24740,G__24741) : Math.imul.call(null,G__24740,G__24741));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__24742 = (i + (2));
var G__24743 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__24742;
h1 = G__24743;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj24745 = {};
return obj24745;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__24746 = (i + (1));
var G__24747 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__24746;
hash = G__24747;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj24751 = {};
return obj24751;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__24754 = o;
if(G__24754){
var bit__15118__auto__ = (G__24754.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__15118__auto__) || (G__24754.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__24755 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24755) : Math.floor.call(null,G__24755));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__14432__auto__ = cljs.core.not(a.ns);
if(and__14432__auto__){
return b.ns;
} else {
return and__14432__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24762 = a.ns;
var G__24763 = b.ns;
return goog.array.defaultCompare(G__24762,G__24763);
})();
if(((0) === nsc)){
var G__24764 = a.name;
var G__24765 = b.name;
return goog.array.defaultCompare(G__24764,G__24765);
} else {
return nsc;
}
}
} else {
var G__24766 = a.name;
var G__24767 = b.name;
return goog.array.defaultCompare(G__24766,G__24767);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__14865__auto__ = self__._hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__24769 = null;
var G__24769__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__24769__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__24769 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24769__2.call(this,self__,coll);
case 3:
return G__24769__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24769.cljs$core$IFn$_invoke$arity$2 = G__24769__2;
G__24769.cljs$core$IFn$_invoke$arity$3 = G__24769__3;
return G__24769;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args24768){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24768)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__24817 = null;
var G__24817__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__24817__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__24817__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__24817__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__24817__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__24817__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__24817__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__24817__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__24817__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__24817__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__24817__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__24817__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__24817__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__24817__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__24817__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__24817__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__24817__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__24817__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__24817__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__24817__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__24817__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__24817__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24773 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__24774 = a;
var G__24775 = b;
var G__24776 = c;
var G__24777 = d;
var G__24778 = e;
var G__24779 = f;
var G__24780 = g;
var G__24781 = h;
var G__24782 = i;
var G__24783 = j;
var G__24784 = k;
var G__24785 = l;
var G__24786 = m;
var G__24787 = n;
var G__24788 = o;
var G__24789 = p;
var G__24790 = q;
var G__24791 = r;
var G__24792 = s;
var G__24793 = t;
var G__24794 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794) : cljs.core.apply.call(null,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794));
});
G__24817 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24817__1.call(this,self__);
case 2:
return G__24817__2.call(this,self__,a);
case 3:
return G__24817__3.call(this,self__,a,b);
case 4:
return G__24817__4.call(this,self__,a,b,c);
case 5:
return G__24817__5.call(this,self__,a,b,c,d);
case 6:
return G__24817__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24817__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24817__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24817__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24817__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24817__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24817__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24817__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24817__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24817__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24817__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24817__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24817__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24817__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24817__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24817__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24817__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24817.cljs$core$IFn$_invoke$arity$1 = G__24817__1;
G__24817.cljs$core$IFn$_invoke$arity$2 = G__24817__2;
G__24817.cljs$core$IFn$_invoke$arity$3 = G__24817__3;
G__24817.cljs$core$IFn$_invoke$arity$4 = G__24817__4;
G__24817.cljs$core$IFn$_invoke$arity$5 = G__24817__5;
G__24817.cljs$core$IFn$_invoke$arity$6 = G__24817__6;
G__24817.cljs$core$IFn$_invoke$arity$7 = G__24817__7;
G__24817.cljs$core$IFn$_invoke$arity$8 = G__24817__8;
G__24817.cljs$core$IFn$_invoke$arity$9 = G__24817__9;
G__24817.cljs$core$IFn$_invoke$arity$10 = G__24817__10;
G__24817.cljs$core$IFn$_invoke$arity$11 = G__24817__11;
G__24817.cljs$core$IFn$_invoke$arity$12 = G__24817__12;
G__24817.cljs$core$IFn$_invoke$arity$13 = G__24817__13;
G__24817.cljs$core$IFn$_invoke$arity$14 = G__24817__14;
G__24817.cljs$core$IFn$_invoke$arity$15 = G__24817__15;
G__24817.cljs$core$IFn$_invoke$arity$16 = G__24817__16;
G__24817.cljs$core$IFn$_invoke$arity$17 = G__24817__17;
G__24817.cljs$core$IFn$_invoke$arity$18 = G__24817__18;
G__24817.cljs$core$IFn$_invoke$arity$19 = G__24817__19;
G__24817.cljs$core$IFn$_invoke$arity$20 = G__24817__20;
G__24817.cljs$core$IFn$_invoke$arity$21 = G__24817__21;
G__24817.cljs$core$IFn$_invoke$arity$22 = G__24817__22;
return G__24817;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args24772){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24772)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24795 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__24796 = a;
var G__24797 = b;
var G__24798 = c;
var G__24799 = d;
var G__24800 = e;
var G__24801 = f;
var G__24802 = g;
var G__24803 = h;
var G__24804 = i;
var G__24805 = j;
var G__24806 = k;
var G__24807 = l;
var G__24808 = m;
var G__24809 = n;
var G__24810 = o;
var G__24811 = p;
var G__24812 = q;
var G__24813 = r;
var G__24814 = s;
var G__24815 = t;
var G__24816 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24795,G__24796,G__24797,G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816) : cljs.core.apply.call(null,G__24795,G__24796,G__24797,G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__24819 = x;
if(G__24819){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto__ = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return G__24819.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__24819.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24819);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24819);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__24821 = value;
if(G__24821){
var bit__15125__auto__ = (G__24821.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__15125__auto__) || (G__24821.cljs$core$ICloneable$)){
return true;
} else {
if((!G__24821.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24821);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24821);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24823 = coll;
if(G__24823){
var bit__15118__auto__ = (G__24823.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__15118__auto__) || (G__24823.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24825 = coll;
if(G__24825){
var bit__15118__auto__ = (G__24825.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15118__auto__) || (G__24825.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__24827 = coll;
if(G__24827){
var bit__15118__auto__ = (G__24827.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15118__auto__) || (G__24827.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24829 = coll;
if(G__24829){
var bit__15118__auto__ = (G__24829.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15118__auto__) || (G__24829.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__24834__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24835 = y;
var G__24836 = cljs.core.first(more);
var G__24837 = cljs.core.next(more);
x = G__24835;
y = G__24836;
more = G__24837;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24834 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24838__i = 0, G__24838__a = new Array(arguments.length -  2);
while (G__24838__i < G__24838__a.length) {G__24838__a[G__24838__i] = arguments[G__24838__i + 2]; ++G__24838__i;}
  more = new cljs.core.IndexedSeq(G__24838__a,0);
} 
return G__24834__delegate.call(this,x,y,more);};
G__24834.cljs$lang$maxFixedArity = 2;
G__24834.cljs$lang$applyTo = (function (arglist__24839){
var x = cljs.core.first(arglist__24839);
arglist__24839 = cljs.core.next(arglist__24839);
var y = cljs.core.first(arglist__24839);
var more = cljs.core.rest(arglist__24839);
return G__24834__delegate(x,y,more);
});
G__24834.cljs$core$IFn$_invoke$arity$variadic = G__24834__delegate;
return G__24834;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__24840 = null;
if (arguments.length > 2) {
var G__24841__i = 0, G__24841__a = new Array(arguments.length -  2);
while (G__24841__i < G__24841__a.length) {G__24841__a[G__24841__i] = arguments[G__24841__i + 2]; ++G__24841__i;}
G__24840 = new cljs.core.IndexedSeq(G__24841__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24840);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__24842 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__24842) : cljs.core.es6_iterator_seq.call(null,G__24842));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24843 = (n + (1));
var G__24844 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24845 = cljs.core.next(coll__$1);
n = G__24843;
hash_code = G__24844;
coll__$1 = G__24845;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24846 = (n + (1));
var G__24847 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24848 = cljs.core.next(coll__$1);
n = G__24846;
hash_code = G__24847;
coll__$1 = G__24848;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__24849 = o;
return goog.getUid(G__24849);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__24851 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24851) : cljs.core.deref.call(null,G__24851));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24858 = val;
var G__24859 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24858,G__24859) : f.call(null,G__24858,G__24859));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24864 = nval;
var G__24865 = (n + (1));
val = G__24864;
n = G__24865;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24860 = val__$1;
var G__24861 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24860,G__24861) : f.call(null,G__24860,G__24861));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24866 = nval;
var G__24867 = (n + (1));
val__$1 = G__24866;
n = G__24867;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24862 = val__$1;
var G__24863 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24862,G__24863) : f.call(null,G__24862,G__24863));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24868 = nval;
var G__24869 = (n + (1));
val__$1 = G__24868;
n = G__24869;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24876 = val;
var G__24877 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24876,G__24877) : f.call(null,G__24876,G__24877));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24882 = nval;
var G__24883 = (n + (1));
val = G__24882;
n = G__24883;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24878 = val__$1;
var G__24879 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24878,G__24879) : f.call(null,G__24878,G__24879));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24884 = nval;
var G__24885 = (n + (1));
val__$1 = G__24884;
n = G__24885;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24880 = val__$1;
var G__24881 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24880,G__24881) : f.call(null,G__24880,G__24881));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24886 = nval;
var G__24887 = (n + (1));
val__$1 = G__24886;
n = G__24887;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__24889 = x;
if(G__24889){
var bit__15125__auto__ = (G__24889.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__15125__auto__) || (G__24889.cljs$core$ICounted$)){
return true;
} else {
if((!G__24889.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24889);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24889);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__24891 = x;
if(G__24891){
var bit__15125__auto__ = (G__24891.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__15125__auto__) || (G__24891.cljs$core$IIndexed$)){
return true;
} else {
if((!G__24891.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24891);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24891);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24892 = coll__$1;
var G__24893 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24892,G__24893) : cljs.core.equiv_sequential.call(null,G__24892,G__24893));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24894 = o;
var G__24895 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24894,G__24895) : cljs.core.cons.call(null,G__24894,G__24895));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24898 = coll__$1;
var G__24899 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24898,G__24899) : cljs.core.equiv_sequential.call(null,G__24898,G__24899));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24900 = cljs.core.List.EMPTY;
var G__24901 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__24900,G__24901) : cljs.core.with_meta.call(null,G__24900,G__24901));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__24902 = f;
var G__24903 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__24902,G__24903) : cljs.core.seq_reduce.call(null,G__24902,G__24903));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__24904 = f;
var G__24905 = start;
var G__24906 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__24904,G__24905,G__24906) : cljs.core.seq_reduce.call(null,G__24904,G__24905,G__24906));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24907 = o;
var G__24908 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24907,G__24908) : cljs.core.cons.call(null,G__24907,G__24908));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__24909 = sn;
s = G__24909;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__24914__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__24915 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__24916 = cljs.core.first(xs);
var G__24917 = cljs.core.next(xs);
coll = G__24915;
x = G__24916;
xs = G__24917;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__24914 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__24918__i = 0, G__24918__a = new Array(arguments.length -  2);
while (G__24918__i < G__24918__a.length) {G__24918__a[G__24918__i] = arguments[G__24918__i + 2]; ++G__24918__i;}
  xs = new cljs.core.IndexedSeq(G__24918__a,0);
} 
return G__24914__delegate.call(this,coll,x,xs);};
G__24914.cljs$lang$maxFixedArity = 2;
G__24914.cljs$lang$applyTo = (function (arglist__24919){
var coll = cljs.core.first(arglist__24919);
arglist__24919 = cljs.core.next(arglist__24919);
var x = cljs.core.first(arglist__24919);
var xs = cljs.core.rest(arglist__24919);
return G__24914__delegate(coll,x,xs);
});
G__24914.cljs$core$IFn$_invoke$arity$variadic = G__24914__delegate;
return G__24914;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__24920 = null;
if (arguments.length > 2) {
var G__24921__i = 0, G__24921__a = new Array(arguments.length -  2);
while (G__24921__i < G__24921__a.length) {G__24921__a[G__24921__i] = arguments[G__24921__i + 2]; ++G__24921__i;}
G__24920 = new cljs.core.IndexedSeq(G__24921__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__24920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__24922 = cljs.core.next(s);
var G__24923 = (acc + (1));
s = G__24922;
acc = G__24923;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__24925 = coll;
if(G__24925){
var bit__15118__auto__ = (G__24925.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__15118__auto__) || (G__24925.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__24926 = cljs.core.next(coll);
var G__24927 = (n - (1));
coll = G__24926;
n = G__24927;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__24928 = cljs.core.next(coll);
var G__24929 = (n - (1));
var G__24930 = not_found;
coll = G__24928;
n = G__24929;
not_found = G__24930;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__24935 = coll;
if(G__24935){
var bit__15118__auto__ = (G__24935.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__15118__auto__) || (G__24935.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24936 = coll;
if(G__24936){
var bit__15125__auto__ = (G__24936.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15125__auto__) || (G__24936.cljs$core$ISeq$)){
return true;
} else {
if((!G__24936.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24936);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24936);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__24937 = coll;
if(G__24937){
var bit__15118__auto__ = (G__24937.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__15118__auto__) || (G__24937.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24938 = coll;
if(G__24938){
var bit__15125__auto__ = (G__24938.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15125__auto__) || (G__24938.cljs$core$ISeq$)){
return true;
} else {
if((!G__24938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24938);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__24939 = (n__$1 - (1));
var G__24940 = cljs.core.rest(xs);
n__$1 = G__24939;
xs = G__24940;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__24943 = o;
if(G__24943){
var bit__15118__auto__ = (G__24943.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__15118__auto__) || (G__24943.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__24944 = o;
if(G__24944){
var bit__15118__auto__ = (G__24944.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__15118__auto__) || (G__24944.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__24948__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__24949 = ret;
var G__24950 = cljs.core.first(kvs);
var G__24951 = cljs.core.second(kvs);
var G__24952 = cljs.core.nnext(kvs);
coll = G__24949;
k = G__24950;
v = G__24951;
kvs = G__24952;
continue;
} else {
return ret;
}
break;
}
};
var G__24948 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24953__i = 0, G__24953__a = new Array(arguments.length -  3);
while (G__24953__i < G__24953__a.length) {G__24953__a[G__24953__i] = arguments[G__24953__i + 3]; ++G__24953__i;}
  kvs = new cljs.core.IndexedSeq(G__24953__a,0);
} 
return G__24948__delegate.call(this,coll,k,v,kvs);};
G__24948.cljs$lang$maxFixedArity = 3;
G__24948.cljs$lang$applyTo = (function (arglist__24954){
var coll = cljs.core.first(arglist__24954);
arglist__24954 = cljs.core.next(arglist__24954);
var k = cljs.core.first(arglist__24954);
arglist__24954 = cljs.core.next(arglist__24954);
var v = cljs.core.first(arglist__24954);
var kvs = cljs.core.rest(arglist__24954);
return G__24948__delegate(coll,k,v,kvs);
});
G__24948.cljs$core$IFn$_invoke$arity$variadic = G__24948__delegate;
return G__24948;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__24955 = null;
if (arguments.length > 3) {
var G__24956__i = 0, G__24956__a = new Array(arguments.length -  3);
while (G__24956__i < G__24956__a.length) {G__24956__a[G__24956__i] = arguments[G__24956__i + 3]; ++G__24956__i;}
G__24955 = new cljs.core.IndexedSeq(G__24956__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__24955);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__24959__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24960 = ret;
var G__24961 = cljs.core.first(ks);
var G__24962 = cljs.core.next(ks);
coll = G__24960;
k = G__24961;
ks = G__24962;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24959 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24963__i = 0, G__24963__a = new Array(arguments.length -  2);
while (G__24963__i < G__24963__a.length) {G__24963__a[G__24963__i] = arguments[G__24963__i + 2]; ++G__24963__i;}
  ks = new cljs.core.IndexedSeq(G__24963__a,0);
} 
return G__24959__delegate.call(this,coll,k,ks);};
G__24959.cljs$lang$maxFixedArity = 2;
G__24959.cljs$lang$applyTo = (function (arglist__24964){
var coll = cljs.core.first(arglist__24964);
arglist__24964 = cljs.core.next(arglist__24964);
var k = cljs.core.first(arglist__24964);
var ks = cljs.core.rest(arglist__24964);
return G__24959__delegate(coll,k,ks);
});
G__24959.cljs$core$IFn$_invoke$arity$variadic = G__24959__delegate;
return G__24959;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__24965 = null;
if (arguments.length > 2) {
var G__24966__i = 0, G__24966__a = new Array(arguments.length -  2);
while (G__24966__i < G__24966__a.length) {G__24966__a[G__24966__i] = arguments[G__24966__i + 2]; ++G__24966__i;}
G__24965 = new cljs.core.IndexedSeq(G__24966__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24965);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__14444__auto__ = (function (){var G__24971 = f;
return goog.isFunction(G__24971);
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__24972 = f;
if(G__24972){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto____$1 = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
return G__24972.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__24972.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24972);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24972);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__25438 = null;
var G__25438__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__25438__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24974 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24974) : self__.afn.call(null,G__24974));
});
var G__25438__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24975 = a;
var G__24976 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24975,G__24976) : self__.afn.call(null,G__24975,G__24976));
});
var G__25438__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24977 = a;
var G__24978 = b;
var G__24979 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24977,G__24978,G__24979) : self__.afn.call(null,G__24977,G__24978,G__24979));
});
var G__25438__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24980 = a;
var G__24981 = b;
var G__24982 = c;
var G__24983 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24980,G__24981,G__24982,G__24983) : self__.afn.call(null,G__24980,G__24981,G__24982,G__24983));
});
var G__25438__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24984 = a;
var G__24985 = b;
var G__24986 = c;
var G__24987 = d;
var G__24988 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24984,G__24985,G__24986,G__24987,G__24988) : self__.afn.call(null,G__24984,G__24985,G__24986,G__24987,G__24988));
});
var G__25438__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24989 = a;
var G__24990 = b;
var G__24991 = c;
var G__24992 = d;
var G__24993 = e;
var G__24994 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24989,G__24990,G__24991,G__24992,G__24993,G__24994) : self__.afn.call(null,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994));
});
var G__25438__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24995 = a;
var G__24996 = b;
var G__24997 = c;
var G__24998 = d;
var G__24999 = e;
var G__25000 = f;
var G__25001 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24995,G__24996,G__24997,G__24998,G__24999,G__25000,G__25001) : self__.afn.call(null,G__24995,G__24996,G__24997,G__24998,G__24999,G__25000,G__25001));
});
var G__25438__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25002 = a;
var G__25003 = b;
var G__25004 = c;
var G__25005 = d;
var G__25006 = e;
var G__25007 = f;
var G__25008 = g;
var G__25009 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__25002,G__25003,G__25004,G__25005,G__25006,G__25007,G__25008,G__25009) : self__.afn.call(null,G__25002,G__25003,G__25004,G__25005,G__25006,G__25007,G__25008,G__25009));
});
var G__25438__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25010 = a;
var G__25011 = b;
var G__25012 = c;
var G__25013 = d;
var G__25014 = e;
var G__25015 = f;
var G__25016 = g;
var G__25017 = h;
var G__25018 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018) : self__.afn.call(null,G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018));
});
var G__25438__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25019 = a;
var G__25020 = b;
var G__25021 = c;
var G__25022 = d;
var G__25023 = e;
var G__25024 = f;
var G__25025 = g;
var G__25026 = h;
var G__25027 = i;
var G__25028 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__25019,G__25020,G__25021,G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028) : self__.afn.call(null,G__25019,G__25020,G__25021,G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028));
});
var G__25438__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25029 = a;
var G__25030 = b;
var G__25031 = c;
var G__25032 = d;
var G__25033 = e;
var G__25034 = f;
var G__25035 = g;
var G__25036 = h;
var G__25037 = i;
var G__25038 = j;
var G__25039 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__25029,G__25030,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039) : self__.afn.call(null,G__25029,G__25030,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039));
});
var G__25438__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25040 = a;
var G__25041 = b;
var G__25042 = c;
var G__25043 = d;
var G__25044 = e;
var G__25045 = f;
var G__25046 = g;
var G__25047 = h;
var G__25048 = i;
var G__25049 = j;
var G__25050 = k;
var G__25051 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046,G__25047,G__25048,G__25049,G__25050,G__25051) : self__.afn.call(null,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046,G__25047,G__25048,G__25049,G__25050,G__25051));
});
var G__25438__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25052 = a;
var G__25053 = b;
var G__25054 = c;
var G__25055 = d;
var G__25056 = e;
var G__25057 = f;
var G__25058 = g;
var G__25059 = h;
var G__25060 = i;
var G__25061 = j;
var G__25062 = k;
var G__25063 = l;
var G__25064 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__25052,G__25053,G__25054,G__25055,G__25056,G__25057,G__25058,G__25059,G__25060,G__25061,G__25062,G__25063,G__25064) : self__.afn.call(null,G__25052,G__25053,G__25054,G__25055,G__25056,G__25057,G__25058,G__25059,G__25060,G__25061,G__25062,G__25063,G__25064));
});
var G__25438__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25065 = a;
var G__25066 = b;
var G__25067 = c;
var G__25068 = d;
var G__25069 = e;
var G__25070 = f;
var G__25071 = g;
var G__25072 = h;
var G__25073 = i;
var G__25074 = j;
var G__25075 = k;
var G__25076 = l;
var G__25077 = m;
var G__25078 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__25065,G__25066,G__25067,G__25068,G__25069,G__25070,G__25071,G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078) : self__.afn.call(null,G__25065,G__25066,G__25067,G__25068,G__25069,G__25070,G__25071,G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078));
});
var G__25438__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25079 = a;
var G__25080 = b;
var G__25081 = c;
var G__25082 = d;
var G__25083 = e;
var G__25084 = f;
var G__25085 = g;
var G__25086 = h;
var G__25087 = i;
var G__25088 = j;
var G__25089 = k;
var G__25090 = l;
var G__25091 = m;
var G__25092 = n;
var G__25093 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__25079,G__25080,G__25081,G__25082,G__25083,G__25084,G__25085,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093) : self__.afn.call(null,G__25079,G__25080,G__25081,G__25082,G__25083,G__25084,G__25085,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093));
});
var G__25438__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25094 = a;
var G__25095 = b;
var G__25096 = c;
var G__25097 = d;
var G__25098 = e;
var G__25099 = f;
var G__25100 = g;
var G__25101 = h;
var G__25102 = i;
var G__25103 = j;
var G__25104 = k;
var G__25105 = l;
var G__25106 = m;
var G__25107 = n;
var G__25108 = o;
var G__25109 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__25094,G__25095,G__25096,G__25097,G__25098,G__25099,G__25100,G__25101,G__25102,G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109) : self__.afn.call(null,G__25094,G__25095,G__25096,G__25097,G__25098,G__25099,G__25100,G__25101,G__25102,G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109));
});
var G__25438__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25110 = a;
var G__25111 = b;
var G__25112 = c;
var G__25113 = d;
var G__25114 = e;
var G__25115 = f;
var G__25116 = g;
var G__25117 = h;
var G__25118 = i;
var G__25119 = j;
var G__25120 = k;
var G__25121 = l;
var G__25122 = m;
var G__25123 = n;
var G__25124 = o;
var G__25125 = p;
var G__25126 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__25110,G__25111,G__25112,G__25113,G__25114,G__25115,G__25116,G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124,G__25125,G__25126) : self__.afn.call(null,G__25110,G__25111,G__25112,G__25113,G__25114,G__25115,G__25116,G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124,G__25125,G__25126));
});
var G__25438__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25127 = a;
var G__25128 = b;
var G__25129 = c;
var G__25130 = d;
var G__25131 = e;
var G__25132 = f;
var G__25133 = g;
var G__25134 = h;
var G__25135 = i;
var G__25136 = j;
var G__25137 = k;
var G__25138 = l;
var G__25139 = m;
var G__25140 = n;
var G__25141 = o;
var G__25142 = p;
var G__25143 = q;
var G__25144 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134,G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144) : self__.afn.call(null,G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134,G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144));
});
var G__25438__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25145 = a;
var G__25146 = b;
var G__25147 = c;
var G__25148 = d;
var G__25149 = e;
var G__25150 = f;
var G__25151 = g;
var G__25152 = h;
var G__25153 = i;
var G__25154 = j;
var G__25155 = k;
var G__25156 = l;
var G__25157 = m;
var G__25158 = n;
var G__25159 = o;
var G__25160 = p;
var G__25161 = q;
var G__25162 = r;
var G__25163 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__25145,G__25146,G__25147,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154,G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163) : self__.afn.call(null,G__25145,G__25146,G__25147,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154,G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163));
});
var G__25438__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25164 = a;
var G__25165 = b;
var G__25166 = c;
var G__25167 = d;
var G__25168 = e;
var G__25169 = f;
var G__25170 = g;
var G__25171 = h;
var G__25172 = i;
var G__25173 = j;
var G__25174 = k;
var G__25175 = l;
var G__25176 = m;
var G__25177 = n;
var G__25178 = o;
var G__25179 = p;
var G__25180 = q;
var G__25181 = r;
var G__25182 = s;
var G__25183 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__25164,G__25165,G__25166,G__25167,G__25168,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183) : self__.afn.call(null,G__25164,G__25165,G__25166,G__25167,G__25168,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183));
});
var G__25438__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25184 = self__.afn;
var G__25185 = a;
var G__25186 = b;
var G__25187 = c;
var G__25188 = d;
var G__25189 = e;
var G__25190 = f;
var G__25191 = g;
var G__25192 = h;
var G__25193 = i;
var G__25194 = j;
var G__25195 = k;
var G__25196 = l;
var G__25197 = m;
var G__25198 = n;
var G__25199 = o;
var G__25200 = p;
var G__25201 = q;
var G__25202 = r;
var G__25203 = s;
var G__25204 = t;
var G__25205 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202,G__25203,G__25204,G__25205) : cljs.core.apply.call(null,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202,G__25203,G__25204,G__25205));
});
G__25438 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__25438__1.call(this,self__);
case 2:
return G__25438__2.call(this,self__,a);
case 3:
return G__25438__3.call(this,self__,a,b);
case 4:
return G__25438__4.call(this,self__,a,b,c);
case 5:
return G__25438__5.call(this,self__,a,b,c,d);
case 6:
return G__25438__6.call(this,self__,a,b,c,d,e);
case 7:
return G__25438__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__25438__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__25438__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__25438__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__25438__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__25438__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__25438__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__25438__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__25438__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__25438__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__25438__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__25438__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__25438__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__25438__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__25438__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__25438__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25438.cljs$core$IFn$_invoke$arity$1 = G__25438__1;
G__25438.cljs$core$IFn$_invoke$arity$2 = G__25438__2;
G__25438.cljs$core$IFn$_invoke$arity$3 = G__25438__3;
G__25438.cljs$core$IFn$_invoke$arity$4 = G__25438__4;
G__25438.cljs$core$IFn$_invoke$arity$5 = G__25438__5;
G__25438.cljs$core$IFn$_invoke$arity$6 = G__25438__6;
G__25438.cljs$core$IFn$_invoke$arity$7 = G__25438__7;
G__25438.cljs$core$IFn$_invoke$arity$8 = G__25438__8;
G__25438.cljs$core$IFn$_invoke$arity$9 = G__25438__9;
G__25438.cljs$core$IFn$_invoke$arity$10 = G__25438__10;
G__25438.cljs$core$IFn$_invoke$arity$11 = G__25438__11;
G__25438.cljs$core$IFn$_invoke$arity$12 = G__25438__12;
G__25438.cljs$core$IFn$_invoke$arity$13 = G__25438__13;
G__25438.cljs$core$IFn$_invoke$arity$14 = G__25438__14;
G__25438.cljs$core$IFn$_invoke$arity$15 = G__25438__15;
G__25438.cljs$core$IFn$_invoke$arity$16 = G__25438__16;
G__25438.cljs$core$IFn$_invoke$arity$17 = G__25438__17;
G__25438.cljs$core$IFn$_invoke$arity$18 = G__25438__18;
G__25438.cljs$core$IFn$_invoke$arity$19 = G__25438__19;
G__25438.cljs$core$IFn$_invoke$arity$20 = G__25438__20;
G__25438.cljs$core$IFn$_invoke$arity$21 = G__25438__21;
G__25438.cljs$core$IFn$_invoke$arity$22 = G__25438__22;
return G__25438;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args24973){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24973)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__25206 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__25206) : self__.afn.call(null,G__25206));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__25207 = a;
var G__25208 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__25207,G__25208) : self__.afn.call(null,G__25207,G__25208));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__25209 = a;
var G__25210 = b;
var G__25211 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__25209,G__25210,G__25211) : self__.afn.call(null,G__25209,G__25210,G__25211));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__25212 = a;
var G__25213 = b;
var G__25214 = c;
var G__25215 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__25212,G__25213,G__25214,G__25215) : self__.afn.call(null,G__25212,G__25213,G__25214,G__25215));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__25216 = a;
var G__25217 = b;
var G__25218 = c;
var G__25219 = d;
var G__25220 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__25216,G__25217,G__25218,G__25219,G__25220) : self__.afn.call(null,G__25216,G__25217,G__25218,G__25219,G__25220));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__25221 = a;
var G__25222 = b;
var G__25223 = c;
var G__25224 = d;
var G__25225 = e;
var G__25226 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__25221,G__25222,G__25223,G__25224,G__25225,G__25226) : self__.afn.call(null,G__25221,G__25222,G__25223,G__25224,G__25225,G__25226));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__25227 = a;
var G__25228 = b;
var G__25229 = c;
var G__25230 = d;
var G__25231 = e;
var G__25232 = f;
var G__25233 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__25227,G__25228,G__25229,G__25230,G__25231,G__25232,G__25233) : self__.afn.call(null,G__25227,G__25228,G__25229,G__25230,G__25231,G__25232,G__25233));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__25234 = a;
var G__25235 = b;
var G__25236 = c;
var G__25237 = d;
var G__25238 = e;
var G__25239 = f;
var G__25240 = g;
var G__25241 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__25234,G__25235,G__25236,G__25237,G__25238,G__25239,G__25240,G__25241) : self__.afn.call(null,G__25234,G__25235,G__25236,G__25237,G__25238,G__25239,G__25240,G__25241));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__25242 = a;
var G__25243 = b;
var G__25244 = c;
var G__25245 = d;
var G__25246 = e;
var G__25247 = f;
var G__25248 = g;
var G__25249 = h;
var G__25250 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__25242,G__25243,G__25244,G__25245,G__25246,G__25247,G__25248,G__25249,G__25250) : self__.afn.call(null,G__25242,G__25243,G__25244,G__25245,G__25246,G__25247,G__25248,G__25249,G__25250));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__25251 = a;
var G__25252 = b;
var G__25253 = c;
var G__25254 = d;
var G__25255 = e;
var G__25256 = f;
var G__25257 = g;
var G__25258 = h;
var G__25259 = i;
var G__25260 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__25251,G__25252,G__25253,G__25254,G__25255,G__25256,G__25257,G__25258,G__25259,G__25260) : self__.afn.call(null,G__25251,G__25252,G__25253,G__25254,G__25255,G__25256,G__25257,G__25258,G__25259,G__25260));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__25261 = a;
var G__25262 = b;
var G__25263 = c;
var G__25264 = d;
var G__25265 = e;
var G__25266 = f;
var G__25267 = g;
var G__25268 = h;
var G__25269 = i;
var G__25270 = j;
var G__25271 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__25261,G__25262,G__25263,G__25264,G__25265,G__25266,G__25267,G__25268,G__25269,G__25270,G__25271) : self__.afn.call(null,G__25261,G__25262,G__25263,G__25264,G__25265,G__25266,G__25267,G__25268,G__25269,G__25270,G__25271));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__25272 = a;
var G__25273 = b;
var G__25274 = c;
var G__25275 = d;
var G__25276 = e;
var G__25277 = f;
var G__25278 = g;
var G__25279 = h;
var G__25280 = i;
var G__25281 = j;
var G__25282 = k;
var G__25283 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__25272,G__25273,G__25274,G__25275,G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283) : self__.afn.call(null,G__25272,G__25273,G__25274,G__25275,G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__25284 = a;
var G__25285 = b;
var G__25286 = c;
var G__25287 = d;
var G__25288 = e;
var G__25289 = f;
var G__25290 = g;
var G__25291 = h;
var G__25292 = i;
var G__25293 = j;
var G__25294 = k;
var G__25295 = l;
var G__25296 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__25284,G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295,G__25296) : self__.afn.call(null,G__25284,G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295,G__25296));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__25297 = a;
var G__25298 = b;
var G__25299 = c;
var G__25300 = d;
var G__25301 = e;
var G__25302 = f;
var G__25303 = g;
var G__25304 = h;
var G__25305 = i;
var G__25306 = j;
var G__25307 = k;
var G__25308 = l;
var G__25309 = m;
var G__25310 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__25297,G__25298,G__25299,G__25300,G__25301,G__25302,G__25303,G__25304,G__25305,G__25306,G__25307,G__25308,G__25309,G__25310) : self__.afn.call(null,G__25297,G__25298,G__25299,G__25300,G__25301,G__25302,G__25303,G__25304,G__25305,G__25306,G__25307,G__25308,G__25309,G__25310));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__25311 = a;
var G__25312 = b;
var G__25313 = c;
var G__25314 = d;
var G__25315 = e;
var G__25316 = f;
var G__25317 = g;
var G__25318 = h;
var G__25319 = i;
var G__25320 = j;
var G__25321 = k;
var G__25322 = l;
var G__25323 = m;
var G__25324 = n;
var G__25325 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__25311,G__25312,G__25313,G__25314,G__25315,G__25316,G__25317,G__25318,G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325) : self__.afn.call(null,G__25311,G__25312,G__25313,G__25314,G__25315,G__25316,G__25317,G__25318,G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__25326 = a;
var G__25327 = b;
var G__25328 = c;
var G__25329 = d;
var G__25330 = e;
var G__25331 = f;
var G__25332 = g;
var G__25333 = h;
var G__25334 = i;
var G__25335 = j;
var G__25336 = k;
var G__25337 = l;
var G__25338 = m;
var G__25339 = n;
var G__25340 = o;
var G__25341 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__25326,G__25327,G__25328,G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337,G__25338,G__25339,G__25340,G__25341) : self__.afn.call(null,G__25326,G__25327,G__25328,G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337,G__25338,G__25339,G__25340,G__25341));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__25342 = a;
var G__25343 = b;
var G__25344 = c;
var G__25345 = d;
var G__25346 = e;
var G__25347 = f;
var G__25348 = g;
var G__25349 = h;
var G__25350 = i;
var G__25351 = j;
var G__25352 = k;
var G__25353 = l;
var G__25354 = m;
var G__25355 = n;
var G__25356 = o;
var G__25357 = p;
var G__25358 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357,G__25358) : self__.afn.call(null,G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357,G__25358));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__25359 = a;
var G__25360 = b;
var G__25361 = c;
var G__25362 = d;
var G__25363 = e;
var G__25364 = f;
var G__25365 = g;
var G__25366 = h;
var G__25367 = i;
var G__25368 = j;
var G__25369 = k;
var G__25370 = l;
var G__25371 = m;
var G__25372 = n;
var G__25373 = o;
var G__25374 = p;
var G__25375 = q;
var G__25376 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__25359,G__25360,G__25361,G__25362,G__25363,G__25364,G__25365,G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374,G__25375,G__25376) : self__.afn.call(null,G__25359,G__25360,G__25361,G__25362,G__25363,G__25364,G__25365,G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374,G__25375,G__25376));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__25377 = a;
var G__25378 = b;
var G__25379 = c;
var G__25380 = d;
var G__25381 = e;
var G__25382 = f;
var G__25383 = g;
var G__25384 = h;
var G__25385 = i;
var G__25386 = j;
var G__25387 = k;
var G__25388 = l;
var G__25389 = m;
var G__25390 = n;
var G__25391 = o;
var G__25392 = p;
var G__25393 = q;
var G__25394 = r;
var G__25395 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384,G__25385,G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394,G__25395) : self__.afn.call(null,G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384,G__25385,G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394,G__25395));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__25396 = a;
var G__25397 = b;
var G__25398 = c;
var G__25399 = d;
var G__25400 = e;
var G__25401 = f;
var G__25402 = g;
var G__25403 = h;
var G__25404 = i;
var G__25405 = j;
var G__25406 = k;
var G__25407 = l;
var G__25408 = m;
var G__25409 = n;
var G__25410 = o;
var G__25411 = p;
var G__25412 = q;
var G__25413 = r;
var G__25414 = s;
var G__25415 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__25396,G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404,G__25405,G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415) : self__.afn.call(null,G__25396,G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404,G__25405,G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__25416 = self__.afn;
var G__25417 = a;
var G__25418 = b;
var G__25419 = c;
var G__25420 = d;
var G__25421 = e;
var G__25422 = f;
var G__25423 = g;
var G__25424 = h;
var G__25425 = i;
var G__25426 = j;
var G__25427 = k;
var G__25428 = l;
var G__25429 = m;
var G__25430 = n;
var G__25431 = o;
var G__25432 = p;
var G__25433 = q;
var G__25434 = r;
var G__25435 = s;
var G__25436 = t;
var G__25437 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25416,G__25417,G__25418,G__25419,G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437) : cljs.core.apply.call(null,G__25416,G__25417,G__25418,G__25419,G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__25442 = o;
if(G__25442){
var bit__15125__auto__ = (G__25442.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__15125__auto__) || (G__25442.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__25442.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__25442);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__25442);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__14432__auto__ = !((o == null));
if(and__14432__auto__){
var G__25446 = o;
if(G__25446){
var bit__15125__auto__ = (G__25446.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__15125__auto__) || (G__25446.cljs$core$IMeta$)){
return true;
} else {
if((!G__25446.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25446);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25446);
}
} else {
return and__14432__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__25449__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__25450 = ret;
var G__25451 = cljs.core.first(ks);
var G__25452 = cljs.core.next(ks);
coll = G__25450;
k = G__25451;
ks = G__25452;
continue;
} else {
return ret;
}
}
break;
}
};
var G__25449 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25453__i = 0, G__25453__a = new Array(arguments.length -  2);
while (G__25453__i < G__25453__a.length) {G__25453__a[G__25453__i] = arguments[G__25453__i + 2]; ++G__25453__i;}
  ks = new cljs.core.IndexedSeq(G__25453__a,0);
} 
return G__25449__delegate.call(this,coll,k,ks);};
G__25449.cljs$lang$maxFixedArity = 2;
G__25449.cljs$lang$applyTo = (function (arglist__25454){
var coll = cljs.core.first(arglist__25454);
arglist__25454 = cljs.core.next(arglist__25454);
var k = cljs.core.first(arglist__25454);
var ks = cljs.core.rest(arglist__25454);
return G__25449__delegate(coll,k,ks);
});
G__25449.cljs$core$IFn$_invoke$arity$variadic = G__25449__delegate;
return G__25449;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__25455 = null;
if (arguments.length > 2) {
var G__25456__i = 0, G__25456__a = new Array(arguments.length -  2);
while (G__25456__i < G__25456__a.length) {G__25456__a[G__25456__i] = arguments[G__25456__i + 2]; ++G__25456__i;}
G__25455 = new cljs.core.IndexedSeq(G__25456__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__25455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25458 = x;
if(G__25458){
var bit__15125__auto__ = (G__25458.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__15125__auto__) || (G__25458.cljs$core$ICollection$)){
return true;
} else {
if((!G__25458.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__25458);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__25458);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25460 = x;
if(G__25460){
var bit__15125__auto__ = (G__25460.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__15125__auto__) || (G__25460.cljs$core$ISet$)){
return true;
} else {
if((!G__25460.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__25460);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__25460);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__25462 = x;
if(G__25462){
var bit__15125__auto__ = (G__25462.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__15125__auto__) || (G__25462.cljs$core$IAssociative$)){
return true;
} else {
if((!G__25462.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__25462);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__25462);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__25464 = x;
if(G__25464){
var bit__15125__auto__ = (G__25464.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__15125__auto__) || (G__25464.cljs$core$ISequential$)){
return true;
} else {
if((!G__25464.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__25464);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__25464);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__25466 = x;
if(G__25466){
var bit__15125__auto__ = (G__25466.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__15125__auto__) || (G__25466.cljs$core$ISorted$)){
return true;
} else {
if((!G__25466.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__25466);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__25466);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__25468 = x;
if(G__25468){
var bit__15125__auto__ = (G__25468.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__15125__auto__) || (G__25468.cljs$core$IReduce$)){
return true;
} else {
if((!G__25468.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__25468);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__25468);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25470 = x;
if(G__25470){
var bit__15125__auto__ = (G__25470.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__15125__auto__) || (G__25470.cljs$core$IMap$)){
return true;
} else {
if((!G__25470.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__25470);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__25470);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__25472 = x;
if(G__25472){
var bit__15125__auto__ = (G__25472.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__15125__auto__) || (G__25472.cljs$core$IVector$)){
return true;
} else {
if((!G__25472.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__25472);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__25472);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__25474 = x;
if(G__25474){
var bit__15118__auto__ = (G__25474.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__15118__auto__) || (G__25474.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj25480 = {};
return obj25480;
});
var js_obj__1 = (function() { 
var G__25483__delegate = function (keyvals){
var G__25481 = goog.object.create;
var G__25482 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__25481,G__25482) : cljs.core.apply.call(null,G__25481,G__25482));
};
var G__25483 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25484__i = 0, G__25484__a = new Array(arguments.length -  0);
while (G__25484__i < G__25484__a.length) {G__25484__a[G__25484__i] = arguments[G__25484__i + 0]; ++G__25484__i;}
  keyvals = new cljs.core.IndexedSeq(G__25484__a,0);
} 
return G__25483__delegate.call(this,keyvals);};
G__25483.cljs$lang$maxFixedArity = 0;
G__25483.cljs$lang$applyTo = (function (arglist__25485){
var keyvals = cljs.core.seq(arglist__25485);
return G__25483__delegate(keyvals);
});
G__25483.cljs$core$IFn$_invoke$arity$variadic = G__25483__delegate;
return G__25483;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__25486 = null;
if (arguments.length > 0) {
var G__25487__i = 0, G__25487__a = new Array(arguments.length -  0);
while (G__25487__i < G__25487__a.length) {G__25487__a[G__25487__i] = arguments[G__25487__i + 0]; ++G__25487__i;}
G__25486 = new cljs.core.IndexedSeq(G__25487__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__25486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__25490_25492 = obj;
var G__25491_25493 = ((function (G__25490_25492,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__25490_25492,keys))
;
goog.object.forEach(G__25490_25492,G__25491_25493);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__25494 = (i__$1 + (1));
var G__25495 = (j__$1 + (1));
var G__25496 = (len__$1 - (1));
i__$1 = G__25494;
j__$1 = G__25495;
len__$1 = G__25496;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__25497 = (i__$1 - (1));
var G__25498 = (j__$1 - (1));
var G__25499 = (len__$1 - (1));
i__$1 = G__25497;
j__$1 = G__25498;
len__$1 = G__25499;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj25501 = {};
return obj25501;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__25503 = s;
if(G__25503){
var bit__15125__auto__ = (G__25503.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15125__auto__) || (G__25503.cljs$core$ISeq$)){
return true;
} else {
if((!G__25503.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25503);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25503);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__25505 = s;
if(G__25505){
var bit__15125__auto__ = (G__25505.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__15125__auto__) || (G__25505.cljs$core$ISeqable$)){
return true;
} else {
if((!G__25505.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__25505);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__25505);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__14444__auto__ = cljs.core.fn_QMARK_(f);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var G__25509 = f;
if(G__25509){
var bit__15125__auto__ = (G__25509.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__15125__auto__) || (G__25509.cljs$core$IFn$)){
return true;
} else {
if((!G__25509.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__25509);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__25509);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__25522 = n;
return isNaN(G__25522);
})())) && (!((n === Infinity))) && (((function (){var G__25523 = n;
return parseFloat(G__25523);
})() === (function (){var G__25524 = n;
var G__25525 = (10);
return parseInt(G__25524,G__25525);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__25526__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__25527 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__25528 = etc;
s = G__25527;
xs = G__25528;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__25526 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25529__i = 0, G__25529__a = new Array(arguments.length -  2);
while (G__25529__i < G__25529__a.length) {G__25529__a[G__25529__i] = arguments[G__25529__i + 2]; ++G__25529__i;}
  more = new cljs.core.IndexedSeq(G__25529__a,0);
} 
return G__25526__delegate.call(this,x,y,more);};
G__25526.cljs$lang$maxFixedArity = 2;
G__25526.cljs$lang$applyTo = (function (arglist__25530){
var x = cljs.core.first(arglist__25530);
arglist__25530 = cljs.core.next(arglist__25530);
var y = cljs.core.first(arglist__25530);
var more = cljs.core.rest(arglist__25530);
return G__25526__delegate(x,y,more);
});
G__25526.cljs$core$IFn$_invoke$arity$variadic = G__25526__delegate;
return G__25526;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__25531 = null;
if (arguments.length > 2) {
var G__25532__i = 0, G__25532__a = new Array(arguments.length -  2);
while (G__25532__i < G__25532__a.length) {G__25532__a[G__25532__i] = arguments[G__25532__i + 2]; ++G__25532__i;}
G__25531 = new cljs.core.IndexedSeq(G__25532__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25531);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__25536 = x;
if(G__25536){
var bit__15118__auto__ = (G__25536.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__15118__auto__) || (G__25536.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__25537 = x;
var G__25538 = y;
return goog.array.defaultCompare(G__25537,G__25538);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__25543 = xs;
var G__25544 = ys;
var G__25545 = len;
var G__25546 = (n + (1));
xs = G__25543;
ys = G__25544;
len = G__25545;
n = G__25546;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__25551 = x;
var G__25552 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25551,G__25552) : f.call(null,G__25551,G__25552));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__25553 = y;
var G__25554 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25553,G__25554) : f.call(null,G__25553,G__25554));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__25560 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__25560) : cljs.core.to_array.call(null,G__25560));
})();
var G__25561_25563 = a;
var G__25562_25564 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__25561_25563,G__25562_25564);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__25570 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25570) : keyfn.call(null,G__25570));
})(),(function (){var G__25571 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25571) : keyfn.call(null,G__25571));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var G__25577 = f;
var G__25578 = cljs.core.first(s);
var G__25579 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__25577,G__25578,G__25579) : cljs.core.reduce.call(null,G__25577,G__25578,G__25579));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__25580 = val__$1;
var G__25581 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25580,G__25581) : f.call(null,G__25580,G__25581));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25582 = nval;
var G__25583 = cljs.core.next(coll__$1);
val__$1 = G__25582;
coll__$1 = G__25583;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__25587 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__25587) : cljs.core.to_array.call(null,G__25587));
})();
var G__25588_25590 = a;
goog.array.shuffle(G__25588_25590);

var G__25589 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__25589) : cljs.core.vec.call(null,G__25589));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__25593 = coll;
if(G__25593){
var bit__15118__auto__ = (G__25593.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__15118__auto__) || (G__25593.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__25594 = coll;
if(G__25594){
var bit__15118__auto__ = (G__25594.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__15118__auto__) || (G__25594.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__25603 = null;
var G__25603__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__25603__1 = (function (x){
var G__25600 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__25600) : cf.call(null,G__25600));
});
var G__25603__2 = (function (x,y){
var G__25601 = x;
var G__25602 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25601,G__25602) : f.call(null,G__25601,G__25602));
});
G__25603 = function(x,y){
switch(arguments.length){
case 0:
return G__25603__0.call(this);
case 1:
return G__25603__1.call(this,x);
case 2:
return G__25603__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25603.cljs$core$IFn$_invoke$arity$0 = G__25603__0;
G__25603.cljs$core$IFn$_invoke$arity$1 = G__25603__1;
G__25603.cljs$core$IFn$_invoke$arity$2 = G__25603__2;
return G__25603;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__25610 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25610) : xform.call(null,G__25610));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__25611 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__25611) : f__$1.call(null,G__25611));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__25612__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__25612 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25613__i = 0, G__25613__a = new Array(arguments.length -  2);
while (G__25613__i < G__25613__a.length) {G__25613__a[G__25613__i] = arguments[G__25613__i + 2]; ++G__25613__i;}
  more = new cljs.core.IndexedSeq(G__25613__a,0);
} 
return G__25612__delegate.call(this,x,y,more);};
G__25612.cljs$lang$maxFixedArity = 2;
G__25612.cljs$lang$applyTo = (function (arglist__25614){
var x = cljs.core.first(arglist__25614);
arglist__25614 = cljs.core.next(arglist__25614);
var y = cljs.core.first(arglist__25614);
var more = cljs.core.rest(arglist__25614);
return G__25612__delegate(x,y,more);
});
G__25612.cljs$core$IFn$_invoke$arity$variadic = G__25612__delegate;
return G__25612;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__25615 = null;
if (arguments.length > 2) {
var G__25616__i = 0, G__25616__a = new Array(arguments.length -  2);
while (G__25616__i < G__25616__a.length) {G__25616__a[G__25616__i] = arguments[G__25616__i + 2]; ++G__25616__i;}
G__25615 = new cljs.core.IndexedSeq(G__25616__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25615);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__25617__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__25617 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25618__i = 0, G__25618__a = new Array(arguments.length -  2);
while (G__25618__i < G__25618__a.length) {G__25618__a[G__25618__i] = arguments[G__25618__i + 2]; ++G__25618__i;}
  more = new cljs.core.IndexedSeq(G__25618__a,0);
} 
return G__25617__delegate.call(this,x,y,more);};
G__25617.cljs$lang$maxFixedArity = 2;
G__25617.cljs$lang$applyTo = (function (arglist__25619){
var x = cljs.core.first(arglist__25619);
arglist__25619 = cljs.core.next(arglist__25619);
var y = cljs.core.first(arglist__25619);
var more = cljs.core.rest(arglist__25619);
return G__25617__delegate(x,y,more);
});
G__25617.cljs$core$IFn$_invoke$arity$variadic = G__25617__delegate;
return G__25617;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__25620 = null;
if (arguments.length > 2) {
var G__25621__i = 0, G__25621__a = new Array(arguments.length -  2);
while (G__25621__i < G__25621__a.length) {G__25621__a[G__25621__i] = arguments[G__25621__i + 2]; ++G__25621__i;}
G__25620 = new cljs.core.IndexedSeq(G__25621__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25620);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__25622__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__25622 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25623__i = 0, G__25623__a = new Array(arguments.length -  2);
while (G__25623__i < G__25623__a.length) {G__25623__a[G__25623__i] = arguments[G__25623__i + 2]; ++G__25623__i;}
  more = new cljs.core.IndexedSeq(G__25623__a,0);
} 
return G__25622__delegate.call(this,x,y,more);};
G__25622.cljs$lang$maxFixedArity = 2;
G__25622.cljs$lang$applyTo = (function (arglist__25624){
var x = cljs.core.first(arglist__25624);
arglist__25624 = cljs.core.next(arglist__25624);
var y = cljs.core.first(arglist__25624);
var more = cljs.core.rest(arglist__25624);
return G__25622__delegate(x,y,more);
});
G__25622.cljs$core$IFn$_invoke$arity$variadic = G__25622__delegate;
return G__25622;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__25625 = null;
if (arguments.length > 2) {
var G__25626__i = 0, G__25626__a = new Array(arguments.length -  2);
while (G__25626__i < G__25626__a.length) {G__25626__a[G__25626__i] = arguments[G__25626__i + 2]; ++G__25626__i;}
G__25625 = new cljs.core.IndexedSeq(G__25626__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25625);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__25631__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25631 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25632__i = 0, G__25632__a = new Array(arguments.length -  2);
while (G__25632__i < G__25632__a.length) {G__25632__a[G__25632__i] = arguments[G__25632__i + 2]; ++G__25632__i;}
  more = new cljs.core.IndexedSeq(G__25632__a,0);
} 
return G__25631__delegate.call(this,x,y,more);};
G__25631.cljs$lang$maxFixedArity = 2;
G__25631.cljs$lang$applyTo = (function (arglist__25633){
var x = cljs.core.first(arglist__25633);
arglist__25633 = cljs.core.next(arglist__25633);
var y = cljs.core.first(arglist__25633);
var more = cljs.core.rest(arglist__25633);
return G__25631__delegate(x,y,more);
});
G__25631.cljs$core$IFn$_invoke$arity$variadic = G__25631__delegate;
return G__25631;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__25634 = null;
if (arguments.length > 2) {
var G__25635__i = 0, G__25635__a = new Array(arguments.length -  2);
while (G__25635__i < G__25635__a.length) {G__25635__a[G__25635__i] = arguments[G__25635__i + 2]; ++G__25635__i;}
G__25634 = new cljs.core.IndexedSeq(G__25635__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__25636__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__25637 = y;
var G__25638 = cljs.core.first(more);
var G__25639 = cljs.core.next(more);
x = G__25637;
y = G__25638;
more = G__25639;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25636 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25640__i = 0, G__25640__a = new Array(arguments.length -  2);
while (G__25640__i < G__25640__a.length) {G__25640__a[G__25640__i] = arguments[G__25640__i + 2]; ++G__25640__i;}
  more = new cljs.core.IndexedSeq(G__25640__a,0);
} 
return G__25636__delegate.call(this,x,y,more);};
G__25636.cljs$lang$maxFixedArity = 2;
G__25636.cljs$lang$applyTo = (function (arglist__25641){
var x = cljs.core.first(arglist__25641);
arglist__25641 = cljs.core.next(arglist__25641);
var y = cljs.core.first(arglist__25641);
var more = cljs.core.rest(arglist__25641);
return G__25636__delegate(x,y,more);
});
G__25636.cljs$core$IFn$_invoke$arity$variadic = G__25636__delegate;
return G__25636;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__25642 = null;
if (arguments.length > 2) {
var G__25643__i = 0, G__25643__a = new Array(arguments.length -  2);
while (G__25643__i < G__25643__a.length) {G__25643__a[G__25643__i] = arguments[G__25643__i + 2]; ++G__25643__i;}
G__25642 = new cljs.core.IndexedSeq(G__25643__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25642);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__25644__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__25645 = y;
var G__25646 = cljs.core.first(more);
var G__25647 = cljs.core.next(more);
x = G__25645;
y = G__25646;
more = G__25647;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25644 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25648__i = 0, G__25648__a = new Array(arguments.length -  2);
while (G__25648__i < G__25648__a.length) {G__25648__a[G__25648__i] = arguments[G__25648__i + 2]; ++G__25648__i;}
  more = new cljs.core.IndexedSeq(G__25648__a,0);
} 
return G__25644__delegate.call(this,x,y,more);};
G__25644.cljs$lang$maxFixedArity = 2;
G__25644.cljs$lang$applyTo = (function (arglist__25649){
var x = cljs.core.first(arglist__25649);
arglist__25649 = cljs.core.next(arglist__25649);
var y = cljs.core.first(arglist__25649);
var more = cljs.core.rest(arglist__25649);
return G__25644__delegate(x,y,more);
});
G__25644.cljs$core$IFn$_invoke$arity$variadic = G__25644__delegate;
return G__25644;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__25650 = null;
if (arguments.length > 2) {
var G__25651__i = 0, G__25651__a = new Array(arguments.length -  2);
while (G__25651__i < G__25651__a.length) {G__25651__a[G__25651__i] = arguments[G__25651__i + 2]; ++G__25651__i;}
G__25650 = new cljs.core.IndexedSeq(G__25651__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__25652__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__25653 = y;
var G__25654 = cljs.core.first(more);
var G__25655 = cljs.core.next(more);
x = G__25653;
y = G__25654;
more = G__25655;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25652 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25656__i = 0, G__25656__a = new Array(arguments.length -  2);
while (G__25656__i < G__25656__a.length) {G__25656__a[G__25656__i] = arguments[G__25656__i + 2]; ++G__25656__i;}
  more = new cljs.core.IndexedSeq(G__25656__a,0);
} 
return G__25652__delegate.call(this,x,y,more);};
G__25652.cljs$lang$maxFixedArity = 2;
G__25652.cljs$lang$applyTo = (function (arglist__25657){
var x = cljs.core.first(arglist__25657);
arglist__25657 = cljs.core.next(arglist__25657);
var y = cljs.core.first(arglist__25657);
var more = cljs.core.rest(arglist__25657);
return G__25652__delegate(x,y,more);
});
G__25652.cljs$core$IFn$_invoke$arity$variadic = G__25652__delegate;
return G__25652;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__25658 = null;
if (arguments.length > 2) {
var G__25659__i = 0, G__25659__a = new Array(arguments.length -  2);
while (G__25659__i < G__25659__a.length) {G__25659__a[G__25659__i] = arguments[G__25659__i + 2]; ++G__25659__i;}
G__25658 = new cljs.core.IndexedSeq(G__25659__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25658);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__25660__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__25661 = y;
var G__25662 = cljs.core.first(more);
var G__25663 = cljs.core.next(more);
x = G__25661;
y = G__25662;
more = G__25663;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25660 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25664__i = 0, G__25664__a = new Array(arguments.length -  2);
while (G__25664__i < G__25664__a.length) {G__25664__a[G__25664__i] = arguments[G__25664__i + 2]; ++G__25664__i;}
  more = new cljs.core.IndexedSeq(G__25664__a,0);
} 
return G__25660__delegate.call(this,x,y,more);};
G__25660.cljs$lang$maxFixedArity = 2;
G__25660.cljs$lang$applyTo = (function (arglist__25665){
var x = cljs.core.first(arglist__25665);
arglist__25665 = cljs.core.next(arglist__25665);
var y = cljs.core.first(arglist__25665);
var more = cljs.core.rest(arglist__25665);
return G__25660__delegate(x,y,more);
});
G__25660.cljs$core$IFn$_invoke$arity$variadic = G__25660__delegate;
return G__25660;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__25666 = null;
if (arguments.length > 2) {
var G__25667__i = 0, G__25667__a = new Array(arguments.length -  2);
while (G__25667__i < G__25667__a.length) {G__25667__a[G__25667__i] = arguments[G__25667__i + 2]; ++G__25667__i;}
G__25666 = new cljs.core.IndexedSeq(G__25667__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25666);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__14761__auto__ = x;
var y__14762__auto__ = y;
return ((x__14761__auto__ > y__14762__auto__) ? x__14761__auto__ : y__14762__auto__);
});
var max__3 = (function() { 
var G__25668__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__14761__auto__ = x;
var y__14762__auto__ = y;
return ((x__14761__auto__ > y__14762__auto__) ? x__14761__auto__ : y__14762__auto__);
})(),more);
};
var G__25668 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25669__i = 0, G__25669__a = new Array(arguments.length -  2);
while (G__25669__i < G__25669__a.length) {G__25669__a[G__25669__i] = arguments[G__25669__i + 2]; ++G__25669__i;}
  more = new cljs.core.IndexedSeq(G__25669__a,0);
} 
return G__25668__delegate.call(this,x,y,more);};
G__25668.cljs$lang$maxFixedArity = 2;
G__25668.cljs$lang$applyTo = (function (arglist__25670){
var x = cljs.core.first(arglist__25670);
arglist__25670 = cljs.core.next(arglist__25670);
var y = cljs.core.first(arglist__25670);
var more = cljs.core.rest(arglist__25670);
return G__25668__delegate(x,y,more);
});
G__25668.cljs$core$IFn$_invoke$arity$variadic = G__25668__delegate;
return G__25668;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__25671 = null;
if (arguments.length > 2) {
var G__25672__i = 0, G__25672__a = new Array(arguments.length -  2);
while (G__25672__i < G__25672__a.length) {G__25672__a[G__25672__i] = arguments[G__25672__i + 2]; ++G__25672__i;}
G__25671 = new cljs.core.IndexedSeq(G__25672__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__14768__auto__ = x;
var y__14769__auto__ = y;
return ((x__14768__auto__ < y__14769__auto__) ? x__14768__auto__ : y__14769__auto__);
});
var min__3 = (function() { 
var G__25673__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__14768__auto__ = x;
var y__14769__auto__ = y;
return ((x__14768__auto__ < y__14769__auto__) ? x__14768__auto__ : y__14769__auto__);
})(),more);
};
var G__25673 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25674__i = 0, G__25674__a = new Array(arguments.length -  2);
while (G__25674__i < G__25674__a.length) {G__25674__a[G__25674__i] = arguments[G__25674__i + 2]; ++G__25674__i;}
  more = new cljs.core.IndexedSeq(G__25674__a,0);
} 
return G__25673__delegate.call(this,x,y,more);};
G__25673.cljs$lang$maxFixedArity = 2;
G__25673.cljs$lang$applyTo = (function (arglist__25675){
var x = cljs.core.first(arglist__25675);
arglist__25675 = cljs.core.next(arglist__25675);
var y = cljs.core.first(arglist__25675);
var more = cljs.core.rest(arglist__25675);
return G__25673__delegate(x,y,more);
});
G__25673.cljs$core$IFn$_invoke$arity$variadic = G__25673__delegate;
return G__25673;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__25676 = null;
if (arguments.length > 2) {
var G__25677__i = 0, G__25677__a = new Array(arguments.length -  2);
while (G__25677__i < G__25677__a.length) {G__25677__a[G__25677__i] = arguments[G__25677__i + 2]; ++G__25677__i;}
G__25676 = new cljs.core.IndexedSeq(G__25677__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25676);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__25678__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__25678 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25679__i = 0, G__25679__a = new Array(arguments.length -  2);
while (G__25679__i < G__25679__a.length) {G__25679__a[G__25679__i] = arguments[G__25679__i + 2]; ++G__25679__i;}
  more = new cljs.core.IndexedSeq(G__25679__a,0);
} 
return G__25678__delegate.call(this,x,y,more);};
G__25678.cljs$lang$maxFixedArity = 2;
G__25678.cljs$lang$applyTo = (function (arglist__25680){
var x = cljs.core.first(arglist__25680);
arglist__25680 = cljs.core.next(arglist__25680);
var y = cljs.core.first(arglist__25680);
var more = cljs.core.rest(arglist__25680);
return G__25678__delegate(x,y,more);
});
G__25678.cljs$core$IFn$_invoke$arity$variadic = G__25678__delegate;
return G__25678;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__25681 = null;
if (arguments.length > 2) {
var G__25682__i = 0, G__25682__a = new Array(arguments.length -  2);
while (G__25682__i < G__25682__a.length) {G__25682__a[G__25682__i] = arguments[G__25682__i + 2]; ++G__25682__i;}
G__25681 = new cljs.core.IndexedSeq(G__25682__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25681);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__25683__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__25683 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25684__i = 0, G__25684__a = new Array(arguments.length -  2);
while (G__25684__i < G__25684__a.length) {G__25684__a[G__25684__i] = arguments[G__25684__i + 2]; ++G__25684__i;}
  more = new cljs.core.IndexedSeq(G__25684__a,0);
} 
return G__25683__delegate.call(this,x,y,more);};
G__25683.cljs$lang$maxFixedArity = 2;
G__25683.cljs$lang$applyTo = (function (arglist__25685){
var x = cljs.core.first(arglist__25685);
arglist__25685 = cljs.core.next(arglist__25685);
var y = cljs.core.first(arglist__25685);
var more = cljs.core.rest(arglist__25685);
return G__25683__delegate(x,y,more);
});
G__25683.cljs$core$IFn$_invoke$arity$variadic = G__25683__delegate;
return G__25683;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__25686 = null;
if (arguments.length > 2) {
var G__25687__i = 0, G__25687__a = new Array(arguments.length -  2);
while (G__25687__i < G__25687__a.length) {G__25687__a[G__25687__i] = arguments[G__25687__i + 2]; ++G__25687__i;}
G__25686 = new cljs.core.IndexedSeq(G__25687__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25686);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__25692__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25692 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25693__i = 0, G__25693__a = new Array(arguments.length -  2);
while (G__25693__i < G__25693__a.length) {G__25693__a[G__25693__i] = arguments[G__25693__i + 2]; ++G__25693__i;}
  more = new cljs.core.IndexedSeq(G__25693__a,0);
} 
return G__25692__delegate.call(this,x,y,more);};
G__25692.cljs$lang$maxFixedArity = 2;
G__25692.cljs$lang$applyTo = (function (arglist__25694){
var x = cljs.core.first(arglist__25694);
arglist__25694 = cljs.core.next(arglist__25694);
var y = cljs.core.first(arglist__25694);
var more = cljs.core.rest(arglist__25694);
return G__25692__delegate(x,y,more);
});
G__25692.cljs$core$IFn$_invoke$arity$variadic = G__25692__delegate;
return G__25692;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__25695 = null;
if (arguments.length > 2) {
var G__25696__i = 0, G__25696__a = new Array(arguments.length -  2);
while (G__25696__i < G__25696__a.length) {G__25696__a[G__25696__i] = arguments[G__25696__i + 2]; ++G__25696__i;}
G__25695 = new cljs.core.IndexedSeq(G__25696__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__25697__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__25697 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25698__i = 0, G__25698__a = new Array(arguments.length -  2);
while (G__25698__i < G__25698__a.length) {G__25698__a[G__25698__i] = arguments[G__25698__i + 2]; ++G__25698__i;}
  more = new cljs.core.IndexedSeq(G__25698__a,0);
} 
return G__25697__delegate.call(this,x,y,more);};
G__25697.cljs$lang$maxFixedArity = 2;
G__25697.cljs$lang$applyTo = (function (arglist__25699){
var x = cljs.core.first(arglist__25699);
arglist__25699 = cljs.core.next(arglist__25699);
var y = cljs.core.first(arglist__25699);
var more = cljs.core.rest(arglist__25699);
return G__25697__delegate(x,y,more);
});
G__25697.cljs$core$IFn$_invoke$arity$variadic = G__25697__delegate;
return G__25697;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__25700 = null;
if (arguments.length > 2) {
var G__25701__i = 0, G__25701__a = new Array(arguments.length -  2);
while (G__25701__i < G__25701__a.length) {G__25701__a[G__25701__i] = arguments[G__25701__i + 2]; ++G__25701__i;}
G__25700 = new cljs.core.IndexedSeq(G__25701__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25700);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__25702__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__25702 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25703__i = 0, G__25703__a = new Array(arguments.length -  2);
while (G__25703__i < G__25703__a.length) {G__25703__a[G__25703__i] = arguments[G__25703__i + 2]; ++G__25703__i;}
  more = new cljs.core.IndexedSeq(G__25703__a,0);
} 
return G__25702__delegate.call(this,x,y,more);};
G__25702.cljs$lang$maxFixedArity = 2;
G__25702.cljs$lang$applyTo = (function (arglist__25704){
var x = cljs.core.first(arglist__25704);
arglist__25704 = cljs.core.next(arglist__25704);
var y = cljs.core.first(arglist__25704);
var more = cljs.core.rest(arglist__25704);
return G__25702__delegate(x,y,more);
});
G__25702.cljs$core$IFn$_invoke$arity$variadic = G__25702__delegate;
return G__25702;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__25705 = null;
if (arguments.length > 2) {
var G__25706__i = 0, G__25706__a = new Array(arguments.length -  2);
while (G__25706__i < G__25706__a.length) {G__25706__a[G__25706__i] = arguments[G__25706__i + 2]; ++G__25706__i;}
G__25705 = new cljs.core.IndexedSeq(G__25706__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__25709 = x;
var G__25710 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__25709,G__25710) : cljs.core.mod.call(null,G__25709,G__25710));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__25711__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__25711 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25712__i = 0, G__25712__a = new Array(arguments.length -  2);
while (G__25712__i < G__25712__a.length) {G__25712__a[G__25712__i] = arguments[G__25712__i + 2]; ++G__25712__i;}
  more = new cljs.core.IndexedSeq(G__25712__a,0);
} 
return G__25711__delegate.call(this,x,y,more);};
G__25711.cljs$lang$maxFixedArity = 2;
G__25711.cljs$lang$applyTo = (function (arglist__25713){
var x = cljs.core.first(arglist__25713);
arglist__25713 = cljs.core.next(arglist__25713);
var y = cljs.core.first(arglist__25713);
var more = cljs.core.rest(arglist__25713);
return G__25711__delegate(x,y,more);
});
G__25711.cljs$core$IFn$_invoke$arity$variadic = G__25711__delegate;
return G__25711;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__25714 = null;
if (arguments.length > 2) {
var G__25715__i = 0, G__25715__a = new Array(arguments.length -  2);
while (G__25715__i < G__25715__a.length) {G__25715__a[G__25715__i] = arguments[G__25715__i + 2]; ++G__25715__i;}
G__25714 = new cljs.core.IndexedSeq(G__25715__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__25716__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__25716 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25717__i = 0, G__25717__a = new Array(arguments.length -  2);
while (G__25717__i < G__25717__a.length) {G__25717__a[G__25717__i] = arguments[G__25717__i + 2]; ++G__25717__i;}
  more = new cljs.core.IndexedSeq(G__25717__a,0);
} 
return G__25716__delegate.call(this,x,y,more);};
G__25716.cljs$lang$maxFixedArity = 2;
G__25716.cljs$lang$applyTo = (function (arglist__25718){
var x = cljs.core.first(arglist__25718);
arglist__25718 = cljs.core.next(arglist__25718);
var y = cljs.core.first(arglist__25718);
var more = cljs.core.rest(arglist__25718);
return G__25716__delegate(x,y,more);
});
G__25716.cljs$core$IFn$_invoke$arity$variadic = G__25716__delegate;
return G__25716;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__25719 = null;
if (arguments.length > 2) {
var G__25720__i = 0, G__25720__a = new Array(arguments.length -  2);
while (G__25720__i < G__25720__a.length) {G__25720__a[G__25720__i] = arguments[G__25720__i + 2]; ++G__25720__i;}
G__25719 = new cljs.core.IndexedSeq(G__25720__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__25723 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25723) : Math.floor.call(null,G__25723));
} else {
var G__25724 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__25724) : Math.ceil.call(null,G__25724));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__25725__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__25725 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25726__i = 0, G__25726__a = new Array(arguments.length -  2);
while (G__25726__i < G__25726__a.length) {G__25726__a[G__25726__i] = arguments[G__25726__i + 2]; ++G__25726__i;}
  more = new cljs.core.IndexedSeq(G__25726__a,0);
} 
return G__25725__delegate.call(this,x,y,more);};
G__25725.cljs$lang$maxFixedArity = 2;
G__25725.cljs$lang$applyTo = (function (arglist__25727){
var x = cljs.core.first(arglist__25727);
arglist__25727 = cljs.core.next(arglist__25727);
var y = cljs.core.first(arglist__25727);
var more = cljs.core.rest(arglist__25727);
return G__25725__delegate(x,y,more);
});
G__25725.cljs$core$IFn$_invoke$arity$variadic = G__25725__delegate;
return G__25725;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__25728 = null;
if (arguments.length > 2) {
var G__25729__i = 0, G__25729__a = new Array(arguments.length -  2);
while (G__25729__i < G__25729__a.length) {G__25729__a[G__25729__i] = arguments[G__25729__i + 2]; ++G__25729__i;}
G__25728 = new cljs.core.IndexedSeq(G__25729__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__25730__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__25730 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25731__i = 0, G__25731__a = new Array(arguments.length -  2);
while (G__25731__i < G__25731__a.length) {G__25731__a[G__25731__i] = arguments[G__25731__i + 2]; ++G__25731__i;}
  more = new cljs.core.IndexedSeq(G__25731__a,0);
} 
return G__25730__delegate.call(this,x,y,more);};
G__25730.cljs$lang$maxFixedArity = 2;
G__25730.cljs$lang$applyTo = (function (arglist__25732){
var x = cljs.core.first(arglist__25732);
arglist__25732 = cljs.core.next(arglist__25732);
var y = cljs.core.first(arglist__25732);
var more = cljs.core.rest(arglist__25732);
return G__25730__delegate(x,y,more);
});
G__25730.cljs$core$IFn$_invoke$arity$variadic = G__25730__delegate;
return G__25730;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__25733 = null;
if (arguments.length > 2) {
var G__25734__i = 0, G__25734__a = new Array(arguments.length -  2);
while (G__25734__i < G__25734__a.length) {G__25734__a[G__25734__i] = arguments[G__25734__i + 2]; ++G__25734__i;}
G__25733 = new cljs.core.IndexedSeq(G__25734__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__25735__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__25735 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25736__i = 0, G__25736__a = new Array(arguments.length -  2);
while (G__25736__i < G__25736__a.length) {G__25736__a[G__25736__i] = arguments[G__25736__i + 2]; ++G__25736__i;}
  more = new cljs.core.IndexedSeq(G__25736__a,0);
} 
return G__25735__delegate.call(this,x,y,more);};
G__25735.cljs$lang$maxFixedArity = 2;
G__25735.cljs$lang$applyTo = (function (arglist__25737){
var x = cljs.core.first(arglist__25737);
arglist__25737 = cljs.core.next(arglist__25737);
var y = cljs.core.first(arglist__25737);
var more = cljs.core.rest(arglist__25737);
return G__25735__delegate(x,y,more);
});
G__25735.cljs$core$IFn$_invoke$arity$variadic = G__25735__delegate;
return G__25735;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__25738 = null;
if (arguments.length > 2) {
var G__25739__i = 0, G__25739__a = new Array(arguments.length -  2);
while (G__25739__i < G__25739__a.length) {G__25739__a[G__25739__i] = arguments[G__25739__i + 2]; ++G__25739__i;}
G__25738 = new cljs.core.IndexedSeq(G__25739__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__25740__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__25740 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25741__i = 0, G__25741__a = new Array(arguments.length -  2);
while (G__25741__i < G__25741__a.length) {G__25741__a[G__25741__i] = arguments[G__25741__i + 2]; ++G__25741__i;}
  more = new cljs.core.IndexedSeq(G__25741__a,0);
} 
return G__25740__delegate.call(this,x,y,more);};
G__25740.cljs$lang$maxFixedArity = 2;
G__25740.cljs$lang$applyTo = (function (arglist__25742){
var x = cljs.core.first(arglist__25742);
arglist__25742 = cljs.core.next(arglist__25742);
var y = cljs.core.first(arglist__25742);
var more = cljs.core.rest(arglist__25742);
return G__25740__delegate(x,y,more);
});
G__25740.cljs$core$IFn$_invoke$arity$variadic = G__25740__delegate;
return G__25740;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__25743 = null;
if (arguments.length > 2) {
var G__25744__i = 0, G__25744__a = new Array(arguments.length -  2);
while (G__25744__i < G__25744__a.length) {G__25744__a[G__25744__i] = arguments[G__25744__i + 2]; ++G__25744__i;}
G__25743 = new cljs.core.IndexedSeq(G__25744__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__25749__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__25750 = y;
var G__25751 = cljs.core.first(more);
var G__25752 = cljs.core.next(more);
x = G__25750;
y = G__25751;
more = G__25752;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25749 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25753__i = 0, G__25753__a = new Array(arguments.length -  2);
while (G__25753__i < G__25753__a.length) {G__25753__a[G__25753__i] = arguments[G__25753__i + 2]; ++G__25753__i;}
  more = new cljs.core.IndexedSeq(G__25753__a,0);
} 
return G__25749__delegate.call(this,x,y,more);};
G__25749.cljs$lang$maxFixedArity = 2;
G__25749.cljs$lang$applyTo = (function (arglist__25754){
var x = cljs.core.first(arglist__25754);
arglist__25754 = cljs.core.next(arglist__25754);
var y = cljs.core.first(arglist__25754);
var more = cljs.core.rest(arglist__25754);
return G__25749__delegate(x,y,more);
});
G__25749.cljs$core$IFn$_invoke$arity$variadic = G__25749__delegate;
return G__25749;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__25755 = null;
if (arguments.length > 2) {
var G__25756__i = 0, G__25756__a = new Array(arguments.length -  2);
while (G__25756__i < G__25756__a.length) {G__25756__a[G__25756__i] = arguments[G__25756__i + 2]; ++G__25756__i;}
G__25755 = new cljs.core.IndexedSeq(G__25756__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25755);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__25757 = (n__$1 - (1));
var G__25758 = cljs.core.next(xs);
n__$1 = G__25757;
xs = G__25758;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__25762 = x;
return goog.string.buildString(G__25762);
}
});
var str__2 = (function() { 
var G__25763__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__25764 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__25765 = cljs.core.next(more);
sb = G__25764;
more = G__25765;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__25763 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__25766__i = 0, G__25766__a = new Array(arguments.length -  1);
while (G__25766__i < G__25766__a.length) {G__25766__a[G__25766__i] = arguments[G__25766__i + 1]; ++G__25766__i;}
  ys = new cljs.core.IndexedSeq(G__25766__a,0);
} 
return G__25763__delegate.call(this,x,ys);};
G__25763.cljs$lang$maxFixedArity = 1;
G__25763.cljs$lang$applyTo = (function (arglist__25767){
var x = cljs.core.first(arglist__25767);
var ys = cljs.core.rest(arglist__25767);
return G__25763__delegate(x,ys);
});
G__25763.cljs$core$IFn$_invoke$arity$variadic = G__25763__delegate;
return G__25763;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__25768 = null;
if (arguments.length > 1) {
var G__25769__i = 0, G__25769__a = new Array(arguments.length -  1);
while (G__25769__i < G__25769__a.length) {G__25769__a[G__25769__i] = arguments[G__25769__i + 1]; ++G__25769__i;}
G__25768 = new cljs.core.IndexedSeq(G__25769__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25768);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__25770 = cljs.core.next(xs);
var G__25771 = cljs.core.next(ys);
xs = G__25770;
ys = G__25771;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__25772 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__25773 = cljs.core.next(s);
res = G__25772;
s = G__25773;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__25778 = ((h + (cljs.core.hash((function (){var G__25776 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25776) : cljs.core.key.call(null,G__25776));
})()) ^ cljs.core.hash((function (){var G__25777 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25777) : cljs.core.val.call(null,G__25777));
})()))) % (4503599627370496));
var G__25779 = cljs.core.next(s);
h = G__25778;
s = G__25779;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__25780 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__25781 = cljs.core.next(s__$1);
h = G__25780;
s__$1 = G__25781;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__25792_25802 = cljs.core.seq(fn_map);
var chunk__25793_25803 = null;
var count__25794_25804 = (0);
var i__25795_25805 = (0);
while(true){
if((i__25795_25805 < count__25794_25804)){
var vec__25796_25806 = chunk__25793_25803.cljs$core$IIndexed$_nth$arity$2(null,i__25795_25805);
var key_name_25807 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25796_25806,(0),null);
var f_25808 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25796_25806,(1),null);
var str_name_25809 = (function (){var G__25797 = key_name_25807;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25797) : cljs.core.name.call(null,G__25797));
})();
(obj[str_name_25809] = f_25808);

var G__25810 = seq__25792_25802;
var G__25811 = chunk__25793_25803;
var G__25812 = count__25794_25804;
var G__25813 = (i__25795_25805 + (1));
seq__25792_25802 = G__25810;
chunk__25793_25803 = G__25811;
count__25794_25804 = G__25812;
i__25795_25805 = G__25813;
continue;
} else {
var temp__4406__auto___25814 = cljs.core.seq(seq__25792_25802);
if(temp__4406__auto___25814){
var seq__25792_25815__$1 = temp__4406__auto___25814;
if(cljs.core.chunked_seq_QMARK_(seq__25792_25815__$1)){
var c__15231__auto___25816 = (function (){var G__25798 = seq__25792_25815__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__25798) : cljs.core.chunk_first.call(null,G__25798));
})();
var G__25817 = (function (){var G__25799 = seq__25792_25815__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__25799) : cljs.core.chunk_rest.call(null,G__25799));
})();
var G__25818 = c__15231__auto___25816;
var G__25819 = cljs.core.count(c__15231__auto___25816);
var G__25820 = (0);
seq__25792_25802 = G__25817;
chunk__25793_25803 = G__25818;
count__25794_25804 = G__25819;
i__25795_25805 = G__25820;
continue;
} else {
var vec__25800_25821 = cljs.core.first(seq__25792_25815__$1);
var key_name_25822 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25800_25821,(0),null);
var f_25823 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25800_25821,(1),null);
var str_name_25824 = (function (){var G__25801 = key_name_25822;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25801) : cljs.core.name.call(null,G__25801));
})();
(obj[str_name_25824] = f_25823);

var G__25825 = cljs.core.next(seq__25792_25815__$1);
var G__25826 = null;
var G__25827 = (0);
var G__25828 = (0);
seq__25792_25802 = G__25825;
chunk__25793_25803 = G__25826;
count__25794_25804 = G__25827;
i__25795_25805 = G__25828;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__25830 = coll;
if(G__25830){
var bit__15125__auto__ = (G__25830.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__15125__auto__) || (G__25830.cljs$core$IReversible$)){
return true;
} else {
if((!G__25830.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25830);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25830);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__25831 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__25831;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__25832 = (i - (1));
var G__25833 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__25832;
r = G__25833;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__25834__i = 0, G__25834__a = new Array(arguments.length -  0);
while (G__25834__i < G__25834__a.length) {G__25834__a[G__25834__i] = arguments[G__25834__i + 0]; ++G__25834__i;}
  xs = new cljs.core.IndexedSeq(G__25834__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__25835){
var xs = cljs.core.seq(arglist__25835);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__14444__auto__ = (coll == null);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var G__25839 = coll;
if(G__25839){
var bit__15118__auto__ = (G__25839.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15118__auto__) || (G__25839.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__25841 = x;
if(G__25841){
var bit__15125__auto__ = (G__25841.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__15125__auto__) || (G__25841.cljs$core$IList$)){
return true;
} else {
if((!G__25841.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25841);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25841);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__14432__auto__ = cljs.core.not(a.ns);
if(and__14432__auto__){
return b.ns;
} else {
return and__14432__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__25848 = a.ns;
var G__25849 = b.ns;
return goog.array.defaultCompare(G__25848,G__25849);
})();
if(((0) === nsc)){
var G__25850 = a.name;
var G__25851 = b.name;
return goog.array.defaultCompare(G__25850,G__25851);
} else {
return nsc;
}
}
} else {
var G__25852 = a.name;
var G__25853 = b.name;
return goog.array.defaultCompare(G__25852,G__25853);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__14865__auto__ = self__._hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__25855 = null;
var G__25855__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__25855__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__25855 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__25855__2.call(this,self__,coll);
case 3:
return G__25855__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25855.cljs$core$IFn$_invoke$arity$2 = G__25855__2;
G__25855.cljs$core$IFn$_invoke$arity$3 = G__25855__3;
return G__25855;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args25854){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25854)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__25857 = x;
if(G__25857){
var bit__15118__auto__ = (G__25857.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__15118__auto__) || (G__25857.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__25859 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25859) : cljs.core.name.call(null,G__25859));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__25860 = ls.sval();
ls = G__25860;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__25862 = s;
if(G__25862){
var bit__15118__auto__ = (G__25862.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__15118__auto__) || (G__25862.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__25863 = cljs.core.next(s__$1);
s__$1 = G__25863;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_25864 = (0);
var xs_25865 = cljs.core.seq(coll);
while(true){
if(xs_25865){
(ret[i_25864] = cljs.core.to_array(cljs.core.first(xs_25865)));

var G__25866 = (i_25864 + (1));
var G__25867 = cljs.core.next(xs_25865);
i_25864 = G__25866;
xs_25865 = G__25867;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25870 = (i + (1));
var G__25871 = cljs.core.next(s__$1);
i = G__25870;
s__$1 = G__25871;
continue;
} else {
return a;
}
break;
}
} else {
var n__15331__auto___25872 = size;
var i_25873 = (0);
while(true){
if((i_25873 < n__15331__auto___25872)){
(a[i_25873] = init_val_or_seq);

var G__25874 = (i_25873 + (1));
i_25873 = G__25874;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25877 = (i + (1));
var G__25878 = cljs.core.next(s__$1);
i = G__25877;
s__$1 = G__25878;
continue;
} else {
return a;
}
break;
}
} else {
var n__15331__auto___25879 = size;
var i_25880 = (0);
while(true){
if((i_25880 < n__15331__auto___25879)){
(a[i_25880] = init_val_or_seq);

var G__25881 = (i_25880 + (1));
i_25880 = G__25881;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25884 = (i + (1));
var G__25885 = cljs.core.next(s__$1);
i = G__25884;
s__$1 = G__25885;
continue;
} else {
return a;
}
break;
}
} else {
var n__15331__auto___25886 = size;
var i_25887 = (0);
while(true){
if((i_25887 < n__15331__auto___25886)){
(a[i_25887] = init_val_or_seq);

var G__25888 = (i_25887 + (1));
i_25887 = G__25888;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25891 = (i + (1));
var G__25892 = cljs.core.next(s__$1);
i = G__25891;
s__$1 = G__25892;
continue;
} else {
return a;
}
break;
}
} else {
var n__15331__auto___25893 = size;
var i_25894 = (0);
while(true){
if((i_25894 < n__15331__auto___25893)){
(a[i_25894] = init_val_or_seq);

var G__25895 = (i_25894 + (1));
i_25894 = G__25895;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__25896 = cljs.core.next(s__$1);
var G__25897 = (i - (1));
var G__25898 = (sum + (1));
s__$1 = G__25896;
i = G__25897;
sum = G__25898;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__25918__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__25918 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25919__i = 0, G__25919__a = new Array(arguments.length -  2);
while (G__25919__i < G__25919__a.length) {G__25919__a[G__25919__i] = arguments[G__25919__i + 2]; ++G__25919__i;}
  zs = new cljs.core.IndexedSeq(G__25919__a,0);
} 
return G__25918__delegate.call(this,x,y,zs);};
G__25918.cljs$lang$maxFixedArity = 2;
G__25918.cljs$lang$applyTo = (function (arglist__25920){
var x = cljs.core.first(arglist__25920);
arglist__25920 = cljs.core.next(arglist__25920);
var y = cljs.core.first(arglist__25920);
var zs = cljs.core.rest(arglist__25920);
return G__25918__delegate(x,y,zs);
});
G__25918.cljs$core$IFn$_invoke$arity$variadic = G__25918__delegate;
return G__25918;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__25921 = null;
if (arguments.length > 2) {
var G__25922__i = 0, G__25922__a = new Array(arguments.length -  2);
while (G__25922__i < G__25922__a.length) {G__25922__a[G__25922__i] = arguments[G__25922__i + 2]; ++G__25922__i;}
G__25921 = new cljs.core.IndexedSeq(G__25922__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25921);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__25923__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__25923 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__25924__i = 0, G__25924__a = new Array(arguments.length -  4);
while (G__25924__i < G__25924__a.length) {G__25924__a[G__25924__i] = arguments[G__25924__i + 4]; ++G__25924__i;}
  more = new cljs.core.IndexedSeq(G__25924__a,0);
} 
return G__25923__delegate.call(this,a,b,c,d,more);};
G__25923.cljs$lang$maxFixedArity = 4;
G__25923.cljs$lang$applyTo = (function (arglist__25925){
var a = cljs.core.first(arglist__25925);
arglist__25925 = cljs.core.next(arglist__25925);
var b = cljs.core.first(arglist__25925);
arglist__25925 = cljs.core.next(arglist__25925);
var c = cljs.core.first(arglist__25925);
arglist__25925 = cljs.core.next(arglist__25925);
var d = cljs.core.first(arglist__25925);
var more = cljs.core.rest(arglist__25925);
return G__25923__delegate(a,b,c,d,more);
});
G__25923.cljs$core$IFn$_invoke$arity$variadic = G__25923__delegate;
return G__25923;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__25926 = null;
if (arguments.length > 4) {
var G__25927__i = 0, G__25927__a = new Array(arguments.length -  4);
while (G__25927__i < G__25927__a.length) {G__25927__a[G__25927__i] = arguments[G__25927__i + 4]; ++G__25927__i;}
G__25926 = new cljs.core.IndexedSeq(G__25927__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__25926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__25928__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25929 = ntcoll;
var G__25930 = cljs.core.first(vals);
var G__25931 = cljs.core.next(vals);
tcoll = G__25929;
val = G__25930;
vals = G__25931;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25928 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25932__i = 0, G__25932__a = new Array(arguments.length -  2);
while (G__25932__i < G__25932__a.length) {G__25932__a[G__25932__i] = arguments[G__25932__i + 2]; ++G__25932__i;}
  vals = new cljs.core.IndexedSeq(G__25932__a,0);
} 
return G__25928__delegate.call(this,tcoll,val,vals);};
G__25928.cljs$lang$maxFixedArity = 2;
G__25928.cljs$lang$applyTo = (function (arglist__25933){
var tcoll = cljs.core.first(arglist__25933);
arglist__25933 = cljs.core.next(arglist__25933);
var val = cljs.core.first(arglist__25933);
var vals = cljs.core.rest(arglist__25933);
return G__25928__delegate(tcoll,val,vals);
});
G__25928.cljs$core$IFn$_invoke$arity$variadic = G__25928__delegate;
return G__25928;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__25934 = null;
if (arguments.length > 2) {
var G__25935__i = 0, G__25935__a = new Array(arguments.length -  2);
while (G__25935__i < G__25935__a.length) {G__25935__a[G__25935__i] = arguments[G__25935__i + 2]; ++G__25935__i;}
G__25934 = new cljs.core.IndexedSeq(G__25935__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25934);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__25936__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__25937 = ntcoll;
var G__25938 = cljs.core.first(kvs);
var G__25939 = cljs.core.second(kvs);
var G__25940 = cljs.core.nnext(kvs);
tcoll = G__25937;
key = G__25938;
val = G__25939;
kvs = G__25940;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25936 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__25941__i = 0, G__25941__a = new Array(arguments.length -  3);
while (G__25941__i < G__25941__a.length) {G__25941__a[G__25941__i] = arguments[G__25941__i + 3]; ++G__25941__i;}
  kvs = new cljs.core.IndexedSeq(G__25941__a,0);
} 
return G__25936__delegate.call(this,tcoll,key,val,kvs);};
G__25936.cljs$lang$maxFixedArity = 3;
G__25936.cljs$lang$applyTo = (function (arglist__25942){
var tcoll = cljs.core.first(arglist__25942);
arglist__25942 = cljs.core.next(arglist__25942);
var key = cljs.core.first(arglist__25942);
arglist__25942 = cljs.core.next(arglist__25942);
var val = cljs.core.first(arglist__25942);
var kvs = cljs.core.rest(arglist__25942);
return G__25936__delegate(tcoll,key,val,kvs);
});
G__25936.cljs$core$IFn$_invoke$arity$variadic = G__25936__delegate;
return G__25936;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__25943 = null;
if (arguments.length > 3) {
var G__25944__i = 0, G__25944__a = new Array(arguments.length -  3);
while (G__25944__i < G__25944__a.length) {G__25944__a[G__25944__i] = arguments[G__25944__i + 3]; ++G__25944__i;}
G__25943 = new cljs.core.IndexedSeq(G__25944__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__25943);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__25945__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__25946 = ntcoll;
var G__25947 = cljs.core.first(ks);
var G__25948 = cljs.core.next(ks);
tcoll = G__25946;
key = G__25947;
ks = G__25948;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25945 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25949__i = 0, G__25949__a = new Array(arguments.length -  2);
while (G__25949__i < G__25949__a.length) {G__25949__a[G__25949__i] = arguments[G__25949__i + 2]; ++G__25949__i;}
  ks = new cljs.core.IndexedSeq(G__25949__a,0);
} 
return G__25945__delegate.call(this,tcoll,key,ks);};
G__25945.cljs$lang$maxFixedArity = 2;
G__25945.cljs$lang$applyTo = (function (arglist__25950){
var tcoll = cljs.core.first(arglist__25950);
arglist__25950 = cljs.core.next(arglist__25950);
var key = cljs.core.first(arglist__25950);
var ks = cljs.core.rest(arglist__25950);
return G__25945__delegate(tcoll,key,ks);
});
G__25945.cljs$core$IFn$_invoke$arity$variadic = G__25945__delegate;
return G__25945;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__25951 = null;
if (arguments.length > 2) {
var G__25952__i = 0, G__25952__a = new Array(arguments.length -  2);
while (G__25952__i < G__25952__a.length) {G__25952__a[G__25952__i] = arguments[G__25952__i + 2]; ++G__25952__i;}
G__25951 = new cljs.core.IndexedSeq(G__25952__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__25951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__25953__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25954 = ntcoll;
var G__25955 = cljs.core.first(vals);
var G__25956 = cljs.core.next(vals);
tcoll = G__25954;
val = G__25955;
vals = G__25956;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25953 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25957__i = 0, G__25957__a = new Array(arguments.length -  2);
while (G__25957__i < G__25957__a.length) {G__25957__a[G__25957__i] = arguments[G__25957__i + 2]; ++G__25957__i;}
  vals = new cljs.core.IndexedSeq(G__25957__a,0);
} 
return G__25953__delegate.call(this,tcoll,val,vals);};
G__25953.cljs$lang$maxFixedArity = 2;
G__25953.cljs$lang$applyTo = (function (arglist__25958){
var tcoll = cljs.core.first(arglist__25958);
arglist__25958 = cljs.core.next(arglist__25958);
var val = cljs.core.first(arglist__25958);
var vals = cljs.core.rest(arglist__25958);
return G__25953__delegate(tcoll,val,vals);
});
G__25953.cljs$core$IFn$_invoke$arity$variadic = G__25953__delegate;
return G__25953;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__25959 = null;
if (arguments.length > 2) {
var G__25960__i = 0, G__25960__a = new Array(arguments.length -  2);
while (G__25960__i < G__25960__a.length) {G__25960__a[G__25960__i] = arguments[G__25960__i + 2]; ++G__25960__i;}
G__25959 = new cljs.core.IndexedSeq(G__25960__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a15375 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a15375);
} else {
var G__26171 = a15375;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26171) : f.call(null,G__26171));
}
} else {
var b15376 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a15375,b15376);
} else {
var G__26172 = a15375;
var G__26173 = b15376;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26172,G__26173) : f.call(null,G__26172,G__26173));
}
} else {
var c15377 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a15375,b15376,c15377);
} else {
var G__26174 = a15375;
var G__26175 = b15376;
var G__26176 = c15377;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26174,G__26175,G__26176) : f.call(null,G__26174,G__26175,G__26176));
}
} else {
var d15378 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a15375,b15376,c15377,d15378);
} else {
var G__26177 = a15375;
var G__26178 = b15376;
var G__26179 = c15377;
var G__26180 = d15378;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26177,G__26178,G__26179,G__26180) : f.call(null,G__26177,G__26178,G__26179,G__26180));
}
} else {
var e15379 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a15375,b15376,c15377,d15378,e15379);
} else {
var G__26181 = a15375;
var G__26182 = b15376;
var G__26183 = c15377;
var G__26184 = d15378;
var G__26185 = e15379;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26181,G__26182,G__26183,G__26184,G__26185) : f.call(null,G__26181,G__26182,G__26183,G__26184,G__26185));
}
} else {
var f15380 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a15375,b15376,c15377,d15378,e15379,f15380);
} else {
var G__26186 = a15375;
var G__26187 = b15376;
var G__26188 = c15377;
var G__26189 = d15378;
var G__26190 = e15379;
var G__26191 = f15380;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__26186,G__26187,G__26188,G__26189,G__26190,G__26191) : f.call(null,G__26186,G__26187,G__26188,G__26189,G__26190,G__26191));
}
} else {
var g15381 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a15375,b15376,c15377,d15378,e15379,f15380,g15381);
} else {
var G__26192 = a15375;
var G__26193 = b15376;
var G__26194 = c15377;
var G__26195 = d15378;
var G__26196 = e15379;
var G__26197 = f15380;
var G__26198 = g15381;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__26192,G__26193,G__26194,G__26195,G__26196,G__26197,G__26198) : f.call(null,G__26192,G__26193,G__26194,G__26195,G__26196,G__26197,G__26198));
}
} else {
var h15382 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382);
} else {
var G__26199 = a15375;
var G__26200 = b15376;
var G__26201 = c15377;
var G__26202 = d15378;
var G__26203 = e15379;
var G__26204 = f15380;
var G__26205 = g15381;
var G__26206 = h15382;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__26199,G__26200,G__26201,G__26202,G__26203,G__26204,G__26205,G__26206) : f.call(null,G__26199,G__26200,G__26201,G__26202,G__26203,G__26204,G__26205,G__26206));
}
} else {
var i15383 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383);
} else {
var G__26207 = a15375;
var G__26208 = b15376;
var G__26209 = c15377;
var G__26210 = d15378;
var G__26211 = e15379;
var G__26212 = f15380;
var G__26213 = g15381;
var G__26214 = h15382;
var G__26215 = i15383;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__26207,G__26208,G__26209,G__26210,G__26211,G__26212,G__26213,G__26214,G__26215) : f.call(null,G__26207,G__26208,G__26209,G__26210,G__26211,G__26212,G__26213,G__26214,G__26215));
}
} else {
var j15384 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384);
} else {
var G__26216 = a15375;
var G__26217 = b15376;
var G__26218 = c15377;
var G__26219 = d15378;
var G__26220 = e15379;
var G__26221 = f15380;
var G__26222 = g15381;
var G__26223 = h15382;
var G__26224 = i15383;
var G__26225 = j15384;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__26216,G__26217,G__26218,G__26219,G__26220,G__26221,G__26222,G__26223,G__26224,G__26225) : f.call(null,G__26216,G__26217,G__26218,G__26219,G__26220,G__26221,G__26222,G__26223,G__26224,G__26225));
}
} else {
var k15385 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385);
} else {
var G__26226 = a15375;
var G__26227 = b15376;
var G__26228 = c15377;
var G__26229 = d15378;
var G__26230 = e15379;
var G__26231 = f15380;
var G__26232 = g15381;
var G__26233 = h15382;
var G__26234 = i15383;
var G__26235 = j15384;
var G__26236 = k15385;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__26226,G__26227,G__26228,G__26229,G__26230,G__26231,G__26232,G__26233,G__26234,G__26235,G__26236) : f.call(null,G__26226,G__26227,G__26228,G__26229,G__26230,G__26231,G__26232,G__26233,G__26234,G__26235,G__26236));
}
} else {
var l15386 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386);
} else {
var G__26237 = a15375;
var G__26238 = b15376;
var G__26239 = c15377;
var G__26240 = d15378;
var G__26241 = e15379;
var G__26242 = f15380;
var G__26243 = g15381;
var G__26244 = h15382;
var G__26245 = i15383;
var G__26246 = j15384;
var G__26247 = k15385;
var G__26248 = l15386;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__26237,G__26238,G__26239,G__26240,G__26241,G__26242,G__26243,G__26244,G__26245,G__26246,G__26247,G__26248) : f.call(null,G__26237,G__26238,G__26239,G__26240,G__26241,G__26242,G__26243,G__26244,G__26245,G__26246,G__26247,G__26248));
}
} else {
var m15387 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387);
} else {
var G__26249 = a15375;
var G__26250 = b15376;
var G__26251 = c15377;
var G__26252 = d15378;
var G__26253 = e15379;
var G__26254 = f15380;
var G__26255 = g15381;
var G__26256 = h15382;
var G__26257 = i15383;
var G__26258 = j15384;
var G__26259 = k15385;
var G__26260 = l15386;
var G__26261 = m15387;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__26249,G__26250,G__26251,G__26252,G__26253,G__26254,G__26255,G__26256,G__26257,G__26258,G__26259,G__26260,G__26261) : f.call(null,G__26249,G__26250,G__26251,G__26252,G__26253,G__26254,G__26255,G__26256,G__26257,G__26258,G__26259,G__26260,G__26261));
}
} else {
var n15388 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388);
} else {
var G__26262 = a15375;
var G__26263 = b15376;
var G__26264 = c15377;
var G__26265 = d15378;
var G__26266 = e15379;
var G__26267 = f15380;
var G__26268 = g15381;
var G__26269 = h15382;
var G__26270 = i15383;
var G__26271 = j15384;
var G__26272 = k15385;
var G__26273 = l15386;
var G__26274 = m15387;
var G__26275 = n15388;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__26262,G__26263,G__26264,G__26265,G__26266,G__26267,G__26268,G__26269,G__26270,G__26271,G__26272,G__26273,G__26274,G__26275) : f.call(null,G__26262,G__26263,G__26264,G__26265,G__26266,G__26267,G__26268,G__26269,G__26270,G__26271,G__26272,G__26273,G__26274,G__26275));
}
} else {
var o15389 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389);
} else {
var G__26276 = a15375;
var G__26277 = b15376;
var G__26278 = c15377;
var G__26279 = d15378;
var G__26280 = e15379;
var G__26281 = f15380;
var G__26282 = g15381;
var G__26283 = h15382;
var G__26284 = i15383;
var G__26285 = j15384;
var G__26286 = k15385;
var G__26287 = l15386;
var G__26288 = m15387;
var G__26289 = n15388;
var G__26290 = o15389;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__26276,G__26277,G__26278,G__26279,G__26280,G__26281,G__26282,G__26283,G__26284,G__26285,G__26286,G__26287,G__26288,G__26289,G__26290) : f.call(null,G__26276,G__26277,G__26278,G__26279,G__26280,G__26281,G__26282,G__26283,G__26284,G__26285,G__26286,G__26287,G__26288,G__26289,G__26290));
}
} else {
var p15390 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390);
} else {
var G__26291 = a15375;
var G__26292 = b15376;
var G__26293 = c15377;
var G__26294 = d15378;
var G__26295 = e15379;
var G__26296 = f15380;
var G__26297 = g15381;
var G__26298 = h15382;
var G__26299 = i15383;
var G__26300 = j15384;
var G__26301 = k15385;
var G__26302 = l15386;
var G__26303 = m15387;
var G__26304 = n15388;
var G__26305 = o15389;
var G__26306 = p15390;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__26291,G__26292,G__26293,G__26294,G__26295,G__26296,G__26297,G__26298,G__26299,G__26300,G__26301,G__26302,G__26303,G__26304,G__26305,G__26306) : f.call(null,G__26291,G__26292,G__26293,G__26294,G__26295,G__26296,G__26297,G__26298,G__26299,G__26300,G__26301,G__26302,G__26303,G__26304,G__26305,G__26306));
}
} else {
var q15391 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390,q15391);
} else {
var G__26307 = a15375;
var G__26308 = b15376;
var G__26309 = c15377;
var G__26310 = d15378;
var G__26311 = e15379;
var G__26312 = f15380;
var G__26313 = g15381;
var G__26314 = h15382;
var G__26315 = i15383;
var G__26316 = j15384;
var G__26317 = k15385;
var G__26318 = l15386;
var G__26319 = m15387;
var G__26320 = n15388;
var G__26321 = o15389;
var G__26322 = p15390;
var G__26323 = q15391;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__26307,G__26308,G__26309,G__26310,G__26311,G__26312,G__26313,G__26314,G__26315,G__26316,G__26317,G__26318,G__26319,G__26320,G__26321,G__26322,G__26323) : f.call(null,G__26307,G__26308,G__26309,G__26310,G__26311,G__26312,G__26313,G__26314,G__26315,G__26316,G__26317,G__26318,G__26319,G__26320,G__26321,G__26322,G__26323));
}
} else {
var r15392 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390,q15391,r15392);
} else {
var G__26324 = a15375;
var G__26325 = b15376;
var G__26326 = c15377;
var G__26327 = d15378;
var G__26328 = e15379;
var G__26329 = f15380;
var G__26330 = g15381;
var G__26331 = h15382;
var G__26332 = i15383;
var G__26333 = j15384;
var G__26334 = k15385;
var G__26335 = l15386;
var G__26336 = m15387;
var G__26337 = n15388;
var G__26338 = o15389;
var G__26339 = p15390;
var G__26340 = q15391;
var G__26341 = r15392;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__26324,G__26325,G__26326,G__26327,G__26328,G__26329,G__26330,G__26331,G__26332,G__26333,G__26334,G__26335,G__26336,G__26337,G__26338,G__26339,G__26340,G__26341) : f.call(null,G__26324,G__26325,G__26326,G__26327,G__26328,G__26329,G__26330,G__26331,G__26332,G__26333,G__26334,G__26335,G__26336,G__26337,G__26338,G__26339,G__26340,G__26341));
}
} else {
var s15393 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390,q15391,r15392,s15393);
} else {
var G__26342 = a15375;
var G__26343 = b15376;
var G__26344 = c15377;
var G__26345 = d15378;
var G__26346 = e15379;
var G__26347 = f15380;
var G__26348 = g15381;
var G__26349 = h15382;
var G__26350 = i15383;
var G__26351 = j15384;
var G__26352 = k15385;
var G__26353 = l15386;
var G__26354 = m15387;
var G__26355 = n15388;
var G__26356 = o15389;
var G__26357 = p15390;
var G__26358 = q15391;
var G__26359 = r15392;
var G__26360 = s15393;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__26342,G__26343,G__26344,G__26345,G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354,G__26355,G__26356,G__26357,G__26358,G__26359,G__26360) : f.call(null,G__26342,G__26343,G__26344,G__26345,G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354,G__26355,G__26356,G__26357,G__26358,G__26359,G__26360));
}
} else {
var t15394 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390,q15391,r15392,s15393,t15394);
} else {
var G__26361 = a15375;
var G__26362 = b15376;
var G__26363 = c15377;
var G__26364 = d15378;
var G__26365 = e15379;
var G__26366 = f15380;
var G__26367 = g15381;
var G__26368 = h15382;
var G__26369 = i15383;
var G__26370 = j15384;
var G__26371 = k15385;
var G__26372 = l15386;
var G__26373 = m15387;
var G__26374 = n15388;
var G__26375 = o15389;
var G__26376 = p15390;
var G__26377 = q15391;
var G__26378 = r15392;
var G__26379 = s15393;
var G__26380 = t15394;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__26361,G__26362,G__26363,G__26364,G__26365,G__26366,G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373,G__26374,G__26375,G__26376,G__26377,G__26378,G__26379,G__26380) : f.call(null,G__26361,G__26362,G__26363,G__26364,G__26365,G__26366,G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373,G__26374,G__26375,G__26376,G__26377,G__26378,G__26379,G__26380));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__26381__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__26381 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__26382__i = 0, G__26382__a = new Array(arguments.length -  5);
while (G__26382__i < G__26382__a.length) {G__26382__a[G__26382__i] = arguments[G__26382__i + 5]; ++G__26382__i;}
  args = new cljs.core.IndexedSeq(G__26382__a,0);
} 
return G__26381__delegate.call(this,f,a,b,c,d,args);};
G__26381.cljs$lang$maxFixedArity = 5;
G__26381.cljs$lang$applyTo = (function (arglist__26383){
var f = cljs.core.first(arglist__26383);
arglist__26383 = cljs.core.next(arglist__26383);
var a = cljs.core.first(arglist__26383);
arglist__26383 = cljs.core.next(arglist__26383);
var b = cljs.core.first(arglist__26383);
arglist__26383 = cljs.core.next(arglist__26383);
var c = cljs.core.first(arglist__26383);
arglist__26383 = cljs.core.next(arglist__26383);
var d = cljs.core.first(arglist__26383);
var args = cljs.core.rest(arglist__26383);
return G__26381__delegate(f,a,b,c,d,args);
});
G__26381.cljs$core$IFn$_invoke$arity$variadic = G__26381__delegate;
return G__26381;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__26384 = null;
if (arguments.length > 5) {
var G__26385__i = 0, G__26385__a = new Array(arguments.length -  5);
while (G__26385__i < G__26385__a.length) {G__26385__a[G__26385__i] = arguments[G__26385__i + 5]; ++G__26385__i;}
G__26384 = new cljs.core.IndexedSeq(G__26385__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__26384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__26401 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26401) : f.call(null,G__26401));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__26402 = cljs.core.meta(obj);
var G__26403 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26402,G__26403) : f.call(null,G__26402,G__26403));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__26404 = cljs.core.meta(obj);
var G__26405 = a;
var G__26406 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26404,G__26405,G__26406) : f.call(null,G__26404,G__26405,G__26406));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__26407 = cljs.core.meta(obj);
var G__26408 = a;
var G__26409 = b;
var G__26410 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26407,G__26408,G__26409,G__26410) : f.call(null,G__26407,G__26408,G__26409,G__26410));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__26411 = cljs.core.meta(obj);
var G__26412 = a;
var G__26413 = b;
var G__26414 = c;
var G__26415 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26411,G__26412,G__26413,G__26414,G__26415) : f.call(null,G__26411,G__26412,G__26413,G__26414,G__26415));
})());
});
var vary_meta__7 = (function() { 
var G__26416__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__26416 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__26417__i = 0, G__26417__a = new Array(arguments.length -  6);
while (G__26417__i < G__26417__a.length) {G__26417__a[G__26417__i] = arguments[G__26417__i + 6]; ++G__26417__i;}
  args = new cljs.core.IndexedSeq(G__26417__a,0);
} 
return G__26416__delegate.call(this,obj,f,a,b,c,d,args);};
G__26416.cljs$lang$maxFixedArity = 6;
G__26416.cljs$lang$applyTo = (function (arglist__26418){
var obj = cljs.core.first(arglist__26418);
arglist__26418 = cljs.core.next(arglist__26418);
var f = cljs.core.first(arglist__26418);
arglist__26418 = cljs.core.next(arglist__26418);
var a = cljs.core.first(arglist__26418);
arglist__26418 = cljs.core.next(arglist__26418);
var b = cljs.core.first(arglist__26418);
arglist__26418 = cljs.core.next(arglist__26418);
var c = cljs.core.first(arglist__26418);
arglist__26418 = cljs.core.next(arglist__26418);
var d = cljs.core.first(arglist__26418);
var args = cljs.core.rest(arglist__26418);
return G__26416__delegate(obj,f,a,b,c,d,args);
});
G__26416.cljs$core$IFn$_invoke$arity$variadic = G__26416__delegate;
return G__26416;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__26419 = null;
if (arguments.length > 6) {
var G__26420__i = 0, G__26420__a = new Array(arguments.length -  6);
while (G__26420__i < G__26420__a.length) {G__26420__a[G__26420__i] = arguments[G__26420__i + 6]; ++G__26420__i;}
G__26419 = new cljs.core.IndexedSeq(G__26420__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__26419);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__26421__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__26421 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__26422__i = 0, G__26422__a = new Array(arguments.length -  2);
while (G__26422__i < G__26422__a.length) {G__26422__a[G__26422__i] = arguments[G__26422__i + 2]; ++G__26422__i;}
  more = new cljs.core.IndexedSeq(G__26422__a,0);
} 
return G__26421__delegate.call(this,x,y,more);};
G__26421.cljs$lang$maxFixedArity = 2;
G__26421.cljs$lang$applyTo = (function (arglist__26423){
var x = cljs.core.first(arglist__26423);
arglist__26423 = cljs.core.next(arglist__26423);
var y = cljs.core.first(arglist__26423);
var more = cljs.core.rest(arglist__26423);
return G__26421__delegate(x,y,more);
});
G__26421.cljs$core$IFn$_invoke$arity$variadic = G__26421__delegate;
return G__26421;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__26424 = null;
if (arguments.length > 2) {
var G__26425__i = 0, G__26425__a = new Array(arguments.length -  2);
while (G__26425__i < G__26425__a.length) {G__26425__a[G__26425__i] = arguments[G__26425__i + 2]; ++G__26425__i;}
G__26424 = new cljs.core.IndexedSeq(G__26425__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26424);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t26429 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t26429 = (function (nil_iter,meta26430){
this.nil_iter = nil_iter;
this.meta26430 = meta26430;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t26429.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t26429.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t26429.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t26429.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_26431){
var self__ = this;
var _26431__$1 = this;
return self__.meta26430;
});

cljs.core.t26429.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_26431,meta26430__$1){
var self__ = this;
var _26431__$1 = this;
return (new cljs.core.t26429(self__.nil_iter,meta26430__$1));
});

cljs.core.t26429.cljs$lang$type = true;

cljs.core.t26429.cljs$lang$ctorStr = "cljs.core/t26429";

cljs.core.t26429.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/t26429");
});

cljs.core.__GT_t26429 = (function __GT_t26429(nil_iter__$1,meta26430){
return (new cljs.core.t26429(nil_iter__$1,meta26430));
});

}

return (new cljs.core.t26429(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__14432__auto__ = !((lt.stepper == null));
if(and__14432__auto__){
return self__.iter.hasNext();
} else {
return and__14432__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__26432 = lt;
var G__26433 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__26432,G__26433) : self__.xform.call(null,G__26432,G__26433));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__26434 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__26434) : self__.xform.call(null,G__26434));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__26436 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__26436) : xform.call(null,G__26436));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__26438 = cljs.core.next(iters__$1);
iters__$1 = G__26438;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__15331__auto___26439 = self__.iters.length;
var i_26440 = (0);
while(true){
if((i_26440 < n__15331__auto___26439)){
(self__.nexts[i_26440] = (self__.iters[i_26440]).next());

var G__26441 = (i_26440 + (1));
i_26440 = G__26441;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__14432__auto__ = !((lt.stepper == null));
if(and__14432__auto__){
return this$.hasNext();
} else {
return and__14432__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__26437 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__26437) : self__.xform.call(null,G__26437));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__26446 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__26446) : xform.call(null,G__26446));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__26447_26451 = cljs.core.seq(colls);
var chunk__26448_26452 = null;
var count__26449_26453 = (0);
var i__26450_26454 = (0);
while(true){
if((i__26450_26454 < count__26449_26453)){
var coll_26455 = chunk__26448_26452.cljs$core$IIndexed$_nth$arity$2(null,i__26450_26454);
iters.push(cljs.core.iter(coll_26455));

var G__26456 = seq__26447_26451;
var G__26457 = chunk__26448_26452;
var G__26458 = count__26449_26453;
var G__26459 = (i__26450_26454 + (1));
seq__26447_26451 = G__26456;
chunk__26448_26452 = G__26457;
count__26449_26453 = G__26458;
i__26450_26454 = G__26459;
continue;
} else {
var temp__4406__auto___26460 = cljs.core.seq(seq__26447_26451);
if(temp__4406__auto___26460){
var seq__26447_26461__$1 = temp__4406__auto___26460;
if(cljs.core.chunked_seq_QMARK_(seq__26447_26461__$1)){
var c__15231__auto___26462 = cljs.core.chunk_first(seq__26447_26461__$1);
var G__26463 = cljs.core.chunk_rest(seq__26447_26461__$1);
var G__26464 = c__15231__auto___26462;
var G__26465 = cljs.core.count(c__15231__auto___26462);
var G__26466 = (0);
seq__26447_26451 = G__26463;
chunk__26448_26452 = G__26464;
count__26449_26453 = G__26465;
i__26450_26454 = G__26466;
continue;
} else {
var coll_26467 = cljs.core.first(seq__26447_26461__$1);
iters.push(cljs.core.iter(coll_26467));

var G__26468 = cljs.core.next(seq__26447_26461__$1);
var G__26469 = null;
var G__26470 = (0);
var G__26471 = (0);
seq__26447_26451 = G__26468;
chunk__26448_26452 = G__26469;
count__26449_26453 = G__26470;
i__26450_26454 = G__26471;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__14444__auto__ = cljs.core.seq(coll);
if(or__14444__auto__){
return or__14444__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__26472__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__26472 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26473__i = 0, G__26473__a = new Array(arguments.length -  2);
while (G__26473__i < G__26473__a.length) {G__26473__a[G__26473__i] = arguments[G__26473__i + 2]; ++G__26473__i;}
  colls = new cljs.core.IndexedSeq(G__26473__a,0);
} 
return G__26472__delegate.call(this,xform,coll,colls);};
G__26472.cljs$lang$maxFixedArity = 2;
G__26472.cljs$lang$applyTo = (function (arglist__26474){
var xform = cljs.core.first(arglist__26474);
arglist__26474 = cljs.core.next(arglist__26474);
var coll = cljs.core.first(arglist__26474);
var colls = cljs.core.rest(arglist__26474);
return G__26472__delegate(xform,coll,colls);
});
G__26472.cljs$core$IFn$_invoke$arity$variadic = G__26472__delegate;
return G__26472;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__26475 = null;
if (arguments.length > 2) {
var G__26476__i = 0, G__26476__a = new Array(arguments.length -  2);
while (G__26476__i < G__26476__a.length) {G__26476__a[G__26476__i] = arguments[G__26476__i + 2]; ++G__26476__i;}
G__26475 = new cljs.core.IndexedSeq(G__26476__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__26475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__26478 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26478) : pred.call(null,G__26478));
})())){
var G__26479 = pred;
var G__26480 = cljs.core.next(coll);
pred = G__26479;
coll = G__26480;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__14444__auto__ = (function (){var G__26484 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26484) : pred.call(null,G__26484));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__26485 = pred;
var G__26486 = cljs.core.next(coll);
pred = G__26485;
coll = G__26486;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__26493 = null;
var G__26493__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__26493__1 = (function (x){
return cljs.core.not((function (){var G__26490 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26490) : f.call(null,G__26490));
})());
});
var G__26493__2 = (function (x,y){
return cljs.core.not((function (){var G__26491 = x;
var G__26492 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26491,G__26492) : f.call(null,G__26491,G__26492));
})());
});
var G__26493__3 = (function() { 
var G__26494__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__26494 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__26495__i = 0, G__26495__a = new Array(arguments.length -  2);
while (G__26495__i < G__26495__a.length) {G__26495__a[G__26495__i] = arguments[G__26495__i + 2]; ++G__26495__i;}
  zs = new cljs.core.IndexedSeq(G__26495__a,0);
} 
return G__26494__delegate.call(this,x,y,zs);};
G__26494.cljs$lang$maxFixedArity = 2;
G__26494.cljs$lang$applyTo = (function (arglist__26496){
var x = cljs.core.first(arglist__26496);
arglist__26496 = cljs.core.next(arglist__26496);
var y = cljs.core.first(arglist__26496);
var zs = cljs.core.rest(arglist__26496);
return G__26494__delegate(x,y,zs);
});
G__26494.cljs$core$IFn$_invoke$arity$variadic = G__26494__delegate;
return G__26494;
})()
;
G__26493 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__26493__0.call(this);
case 1:
return G__26493__1.call(this,x);
case 2:
return G__26493__2.call(this,x,y);
default:
var G__26497 = null;
if (arguments.length > 2) {
var G__26498__i = 0, G__26498__a = new Array(arguments.length -  2);
while (G__26498__i < G__26498__a.length) {G__26498__a[G__26498__i] = arguments[G__26498__i + 2]; ++G__26498__i;}
G__26497 = new cljs.core.IndexedSeq(G__26498__a,0);
}
return G__26493__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26493.cljs$lang$maxFixedArity = 2;
G__26493.cljs$lang$applyTo = G__26493__3.cljs$lang$applyTo;
G__26493.cljs$core$IFn$_invoke$arity$0 = G__26493__0;
G__26493.cljs$core$IFn$_invoke$arity$1 = G__26493__1;
G__26493.cljs$core$IFn$_invoke$arity$2 = G__26493__2;
G__26493.cljs$core$IFn$_invoke$arity$variadic = G__26493__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26493;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__26499__delegate = function (args){
return x;
};
var G__26499 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26500__i = 0, G__26500__a = new Array(arguments.length -  0);
while (G__26500__i < G__26500__a.length) {G__26500__a[G__26500__i] = arguments[G__26500__i + 0]; ++G__26500__i;}
  args = new cljs.core.IndexedSeq(G__26500__a,0);
} 
return G__26499__delegate.call(this,args);};
G__26499.cljs$lang$maxFixedArity = 0;
G__26499.cljs$lang$applyTo = (function (arglist__26501){
var args = cljs.core.seq(arglist__26501);
return G__26499__delegate(args);
});
G__26499.cljs$core$IFn$_invoke$arity$variadic = G__26499__delegate;
return G__26499;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__26556 = null;
var G__26556__0 = (function (){
var G__26529 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26529) : f.call(null,G__26529));
});
var G__26556__1 = (function (x){
var G__26530 = (function (){var G__26531 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26531) : g.call(null,G__26531));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26530) : f.call(null,G__26530));
});
var G__26556__2 = (function (x,y){
var G__26532 = (function (){var G__26533 = x;
var G__26534 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__26533,G__26534) : g.call(null,G__26533,G__26534));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26532) : f.call(null,G__26532));
});
var G__26556__3 = (function (x,y,z){
var G__26535 = (function (){var G__26536 = x;
var G__26537 = y;
var G__26538 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__26536,G__26537,G__26538) : g.call(null,G__26536,G__26537,G__26538));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26535) : f.call(null,G__26535));
});
var G__26556__4 = (function() { 
var G__26557__delegate = function (x,y,z,args){
var G__26539 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26539) : f.call(null,G__26539));
};
var G__26557 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26558__i = 0, G__26558__a = new Array(arguments.length -  3);
while (G__26558__i < G__26558__a.length) {G__26558__a[G__26558__i] = arguments[G__26558__i + 3]; ++G__26558__i;}
  args = new cljs.core.IndexedSeq(G__26558__a,0);
} 
return G__26557__delegate.call(this,x,y,z,args);};
G__26557.cljs$lang$maxFixedArity = 3;
G__26557.cljs$lang$applyTo = (function (arglist__26559){
var x = cljs.core.first(arglist__26559);
arglist__26559 = cljs.core.next(arglist__26559);
var y = cljs.core.first(arglist__26559);
arglist__26559 = cljs.core.next(arglist__26559);
var z = cljs.core.first(arglist__26559);
var args = cljs.core.rest(arglist__26559);
return G__26557__delegate(x,y,z,args);
});
G__26557.cljs$core$IFn$_invoke$arity$variadic = G__26557__delegate;
return G__26557;
})()
;
G__26556 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26556__0.call(this);
case 1:
return G__26556__1.call(this,x);
case 2:
return G__26556__2.call(this,x,y);
case 3:
return G__26556__3.call(this,x,y,z);
default:
var G__26560 = null;
if (arguments.length > 3) {
var G__26561__i = 0, G__26561__a = new Array(arguments.length -  3);
while (G__26561__i < G__26561__a.length) {G__26561__a[G__26561__i] = arguments[G__26561__i + 3]; ++G__26561__i;}
G__26560 = new cljs.core.IndexedSeq(G__26561__a,0);
}
return G__26556__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26556.cljs$lang$maxFixedArity = 3;
G__26556.cljs$lang$applyTo = G__26556__4.cljs$lang$applyTo;
G__26556.cljs$core$IFn$_invoke$arity$0 = G__26556__0;
G__26556.cljs$core$IFn$_invoke$arity$1 = G__26556__1;
G__26556.cljs$core$IFn$_invoke$arity$2 = G__26556__2;
G__26556.cljs$core$IFn$_invoke$arity$3 = G__26556__3;
G__26556.cljs$core$IFn$_invoke$arity$variadic = G__26556__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26556;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__26562 = null;
var G__26562__0 = (function (){
var G__26540 = (function (){var G__26541 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26541) : g.call(null,G__26541));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26540) : f.call(null,G__26540));
});
var G__26562__1 = (function (x){
var G__26542 = (function (){var G__26543 = (function (){var G__26544 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__26544) : h.call(null,G__26544));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26543) : g.call(null,G__26543));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26542) : f.call(null,G__26542));
});
var G__26562__2 = (function (x,y){
var G__26545 = (function (){var G__26546 = (function (){var G__26547 = x;
var G__26548 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__26547,G__26548) : h.call(null,G__26547,G__26548));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26546) : g.call(null,G__26546));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26545) : f.call(null,G__26545));
});
var G__26562__3 = (function (x,y,z){
var G__26549 = (function (){var G__26550 = (function (){var G__26551 = x;
var G__26552 = y;
var G__26553 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__26551,G__26552,G__26553) : h.call(null,G__26551,G__26552,G__26553));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26550) : g.call(null,G__26550));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26549) : f.call(null,G__26549));
});
var G__26562__4 = (function() { 
var G__26563__delegate = function (x,y,z,args){
var G__26554 = (function (){var G__26555 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26555) : g.call(null,G__26555));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26554) : f.call(null,G__26554));
};
var G__26563 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26564__i = 0, G__26564__a = new Array(arguments.length -  3);
while (G__26564__i < G__26564__a.length) {G__26564__a[G__26564__i] = arguments[G__26564__i + 3]; ++G__26564__i;}
  args = new cljs.core.IndexedSeq(G__26564__a,0);
} 
return G__26563__delegate.call(this,x,y,z,args);};
G__26563.cljs$lang$maxFixedArity = 3;
G__26563.cljs$lang$applyTo = (function (arglist__26565){
var x = cljs.core.first(arglist__26565);
arglist__26565 = cljs.core.next(arglist__26565);
var y = cljs.core.first(arglist__26565);
arglist__26565 = cljs.core.next(arglist__26565);
var z = cljs.core.first(arglist__26565);
var args = cljs.core.rest(arglist__26565);
return G__26563__delegate(x,y,z,args);
});
G__26563.cljs$core$IFn$_invoke$arity$variadic = G__26563__delegate;
return G__26563;
})()
;
G__26562 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26562__0.call(this);
case 1:
return G__26562__1.call(this,x);
case 2:
return G__26562__2.call(this,x,y);
case 3:
return G__26562__3.call(this,x,y,z);
default:
var G__26566 = null;
if (arguments.length > 3) {
var G__26567__i = 0, G__26567__a = new Array(arguments.length -  3);
while (G__26567__i < G__26567__a.length) {G__26567__a[G__26567__i] = arguments[G__26567__i + 3]; ++G__26567__i;}
G__26566 = new cljs.core.IndexedSeq(G__26567__a,0);
}
return G__26562__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26562.cljs$lang$maxFixedArity = 3;
G__26562.cljs$lang$applyTo = G__26562__4.cljs$lang$applyTo;
G__26562.cljs$core$IFn$_invoke$arity$0 = G__26562__0;
G__26562.cljs$core$IFn$_invoke$arity$1 = G__26562__1;
G__26562.cljs$core$IFn$_invoke$arity$2 = G__26562__2;
G__26562.cljs$core$IFn$_invoke$arity$3 = G__26562__3;
G__26562.cljs$core$IFn$_invoke$arity$variadic = G__26562__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26562;
})()
});
var comp__4 = (function() { 
var G__26568__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__26569__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__26570 = cljs.core.first(fs__$2).call(null,ret);
var G__26571 = cljs.core.next(fs__$2);
ret = G__26570;
fs__$2 = G__26571;
continue;
} else {
return ret;
}
break;
}
};
var G__26569 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26572__i = 0, G__26572__a = new Array(arguments.length -  0);
while (G__26572__i < G__26572__a.length) {G__26572__a[G__26572__i] = arguments[G__26572__i + 0]; ++G__26572__i;}
  args = new cljs.core.IndexedSeq(G__26572__a,0);
} 
return G__26569__delegate.call(this,args);};
G__26569.cljs$lang$maxFixedArity = 0;
G__26569.cljs$lang$applyTo = (function (arglist__26573){
var args = cljs.core.seq(arglist__26573);
return G__26569__delegate(args);
});
G__26569.cljs$core$IFn$_invoke$arity$variadic = G__26569__delegate;
return G__26569;
})()
;
;})(fs__$1))
};
var G__26568 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__26574__i = 0, G__26574__a = new Array(arguments.length -  3);
while (G__26574__i < G__26574__a.length) {G__26574__a[G__26574__i] = arguments[G__26574__i + 3]; ++G__26574__i;}
  fs = new cljs.core.IndexedSeq(G__26574__a,0);
} 
return G__26568__delegate.call(this,f1,f2,f3,fs);};
G__26568.cljs$lang$maxFixedArity = 3;
G__26568.cljs$lang$applyTo = (function (arglist__26575){
var f1 = cljs.core.first(arglist__26575);
arglist__26575 = cljs.core.next(arglist__26575);
var f2 = cljs.core.first(arglist__26575);
arglist__26575 = cljs.core.next(arglist__26575);
var f3 = cljs.core.first(arglist__26575);
var fs = cljs.core.rest(arglist__26575);
return G__26568__delegate(f1,f2,f3,fs);
});
G__26568.cljs$core$IFn$_invoke$arity$variadic = G__26568__delegate;
return G__26568;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__26576 = null;
if (arguments.length > 3) {
var G__26577__i = 0, G__26577__a = new Array(arguments.length -  3);
while (G__26577__i < G__26577__a.length) {G__26577__a[G__26577__i] = arguments[G__26577__i + 3]; ++G__26577__i;}
G__26576 = new cljs.core.IndexedSeq(G__26577__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__26576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__26662 = null;
var G__26662__0 = (function (){
var G__26620 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26620) : f.call(null,G__26620));
});
var G__26662__1 = (function (x){
var G__26621 = arg1;
var G__26622 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26621,G__26622) : f.call(null,G__26621,G__26622));
});
var G__26662__2 = (function (x,y){
var G__26623 = arg1;
var G__26624 = x;
var G__26625 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26623,G__26624,G__26625) : f.call(null,G__26623,G__26624,G__26625));
});
var G__26662__3 = (function (x,y,z){
var G__26626 = arg1;
var G__26627 = x;
var G__26628 = y;
var G__26629 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26626,G__26627,G__26628,G__26629) : f.call(null,G__26626,G__26627,G__26628,G__26629));
});
var G__26662__4 = (function() { 
var G__26663__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__26663 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26664__i = 0, G__26664__a = new Array(arguments.length -  3);
while (G__26664__i < G__26664__a.length) {G__26664__a[G__26664__i] = arguments[G__26664__i + 3]; ++G__26664__i;}
  args = new cljs.core.IndexedSeq(G__26664__a,0);
} 
return G__26663__delegate.call(this,x,y,z,args);};
G__26663.cljs$lang$maxFixedArity = 3;
G__26663.cljs$lang$applyTo = (function (arglist__26665){
var x = cljs.core.first(arglist__26665);
arglist__26665 = cljs.core.next(arglist__26665);
var y = cljs.core.first(arglist__26665);
arglist__26665 = cljs.core.next(arglist__26665);
var z = cljs.core.first(arglist__26665);
var args = cljs.core.rest(arglist__26665);
return G__26663__delegate(x,y,z,args);
});
G__26663.cljs$core$IFn$_invoke$arity$variadic = G__26663__delegate;
return G__26663;
})()
;
G__26662 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26662__0.call(this);
case 1:
return G__26662__1.call(this,x);
case 2:
return G__26662__2.call(this,x,y);
case 3:
return G__26662__3.call(this,x,y,z);
default:
var G__26666 = null;
if (arguments.length > 3) {
var G__26667__i = 0, G__26667__a = new Array(arguments.length -  3);
while (G__26667__i < G__26667__a.length) {G__26667__a[G__26667__i] = arguments[G__26667__i + 3]; ++G__26667__i;}
G__26666 = new cljs.core.IndexedSeq(G__26667__a,0);
}
return G__26662__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26666);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26662.cljs$lang$maxFixedArity = 3;
G__26662.cljs$lang$applyTo = G__26662__4.cljs$lang$applyTo;
G__26662.cljs$core$IFn$_invoke$arity$0 = G__26662__0;
G__26662.cljs$core$IFn$_invoke$arity$1 = G__26662__1;
G__26662.cljs$core$IFn$_invoke$arity$2 = G__26662__2;
G__26662.cljs$core$IFn$_invoke$arity$3 = G__26662__3;
G__26662.cljs$core$IFn$_invoke$arity$variadic = G__26662__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26662;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__26668 = null;
var G__26668__0 = (function (){
var G__26630 = arg1;
var G__26631 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26630,G__26631) : f.call(null,G__26630,G__26631));
});
var G__26668__1 = (function (x){
var G__26632 = arg1;
var G__26633 = arg2;
var G__26634 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26632,G__26633,G__26634) : f.call(null,G__26632,G__26633,G__26634));
});
var G__26668__2 = (function (x,y){
var G__26635 = arg1;
var G__26636 = arg2;
var G__26637 = x;
var G__26638 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26635,G__26636,G__26637,G__26638) : f.call(null,G__26635,G__26636,G__26637,G__26638));
});
var G__26668__3 = (function (x,y,z){
var G__26639 = arg1;
var G__26640 = arg2;
var G__26641 = x;
var G__26642 = y;
var G__26643 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26639,G__26640,G__26641,G__26642,G__26643) : f.call(null,G__26639,G__26640,G__26641,G__26642,G__26643));
});
var G__26668__4 = (function() { 
var G__26669__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__26669 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26670__i = 0, G__26670__a = new Array(arguments.length -  3);
while (G__26670__i < G__26670__a.length) {G__26670__a[G__26670__i] = arguments[G__26670__i + 3]; ++G__26670__i;}
  args = new cljs.core.IndexedSeq(G__26670__a,0);
} 
return G__26669__delegate.call(this,x,y,z,args);};
G__26669.cljs$lang$maxFixedArity = 3;
G__26669.cljs$lang$applyTo = (function (arglist__26671){
var x = cljs.core.first(arglist__26671);
arglist__26671 = cljs.core.next(arglist__26671);
var y = cljs.core.first(arglist__26671);
arglist__26671 = cljs.core.next(arglist__26671);
var z = cljs.core.first(arglist__26671);
var args = cljs.core.rest(arglist__26671);
return G__26669__delegate(x,y,z,args);
});
G__26669.cljs$core$IFn$_invoke$arity$variadic = G__26669__delegate;
return G__26669;
})()
;
G__26668 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26668__0.call(this);
case 1:
return G__26668__1.call(this,x);
case 2:
return G__26668__2.call(this,x,y);
case 3:
return G__26668__3.call(this,x,y,z);
default:
var G__26672 = null;
if (arguments.length > 3) {
var G__26673__i = 0, G__26673__a = new Array(arguments.length -  3);
while (G__26673__i < G__26673__a.length) {G__26673__a[G__26673__i] = arguments[G__26673__i + 3]; ++G__26673__i;}
G__26672 = new cljs.core.IndexedSeq(G__26673__a,0);
}
return G__26668__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26668.cljs$lang$maxFixedArity = 3;
G__26668.cljs$lang$applyTo = G__26668__4.cljs$lang$applyTo;
G__26668.cljs$core$IFn$_invoke$arity$0 = G__26668__0;
G__26668.cljs$core$IFn$_invoke$arity$1 = G__26668__1;
G__26668.cljs$core$IFn$_invoke$arity$2 = G__26668__2;
G__26668.cljs$core$IFn$_invoke$arity$3 = G__26668__3;
G__26668.cljs$core$IFn$_invoke$arity$variadic = G__26668__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26668;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__26674 = null;
var G__26674__0 = (function (){
var G__26644 = arg1;
var G__26645 = arg2;
var G__26646 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26644,G__26645,G__26646) : f.call(null,G__26644,G__26645,G__26646));
});
var G__26674__1 = (function (x){
var G__26647 = arg1;
var G__26648 = arg2;
var G__26649 = arg3;
var G__26650 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26647,G__26648,G__26649,G__26650) : f.call(null,G__26647,G__26648,G__26649,G__26650));
});
var G__26674__2 = (function (x,y){
var G__26651 = arg1;
var G__26652 = arg2;
var G__26653 = arg3;
var G__26654 = x;
var G__26655 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26651,G__26652,G__26653,G__26654,G__26655) : f.call(null,G__26651,G__26652,G__26653,G__26654,G__26655));
});
var G__26674__3 = (function (x,y,z){
var G__26656 = arg1;
var G__26657 = arg2;
var G__26658 = arg3;
var G__26659 = x;
var G__26660 = y;
var G__26661 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__26656,G__26657,G__26658,G__26659,G__26660,G__26661) : f.call(null,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661));
});
var G__26674__4 = (function() { 
var G__26675__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__26675 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26676__i = 0, G__26676__a = new Array(arguments.length -  3);
while (G__26676__i < G__26676__a.length) {G__26676__a[G__26676__i] = arguments[G__26676__i + 3]; ++G__26676__i;}
  args = new cljs.core.IndexedSeq(G__26676__a,0);
} 
return G__26675__delegate.call(this,x,y,z,args);};
G__26675.cljs$lang$maxFixedArity = 3;
G__26675.cljs$lang$applyTo = (function (arglist__26677){
var x = cljs.core.first(arglist__26677);
arglist__26677 = cljs.core.next(arglist__26677);
var y = cljs.core.first(arglist__26677);
arglist__26677 = cljs.core.next(arglist__26677);
var z = cljs.core.first(arglist__26677);
var args = cljs.core.rest(arglist__26677);
return G__26675__delegate(x,y,z,args);
});
G__26675.cljs$core$IFn$_invoke$arity$variadic = G__26675__delegate;
return G__26675;
})()
;
G__26674 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26674__0.call(this);
case 1:
return G__26674__1.call(this,x);
case 2:
return G__26674__2.call(this,x,y);
case 3:
return G__26674__3.call(this,x,y,z);
default:
var G__26678 = null;
if (arguments.length > 3) {
var G__26679__i = 0, G__26679__a = new Array(arguments.length -  3);
while (G__26679__i < G__26679__a.length) {G__26679__a[G__26679__i] = arguments[G__26679__i + 3]; ++G__26679__i;}
G__26678 = new cljs.core.IndexedSeq(G__26679__a,0);
}
return G__26674__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26678);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26674.cljs$lang$maxFixedArity = 3;
G__26674.cljs$lang$applyTo = G__26674__4.cljs$lang$applyTo;
G__26674.cljs$core$IFn$_invoke$arity$0 = G__26674__0;
G__26674.cljs$core$IFn$_invoke$arity$1 = G__26674__1;
G__26674.cljs$core$IFn$_invoke$arity$2 = G__26674__2;
G__26674.cljs$core$IFn$_invoke$arity$3 = G__26674__3;
G__26674.cljs$core$IFn$_invoke$arity$variadic = G__26674__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26674;
})()
});
var partial__5 = (function() { 
var G__26680__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__26681__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__26681 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26682__i = 0, G__26682__a = new Array(arguments.length -  0);
while (G__26682__i < G__26682__a.length) {G__26682__a[G__26682__i] = arguments[G__26682__i + 0]; ++G__26682__i;}
  args = new cljs.core.IndexedSeq(G__26682__a,0);
} 
return G__26681__delegate.call(this,args);};
G__26681.cljs$lang$maxFixedArity = 0;
G__26681.cljs$lang$applyTo = (function (arglist__26683){
var args = cljs.core.seq(arglist__26683);
return G__26681__delegate(args);
});
G__26681.cljs$core$IFn$_invoke$arity$variadic = G__26681__delegate;
return G__26681;
})()
;
};
var G__26680 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__26684__i = 0, G__26684__a = new Array(arguments.length -  4);
while (G__26684__i < G__26684__a.length) {G__26684__a[G__26684__i] = arguments[G__26684__i + 4]; ++G__26684__i;}
  more = new cljs.core.IndexedSeq(G__26684__a,0);
} 
return G__26680__delegate.call(this,f,arg1,arg2,arg3,more);};
G__26680.cljs$lang$maxFixedArity = 4;
G__26680.cljs$lang$applyTo = (function (arglist__26685){
var f = cljs.core.first(arglist__26685);
arglist__26685 = cljs.core.next(arglist__26685);
var arg1 = cljs.core.first(arglist__26685);
arglist__26685 = cljs.core.next(arglist__26685);
var arg2 = cljs.core.first(arglist__26685);
arglist__26685 = cljs.core.next(arglist__26685);
var arg3 = cljs.core.first(arglist__26685);
var more = cljs.core.rest(arglist__26685);
return G__26680__delegate(f,arg1,arg2,arg3,more);
});
G__26680.cljs$core$IFn$_invoke$arity$variadic = G__26680__delegate;
return G__26680;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__26686 = null;
if (arguments.length > 4) {
var G__26687__i = 0, G__26687__a = new Array(arguments.length -  4);
while (G__26687__i < G__26687__a.length) {G__26687__a[G__26687__i] = arguments[G__26687__i + 4]; ++G__26687__i;}
G__26686 = new cljs.core.IndexedSeq(G__26687__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__26686);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__26720 = null;
var G__26720__1 = (function (a){
var G__26704 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26704) : f.call(null,G__26704));
});
var G__26720__2 = (function (a,b){
var G__26705 = (((a == null))?x:a);
var G__26706 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26705,G__26706) : f.call(null,G__26705,G__26706));
});
var G__26720__3 = (function (a,b,c){
var G__26707 = (((a == null))?x:a);
var G__26708 = b;
var G__26709 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26707,G__26708,G__26709) : f.call(null,G__26707,G__26708,G__26709));
});
var G__26720__4 = (function() { 
var G__26721__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__26721 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26722__i = 0, G__26722__a = new Array(arguments.length -  3);
while (G__26722__i < G__26722__a.length) {G__26722__a[G__26722__i] = arguments[G__26722__i + 3]; ++G__26722__i;}
  ds = new cljs.core.IndexedSeq(G__26722__a,0);
} 
return G__26721__delegate.call(this,a,b,c,ds);};
G__26721.cljs$lang$maxFixedArity = 3;
G__26721.cljs$lang$applyTo = (function (arglist__26723){
var a = cljs.core.first(arglist__26723);
arglist__26723 = cljs.core.next(arglist__26723);
var b = cljs.core.first(arglist__26723);
arglist__26723 = cljs.core.next(arglist__26723);
var c = cljs.core.first(arglist__26723);
var ds = cljs.core.rest(arglist__26723);
return G__26721__delegate(a,b,c,ds);
});
G__26721.cljs$core$IFn$_invoke$arity$variadic = G__26721__delegate;
return G__26721;
})()
;
G__26720 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__26720__1.call(this,a);
case 2:
return G__26720__2.call(this,a,b);
case 3:
return G__26720__3.call(this,a,b,c);
default:
var G__26724 = null;
if (arguments.length > 3) {
var G__26725__i = 0, G__26725__a = new Array(arguments.length -  3);
while (G__26725__i < G__26725__a.length) {G__26725__a[G__26725__i] = arguments[G__26725__i + 3]; ++G__26725__i;}
G__26724 = new cljs.core.IndexedSeq(G__26725__a,0);
}
return G__26720__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26724);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26720.cljs$lang$maxFixedArity = 3;
G__26720.cljs$lang$applyTo = G__26720__4.cljs$lang$applyTo;
G__26720.cljs$core$IFn$_invoke$arity$1 = G__26720__1;
G__26720.cljs$core$IFn$_invoke$arity$2 = G__26720__2;
G__26720.cljs$core$IFn$_invoke$arity$3 = G__26720__3;
G__26720.cljs$core$IFn$_invoke$arity$variadic = G__26720__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26720;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__26726 = null;
var G__26726__2 = (function (a,b){
var G__26710 = (((a == null))?x:a);
var G__26711 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26710,G__26711) : f.call(null,G__26710,G__26711));
});
var G__26726__3 = (function (a,b,c){
var G__26712 = (((a == null))?x:a);
var G__26713 = (((b == null))?y:b);
var G__26714 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26712,G__26713,G__26714) : f.call(null,G__26712,G__26713,G__26714));
});
var G__26726__4 = (function() { 
var G__26727__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__26727 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26728__i = 0, G__26728__a = new Array(arguments.length -  3);
while (G__26728__i < G__26728__a.length) {G__26728__a[G__26728__i] = arguments[G__26728__i + 3]; ++G__26728__i;}
  ds = new cljs.core.IndexedSeq(G__26728__a,0);
} 
return G__26727__delegate.call(this,a,b,c,ds);};
G__26727.cljs$lang$maxFixedArity = 3;
G__26727.cljs$lang$applyTo = (function (arglist__26729){
var a = cljs.core.first(arglist__26729);
arglist__26729 = cljs.core.next(arglist__26729);
var b = cljs.core.first(arglist__26729);
arglist__26729 = cljs.core.next(arglist__26729);
var c = cljs.core.first(arglist__26729);
var ds = cljs.core.rest(arglist__26729);
return G__26727__delegate(a,b,c,ds);
});
G__26727.cljs$core$IFn$_invoke$arity$variadic = G__26727__delegate;
return G__26727;
})()
;
G__26726 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26726__2.call(this,a,b);
case 3:
return G__26726__3.call(this,a,b,c);
default:
var G__26730 = null;
if (arguments.length > 3) {
var G__26731__i = 0, G__26731__a = new Array(arguments.length -  3);
while (G__26731__i < G__26731__a.length) {G__26731__a[G__26731__i] = arguments[G__26731__i + 3]; ++G__26731__i;}
G__26730 = new cljs.core.IndexedSeq(G__26731__a,0);
}
return G__26726__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26726.cljs$lang$maxFixedArity = 3;
G__26726.cljs$lang$applyTo = G__26726__4.cljs$lang$applyTo;
G__26726.cljs$core$IFn$_invoke$arity$2 = G__26726__2;
G__26726.cljs$core$IFn$_invoke$arity$3 = G__26726__3;
G__26726.cljs$core$IFn$_invoke$arity$variadic = G__26726__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26726;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__26732 = null;
var G__26732__2 = (function (a,b){
var G__26715 = (((a == null))?x:a);
var G__26716 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26715,G__26716) : f.call(null,G__26715,G__26716));
});
var G__26732__3 = (function (a,b,c){
var G__26717 = (((a == null))?x:a);
var G__26718 = (((b == null))?y:b);
var G__26719 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26717,G__26718,G__26719) : f.call(null,G__26717,G__26718,G__26719));
});
var G__26732__4 = (function() { 
var G__26733__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__26733 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26734__i = 0, G__26734__a = new Array(arguments.length -  3);
while (G__26734__i < G__26734__a.length) {G__26734__a[G__26734__i] = arguments[G__26734__i + 3]; ++G__26734__i;}
  ds = new cljs.core.IndexedSeq(G__26734__a,0);
} 
return G__26733__delegate.call(this,a,b,c,ds);};
G__26733.cljs$lang$maxFixedArity = 3;
G__26733.cljs$lang$applyTo = (function (arglist__26735){
var a = cljs.core.first(arglist__26735);
arglist__26735 = cljs.core.next(arglist__26735);
var b = cljs.core.first(arglist__26735);
arglist__26735 = cljs.core.next(arglist__26735);
var c = cljs.core.first(arglist__26735);
var ds = cljs.core.rest(arglist__26735);
return G__26733__delegate(a,b,c,ds);
});
G__26733.cljs$core$IFn$_invoke$arity$variadic = G__26733__delegate;
return G__26733;
})()
;
G__26732 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26732__2.call(this,a,b);
case 3:
return G__26732__3.call(this,a,b,c);
default:
var G__26736 = null;
if (arguments.length > 3) {
var G__26737__i = 0, G__26737__a = new Array(arguments.length -  3);
while (G__26737__i < G__26737__a.length) {G__26737__a[G__26737__i] = arguments[G__26737__i + 3]; ++G__26737__i;}
G__26736 = new cljs.core.IndexedSeq(G__26737__a,0);
}
return G__26732__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26736);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26732.cljs$lang$maxFixedArity = 3;
G__26732.cljs$lang$applyTo = G__26732__4.cljs$lang$applyTo;
G__26732.cljs$core$IFn$_invoke$arity$2 = G__26732__2;
G__26732.cljs$core$IFn$_invoke$arity$3 = G__26732__3;
G__26732.cljs$core$IFn$_invoke$arity$variadic = G__26732__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26732;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__26768 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__26768) : cljs.core.volatile_BANG_.call(null,G__26768));
})();
return ((function (i){
return (function() {
var G__26798 = null;
var G__26798__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26798__1 = (function (result){
var G__26769 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26769) : rf.call(null,G__26769));
});
var G__26798__2 = (function (result,input){
var G__26770 = result;
var G__26771 = (function (){var G__26772 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__26773 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26772,G__26773) : f.call(null,G__26772,G__26773));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26770,G__26771) : rf.call(null,G__26770,G__26771));
});
G__26798 = function(result,input){
switch(arguments.length){
case 0:
return G__26798__0.call(this);
case 1:
return G__26798__1.call(this,result);
case 2:
return G__26798__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26798.cljs$core$IFn$_invoke$arity$0 = G__26798__0;
G__26798.cljs$core$IFn$_invoke$arity$1 = G__26798__1;
G__26798.cljs$core$IFn$_invoke$arity$2 = G__26798__2;
return G__26798;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___26799 = size;
var i_26800 = (0);
while(true){
if((i_26800 < n__15331__auto___26799)){
cljs.core.chunk_append(b,(function (){var G__26794 = (idx + i_26800);
var G__26795 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26800);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26794,G__26795) : f.call(null,G__26794,G__26795));
})());

var G__26801 = (i_26800 + (1));
i_26800 = G__26801;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26796 = idx;
var G__26797 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26796,G__26797) : f.call(null,G__26796,G__26797));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__26820 = null;
var G__26820__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26820__1 = (function (result){
var G__26814 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26814) : rf.call(null,G__26814));
});
var G__26820__2 = (function (result,input){
var v = (function (){var G__26815 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26815) : f.call(null,G__26815));
})();
if((v == null)){
return result;
} else {
var G__26816 = result;
var G__26817 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26816,G__26817) : rf.call(null,G__26816,G__26817));
}
});
G__26820 = function(result,input){
switch(arguments.length){
case 0:
return G__26820__0.call(this);
case 1:
return G__26820__1.call(this,result);
case 2:
return G__26820__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26820.cljs$core$IFn$_invoke$arity$0 = G__26820__0;
G__26820.cljs$core$IFn$_invoke$arity$1 = G__26820__1;
G__26820.cljs$core$IFn$_invoke$arity$2 = G__26820__2;
return G__26820;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___26821 = size;
var i_26822 = (0);
while(true){
if((i_26822 < n__15331__auto___26821)){
var x_26823 = (function (){var G__26818 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26822);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26818) : f.call(null,G__26818));
})();
if((x_26823 == null)){
} else {
cljs.core.chunk_append(b,x_26823);
}

var G__26824 = (i_26822 + (1));
i_26822 = G__26824;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26819 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26819) : f.call(null,G__26819));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26825 = this$__$1;
return goog.getUid(G__26825);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__26826 = cljs.core.seq(self__.watches);
var chunk__26827 = null;
var count__26828 = (0);
var i__26829 = (0);
while(true){
if((i__26829 < count__26828)){
var vec__26830 = chunk__26827.cljs$core$IIndexed$_nth$arity$2(null,i__26829);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26830,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26830,(1),null);
var G__26831_26840 = key;
var G__26832_26841 = this$__$1;
var G__26833_26842 = oldval;
var G__26834_26843 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26831_26840,G__26832_26841,G__26833_26842,G__26834_26843) : f.call(null,G__26831_26840,G__26832_26841,G__26833_26842,G__26834_26843));

var G__26844 = seq__26826;
var G__26845 = chunk__26827;
var G__26846 = count__26828;
var G__26847 = (i__26829 + (1));
seq__26826 = G__26844;
chunk__26827 = G__26845;
count__26828 = G__26846;
i__26829 = G__26847;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__26826);
if(temp__4406__auto__){
var seq__26826__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26826__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__26826__$1);
var G__26848 = cljs.core.chunk_rest(seq__26826__$1);
var G__26849 = c__15231__auto__;
var G__26850 = cljs.core.count(c__15231__auto__);
var G__26851 = (0);
seq__26826 = G__26848;
chunk__26827 = G__26849;
count__26828 = G__26850;
i__26829 = G__26851;
continue;
} else {
var vec__26835 = cljs.core.first(seq__26826__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26835,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26835,(1),null);
var G__26836_26852 = key;
var G__26837_26853 = this$__$1;
var G__26838_26854 = oldval;
var G__26839_26855 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26836_26852,G__26837_26853,G__26838_26854,G__26839_26855) : f.call(null,G__26836_26852,G__26837_26853,G__26838_26854,G__26839_26855));

var G__26856 = cljs.core.next(seq__26826__$1);
var G__26857 = null;
var G__26858 = (0);
var G__26859 = (0);
seq__26826 = G__26856;
chunk__26827 = G__26857;
count__26828 = G__26858;
i__26829 = G__26859;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__26863__delegate = function (x,p__26860){
var map__26862 = p__26860;
var map__26862__$1 = ((cljs.core.seq_QMARK_(map__26862))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__26862):map__26862);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26862__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26862__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__26863 = function (x,var_args){
var p__26860 = null;
if (arguments.length > 1) {
var G__26864__i = 0, G__26864__a = new Array(arguments.length -  1);
while (G__26864__i < G__26864__a.length) {G__26864__a[G__26864__i] = arguments[G__26864__i + 1]; ++G__26864__i;}
  p__26860 = new cljs.core.IndexedSeq(G__26864__a,0);
} 
return G__26863__delegate.call(this,x,p__26860);};
G__26863.cljs$lang$maxFixedArity = 1;
G__26863.cljs$lang$applyTo = (function (arglist__26865){
var x = cljs.core.first(arglist__26865);
var p__26860 = cljs.core.rest(arglist__26865);
return G__26863__delegate(x,p__26860);
});
G__26863.cljs$core$IFn$_invoke$arity$variadic = G__26863__delegate;
return G__26863;
})()
;
atom = function(x,var_args){
var p__26860 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__26866 = null;
if (arguments.length > 1) {
var G__26867__i = 0, G__26867__a = new Array(arguments.length -  1);
while (G__26867__i < G__26867__a.length) {G__26867__a[G__26867__i] = arguments[G__26867__i + 1]; ++G__26867__i;}
G__26866 = new cljs.core.IndexedSeq(G__26867__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__26866);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__26870 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__26870) : validate.call(null,G__26870));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__26871 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__26871) : cljs.core.pr_str.call(null,G__26871));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26878 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26878) : f.call(null,G__26878));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26879 = a.state;
var G__26880 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26879,G__26880) : f.call(null,G__26879,G__26880));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26881 = a.state;
var G__26882 = x;
var G__26883 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26881,G__26882,G__26883) : f.call(null,G__26881,G__26882,G__26883));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__26884__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__26884 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__26885__i = 0, G__26885__a = new Array(arguments.length -  4);
while (G__26885__i < G__26885__a.length) {G__26885__a[G__26885__i] = arguments[G__26885__i + 4]; ++G__26885__i;}
  more = new cljs.core.IndexedSeq(G__26885__a,0);
} 
return G__26884__delegate.call(this,a,f,x,y,more);};
G__26884.cljs$lang$maxFixedArity = 4;
G__26884.cljs$lang$applyTo = (function (arglist__26886){
var a = cljs.core.first(arglist__26886);
arglist__26886 = cljs.core.next(arglist__26886);
var f = cljs.core.first(arglist__26886);
arglist__26886 = cljs.core.next(arglist__26886);
var x = cljs.core.first(arglist__26886);
arglist__26886 = cljs.core.next(arglist__26886);
var y = cljs.core.first(arglist__26886);
var more = cljs.core.rest(arglist__26886);
return G__26884__delegate(a,f,x,y,more);
});
G__26884.cljs$core$IFn$_invoke$arity$variadic = G__26884__delegate;
return G__26884;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__26887 = null;
if (arguments.length > 4) {
var G__26888__i = 0, G__26888__a = new Array(arguments.length -  4);
while (G__26888__i < G__26888__a.length) {G__26888__a[G__26888__i] = arguments[G__26888__i + 4]; ++G__26888__i;}
G__26887 = new cljs.core.IndexedSeq(G__26888__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__26887);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__26955 = null;
var G__26955__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26955__1 = (function (result){
var G__26922 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26922) : rf.call(null,G__26922));
});
var G__26955__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__26923 = i;
var G__26924 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26923,G__26924) : f.call(null,G__26923,G__26924));
})();
if((v == null)){
return result;
} else {
var G__26925 = result;
var G__26926 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26925,G__26926) : rf.call(null,G__26925,G__26926));
}
});
G__26955 = function(result,input){
switch(arguments.length){
case 0:
return G__26955__0.call(this);
case 1:
return G__26955__1.call(this,result);
case 2:
return G__26955__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26955.cljs$core$IFn$_invoke$arity$0 = G__26955__0;
G__26955.cljs$core$IFn$_invoke$arity$1 = G__26955__1;
G__26955.cljs$core$IFn$_invoke$arity$2 = G__26955__2;
return G__26955;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___26956 = size;
var i_26957 = (0);
while(true){
if((i_26957 < n__15331__auto___26956)){
var x_26958 = (function (){var G__26951 = (idx + i_26957);
var G__26952 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26957);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26951,G__26952) : f.call(null,G__26951,G__26952));
})();
if((x_26958 == null)){
} else {
cljs.core.chunk_append(b,x_26958);
}

var G__26959 = (i_26957 + (1));
i_26957 = G__26959;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26953 = idx;
var G__26954 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26953,G__26954) : f.call(null,G__26953,G__26954));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__27173 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27173) : p.call(null,G__27173));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__27175 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27175) : p.call(null,G__27175));
})();
if(cljs.core.truth_(and__14432__auto__)){
var G__27176 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27176) : p.call(null,G__27176));
} else {
return and__14432__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__27178 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27178) : p.call(null,G__27178));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__27180 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27180) : p.call(null,G__27180));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var G__27181 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27181) : p.call(null,G__27181));
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__27350__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__27350 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27351__i = 0, G__27351__a = new Array(arguments.length -  3);
while (G__27351__i < G__27351__a.length) {G__27351__a[G__27351__i] = arguments[G__27351__i + 3]; ++G__27351__i;}
  args = new cljs.core.IndexedSeq(G__27351__a,0);
} 
return G__27350__delegate.call(this,x,y,z,args);};
G__27350.cljs$lang$maxFixedArity = 3;
G__27350.cljs$lang$applyTo = (function (arglist__27352){
var x = cljs.core.first(arglist__27352);
arglist__27352 = cljs.core.next(arglist__27352);
var y = cljs.core.first(arglist__27352);
arglist__27352 = cljs.core.next(arglist__27352);
var z = cljs.core.first(arglist__27352);
var args = cljs.core.rest(arglist__27352);
return G__27350__delegate(x,y,z,args);
});
G__27350.cljs$core$IFn$_invoke$arity$variadic = G__27350__delegate;
return G__27350;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__27353 = null;
if (arguments.length > 3) {
var G__27354__i = 0, G__27354__a = new Array(arguments.length -  3);
while (G__27354__i < G__27354__a.length) {G__27354__a[G__27354__i] = arguments[G__27354__i + 3]; ++G__27354__i;}
G__27353 = new cljs.core.IndexedSeq(G__27354__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__27213 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27213) : p1.call(null,G__27213));
})();
if(cljs.core.truth_(and__14432__auto__)){
var G__27214 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27214) : p2.call(null,G__27214));
} else {
return and__14432__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__27216 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27216) : p1.call(null,G__27216));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__27218 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27218) : p1.call(null,G__27218));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var and__14432__auto____$2 = (function (){var G__27220 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27220) : p2.call(null,G__27220));
})();
if(cljs.core.truth_(and__14432__auto____$2)){
var G__27221 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27221) : p2.call(null,G__27221));
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__27223 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27223) : p1.call(null,G__27223));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__27225 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27225) : p1.call(null,G__27225));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var and__14432__auto____$2 = (function (){var G__27227 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27227) : p1.call(null,G__27227));
})();
if(cljs.core.truth_(and__14432__auto____$2)){
var and__14432__auto____$3 = (function (){var G__27229 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27229) : p2.call(null,G__27229));
})();
if(cljs.core.truth_(and__14432__auto____$3)){
var and__14432__auto____$4 = (function (){var G__27231 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27231) : p2.call(null,G__27231));
})();
if(cljs.core.truth_(and__14432__auto____$4)){
var G__27232 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27232) : p2.call(null,G__27232));
} else {
return and__14432__auto____$4;
}
} else {
return and__14432__auto____$3;
}
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__27355__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26960_SHARP_){
var and__14432__auto__ = (function (){var G__27237 = p1__26960_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27237) : p1.call(null,G__27237));
})();
if(cljs.core.truth_(and__14432__auto__)){
var G__27238 = p1__26960_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27238) : p2.call(null,G__27238));
} else {
return and__14432__auto__;
}
}),args)));
};
var G__27355 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27356__i = 0, G__27356__a = new Array(arguments.length -  3);
while (G__27356__i < G__27356__a.length) {G__27356__a[G__27356__i] = arguments[G__27356__i + 3]; ++G__27356__i;}
  args = new cljs.core.IndexedSeq(G__27356__a,0);
} 
return G__27355__delegate.call(this,x,y,z,args);};
G__27355.cljs$lang$maxFixedArity = 3;
G__27355.cljs$lang$applyTo = (function (arglist__27357){
var x = cljs.core.first(arglist__27357);
arglist__27357 = cljs.core.next(arglist__27357);
var y = cljs.core.first(arglist__27357);
arglist__27357 = cljs.core.next(arglist__27357);
var z = cljs.core.first(arglist__27357);
var args = cljs.core.rest(arglist__27357);
return G__27355__delegate(x,y,z,args);
});
G__27355.cljs$core$IFn$_invoke$arity$variadic = G__27355__delegate;
return G__27355;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__27358 = null;
if (arguments.length > 3) {
var G__27359__i = 0, G__27359__a = new Array(arguments.length -  3);
while (G__27359__i < G__27359__a.length) {G__27359__a[G__27359__i] = arguments[G__27359__i + 3]; ++G__27359__i;}
G__27358 = new cljs.core.IndexedSeq(G__27359__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__27284 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27284) : p1.call(null,G__27284));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__27286 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27286) : p2.call(null,G__27286));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var G__27287 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27287) : p3.call(null,G__27287));
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__27289 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27289) : p1.call(null,G__27289));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__27291 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27291) : p2.call(null,G__27291));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var and__14432__auto____$2 = (function (){var G__27293 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27293) : p3.call(null,G__27293));
})();
if(cljs.core.truth_(and__14432__auto____$2)){
var and__14432__auto____$3 = (function (){var G__27295 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27295) : p1.call(null,G__27295));
})();
if(cljs.core.truth_(and__14432__auto____$3)){
var and__14432__auto____$4 = (function (){var G__27297 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27297) : p2.call(null,G__27297));
})();
if(cljs.core.truth_(and__14432__auto____$4)){
var G__27298 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27298) : p3.call(null,G__27298));
} else {
return and__14432__auto____$4;
}
} else {
return and__14432__auto____$3;
}
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__27300 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27300) : p1.call(null,G__27300));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__27302 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27302) : p2.call(null,G__27302));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var and__14432__auto____$2 = (function (){var G__27304 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27304) : p3.call(null,G__27304));
})();
if(cljs.core.truth_(and__14432__auto____$2)){
var and__14432__auto____$3 = (function (){var G__27306 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27306) : p1.call(null,G__27306));
})();
if(cljs.core.truth_(and__14432__auto____$3)){
var and__14432__auto____$4 = (function (){var G__27308 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27308) : p2.call(null,G__27308));
})();
if(cljs.core.truth_(and__14432__auto____$4)){
var and__14432__auto____$5 = (function (){var G__27310 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27310) : p3.call(null,G__27310));
})();
if(cljs.core.truth_(and__14432__auto____$5)){
var and__14432__auto____$6 = (function (){var G__27312 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27312) : p1.call(null,G__27312));
})();
if(cljs.core.truth_(and__14432__auto____$6)){
var and__14432__auto____$7 = (function (){var G__27314 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27314) : p2.call(null,G__27314));
})();
if(cljs.core.truth_(and__14432__auto____$7)){
var G__27315 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27315) : p3.call(null,G__27315));
} else {
return and__14432__auto____$7;
}
} else {
return and__14432__auto____$6;
}
} else {
return and__14432__auto____$5;
}
} else {
return and__14432__auto____$4;
}
} else {
return and__14432__auto____$3;
}
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__27360__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26961_SHARP_){
var and__14432__auto__ = (function (){var G__27322 = p1__26961_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27322) : p1.call(null,G__27322));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__27324 = p1__26961_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27324) : p2.call(null,G__27324));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var G__27325 = p1__26961_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27325) : p3.call(null,G__27325));
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
}),args)));
};
var G__27360 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27361__i = 0, G__27361__a = new Array(arguments.length -  3);
while (G__27361__i < G__27361__a.length) {G__27361__a[G__27361__i] = arguments[G__27361__i + 3]; ++G__27361__i;}
  args = new cljs.core.IndexedSeq(G__27361__a,0);
} 
return G__27360__delegate.call(this,x,y,z,args);};
G__27360.cljs$lang$maxFixedArity = 3;
G__27360.cljs$lang$applyTo = (function (arglist__27362){
var x = cljs.core.first(arglist__27362);
arglist__27362 = cljs.core.next(arglist__27362);
var y = cljs.core.first(arglist__27362);
arglist__27362 = cljs.core.next(arglist__27362);
var z = cljs.core.first(arglist__27362);
var args = cljs.core.rest(arglist__27362);
return G__27360__delegate(x,y,z,args);
});
G__27360.cljs$core$IFn$_invoke$arity$variadic = G__27360__delegate;
return G__27360;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__27363 = null;
if (arguments.length > 3) {
var G__27364__i = 0, G__27364__a = new Array(arguments.length -  3);
while (G__27364__i < G__27364__a.length) {G__27364__a[G__27364__i] = arguments[G__27364__i + 3]; ++G__27364__i;}
G__27363 = new cljs.core.IndexedSeq(G__27364__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__27365__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26962_SHARP_){
var G__27341 = x;
return (p1__26962_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26962_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27341) : p1__26962_SHARP_.call(null,G__27341));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26963_SHARP_){
var and__14432__auto__ = (function (){var G__27343 = x;
return (p1__26963_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26963_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27343) : p1__26963_SHARP_.call(null,G__27343));
})();
if(cljs.core.truth_(and__14432__auto__)){
var G__27344 = y;
return (p1__26963_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26963_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27344) : p1__26963_SHARP_.call(null,G__27344));
} else {
return and__14432__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26964_SHARP_){
var and__14432__auto__ = (function (){var G__27346 = x;
return (p1__26964_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26964_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27346) : p1__26964_SHARP_.call(null,G__27346));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__27348 = y;
return (p1__26964_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26964_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27348) : p1__26964_SHARP_.call(null,G__27348));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var G__27349 = z;
return (p1__26964_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26964_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27349) : p1__26964_SHARP_.call(null,G__27349));
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__27366__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26965_SHARP_){
return cljs.core.every_QMARK_(p1__26965_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__27366 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27367__i = 0, G__27367__a = new Array(arguments.length -  3);
while (G__27367__i < G__27367__a.length) {G__27367__a[G__27367__i] = arguments[G__27367__i + 3]; ++G__27367__i;}
  args = new cljs.core.IndexedSeq(G__27367__a,0);
} 
return G__27366__delegate.call(this,x,y,z,args);};
G__27366.cljs$lang$maxFixedArity = 3;
G__27366.cljs$lang$applyTo = (function (arglist__27368){
var x = cljs.core.first(arglist__27368);
arglist__27368 = cljs.core.next(arglist__27368);
var y = cljs.core.first(arglist__27368);
arglist__27368 = cljs.core.next(arglist__27368);
var z = cljs.core.first(arglist__27368);
var args = cljs.core.rest(arglist__27368);
return G__27366__delegate(x,y,z,args);
});
G__27366.cljs$core$IFn$_invoke$arity$variadic = G__27366__delegate;
return G__27366;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__27369 = null;
if (arguments.length > 3) {
var G__27370__i = 0, G__27370__a = new Array(arguments.length -  3);
while (G__27370__i < G__27370__a.length) {G__27370__a[G__27370__i] = arguments[G__27370__i + 3]; ++G__27370__i;}
G__27369 = new cljs.core.IndexedSeq(G__27370__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__27365 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__27371__i = 0, G__27371__a = new Array(arguments.length -  3);
while (G__27371__i < G__27371__a.length) {G__27371__a[G__27371__i] = arguments[G__27371__i + 3]; ++G__27371__i;}
  ps = new cljs.core.IndexedSeq(G__27371__a,0);
} 
return G__27365__delegate.call(this,p1,p2,p3,ps);};
G__27365.cljs$lang$maxFixedArity = 3;
G__27365.cljs$lang$applyTo = (function (arglist__27372){
var p1 = cljs.core.first(arglist__27372);
arglist__27372 = cljs.core.next(arglist__27372);
var p2 = cljs.core.first(arglist__27372);
arglist__27372 = cljs.core.next(arglist__27372);
var p3 = cljs.core.first(arglist__27372);
var ps = cljs.core.rest(arglist__27372);
return G__27365__delegate(p1,p2,p3,ps);
});
G__27365.cljs$core$IFn$_invoke$arity$variadic = G__27365__delegate;
return G__27365;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__27373 = null;
if (arguments.length > 3) {
var G__27374__i = 0, G__27374__a = new Array(arguments.length -  3);
while (G__27374__i < G__27374__a.length) {G__27374__a[G__27374__i] = arguments[G__27374__i + 3]; ++G__27374__i;}
G__27373 = new cljs.core.IndexedSeq(G__27374__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__27373);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__27580 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27580) : p.call(null,G__27580));
});
var sp1__2 = (function (x,y){
var or__14444__auto__ = (function (){var G__27582 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27582) : p.call(null,G__27582));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__27583 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27583) : p.call(null,G__27583));
}
});
var sp1__3 = (function (x,y,z){
var or__14444__auto__ = (function (){var G__27585 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27585) : p.call(null,G__27585));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__27587 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27587) : p.call(null,G__27587));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var G__27588 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27588) : p.call(null,G__27588));
}
}
});
var sp1__4 = (function() { 
var G__27749__delegate = function (x,y,z,args){
var or__14444__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__27749 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27750__i = 0, G__27750__a = new Array(arguments.length -  3);
while (G__27750__i < G__27750__a.length) {G__27750__a[G__27750__i] = arguments[G__27750__i + 3]; ++G__27750__i;}
  args = new cljs.core.IndexedSeq(G__27750__a,0);
} 
return G__27749__delegate.call(this,x,y,z,args);};
G__27749.cljs$lang$maxFixedArity = 3;
G__27749.cljs$lang$applyTo = (function (arglist__27751){
var x = cljs.core.first(arglist__27751);
arglist__27751 = cljs.core.next(arglist__27751);
var y = cljs.core.first(arglist__27751);
arglist__27751 = cljs.core.next(arglist__27751);
var z = cljs.core.first(arglist__27751);
var args = cljs.core.rest(arglist__27751);
return G__27749__delegate(x,y,z,args);
});
G__27749.cljs$core$IFn$_invoke$arity$variadic = G__27749__delegate;
return G__27749;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__27752 = null;
if (arguments.length > 3) {
var G__27753__i = 0, G__27753__a = new Array(arguments.length -  3);
while (G__27753__i < G__27753__a.length) {G__27753__a[G__27753__i] = arguments[G__27753__i + 3]; ++G__27753__i;}
G__27752 = new cljs.core.IndexedSeq(G__27753__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__14444__auto__ = (function (){var G__27620 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27620) : p1.call(null,G__27620));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__27621 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27621) : p2.call(null,G__27621));
}
});
var sp2__2 = (function (x,y){
var or__14444__auto__ = (function (){var G__27623 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27623) : p1.call(null,G__27623));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__27625 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27625) : p1.call(null,G__27625));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__27627 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27627) : p2.call(null,G__27627));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var G__27628 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27628) : p2.call(null,G__27628));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__14444__auto__ = (function (){var G__27630 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27630) : p1.call(null,G__27630));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__27632 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27632) : p1.call(null,G__27632));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__27634 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27634) : p1.call(null,G__27634));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var or__14444__auto____$3 = (function (){var G__27636 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27636) : p2.call(null,G__27636));
})();
if(cljs.core.truth_(or__14444__auto____$3)){
return or__14444__auto____$3;
} else {
var or__14444__auto____$4 = (function (){var G__27638 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27638) : p2.call(null,G__27638));
})();
if(cljs.core.truth_(or__14444__auto____$4)){
return or__14444__auto____$4;
} else {
var G__27639 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27639) : p2.call(null,G__27639));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__27754__delegate = function (x,y,z,args){
var or__14444__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.some(((function (or__14444__auto__){
return (function (p1__27375_SHARP_){
var or__14444__auto____$1 = (function (){var G__27641 = p1__27375_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27641) : p1.call(null,G__27641));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var G__27642 = p1__27375_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27642) : p2.call(null,G__27642));
}
});})(or__14444__auto__))
,args);
}
};
var G__27754 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27755__i = 0, G__27755__a = new Array(arguments.length -  3);
while (G__27755__i < G__27755__a.length) {G__27755__a[G__27755__i] = arguments[G__27755__i + 3]; ++G__27755__i;}
  args = new cljs.core.IndexedSeq(G__27755__a,0);
} 
return G__27754__delegate.call(this,x,y,z,args);};
G__27754.cljs$lang$maxFixedArity = 3;
G__27754.cljs$lang$applyTo = (function (arglist__27756){
var x = cljs.core.first(arglist__27756);
arglist__27756 = cljs.core.next(arglist__27756);
var y = cljs.core.first(arglist__27756);
arglist__27756 = cljs.core.next(arglist__27756);
var z = cljs.core.first(arglist__27756);
var args = cljs.core.rest(arglist__27756);
return G__27754__delegate(x,y,z,args);
});
G__27754.cljs$core$IFn$_invoke$arity$variadic = G__27754__delegate;
return G__27754;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__27757 = null;
if (arguments.length > 3) {
var G__27758__i = 0, G__27758__a = new Array(arguments.length -  3);
while (G__27758__i < G__27758__a.length) {G__27758__a[G__27758__i] = arguments[G__27758__i + 3]; ++G__27758__i;}
G__27757 = new cljs.core.IndexedSeq(G__27758__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__14444__auto__ = (function (){var G__27688 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27688) : p1.call(null,G__27688));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__27690 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27690) : p2.call(null,G__27690));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var G__27691 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27691) : p3.call(null,G__27691));
}
}
});
var sp3__2 = (function (x,y){
var or__14444__auto__ = (function (){var G__27693 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27693) : p1.call(null,G__27693));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__27695 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27695) : p2.call(null,G__27695));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__27697 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27697) : p3.call(null,G__27697));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var or__14444__auto____$3 = (function (){var G__27699 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27699) : p1.call(null,G__27699));
})();
if(cljs.core.truth_(or__14444__auto____$3)){
return or__14444__auto____$3;
} else {
var or__14444__auto____$4 = (function (){var G__27701 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27701) : p2.call(null,G__27701));
})();
if(cljs.core.truth_(or__14444__auto____$4)){
return or__14444__auto____$4;
} else {
var G__27702 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27702) : p3.call(null,G__27702));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__14444__auto__ = (function (){var G__27704 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27704) : p1.call(null,G__27704));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__27706 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27706) : p2.call(null,G__27706));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__27708 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27708) : p3.call(null,G__27708));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var or__14444__auto____$3 = (function (){var G__27710 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27710) : p1.call(null,G__27710));
})();
if(cljs.core.truth_(or__14444__auto____$3)){
return or__14444__auto____$3;
} else {
var or__14444__auto____$4 = (function (){var G__27712 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27712) : p2.call(null,G__27712));
})();
if(cljs.core.truth_(or__14444__auto____$4)){
return or__14444__auto____$4;
} else {
var or__14444__auto____$5 = (function (){var G__27714 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27714) : p3.call(null,G__27714));
})();
if(cljs.core.truth_(or__14444__auto____$5)){
return or__14444__auto____$5;
} else {
var or__14444__auto____$6 = (function (){var G__27716 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27716) : p1.call(null,G__27716));
})();
if(cljs.core.truth_(or__14444__auto____$6)){
return or__14444__auto____$6;
} else {
var or__14444__auto____$7 = (function (){var G__27718 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27718) : p2.call(null,G__27718));
})();
if(cljs.core.truth_(or__14444__auto____$7)){
return or__14444__auto____$7;
} else {
var G__27719 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27719) : p3.call(null,G__27719));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__27759__delegate = function (x,y,z,args){
var or__14444__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.some(((function (or__14444__auto__){
return (function (p1__27376_SHARP_){
var or__14444__auto____$1 = (function (){var G__27721 = p1__27376_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27721) : p1.call(null,G__27721));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__27723 = p1__27376_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27723) : p2.call(null,G__27723));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var G__27724 = p1__27376_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27724) : p3.call(null,G__27724));
}
}
});})(or__14444__auto__))
,args);
}
};
var G__27759 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27760__i = 0, G__27760__a = new Array(arguments.length -  3);
while (G__27760__i < G__27760__a.length) {G__27760__a[G__27760__i] = arguments[G__27760__i + 3]; ++G__27760__i;}
  args = new cljs.core.IndexedSeq(G__27760__a,0);
} 
return G__27759__delegate.call(this,x,y,z,args);};
G__27759.cljs$lang$maxFixedArity = 3;
G__27759.cljs$lang$applyTo = (function (arglist__27761){
var x = cljs.core.first(arglist__27761);
arglist__27761 = cljs.core.next(arglist__27761);
var y = cljs.core.first(arglist__27761);
arglist__27761 = cljs.core.next(arglist__27761);
var z = cljs.core.first(arglist__27761);
var args = cljs.core.rest(arglist__27761);
return G__27759__delegate(x,y,z,args);
});
G__27759.cljs$core$IFn$_invoke$arity$variadic = G__27759__delegate;
return G__27759;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__27762 = null;
if (arguments.length > 3) {
var G__27763__i = 0, G__27763__a = new Array(arguments.length -  3);
while (G__27763__i < G__27763__a.length) {G__27763__a[G__27763__i] = arguments[G__27763__i + 3]; ++G__27763__i;}
G__27762 = new cljs.core.IndexedSeq(G__27763__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27762);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__27764__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__27377_SHARP_){
var G__27740 = x;
return (p1__27377_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27377_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27740) : p1__27377_SHARP_.call(null,G__27740));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__27378_SHARP_){
var or__14444__auto__ = (function (){var G__27742 = x;
return (p1__27378_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27378_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27742) : p1__27378_SHARP_.call(null,G__27742));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__27743 = y;
return (p1__27378_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27378_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27743) : p1__27378_SHARP_.call(null,G__27743));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__27379_SHARP_){
var or__14444__auto__ = (function (){var G__27745 = x;
return (p1__27379_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27379_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27745) : p1__27379_SHARP_.call(null,G__27745));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__27747 = y;
return (p1__27379_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27379_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27747) : p1__27379_SHARP_.call(null,G__27747));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var G__27748 = z;
return (p1__27379_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27379_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27748) : p1__27379_SHARP_.call(null,G__27748));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__27765__delegate = function (x,y,z,args){
var or__14444__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.some(((function (or__14444__auto__,ps__$1){
return (function (p1__27380_SHARP_){
return cljs.core.some(p1__27380_SHARP_,args);
});})(or__14444__auto__,ps__$1))
,ps__$1);
}
};
var G__27765 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27766__i = 0, G__27766__a = new Array(arguments.length -  3);
while (G__27766__i < G__27766__a.length) {G__27766__a[G__27766__i] = arguments[G__27766__i + 3]; ++G__27766__i;}
  args = new cljs.core.IndexedSeq(G__27766__a,0);
} 
return G__27765__delegate.call(this,x,y,z,args);};
G__27765.cljs$lang$maxFixedArity = 3;
G__27765.cljs$lang$applyTo = (function (arglist__27767){
var x = cljs.core.first(arglist__27767);
arglist__27767 = cljs.core.next(arglist__27767);
var y = cljs.core.first(arglist__27767);
arglist__27767 = cljs.core.next(arglist__27767);
var z = cljs.core.first(arglist__27767);
var args = cljs.core.rest(arglist__27767);
return G__27765__delegate(x,y,z,args);
});
G__27765.cljs$core$IFn$_invoke$arity$variadic = G__27765__delegate;
return G__27765;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__27768 = null;
if (arguments.length > 3) {
var G__27769__i = 0, G__27769__a = new Array(arguments.length -  3);
while (G__27769__i < G__27769__a.length) {G__27769__a[G__27769__i] = arguments[G__27769__i + 3]; ++G__27769__i;}
G__27768 = new cljs.core.IndexedSeq(G__27769__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27768);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__27764 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__27770__i = 0, G__27770__a = new Array(arguments.length -  3);
while (G__27770__i < G__27770__a.length) {G__27770__a[G__27770__i] = arguments[G__27770__i + 3]; ++G__27770__i;}
  ps = new cljs.core.IndexedSeq(G__27770__a,0);
} 
return G__27764__delegate.call(this,p1,p2,p3,ps);};
G__27764.cljs$lang$maxFixedArity = 3;
G__27764.cljs$lang$applyTo = (function (arglist__27771){
var p1 = cljs.core.first(arglist__27771);
arglist__27771 = cljs.core.next(arglist__27771);
var p2 = cljs.core.first(arglist__27771);
arglist__27771 = cljs.core.next(arglist__27771);
var p3 = cljs.core.first(arglist__27771);
var ps = cljs.core.rest(arglist__27771);
return G__27764__delegate(p1,p2,p3,ps);
});
G__27764.cljs$core$IFn$_invoke$arity$variadic = G__27764__delegate;
return G__27764;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__27772 = null;
if (arguments.length > 3) {
var G__27773__i = 0, G__27773__a = new Array(arguments.length -  3);
while (G__27773__i < G__27773__a.length) {G__27773__a[G__27773__i] = arguments[G__27773__i + 3]; ++G__27773__i;}
G__27772 = new cljs.core.IndexedSeq(G__27773__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__27772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__27828 = null;
var G__27828__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27828__1 = (function (result){
var G__27814 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27814) : rf.call(null,G__27814));
});
var G__27828__2 = (function (result,input){
var G__27815 = result;
var G__27816 = (function (){var G__27817 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27817) : f.call(null,G__27817));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27815,G__27816) : rf.call(null,G__27815,G__27816));
});
var G__27828__3 = (function() { 
var G__27829__delegate = function (result,input,inputs){
var G__27818 = result;
var G__27819 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27818,G__27819) : rf.call(null,G__27818,G__27819));
};
var G__27829 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__27830__i = 0, G__27830__a = new Array(arguments.length -  2);
while (G__27830__i < G__27830__a.length) {G__27830__a[G__27830__i] = arguments[G__27830__i + 2]; ++G__27830__i;}
  inputs = new cljs.core.IndexedSeq(G__27830__a,0);
} 
return G__27829__delegate.call(this,result,input,inputs);};
G__27829.cljs$lang$maxFixedArity = 2;
G__27829.cljs$lang$applyTo = (function (arglist__27831){
var result = cljs.core.first(arglist__27831);
arglist__27831 = cljs.core.next(arglist__27831);
var input = cljs.core.first(arglist__27831);
var inputs = cljs.core.rest(arglist__27831);
return G__27829__delegate(result,input,inputs);
});
G__27829.cljs$core$IFn$_invoke$arity$variadic = G__27829__delegate;
return G__27829;
})()
;
G__27828 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__27828__0.call(this);
case 1:
return G__27828__1.call(this,result);
case 2:
return G__27828__2.call(this,result,input);
default:
var G__27832 = null;
if (arguments.length > 2) {
var G__27833__i = 0, G__27833__a = new Array(arguments.length -  2);
while (G__27833__i < G__27833__a.length) {G__27833__a[G__27833__i] = arguments[G__27833__i + 2]; ++G__27833__i;}
G__27832 = new cljs.core.IndexedSeq(G__27833__a,0);
}
return G__27828__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__27832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27828.cljs$lang$maxFixedArity = 2;
G__27828.cljs$lang$applyTo = G__27828__3.cljs$lang$applyTo;
G__27828.cljs$core$IFn$_invoke$arity$0 = G__27828__0;
G__27828.cljs$core$IFn$_invoke$arity$1 = G__27828__1;
G__27828.cljs$core$IFn$_invoke$arity$2 = G__27828__2;
G__27828.cljs$core$IFn$_invoke$arity$variadic = G__27828__3.cljs$core$IFn$_invoke$arity$variadic;
return G__27828;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___27834 = size;
var i_27835 = (0);
while(true){
if((i_27835 < n__15331__auto___27834)){
cljs.core.chunk_append(b,(function (){var G__27820 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27835);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27820) : f.call(null,G__27820));
})());

var G__27836 = (i_27835 + (1));
i_27835 = G__27836;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__27821 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27821) : f.call(null,G__27821));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__27822 = cljs.core.first(s1);
var G__27823 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27822,G__27823) : f.call(null,G__27822,G__27823));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__27824 = cljs.core.first(s1);
var G__27825 = cljs.core.first(s2);
var G__27826 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27824,G__27825,G__27826) : f.call(null,G__27824,G__27825,G__27826));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__27837__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__27774_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__27774_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__27837 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27838__i = 0, G__27838__a = new Array(arguments.length -  4);
while (G__27838__i < G__27838__a.length) {G__27838__a[G__27838__i] = arguments[G__27838__i + 4]; ++G__27838__i;}
  colls = new cljs.core.IndexedSeq(G__27838__a,0);
} 
return G__27837__delegate.call(this,f,c1,c2,c3,colls);};
G__27837.cljs$lang$maxFixedArity = 4;
G__27837.cljs$lang$applyTo = (function (arglist__27839){
var f = cljs.core.first(arglist__27839);
arglist__27839 = cljs.core.next(arglist__27839);
var c1 = cljs.core.first(arglist__27839);
arglist__27839 = cljs.core.next(arglist__27839);
var c2 = cljs.core.first(arglist__27839);
arglist__27839 = cljs.core.next(arglist__27839);
var c3 = cljs.core.first(arglist__27839);
var colls = cljs.core.rest(arglist__27839);
return G__27837__delegate(f,c1,c2,c3,colls);
});
G__27837.cljs$core$IFn$_invoke$arity$variadic = G__27837__delegate;
return G__27837;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__27840 = null;
if (arguments.length > 4) {
var G__27841__i = 0, G__27841__a = new Array(arguments.length -  4);
while (G__27841__i < G__27841__a.length) {G__27841__a[G__27841__i] = arguments[G__27841__i + 4]; ++G__27841__i;}
G__27840 = new cljs.core.IndexedSeq(G__27841__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27840);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27850 = null;
var G__27850__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27850__1 = (function (result){
var G__27847 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27847) : rf.call(null,G__27847));
});
var G__27850__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__27848 = result;
var G__27849 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27848,G__27849) : rf.call(null,G__27848,G__27849));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__27850 = function(result,input){
switch(arguments.length){
case 0:
return G__27850__0.call(this);
case 1:
return G__27850__1.call(this,result);
case 2:
return G__27850__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27850.cljs$core$IFn$_invoke$arity$0 = G__27850__0;
G__27850.cljs$core$IFn$_invoke$arity$1 = G__27850__1;
G__27850.cljs$core$IFn$_invoke$arity$2 = G__27850__2;
return G__27850;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27857 = null;
var G__27857__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27857__1 = (function (result){
var G__27854 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27854) : rf.call(null,G__27854));
});
var G__27857__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__27855 = result;
var G__27856 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27855,G__27856) : rf.call(null,G__27855,G__27856));
}
});
G__27857 = function(result,input){
switch(arguments.length){
case 0:
return G__27857__0.call(this);
case 1:
return G__27857__1.call(this,result);
case 2:
return G__27857__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27857.cljs$core$IFn$_invoke$arity$0 = G__27857__0;
G__27857.cljs$core$IFn$_invoke$arity$1 = G__27857__1;
G__27857.cljs$core$IFn$_invoke$arity$2 = G__27857__2;
return G__27857;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__27858 = (n__$1 - (1));
var G__27859 = cljs.core.rest(s);
n__$1 = G__27858;
coll__$1 = G__27859;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__27862 = cljs.core.next(s);
var G__27863 = cljs.core.next(lead);
s = G__27862;
lead = G__27863;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__27876 = null;
var G__27876__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27876__1 = (function (result){
var G__27870 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27870) : rf.call(null,G__27870));
});
var G__27876__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__14432__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__14432__auto__)){
var G__27871 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27871) : pred.call(null,G__27871));
} else {
return and__14432__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__27872 = result;
var G__27873 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27872,G__27873) : rf.call(null,G__27872,G__27873));
}
});
G__27876 = function(result,input){
switch(arguments.length){
case 0:
return G__27876__0.call(this);
case 1:
return G__27876__1.call(this,result);
case 2:
return G__27876__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27876.cljs$core$IFn$_invoke$arity$0 = G__27876__0;
G__27876.cljs$core$IFn$_invoke$arity$1 = G__27876__1;
G__27876.cljs$core$IFn$_invoke$arity$2 = G__27876__2;
return G__27876;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__14432__auto__ = s;
if(and__14432__auto__){
var G__27875 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__27875) : pred__$1.call(null,G__27875));
} else {
return and__14432__auto__;
}
})())){
var G__27877 = pred__$1;
var G__27878 = cljs.core.rest(s);
pred__$1 = G__27877;
coll__$1 = G__27878;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__27887 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27887) : f.call(null,G__27887));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__27890__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__27890 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__27891__i = 0, G__27891__a = new Array(arguments.length -  2);
while (G__27891__i < G__27891__a.length) {G__27891__a[G__27891__i] = arguments[G__27891__i + 2]; ++G__27891__i;}
  colls = new cljs.core.IndexedSeq(G__27891__a,0);
} 
return G__27890__delegate.call(this,c1,c2,colls);};
G__27890.cljs$lang$maxFixedArity = 2;
G__27890.cljs$lang$applyTo = (function (arglist__27892){
var c1 = cljs.core.first(arglist__27892);
arglist__27892 = cljs.core.next(arglist__27892);
var c2 = cljs.core.first(arglist__27892);
var colls = cljs.core.rest(arglist__27892);
return G__27890__delegate(c1,c2,colls);
});
G__27890.cljs$core$IFn$_invoke$arity$variadic = G__27890__delegate;
return G__27890;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__27893 = null;
if (arguments.length > 2) {
var G__27894__i = 0, G__27894__a = new Array(arguments.length -  2);
while (G__27894__i < G__27894__a.length) {G__27894__a[G__27894__i] = arguments[G__27894__i + 2]; ++G__27894__i;}
G__27893 = new cljs.core.IndexedSeq(G__27894__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__27893);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__27909 = null;
var G__27909__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27909__1 = (function (result){
var G__27902 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27902) : rf.call(null,G__27902));
});
var G__27909__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__27903 = result;
var G__27904 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27903,G__27904) : rf.call(null,G__27903,G__27904));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__27905 = sepr;
var G__27906 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27905,G__27906) : rf.call(null,G__27905,G__27906));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__27907 = result;
var G__27908 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27907,G__27908) : rf.call(null,G__27907,G__27908));
}
});
G__27909 = function(result,input){
switch(arguments.length){
case 0:
return G__27909__0.call(this);
case 1:
return G__27909__1.call(this,result);
case 2:
return G__27909__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27909.cljs$core$IFn$_invoke$arity$0 = G__27909__0;
G__27909.cljs$core$IFn$_invoke$arity$1 = G__27909__1;
G__27909.cljs$core$IFn$_invoke$arity$2 = G__27909__2;
return G__27909;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var coll__$1 = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__27918__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__27918 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__27919__i = 0, G__27919__a = new Array(arguments.length -  1);
while (G__27919__i < G__27919__a.length) {G__27919__a[G__27919__i] = arguments[G__27919__i + 1]; ++G__27919__i;}
  colls = new cljs.core.IndexedSeq(G__27919__a,0);
} 
return G__27918__delegate.call(this,f,colls);};
G__27918.cljs$lang$maxFixedArity = 1;
G__27918.cljs$lang$applyTo = (function (arglist__27920){
var f = cljs.core.first(arglist__27920);
var colls = cljs.core.rest(arglist__27920);
return G__27918__delegate(f,colls);
});
G__27918.cljs$core$IFn$_invoke$arity$variadic = G__27918__delegate;
return G__27918;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__27921 = null;
if (arguments.length > 1) {
var G__27922__i = 0, G__27922__a = new Array(arguments.length -  1);
while (G__27922__i < G__27922__a.length) {G__27922__a[G__27922__i] = arguments[G__27922__i + 1]; ++G__27922__i;}
G__27921 = new cljs.core.IndexedSeq(G__27922__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__27921);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__27941 = null;
var G__27941__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27941__1 = (function (result){
var G__27935 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27935) : rf.call(null,G__27935));
});
var G__27941__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27936 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27936) : pred.call(null,G__27936));
})())){
var G__27937 = result;
var G__27938 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27937,G__27938) : rf.call(null,G__27937,G__27938));
} else {
return result;
}
});
G__27941 = function(result,input){
switch(arguments.length){
case 0:
return G__27941__0.call(this);
case 1:
return G__27941__1.call(this,result);
case 2:
return G__27941__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27941.cljs$core$IFn$_invoke$arity$0 = G__27941__0;
G__27941.cljs$core$IFn$_invoke$arity$1 = G__27941__1;
G__27941.cljs$core$IFn$_invoke$arity$2 = G__27941__2;
return G__27941;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___27942 = size;
var i_27943 = (0);
while(true){
if((i_27943 < n__15331__auto___27942)){
if(cljs.core.truth_((function (){var G__27939 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27943);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27939) : pred.call(null,G__27939));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27943));
} else {
}

var G__27944 = (i_27943 + (1));
i_27943 = G__27944;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__27940 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27940) : pred.call(null,G__27940));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__27951 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__27951) : branch_QMARK_.call(null,G__27951));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__27952 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__27952) : children.call(null,G__27952));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__27953_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__27953_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__27956 = to;
if(G__27956){
var bit__15118__auto__ = (G__27956.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__15118__auto__) || (G__27956.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__27957 = to;
if(G__27957){
var bit__15118__auto__ = (G__27957.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__15118__auto__) || (G__27957.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__27959 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27959) : f.call(null,G__27959));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__27960__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__27960 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27961__i = 0, G__27961__a = new Array(arguments.length -  4);
while (G__27961__i < G__27961__a.length) {G__27961__a[G__27961__i] = arguments[G__27961__i + 4]; ++G__27961__i;}
  colls = new cljs.core.IndexedSeq(G__27961__a,0);
} 
return G__27960__delegate.call(this,f,c1,c2,c3,colls);};
G__27960.cljs$lang$maxFixedArity = 4;
G__27960.cljs$lang$applyTo = (function (arglist__27962){
var f = cljs.core.first(arglist__27962);
arglist__27962 = cljs.core.next(arglist__27962);
var c1 = cljs.core.first(arglist__27962);
arglist__27962 = cljs.core.next(arglist__27962);
var c2 = cljs.core.first(arglist__27962);
arglist__27962 = cljs.core.next(arglist__27962);
var c3 = cljs.core.first(arglist__27962);
var colls = cljs.core.rest(arglist__27962);
return G__27960__delegate(f,c1,c2,c3,colls);
});
G__27960.cljs$core$IFn$_invoke$arity$variadic = G__27960__delegate;
return G__27960;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__27963 = null;
if (arguments.length > 4) {
var G__27964__i = 0, G__27964__a = new Array(arguments.length -  4);
while (G__27964__i < G__27964__a.length) {G__27964__a[G__27964__i] = arguments[G__27964__i + 4]; ++G__27964__i;}
G__27963 = new cljs.core.IndexedSeq(G__27964__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27963);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__27966 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27966) : pred.call(null,G__27966));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__27981 = m__$1;
if(G__27981){
var bit__15125__auto__ = (G__27981.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__15125__auto__) || (G__27981.cljs$core$ILookup$)){
return true;
} else {
if((!G__27981.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27981);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__27982 = sentinel;
var G__27983 = m__$2;
var G__27984 = cljs.core.next(ks__$1);
sentinel = G__27982;
m__$1 = G__27983;
ks__$1 = G__27984;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__27985,v){
var vec__27990 = p__27985;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27990,(0),null);
var ks = cljs.core.nthnext(vec__27990,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__27991,f){
var vec__28029 = p__27991;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28029,(0),null);
var ks = cljs.core.nthnext(vec__28029,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28030 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28030) : f.call(null,G__28030));
})());
}
});
var update_in__4 = (function (m,p__27992,f,a){
var vec__28031 = p__27992;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28031,(0),null);
var ks = cljs.core.nthnext(vec__28031,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28032 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28033 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28032,G__28033) : f.call(null,G__28032,G__28033));
})());
}
});
var update_in__5 = (function (m,p__27993,f,a,b){
var vec__28034 = p__27993;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28034,(0),null);
var ks = cljs.core.nthnext(vec__28034,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28035 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28036 = a;
var G__28037 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28035,G__28036,G__28037) : f.call(null,G__28035,G__28036,G__28037));
})());
}
});
var update_in__6 = (function (m,p__27994,f,a,b,c){
var vec__28038 = p__27994;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28038,(0),null);
var ks = cljs.core.nthnext(vec__28038,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28039 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28040 = a;
var G__28041 = b;
var G__28042 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28039,G__28040,G__28041,G__28042) : f.call(null,G__28039,G__28040,G__28041,G__28042));
})());
}
});
var update_in__7 = (function() { 
var G__28044__delegate = function (m,p__27995,f,a,b,c,args){
var vec__28043 = p__27995;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28043,(0),null);
var ks = cljs.core.nthnext(vec__28043,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__28044 = function (m,p__27995,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__28045__i = 0, G__28045__a = new Array(arguments.length -  6);
while (G__28045__i < G__28045__a.length) {G__28045__a[G__28045__i] = arguments[G__28045__i + 6]; ++G__28045__i;}
  args = new cljs.core.IndexedSeq(G__28045__a,0);
} 
return G__28044__delegate.call(this,m,p__27995,f,a,b,c,args);};
G__28044.cljs$lang$maxFixedArity = 6;
G__28044.cljs$lang$applyTo = (function (arglist__28046){
var m = cljs.core.first(arglist__28046);
arglist__28046 = cljs.core.next(arglist__28046);
var p__27995 = cljs.core.first(arglist__28046);
arglist__28046 = cljs.core.next(arglist__28046);
var f = cljs.core.first(arglist__28046);
arglist__28046 = cljs.core.next(arglist__28046);
var a = cljs.core.first(arglist__28046);
arglist__28046 = cljs.core.next(arglist__28046);
var b = cljs.core.first(arglist__28046);
arglist__28046 = cljs.core.next(arglist__28046);
var c = cljs.core.first(arglist__28046);
var args = cljs.core.rest(arglist__28046);
return G__28044__delegate(m,p__27995,f,a,b,c,args);
});
G__28044.cljs$core$IFn$_invoke$arity$variadic = G__28044__delegate;
return G__28044;
})()
;
update_in = function(m,p__27995,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__27995,f);
case 4:
return update_in__4.call(this,m,p__27995,f,a);
case 5:
return update_in__5.call(this,m,p__27995,f,a,b);
case 6:
return update_in__6.call(this,m,p__27995,f,a,b,c);
default:
var G__28047 = null;
if (arguments.length > 6) {
var G__28048__i = 0, G__28048__a = new Array(arguments.length -  6);
while (G__28048__i < G__28048__a.length) {G__28048__a[G__28048__i] = arguments[G__28048__i + 6]; ++G__28048__i;}
G__28047 = new cljs.core.IndexedSeq(G__28048__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__27995,f,a,b,c, G__28047);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28059 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28059) : f.call(null,G__28059));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28060 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28061 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28060,G__28061) : f.call(null,G__28060,G__28061));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28062 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28063 = x;
var G__28064 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28062,G__28063,G__28064) : f.call(null,G__28062,G__28063,G__28064));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28065 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28066 = x;
var G__28067 = y;
var G__28068 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28065,G__28066,G__28067,G__28068) : f.call(null,G__28065,G__28066,G__28067,G__28068));
})());
});
var update__7 = (function() { 
var G__28069__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__28069 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__28070__i = 0, G__28070__a = new Array(arguments.length -  6);
while (G__28070__i < G__28070__a.length) {G__28070__a[G__28070__i] = arguments[G__28070__i + 6]; ++G__28070__i;}
  more = new cljs.core.IndexedSeq(G__28070__a,0);
} 
return G__28069__delegate.call(this,m,k,f,x,y,z,more);};
G__28069.cljs$lang$maxFixedArity = 6;
G__28069.cljs$lang$applyTo = (function (arglist__28071){
var m = cljs.core.first(arglist__28071);
arglist__28071 = cljs.core.next(arglist__28071);
var k = cljs.core.first(arglist__28071);
arglist__28071 = cljs.core.next(arglist__28071);
var f = cljs.core.first(arglist__28071);
arglist__28071 = cljs.core.next(arglist__28071);
var x = cljs.core.first(arglist__28071);
arglist__28071 = cljs.core.next(arglist__28071);
var y = cljs.core.first(arglist__28071);
arglist__28071 = cljs.core.next(arglist__28071);
var z = cljs.core.first(arglist__28071);
var more = cljs.core.rest(arglist__28071);
return G__28069__delegate(m,k,f,x,y,z,more);
});
G__28069.cljs$core$IFn$_invoke$arity$variadic = G__28069__delegate;
return G__28069;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__28072 = null;
if (arguments.length > 6) {
var G__28073__i = 0, G__28073__a = new Array(arguments.length -  6);
while (G__28073__i < G__28073__a.length) {G__28073__a[G__28073__i] = arguments[G__28073__i + 6]; ++G__28073__i;}
G__28072 = new cljs.core.IndexedSeq(G__28073__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__28072);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__28074 = (ll - (5));
var G__28075 = r;
ll = G__28074;
ret = G__28075;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__28080 = cljs.core.pv_aget(node,(0));
var G__28081 = (level - (5));
node = G__28080;
level = G__28081;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__28082 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__28083 = (level - (5));
node = G__28082;
level = G__28083;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__28093 = init__$2;
var G__28094 = (j + i);
var G__28095 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28093,G__28094,G__28095) : f.call(null,G__28093,G__28094,G__28095));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__28106 = (j + (1));
var G__28107 = init__$3;
j = G__28106;
init__$2 = G__28107;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28096 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28096) : cljs.core.deref.call(null,G__28096));
} else {
var G__28108 = (i + len);
var G__28109 = init__$2;
i = G__28108;
init__$1 = G__28109;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__28097 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__28097) : cljs.core.tv_editable_root.call(null,G__28097));
})(),(function (){var G__28098 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__28098) : cljs.core.tv_editable_tail.call(null,G__28098));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__28099 = init__$2;
var G__28100 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28099,G__28100) : f.call(null,G__28099,G__28100));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__28110 = (j + (1));
var G__28111 = init__$3;
j = G__28110;
init__$2 = G__28111;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28101 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28101) : cljs.core.deref.call(null,G__28101));
} else {
var G__28112 = (i + len);
var G__28113 = init__$2;
i = G__28112;
init__$1 = G__28113;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__28102 = coll__$1;
var G__28103 = cljs.core.first_array_for_longvec(coll__$1);
var G__28104 = (0);
var G__28105 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28102,G__28103,G__28104,G__28105) : cljs.core.chunked_seq.call(null,G__28102,G__28103,G__28104,G__28105));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__15331__auto___28114 = len;
var i_28115 = (0);
while(true){
if((i_28115 < n__15331__auto___28114)){
(new_tail[i_28115] = (self__.tail[i_28115]));

var G__28116 = (i_28115 + (1));
i_28115 = G__28116;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__28117 = null;
var G__28117__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__28117__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__28117 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28117__2.call(this,self__,k);
case 3:
return G__28117__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28117.cljs$core$IFn$_invoke$arity$2 = G__28117__2;
G__28117.cljs$core$IFn$_invoke$arity$3 = G__28117__3;
return G__28117;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args28092){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28092)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__28118 = (i + (1));
var G__28119 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__28118;
out = G__28119;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28120__i = 0, G__28120__a = new Array(arguments.length -  0);
while (G__28120__i < G__28120__a.length) {G__28120__a[G__28120__i] = arguments[G__28120__i + 0]; ++G__28120__i;}
  args = new cljs.core.IndexedSeq(G__28120__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__28121){
var args = cljs.core.seq(arglist__28121);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__28122 = self__.vec;
var G__28123 = self__.node;
var G__28124 = self__.i;
var G__28125 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28122,G__28123,G__28124,G__28125) : cljs.core.chunked_seq.call(null,G__28122,G__28123,G__28124,G__28125));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__28126 = self__.vec;
var G__28127 = (self__.i + self__.off);
var G__28128 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__28126,G__28127,G__28128) : cljs.core.subvec.call(null,G__28126,G__28127,G__28128));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__28129 = self__.vec;
var G__28130 = (self__.i + self__.off);
var G__28131 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__28129,G__28130,G__28131) : cljs.core.subvec.call(null,G__28129,G__28130,G__28131));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__28132 = self__.vec;
var G__28133 = self__.node;
var G__28134 = self__.i;
var G__28135 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28132,G__28133,G__28134,G__28135) : cljs.core.chunked_seq.call(null,G__28132,G__28133,G__28134,G__28135));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__28136 = self__.vec;
var G__28137 = cljs.core.unchecked_array_for(self__.vec,end);
var G__28138 = end;
var G__28139 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28136,G__28137,G__28138,G__28139) : cljs.core.chunked_seq.call(null,G__28136,G__28137,G__28138,G__28139));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__28140 = self__.vec;
var G__28141 = self__.node;
var G__28142 = self__.i;
var G__28143 = self__.off;
var G__28144 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__28140,G__28141,G__28142,G__28143,G__28144) : cljs.core.chunked_seq.call(null,G__28140,G__28141,G__28142,G__28143,G__28144));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__28145 = self__.vec;
var G__28146 = cljs.core.unchecked_array_for(self__.vec,end);
var G__28147 = end;
var G__28148 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28145,G__28146,G__28147,G__28148) : cljs.core.chunked_seq.call(null,G__28145,G__28146,G__28147,G__28148));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__28150 = self__.meta;
var G__28151 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__28152 = self__.start;
var G__28153 = (function (){var x__14761__auto__ = self__.end;
var y__14762__auto__ = (v_pos + (1));
return ((x__14761__auto__ > y__14762__auto__) ? x__14761__auto__ : y__14762__auto__);
})();
var G__28154 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__28150,G__28151,G__28152,G__28153,G__28154) : cljs.core.build_subvec.call(null,G__28150,G__28151,G__28152,G__28153,G__28154));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__28155 = self__.meta;
var G__28156 = self__.v;
var G__28157 = self__.start;
var G__28158 = (self__.end - (1));
var G__28159 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__28155,G__28156,G__28157,G__28158,G__28159) : cljs.core.build_subvec.call(null,G__28155,G__28156,G__28157,G__28158,G__28159));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__28161 = meta__$1;
var G__28162 = self__.v;
var G__28163 = self__.start;
var G__28164 = self__.end;
var G__28165 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__28161,G__28162,G__28163,G__28164,G__28165) : cljs.core.build_subvec.call(null,G__28161,G__28162,G__28163,G__28164,G__28165));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__28166 = self__.meta;
var G__28167 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__28168 = self__.start;
var G__28169 = (self__.end + (1));
var G__28170 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__28166,G__28167,G__28168,G__28169,G__28170) : cljs.core.build_subvec.call(null,G__28166,G__28167,G__28168,G__28169,G__28170));
});

cljs.core.Subvec.prototype.call = (function() {
var G__28171 = null;
var G__28171__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__28171__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__28171 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28171__2.call(this,self__,k);
case 3:
return G__28171__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28171.cljs$core$IFn$_invoke$arity$2 = G__28171__2;
G__28171.cljs$core$IFn$_invoke$arity$3 = G__28171__3;
return G__28171;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args28149){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28149)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__28172 = meta;
var G__28173 = v.v;
var G__28174 = (v.start + start);
var G__28175 = (v.start + end);
var G__28176 = __hash;
meta = G__28172;
v = G__28173;
start = G__28174;
end = G__28175;
__hash = G__28176;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj28183 = {};
return obj28183;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__28191 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__28192 = (level - (5));
node = G__28191;
level = G__28192;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__28196 = null;
var G__28196__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28196__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28196 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28196__2.call(this,self__,k);
case 3:
return G__28196__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28196.cljs$core$IFn$_invoke$arity$2 = G__28196__2;
G__28196.cljs$core$IFn$_invoke$arity$3 = G__28196__3;
return G__28196;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args28193){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28193)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__14444__auto__ = self__.front;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__14444__auto__ = self__.rear;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__28197 = (i + incr);
i = G__28197;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__28198 = (i + (1));
var G__28199 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__28198;
out = G__28199;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj28203 = {};
return obj28203;
})();
var l = ks.length;
var i_28204 = (0);
while(true){
if((i_28204 < l)){
var k_28205 = (ks[i_28204]);
(new_obj[k_28205] = (obj[k_28205]));

var G__28206 = (i_28204 + (1));
i_28204 = G__28206;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__14432__auto__ = (function (){var G__28210 = k;
return goog.isString(G__28210);
})();
if(cljs.core.truth_(and__14432__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__14432__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__28211 = init__$1;
var G__28212 = k;
var G__28213 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28211,G__28212,G__28213) : f.call(null,G__28211,G__28212,G__28213));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28214 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28214) : cljs.core.deref.call(null,G__28214));
} else {
var G__28220 = cljs.core.rest(keys__$1);
var G__28221 = init__$2;
keys__$1 = G__28220;
init__$1 = G__28221;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__14432__auto__ = (function (){var G__28216 = k;
return goog.isString(G__28216);
})();
if(cljs.core.truth_(and__14432__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__14432__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__28217 = k;
return goog.isString(G__28217);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__14432__auto__ = (function (){var G__28219 = k;
return goog.isString(G__28219);
})();
if(cljs.core.truth_(and__14432__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__14432__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__28207_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__28207_SHARP_,(self__.strobj[p1__28207_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__28222 = null;
var G__28222__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28222__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28222 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28222__2.call(this,self__,k);
case 3:
return G__28222__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28222.cljs$core$IFn$_invoke$arity$2 = G__28222__2;
G__28222.cljs$core$IFn$_invoke$arity$3 = G__28222__3;
return G__28222;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args28208){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28208)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj28224 = {};
return obj28224;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__28225 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28225,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28225,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__28226 = (i + (2));
i = G__28226;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__28227 = (i + (2));
i = G__28227;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__28228 = (i + (2));
i = G__28228;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__28229 = (i + (2));
i = G__28229;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__28230 = (i + (2));
i = G__28230;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__14444__auto__ = (function (){var G__28234 = k;
return goog.isString(G__28234);
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_28235 = (0);
while(true){
if((i_28235 < l)){
(narr[i_28235] = (arr[i_28235]));

var G__28236 = (i_28235 + (1));
i_28235 = G__28236;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28238 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28238) : cljs.core.keys.call(null,G__28238));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28239 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28239) : cljs.core.vals.call(null,G__28239));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28240 = cljs.core.seq(coll);
var chunk__28241 = null;
var count__28242 = (0);
var i__28243 = (0);
while(true){
if((i__28243 < count__28242)){
var vec__28244 = chunk__28241.cljs$core$IIndexed$_nth$arity$2(null,i__28243);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28244,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28244,(1),null);
var G__28245_28258 = v;
var G__28246_28259 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28245_28258,G__28246_28259) : f.call(null,G__28245_28258,G__28246_28259));

var G__28260 = seq__28240;
var G__28261 = chunk__28241;
var G__28262 = count__28242;
var G__28263 = (i__28243 + (1));
seq__28240 = G__28260;
chunk__28241 = G__28261;
count__28242 = G__28262;
i__28243 = G__28263;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__28240);
if(temp__4406__auto__){
var seq__28240__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28240__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__28240__$1);
var G__28264 = cljs.core.chunk_rest(seq__28240__$1);
var G__28265 = c__15231__auto__;
var G__28266 = cljs.core.count(c__15231__auto__);
var G__28267 = (0);
seq__28240 = G__28264;
chunk__28241 = G__28265;
count__28242 = G__28266;
i__28243 = G__28267;
continue;
} else {
var vec__28247 = cljs.core.first(seq__28240__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28247,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28247,(1),null);
var G__28248_28268 = v;
var G__28249_28269 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28248_28268,G__28249_28269) : f.call(null,G__28248_28268,G__28249_28269));

var G__28270 = cljs.core.next(seq__28240__$1);
var G__28271 = null;
var G__28272 = (0);
var G__28273 = (0);
seq__28240 = G__28270;
chunk__28241 = G__28271;
count__28242 = G__28272;
i__28243 = G__28273;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__28250 = init__$1;
var G__28251 = (self__.arr[i]);
var G__28252 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28250,G__28251,G__28252) : f.call(null,G__28250,G__28251,G__28252));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28253 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28253) : cljs.core.deref.call(null,G__28253));
} else {
var G__28274 = (i + (2));
var G__28275 = init__$2;
i = G__28274;
init__$1 = G__28275;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__28254 = other;
if(G__28254){
var bit__15118__auto__ = (G__28254.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__15118__auto__) || (G__28254.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__28276 = (i + (2));
i = G__28276;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj28256 = {};
return obj28256;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__28277 = (s + (2));
var G__28278 = d;
s = G__28277;
d = G__28278;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__28279 = (s + (2));
var G__28280 = (d + (2));
s = G__28279;
d = G__28280;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__28257 = cljs.core.aclone(self__.arr);
(G__28257[(idx + (1))] = v);

return G__28257;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28281 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28282 = cljs.core.next(es);
ret = G__28281;
es = G__28282;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__28283 = null;
var G__28283__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28283__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28283 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28283__2.call(this,self__,k);
case 3:
return G__28283__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28283.cljs$core$IFn$_invoke$arity$2 = G__28283__2;
G__28283.cljs$core$IFn$_invoke$arity$3 = G__28283__3;
return G__28283;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args28237){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28237)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__28284 = (i + (2));
var G__28285 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__28284;
ret = G__28285;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__28286_28294 = self__.arr;
G__28286_28294.pop();

G__28286_28294.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__28287 = self__.len;
var G__28288 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__28287,G__28288) : cljs.core.array__GT_transient_hash_map.call(null,G__28287,G__28288));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__28289 = o;
if(G__28289){
var bit__15125__auto__ = (G__28289.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__15125__auto__) || (G__28289.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__28289.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28289);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28289);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__28290 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28290) : cljs.core.key.call(null,G__28290));
})(),(function (){var G__28291 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28291) : cljs.core.val.call(null,G__28291));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__28295 = cljs.core.next(es);
var G__28296 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__28292 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28292) : cljs.core.key.call(null,G__28292));
})(),(function (){var G__28293 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28293) : cljs.core.val.call(null,G__28293));
})());
es = G__28295;
tcoll__$2 = G__28296;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__28297 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__28298 = (i + (2));
out = G__28297;
i = G__28298;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__28301 = cljs.core.aclone(arr);
(G__28301[i] = a);

return G__28301;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__28302 = cljs.core.aclone(arr);
(G__28302[i] = a);

(G__28302[j] = b);

return G__28302;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__28307 = init__$1;
var G__28308 = k;
var G__28309 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28307,G__28308,G__28309) : f.call(null,G__28307,G__28308,G__28309));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28310 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28310) : cljs.core.deref.call(null,G__28310));
} else {
var G__28311 = (i + (2));
var G__28312 = init__$2;
i = G__28311;
init__$1 = G__28312;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__28313 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__28313) : cljs.core.create_inode_seq.call(null,G__28313));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_28327 = (0);
var j_28328 = (0);
while(true){
if((i_28327 < (32))){
if((((self__.bitmap >>> i_28327) & (1)) === (0))){
var G__28329 = (i_28327 + (1));
var G__28330 = j_28328;
i_28327 = G__28329;
j_28328 = G__28330;
continue;
} else {
(nodes[i_28327] = ((!(((self__.arr[j_28328]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_28328])),(self__.arr[j_28328]),(self__.arr[(j_28328 + (1))]),added_leaf_QMARK_):(self__.arr[(j_28328 + (1))])));

var G__28331 = (i_28327 + (1));
var G__28332 = (j_28328 + (2));
i_28327 = G__28331;
j_28328 = G__28332;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__28314 = edit__$1;
var G__28315 = (shift + (5));
var G__28316 = key_or_nil;
var G__28317 = val_or_node;
var G__28318 = hash;
var G__28319 = key;
var G__28320 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320) : cljs.core.create_node.call(null,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_28333 = (0);
var j_28334 = (0);
while(true){
if((i_28333 < (32))){
if((((self__.bitmap >>> i_28333) & (1)) === (0))){
var G__28335 = (i_28333 + (1));
var G__28336 = j_28334;
i_28333 = G__28335;
j_28334 = G__28336;
continue;
} else {
(nodes[i_28333] = ((!(((self__.arr[j_28334]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_28334])),(self__.arr[j_28334]),(self__.arr[(j_28334 + (1))]),added_leaf_QMARK_):(self__.arr[(j_28334 + (1))])));

var G__28337 = (i_28333 + (1));
var G__28338 = (j_28334 + (2));
i_28333 = G__28337;
j_28334 = G__28338;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__28321 = (shift + (5));
var G__28322 = key_or_nil;
var G__28323 = val_or_node;
var G__28324 = hash;
var G__28325 = key;
var G__28326 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__28321,G__28322,G__28323,G__28324,G__28325,G__28326) : cljs.core.create_node.call(null,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__28339 = (i + (1));
var G__28340 = (j + (2));
var G__28341 = (bitmap | ((1) << i));
i = G__28339;
j = G__28340;
bitmap = G__28341;
continue;
} else {
var G__28342 = (i + (1));
var G__28343 = j;
var G__28344 = bitmap;
i = G__28342;
j = G__28343;
bitmap = G__28344;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__28345 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__28345) : cljs.core.create_array_node_seq.call(null,G__28345));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28346 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28346) : cljs.core.deref.call(null,G__28346));
} else {
var G__28347 = (i + (1));
var G__28348 = init__$2;
i = G__28347;
init__$1 = G__28348;
continue;
}
} else {
var G__28349 = (i + (1));
var G__28350 = init__$1;
i = G__28349;
init__$1 = G__28350;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__28351 = (i + (2));
i = G__28351;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__28352 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__28352) : cljs.core.create_inode_seq.call(null,G__28352));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__28353 = self__.nodes;
var G__28354 = (self__.i + (2));
var G__28355 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__28353,G__28354,G__28355) : cljs.core.create_inode_seq.call(null,G__28353,G__28354,G__28355));
} else {
var G__28356 = self__.nodes;
var G__28357 = self__.i;
var G__28358 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__28356,G__28357,G__28358) : cljs.core.create_inode_seq.call(null,G__28356,G__28357,G__28358));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4404__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4404__auto__)){
var node = temp__4404__auto__;
var temp__4404__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var node_seq = temp__4404__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__28362 = (j + (2));
j = G__28362;
continue;
}
} else {
var G__28363 = (j + (2));
j = G__28363;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__28364 = null;
var G__28365 = self__.nodes;
var G__28366 = self__.i;
var G__28367 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__28364,G__28365,G__28366,G__28367) : cljs.core.create_array_node_seq.call(null,G__28364,G__28365,G__28366,G__28367));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4404__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4404__auto__)){
var nj = temp__4404__auto__;
var temp__4404__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var ns = temp__4404__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__28372 = (j + (1));
j = G__28372;
continue;
}
} else {
var G__28373 = (j + (1));
j = G__28373;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28375 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28375) : cljs.core.keys.call(null,G__28375));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28376 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28376) : cljs.core.vals.call(null,G__28376));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28377 = cljs.core.seq(coll);
var chunk__28378 = null;
var count__28379 = (0);
var i__28380 = (0);
while(true){
if((i__28380 < count__28379)){
var vec__28381 = chunk__28378.cljs$core$IIndexed$_nth$arity$2(null,i__28380);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28381,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28381,(1),null);
var G__28382_28393 = v;
var G__28383_28394 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28382_28393,G__28383_28394) : f.call(null,G__28382_28393,G__28383_28394));

var G__28395 = seq__28377;
var G__28396 = chunk__28378;
var G__28397 = count__28379;
var G__28398 = (i__28380 + (1));
seq__28377 = G__28395;
chunk__28378 = G__28396;
count__28379 = G__28397;
i__28380 = G__28398;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__28377);
if(temp__4406__auto__){
var seq__28377__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28377__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__28377__$1);
var G__28399 = cljs.core.chunk_rest(seq__28377__$1);
var G__28400 = c__15231__auto__;
var G__28401 = cljs.core.count(c__15231__auto__);
var G__28402 = (0);
seq__28377 = G__28399;
chunk__28378 = G__28400;
count__28379 = G__28401;
i__28380 = G__28402;
continue;
} else {
var vec__28384 = cljs.core.first(seq__28377__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28384,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28384,(1),null);
var G__28385_28403 = v;
var G__28386_28404 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28385_28403,G__28386_28404) : f.call(null,G__28385_28403,G__28386_28404));

var G__28405 = cljs.core.next(seq__28377__$1);
var G__28406 = null;
var G__28407 = (0);
var G__28408 = (0);
seq__28377 = G__28405;
chunk__28378 = G__28406;
count__28379 = G__28407;
i__28380 = G__28408;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__28387 = init;
var G__28388 = null;
var G__28389 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28387,G__28388,G__28389) : f.call(null,G__28387,G__28388,G__28389));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__28390 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28390) : cljs.core.deref.call(null,G__28390));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj28392 = {};
return obj28392;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28409 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28410 = cljs.core.next(es);
ret = G__28409;
es = G__28410;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__28411 = null;
var G__28411__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28411__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28411 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28411__2.call(this,self__,k);
case 3:
return G__28411__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28411.cljs$core$IFn$_invoke$arity$2 = G__28411__2;
G__28411.cljs$core$IFn$_invoke$arity$3 = G__28411__3;
return G__28411;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args28374){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28374)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__28412 = (i + (2));
var G__28413 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__28412;
ret = G__28413;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__28414 = (i + (1));
var G__28415 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__28414;
out = G__28415;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__28416 = o;
if(G__28416){
var bit__15125__auto__ = (G__28416.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__15125__auto__) || (G__28416.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__28416.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28416);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28416);
}
})()){
return tcoll.assoc_BANG_((function (){var G__28417 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28417) : cljs.core.key.call(null,G__28417));
})(),(function (){var G__28418 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28418) : cljs.core.val.call(null,G__28418));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__28421 = cljs.core.next(es);
var G__28422 = tcoll__$1.assoc_BANG_((function (){var G__28419 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28419) : cljs.core.key.call(null,G__28419));
})(),(function (){var G__28420 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28420) : cljs.core.val.call(null,G__28420));
})());
es = G__28421;
tcoll__$1 = G__28422;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__28423 = ((ascending_QMARK_)?t.left:t.right);
var G__28424 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__28423;
stack__$1 = G__28424;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__28437 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28437) : cljs.core.deref.call(null,G__28437));
} else {
var init__$2 = (function (){var G__28438 = init__$1;
var G__28439 = node.key;
var G__28440 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28438,G__28439,G__28440) : f.call(null,G__28438,G__28439,G__28440));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28441 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28441) : cljs.core.deref.call(null,G__28441));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__28442 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28442) : cljs.core.deref.call(null,G__28442));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__28444 = null;
var G__28444__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28444__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28444 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28444__2.call(this,self__,k);
case 3:
return G__28444__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28444.cljs$core$IFn$_invoke$arity$2 = G__28444__2;
G__28444.cljs$core$IFn$_invoke$arity$3 = G__28444__3;
return G__28444;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args28443){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28443)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__28446 = null;
var G__28446__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28446__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28446 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28446__2.call(this,self__,k);
case 3:
return G__28446__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28446.cljs$core$IFn$_invoke$arity$2 = G__28446__2;
G__28446.cljs$core$IFn$_invoke$arity$3 = G__28446__3;
return G__28446;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args28445){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28445)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__28459 = k;
var G__28460 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28459,G__28460) : comp.call(null,G__28459,G__28460));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__28479 = k;
var G__28480 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28479,G__28480) : comp.call(null,G__28479,G__28480));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__28491 = k;
var G__28492 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28491,G__28492) : comp.call(null,G__28491,G__28492));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28494 = cljs.core.seq(coll);
var chunk__28495 = null;
var count__28496 = (0);
var i__28497 = (0);
while(true){
if((i__28497 < count__28496)){
var vec__28498 = chunk__28495.cljs$core$IIndexed$_nth$arity$2(null,i__28497);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28498,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28498,(1),null);
var G__28499_28511 = v;
var G__28500_28512 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28499_28511,G__28500_28512) : f.call(null,G__28499_28511,G__28500_28512));

var G__28513 = seq__28494;
var G__28514 = chunk__28495;
var G__28515 = count__28496;
var G__28516 = (i__28497 + (1));
seq__28494 = G__28513;
chunk__28495 = G__28514;
count__28496 = G__28515;
i__28497 = G__28516;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__28494);
if(temp__4406__auto__){
var seq__28494__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28494__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__28494__$1);
var G__28517 = cljs.core.chunk_rest(seq__28494__$1);
var G__28518 = c__15231__auto__;
var G__28519 = cljs.core.count(c__15231__auto__);
var G__28520 = (0);
seq__28494 = G__28517;
chunk__28495 = G__28518;
count__28496 = G__28519;
i__28497 = G__28520;
continue;
} else {
var vec__28501 = cljs.core.first(seq__28494__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28501,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28501,(1),null);
var G__28502_28521 = v;
var G__28503_28522 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28502_28521,G__28503_28522) : f.call(null,G__28502_28521,G__28503_28522));

var G__28523 = cljs.core.next(seq__28494__$1);
var G__28524 = null;
var G__28525 = (0);
var G__28526 = (0);
seq__28494 = G__28523;
chunk__28495 = G__28524;
count__28496 = G__28525;
i__28497 = G__28526;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28504 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28504) : cljs.core.keys.call(null,G__28504));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28505 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28505) : cljs.core.vals.call(null,G__28505));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__28506 = k;
var G__28507 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__28506,G__28507) : self__.comp.call(null,G__28506,G__28507));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__28527 = t.left;
t = G__28527;
continue;
} else {
var G__28528 = t.right;
t = G__28528;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28529 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28530 = cljs.core.next(es);
ret = G__28529;
es = G__28530;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__28531 = null;
var G__28531__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28531__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28531 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28531__2.call(this,self__,k);
case 3:
return G__28531__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28531.cljs$core$IFn$_invoke$arity$2 = G__28531__2;
G__28531.cljs$core$IFn$_invoke$arity$3 = G__28531__3;
return G__28531;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args28493){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28493)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__28508 = k;
var G__28509 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__28508,G__28509) : self__.comp.call(null,G__28508,G__28509));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__28532 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__28533 = t.left;
stack = G__28532;
t = G__28533;
continue;
} else {
var G__28534 = stack;
var G__28535 = t.right;
stack = G__28534;
t = G__28535;
continue;
}
} else {
if((c > (0))){
var G__28536 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__28537 = t.right;
stack = G__28536;
t = G__28537;
continue;
} else {
var G__28538 = stack;
var G__28539 = t.left;
stack = G__28538;
t = G__28539;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__28510 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28510) : cljs.core.key.call(null,G__28510));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__28540 = cljs.core.nnext(in$);
var G__28541 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28540;
out = G__28541;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28542__i = 0, G__28542__a = new Array(arguments.length -  0);
while (G__28542__i < G__28542__a.length) {G__28542__a[G__28542__i] = arguments[G__28542__i + 0]; ++G__28542__i;}
  keyvals = new cljs.core.IndexedSeq(G__28542__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__28543){
var keyvals = cljs.core.seq(arglist__28543);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28544__i = 0, G__28544__a = new Array(arguments.length -  0);
while (G__28544__i < G__28544__a.length) {G__28544__a[G__28544__i] = arguments[G__28544__i + 0]; ++G__28544__i;}
  keyvals = new cljs.core.IndexedSeq(G__28544__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__28545){
var keyvals = cljs.core.seq(arglist__28545);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj28549 = {};
return obj28549;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__28550 = cljs.core.nnext(kvs);
kvs = G__28550;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28551__i = 0, G__28551__a = new Array(arguments.length -  0);
while (G__28551__i < G__28551__a.length) {G__28551__a[G__28551__i] = arguments[G__28551__i + 0]; ++G__28551__i;}
  keyvals = new cljs.core.IndexedSeq(G__28551__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__28552){
var keyvals = cljs.core.seq(arglist__28552);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__28553 = cljs.core.nnext(in$);
var G__28554 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28553;
out = G__28554;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28555__i = 0, G__28555__a = new Array(arguments.length -  0);
while (G__28555__i < G__28555__a.length) {G__28555__a[G__28555__i] = arguments[G__28555__i + 0]; ++G__28555__i;}
  keyvals = new cljs.core.IndexedSeq(G__28555__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__28556){
var keyvals = cljs.core.seq(arglist__28556);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__28557 = cljs.core.nnext(in$);
var G__28558 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28557;
out = G__28558;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__28559__i = 0, G__28559__a = new Array(arguments.length -  1);
while (G__28559__i < G__28559__a.length) {G__28559__a[G__28559__i] = arguments[G__28559__i + 1]; ++G__28559__i;}
  keyvals = new cljs.core.IndexedSeq(G__28559__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__28560){
var comparator = cljs.core.first(arglist__28560);
var keyvals = cljs.core.rest(arglist__28560);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28561 = self__.mseq;
if(G__28561){
var bit__15125__auto__ = (G__28561.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15125__auto__) || (G__28561.cljs$core$INext$)){
return true;
} else {
if((!G__28561.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28561);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28561);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28562 = self__.mseq;
if(G__28562){
var bit__15125__auto__ = (G__28562.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15125__auto__) || (G__28562.cljs$core$INext$)){
return true;
} else {
if((!G__28562.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28562);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28562);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28563 = self__.mseq;
if(G__28563){
var bit__15125__auto__ = (G__28563.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15125__auto__) || (G__28563.cljs$core$INext$)){
return true;
} else {
if((!G__28563.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28563);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28563);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28564 = self__.mseq;
if(G__28564){
var bit__15125__auto__ = (G__28564.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15125__auto__) || (G__28564.cljs$core$INext$)){
return true;
} else {
if((!G__28564.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28564);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28564);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__28565_SHARP_,p2__28566_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__14444__auto__ = p1__28565_SHARP_;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__28566_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__28567__i = 0, G__28567__a = new Array(arguments.length -  0);
while (G__28567__i < G__28567__a.length) {G__28567__a[G__28567__i] = arguments[G__28567__i + 0]; ++G__28567__i;}
  maps = new cljs.core.IndexedSeq(G__28567__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__28568){
var maps = cljs.core.seq(arglist__28568);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28571 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28572 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28571,G__28572) : f.call(null,G__28571,G__28572));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__14444__auto__ = m1;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__28573__i = 0, G__28573__a = new Array(arguments.length -  1);
while (G__28573__i < G__28573__a.length) {G__28573__a[G__28573__i] = arguments[G__28573__i + 1]; ++G__28573__i;}
  maps = new cljs.core.IndexedSeq(G__28573__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__28574){
var f = cljs.core.first(arglist__28574);
var maps = cljs.core.rest(arglist__28574);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__28575 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__28576 = cljs.core.next(keys);
ret = G__28575;
keys = G__28576;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28579 = cljs.core.seq(coll);
var chunk__28580 = null;
var count__28581 = (0);
var i__28582 = (0);
while(true){
if((i__28582 < count__28581)){
var vec__28583 = chunk__28580.cljs$core$IIndexed$_nth$arity$2(null,i__28582);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28583,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28583,(1),null);
var G__28584_28589 = v;
var G__28585_28590 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28584_28589,G__28585_28590) : f.call(null,G__28584_28589,G__28585_28590));

var G__28591 = seq__28579;
var G__28592 = chunk__28580;
var G__28593 = count__28581;
var G__28594 = (i__28582 + (1));
seq__28579 = G__28591;
chunk__28580 = G__28592;
count__28581 = G__28593;
i__28582 = G__28594;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__28579);
if(temp__4406__auto__){
var seq__28579__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28579__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__28579__$1);
var G__28595 = cljs.core.chunk_rest(seq__28579__$1);
var G__28596 = c__15231__auto__;
var G__28597 = cljs.core.count(c__15231__auto__);
var G__28598 = (0);
seq__28579 = G__28595;
chunk__28580 = G__28596;
count__28581 = G__28597;
i__28582 = G__28598;
continue;
} else {
var vec__28586 = cljs.core.first(seq__28579__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28586,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28586,(1),null);
var G__28587_28599 = v;
var G__28588_28600 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28587_28599,G__28588_28600) : f.call(null,G__28587_28599,G__28588_28600));

var G__28601 = cljs.core.next(seq__28579__$1);
var G__28602 = null;
var G__28603 = (0);
var G__28604 = (0);
seq__28579 = G__28601;
chunk__28580 = G__28602;
count__28581 = G__28603;
i__28582 = G__28604;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__28577_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__28577_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__28605 = null;
var G__28605__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28605__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28605 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28605__2.call(this,self__,k);
case 3:
return G__28605__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28605.cljs$core$IFn$_invoke$arity$2 = G__28605__2;
G__28605.cljs$core$IFn$_invoke$arity$3 = G__28605__3;
return G__28605;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args28578){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28578)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__28606 = (i + (1));
var G__28607 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__28606;
out = G__28607;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__28608 = (i + (1));
var G__28609 = cljs.core._conj_BANG_(out,(items[i]));
i = G__28608;
out = G__28609;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__28611 = null;
var G__28611__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__28611__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__28611 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28611__2.call(this,self__,k);
case 3:
return G__28611__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28611.cljs$core$IFn$_invoke$arity$2 = G__28611__2;
G__28611.cljs$core$IFn$_invoke$arity$3 = G__28611__3;
return G__28611;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args28610){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28610)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28614 = cljs.core.seq(coll);
var chunk__28615 = null;
var count__28616 = (0);
var i__28617 = (0);
while(true){
if((i__28617 < count__28616)){
var vec__28618 = chunk__28615.cljs$core$IIndexed$_nth$arity$2(null,i__28617);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28618,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28618,(1),null);
var G__28619_28624 = v;
var G__28620_28625 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28619_28624,G__28620_28625) : f.call(null,G__28619_28624,G__28620_28625));

var G__28626 = seq__28614;
var G__28627 = chunk__28615;
var G__28628 = count__28616;
var G__28629 = (i__28617 + (1));
seq__28614 = G__28626;
chunk__28615 = G__28627;
count__28616 = G__28628;
i__28617 = G__28629;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__28614);
if(temp__4406__auto__){
var seq__28614__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28614__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__28614__$1);
var G__28630 = cljs.core.chunk_rest(seq__28614__$1);
var G__28631 = c__15231__auto__;
var G__28632 = cljs.core.count(c__15231__auto__);
var G__28633 = (0);
seq__28614 = G__28630;
chunk__28615 = G__28631;
count__28616 = G__28632;
i__28617 = G__28633;
continue;
} else {
var vec__28621 = cljs.core.first(seq__28614__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28621,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28621,(1),null);
var G__28622_28634 = v;
var G__28623_28635 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28622_28634,G__28623_28635) : f.call(null,G__28622_28634,G__28623_28635));

var G__28636 = cljs.core.next(seq__28614__$1);
var G__28637 = null;
var G__28638 = (0);
var G__28639 = (0);
seq__28614 = G__28636;
chunk__28615 = G__28637;
count__28616 = G__28638;
i__28617 = G__28639;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__28612_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__28612_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__28640 = null;
var G__28640__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28640__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28640 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28640__2.call(this,self__,k);
case 3:
return G__28640__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28640.cljs$core$IFn$_invoke$arity$2 = G__28640__2;
G__28640.cljs$core$IFn$_invoke$arity$3 = G__28640__3;
return G__28640;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args28613){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28613)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__15325__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__15325__auto__.length)){
var G__28641 = (i + (1));
var G__28642 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__28641;
res = G__28642;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__28643 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__28644 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__28643;
out = G__28644;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__28645__delegate = function (keys){
return cljs.core.set(keys);
};
var G__28645 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28646__i = 0, G__28646__a = new Array(arguments.length -  0);
while (G__28646__i < G__28646__a.length) {G__28646__a[G__28646__i] = arguments[G__28646__i + 0]; ++G__28646__i;}
  keys = new cljs.core.IndexedSeq(G__28646__a,0);
} 
return G__28645__delegate.call(this,keys);};
G__28645.cljs$lang$maxFixedArity = 0;
G__28645.cljs$lang$applyTo = (function (arglist__28647){
var keys = cljs.core.seq(arglist__28647);
return G__28645__delegate(keys);
});
G__28645.cljs$core$IFn$_invoke$arity$variadic = G__28645__delegate;
return G__28645;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__28648 = null;
if (arguments.length > 0) {
var G__28649__i = 0, G__28649__a = new Array(arguments.length -  0);
while (G__28649__i < G__28649__a.length) {G__28649__a[G__28649__i] = arguments[G__28649__i + 0]; ++G__28649__i;}
G__28648 = new cljs.core.IndexedSeq(G__28649__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__28648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28650__i = 0, G__28650__a = new Array(arguments.length -  0);
while (G__28650__i < G__28650__a.length) {G__28650__a[G__28650__i] = arguments[G__28650__i + 0]; ++G__28650__i;}
  keys = new cljs.core.IndexedSeq(G__28650__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__28651){
var keys = cljs.core.seq(arglist__28651);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__28652__i = 0, G__28652__a = new Array(arguments.length -  1);
while (G__28652__i < G__28652__a.length) {G__28652__a[G__28652__i] = arguments[G__28652__i + 1]; ++G__28652__i;}
  keys = new cljs.core.IndexedSeq(G__28652__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__28653){
var comparator = cljs.core.first(arglist__28653);
var keys = cljs.core.rest(arglist__28653);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__28654_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__28654_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.val(e);
} else {
return p1__28654_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4404__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__28655_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__28655_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.second(e);
} else {
return p1__28655_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__28676 = null;
var G__28676__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28676__1 = (function (result){
var G__28666 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28666) : rf.call(null,G__28666));
});
var G__28676__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__28667 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28667) : cljs.core.deref.call(null,G__28667));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__28668 = result;
var G__28669 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28668,G__28669) : rf.call(null,G__28668,G__28669));
}
});
G__28676 = function(result,input){
switch(arguments.length){
case 0:
return G__28676__0.call(this);
case 1:
return G__28676__1.call(this,result);
case 2:
return G__28676__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28676.cljs$core$IFn$_invoke$arity$0 = G__28676__0;
G__28676.cljs$core$IFn$_invoke$arity$1 = G__28676__1;
G__28676.cljs$core$IFn$_invoke$arity$2 = G__28676__2;
return G__28676;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__28674,seen__$1){
while(true){
var vec__28675 = p__28674;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28675,(0),null);
var xs__$1 = vec__28675;
var temp__4406__auto__ = cljs.core.seq(xs__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__28677 = cljs.core.rest(s);
var G__28678 = seen__$1;
p__28674 = G__28677;
seen__$1 = G__28678;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__28679 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__28680 = cljs.core.next(s__$1);
ret = G__28679;
s__$1 = G__28680;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__28682 = x;
if(G__28682){
var bit__15118__auto__ = (G__28682.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__15118__auto__) || (G__28682.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__28683 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__28684 = cljs.core.next(ks);
var G__28685 = cljs.core.next(vs);
map = G__28683;
ks = G__28684;
vs = G__28685;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__28696 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28696) : k.call(null,G__28696));
})() > (function (){var G__28697 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28697) : k.call(null,G__28697));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__28698__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28686_SHARP_,p2__28687_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__28686_SHARP_,p2__28687_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28698 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28699__i = 0, G__28699__a = new Array(arguments.length -  3);
while (G__28699__i < G__28699__a.length) {G__28699__a[G__28699__i] = arguments[G__28699__i + 3]; ++G__28699__i;}
  more = new cljs.core.IndexedSeq(G__28699__a,0);
} 
return G__28698__delegate.call(this,k,x,y,more);};
G__28698.cljs$lang$maxFixedArity = 3;
G__28698.cljs$lang$applyTo = (function (arglist__28700){
var k = cljs.core.first(arglist__28700);
arglist__28700 = cljs.core.next(arglist__28700);
var x = cljs.core.first(arglist__28700);
arglist__28700 = cljs.core.next(arglist__28700);
var y = cljs.core.first(arglist__28700);
var more = cljs.core.rest(arglist__28700);
return G__28698__delegate(k,x,y,more);
});
G__28698.cljs$core$IFn$_invoke$arity$variadic = G__28698__delegate;
return G__28698;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__28701 = null;
if (arguments.length > 3) {
var G__28702__i = 0, G__28702__a = new Array(arguments.length -  3);
while (G__28702__i < G__28702__a.length) {G__28702__a[G__28702__i] = arguments[G__28702__i + 3]; ++G__28702__i;}
G__28701 = new cljs.core.IndexedSeq(G__28702__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__28713 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28713) : k.call(null,G__28713));
})() < (function (){var G__28714 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28714) : k.call(null,G__28714));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__28715__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28703_SHARP_,p2__28704_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__28703_SHARP_,p2__28704_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28715 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28716__i = 0, G__28716__a = new Array(arguments.length -  3);
while (G__28716__i < G__28716__a.length) {G__28716__a[G__28716__i] = arguments[G__28716__i + 3]; ++G__28716__i;}
  more = new cljs.core.IndexedSeq(G__28716__a,0);
} 
return G__28715__delegate.call(this,k,x,y,more);};
G__28715.cljs$lang$maxFixedArity = 3;
G__28715.cljs$lang$applyTo = (function (arglist__28717){
var k = cljs.core.first(arglist__28717);
arglist__28717 = cljs.core.next(arglist__28717);
var x = cljs.core.first(arglist__28717);
arglist__28717 = cljs.core.next(arglist__28717);
var y = cljs.core.first(arglist__28717);
var more = cljs.core.rest(arglist__28717);
return G__28715__delegate(k,x,y,more);
});
G__28715.cljs$core$IFn$_invoke$arity$variadic = G__28715__delegate;
return G__28715;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__28718 = null;
if (arguments.length > 3) {
var G__28719__i = 0, G__28719__a = new Array(arguments.length -  3);
while (G__28719__i < G__28719__a.length) {G__28719__a[G__28719__i] = arguments[G__28719__i + 3]; ++G__28719__i;}
G__28718 = new cljs.core.IndexedSeq(G__28719__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__28736 = null;
var G__28736__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28736__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28731 = result;
var G__28732 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28731,G__28732) : rf.call(null,G__28731,G__28732));
})());
})());
var G__28733 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28733) : rf.call(null,G__28733));
});
var G__28736__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__28734 = result;
var G__28735 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28734,G__28735) : rf.call(null,G__28734,G__28735));
} else {
return result;
}
});
G__28736 = function(result,input){
switch(arguments.length){
case 0:
return G__28736__0.call(this);
case 1:
return G__28736__1.call(this,result);
case 2:
return G__28736__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28736.cljs$core$IFn$_invoke$arity$0 = G__28736__0;
G__28736.cljs$core$IFn$_invoke$arity$1 = G__28736__1;
G__28736.cljs$core$IFn$_invoke$arity$2 = G__28736__2;
return G__28736;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__28749 = null;
var G__28749__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28749__1 = (function (result){
var G__28744 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28744) : rf.call(null,G__28744));
});
var G__28749__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__28745 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28745) : pred.call(null,G__28745));
})())){
var G__28746 = result;
var G__28747 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28746,G__28747) : rf.call(null,G__28746,G__28747));
} else {
return cljs.core.reduced(result);
}
});
G__28749 = function(result,input){
switch(arguments.length){
case 0:
return G__28749__0.call(this);
case 1:
return G__28749__1.call(this,result);
case 2:
return G__28749__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28749.cljs$core$IFn$_invoke$arity$0 = G__28749__0;
G__28749.cljs$core$IFn$_invoke$arity$1 = G__28749__1;
G__28749.cljs$core$IFn$_invoke$arity$2 = G__28749__2;
return G__28749;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.truth_((function (){var G__28748 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28748) : pred.call(null,G__28748));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__28754 = (function (){var G__28756 = cljs.core._entry_key(sc,e);
var G__28757 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28756,G__28757) : comp.call(null,G__28756,G__28757));
})();
var G__28755 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__28754,G__28755) : test.call(null,G__28754,G__28755));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__28761 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28761,(0),null);
var s = vec__28761;
if(cljs.core.truth_((function (){var G__28762 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__28762) : include.call(null,G__28762));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__28763 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28763,(0),null);
var s = vec__28763;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__28767 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28767,(0),null);
var s = vec__28767;
if(cljs.core.truth_((function (){var G__28768 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__28768) : include.call(null,G__28768));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__28769 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28769,(0),null);
var s = vec__28769;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__28770 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__28770) : Math.ceil.call(null,G__28770));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__28771 = ret;
var G__28772 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28771,G__28772) : f.call(null,G__28771,G__28772));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__28773 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28773) : cljs.core.deref.call(null,G__28773));
} else {
var G__28774 = (i + self__.step);
var G__28775 = ret__$1;
i = G__28774;
ret = G__28775;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__28793 = null;
var G__28793__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28793__1 = (function (result){
var G__28790 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28790) : rf.call(null,G__28790));
});
var G__28793__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__28791 = result;
var G__28792 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28791,G__28792) : rf.call(null,G__28791,G__28792));
} else {
return result;
}
});
G__28793 = function(result,input){
switch(arguments.length){
case 0:
return G__28793__0.call(this);
case 1:
return G__28793__1.call(this,result);
case 2:
return G__28793__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28793.cljs$core$IFn$_invoke$arity$0 = G__28793__0;
G__28793.cljs$core$IFn$_invoke$arity$1 = G__28793__1;
G__28793.cljs$core$IFn$_invoke$arity$2 = G__28793__2;
return G__28793;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__28815 = null;
var G__28815__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28815__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28806 = result;
var G__28807 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28806,G__28807) : rf.call(null,G__28806,G__28807));
})());
})());
var G__28808 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28808) : rf.call(null,G__28808));
});
var G__28815__2 = (function (result,input){
var pval = (function (){var G__28809 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28809) : cljs.core.deref.call(null,G__28809));
})();
var val = (function (){var G__28810 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28810) : f.call(null,G__28810));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__28811 = result;
var G__28812 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28811,G__28812) : rf.call(null,G__28811,G__28812));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__28815 = function(result,input){
switch(arguments.length){
case 0:
return G__28815__0.call(this);
case 1:
return G__28815__1.call(this,result);
case 2:
return G__28815__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28815.cljs$core$IFn$_invoke$arity$0 = G__28815__0;
G__28815.cljs$core$IFn$_invoke$arity$1 = G__28815__1;
G__28815.cljs$core$IFn$_invoke$arity$2 = G__28815__2;
return G__28815;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__28813 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28813) : f.call(null,G__28813));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4406__auto__){
return (function (p1__28794_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__28814 = p1__28794_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28814) : f.call(null,G__28814));
})());
});})(fst,fv,s,temp__4406__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__28824 = init;
var G__28825 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28824,G__28825) : f.call(null,G__28824,G__28825));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__28920 = null;
var G__28920__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__28920__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28878 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28878) : f.call(null,G__28878));
})()],null));
});
var G__28920__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28879 = x;
var G__28880 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28879,G__28880) : f.call(null,G__28879,G__28880));
})()],null));
});
var G__28920__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28881 = x;
var G__28882 = y;
var G__28883 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28881,G__28882,G__28883) : f.call(null,G__28881,G__28882,G__28883));
})()],null));
});
var G__28920__4 = (function() { 
var G__28921__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__28921 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28922__i = 0, G__28922__a = new Array(arguments.length -  3);
while (G__28922__i < G__28922__a.length) {G__28922__a[G__28922__i] = arguments[G__28922__i + 3]; ++G__28922__i;}
  args = new cljs.core.IndexedSeq(G__28922__a,0);
} 
return G__28921__delegate.call(this,x,y,z,args);};
G__28921.cljs$lang$maxFixedArity = 3;
G__28921.cljs$lang$applyTo = (function (arglist__28923){
var x = cljs.core.first(arglist__28923);
arglist__28923 = cljs.core.next(arglist__28923);
var y = cljs.core.first(arglist__28923);
arglist__28923 = cljs.core.next(arglist__28923);
var z = cljs.core.first(arglist__28923);
var args = cljs.core.rest(arglist__28923);
return G__28921__delegate(x,y,z,args);
});
G__28921.cljs$core$IFn$_invoke$arity$variadic = G__28921__delegate;
return G__28921;
})()
;
G__28920 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28920__0.call(this);
case 1:
return G__28920__1.call(this,x);
case 2:
return G__28920__2.call(this,x,y);
case 3:
return G__28920__3.call(this,x,y,z);
default:
var G__28924 = null;
if (arguments.length > 3) {
var G__28925__i = 0, G__28925__a = new Array(arguments.length -  3);
while (G__28925__i < G__28925__a.length) {G__28925__a[G__28925__i] = arguments[G__28925__i + 3]; ++G__28925__i;}
G__28924 = new cljs.core.IndexedSeq(G__28925__a,0);
}
return G__28920__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28920.cljs$lang$maxFixedArity = 3;
G__28920.cljs$lang$applyTo = G__28920__4.cljs$lang$applyTo;
G__28920.cljs$core$IFn$_invoke$arity$0 = G__28920__0;
G__28920.cljs$core$IFn$_invoke$arity$1 = G__28920__1;
G__28920.cljs$core$IFn$_invoke$arity$2 = G__28920__2;
G__28920.cljs$core$IFn$_invoke$arity$3 = G__28920__3;
G__28920.cljs$core$IFn$_invoke$arity$variadic = G__28920__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28920;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__28926 = null;
var G__28926__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__28926__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28884 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28884) : f.call(null,G__28884));
})(),(function (){var G__28885 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28885) : g.call(null,G__28885));
})()],null));
});
var G__28926__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28886 = x;
var G__28887 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28886,G__28887) : f.call(null,G__28886,G__28887));
})(),(function (){var G__28888 = x;
var G__28889 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28888,G__28889) : g.call(null,G__28888,G__28889));
})()],null));
});
var G__28926__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28890 = x;
var G__28891 = y;
var G__28892 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28890,G__28891,G__28892) : f.call(null,G__28890,G__28891,G__28892));
})(),(function (){var G__28893 = x;
var G__28894 = y;
var G__28895 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28893,G__28894,G__28895) : g.call(null,G__28893,G__28894,G__28895));
})()],null));
});
var G__28926__4 = (function() { 
var G__28927__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__28927 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28928__i = 0, G__28928__a = new Array(arguments.length -  3);
while (G__28928__i < G__28928__a.length) {G__28928__a[G__28928__i] = arguments[G__28928__i + 3]; ++G__28928__i;}
  args = new cljs.core.IndexedSeq(G__28928__a,0);
} 
return G__28927__delegate.call(this,x,y,z,args);};
G__28927.cljs$lang$maxFixedArity = 3;
G__28927.cljs$lang$applyTo = (function (arglist__28929){
var x = cljs.core.first(arglist__28929);
arglist__28929 = cljs.core.next(arglist__28929);
var y = cljs.core.first(arglist__28929);
arglist__28929 = cljs.core.next(arglist__28929);
var z = cljs.core.first(arglist__28929);
var args = cljs.core.rest(arglist__28929);
return G__28927__delegate(x,y,z,args);
});
G__28927.cljs$core$IFn$_invoke$arity$variadic = G__28927__delegate;
return G__28927;
})()
;
G__28926 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28926__0.call(this);
case 1:
return G__28926__1.call(this,x);
case 2:
return G__28926__2.call(this,x,y);
case 3:
return G__28926__3.call(this,x,y,z);
default:
var G__28930 = null;
if (arguments.length > 3) {
var G__28931__i = 0, G__28931__a = new Array(arguments.length -  3);
while (G__28931__i < G__28931__a.length) {G__28931__a[G__28931__i] = arguments[G__28931__i + 3]; ++G__28931__i;}
G__28930 = new cljs.core.IndexedSeq(G__28931__a,0);
}
return G__28926__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28926.cljs$lang$maxFixedArity = 3;
G__28926.cljs$lang$applyTo = G__28926__4.cljs$lang$applyTo;
G__28926.cljs$core$IFn$_invoke$arity$0 = G__28926__0;
G__28926.cljs$core$IFn$_invoke$arity$1 = G__28926__1;
G__28926.cljs$core$IFn$_invoke$arity$2 = G__28926__2;
G__28926.cljs$core$IFn$_invoke$arity$3 = G__28926__3;
G__28926.cljs$core$IFn$_invoke$arity$variadic = G__28926__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28926;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__28932 = null;
var G__28932__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__28932__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28896 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28896) : f.call(null,G__28896));
})(),(function (){var G__28897 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28897) : g.call(null,G__28897));
})(),(function (){var G__28898 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__28898) : h.call(null,G__28898));
})()],null));
});
var G__28932__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28899 = x;
var G__28900 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28899,G__28900) : f.call(null,G__28899,G__28900));
})(),(function (){var G__28901 = x;
var G__28902 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28901,G__28902) : g.call(null,G__28901,G__28902));
})(),(function (){var G__28903 = x;
var G__28904 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__28903,G__28904) : h.call(null,G__28903,G__28904));
})()],null));
});
var G__28932__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28905 = x;
var G__28906 = y;
var G__28907 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28905,G__28906,G__28907) : f.call(null,G__28905,G__28906,G__28907));
})(),(function (){var G__28908 = x;
var G__28909 = y;
var G__28910 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28908,G__28909,G__28910) : g.call(null,G__28908,G__28909,G__28910));
})(),(function (){var G__28911 = x;
var G__28912 = y;
var G__28913 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__28911,G__28912,G__28913) : h.call(null,G__28911,G__28912,G__28913));
})()],null));
});
var G__28932__4 = (function() { 
var G__28933__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__28933 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28934__i = 0, G__28934__a = new Array(arguments.length -  3);
while (G__28934__i < G__28934__a.length) {G__28934__a[G__28934__i] = arguments[G__28934__i + 3]; ++G__28934__i;}
  args = new cljs.core.IndexedSeq(G__28934__a,0);
} 
return G__28933__delegate.call(this,x,y,z,args);};
G__28933.cljs$lang$maxFixedArity = 3;
G__28933.cljs$lang$applyTo = (function (arglist__28935){
var x = cljs.core.first(arglist__28935);
arglist__28935 = cljs.core.next(arglist__28935);
var y = cljs.core.first(arglist__28935);
arglist__28935 = cljs.core.next(arglist__28935);
var z = cljs.core.first(arglist__28935);
var args = cljs.core.rest(arglist__28935);
return G__28933__delegate(x,y,z,args);
});
G__28933.cljs$core$IFn$_invoke$arity$variadic = G__28933__delegate;
return G__28933;
})()
;
G__28932 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28932__0.call(this);
case 1:
return G__28932__1.call(this,x);
case 2:
return G__28932__2.call(this,x,y);
case 3:
return G__28932__3.call(this,x,y,z);
default:
var G__28936 = null;
if (arguments.length > 3) {
var G__28937__i = 0, G__28937__a = new Array(arguments.length -  3);
while (G__28937__i < G__28937__a.length) {G__28937__a[G__28937__i] = arguments[G__28937__i + 3]; ++G__28937__i;}
G__28936 = new cljs.core.IndexedSeq(G__28937__a,0);
}
return G__28932__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28932.cljs$lang$maxFixedArity = 3;
G__28932.cljs$lang$applyTo = G__28932__4.cljs$lang$applyTo;
G__28932.cljs$core$IFn$_invoke$arity$0 = G__28932__0;
G__28932.cljs$core$IFn$_invoke$arity$1 = G__28932__1;
G__28932.cljs$core$IFn$_invoke$arity$2 = G__28932__2;
G__28932.cljs$core$IFn$_invoke$arity$3 = G__28932__3;
G__28932.cljs$core$IFn$_invoke$arity$variadic = G__28932__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28932;
})()
});
var juxt__4 = (function() { 
var G__28938__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__28939 = null;
var G__28939__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28826_SHARP_,p2__28827_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28826_SHARP_,(function (){return (p2__28827_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__28827_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__28827_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28939__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28828_SHARP_,p2__28829_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28828_SHARP_,(function (){var G__28914 = x;
return (p2__28829_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__28829_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28914) : p2__28829_SHARP_.call(null,G__28914));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28939__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28830_SHARP_,p2__28831_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28830_SHARP_,(function (){var G__28915 = x;
var G__28916 = y;
return (p2__28831_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__28831_SHARP_.cljs$core$IFn$_invoke$arity$2(G__28915,G__28916) : p2__28831_SHARP_.call(null,G__28915,G__28916));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28939__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28832_SHARP_,p2__28833_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28832_SHARP_,(function (){var G__28917 = x;
var G__28918 = y;
var G__28919 = z;
return (p2__28833_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__28833_SHARP_.cljs$core$IFn$_invoke$arity$3(G__28917,G__28918,G__28919) : p2__28833_SHARP_.call(null,G__28917,G__28918,G__28919));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28939__4 = (function() { 
var G__28940__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28834_SHARP_,p2__28835_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28834_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__28835_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__28940 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28941__i = 0, G__28941__a = new Array(arguments.length -  3);
while (G__28941__i < G__28941__a.length) {G__28941__a[G__28941__i] = arguments[G__28941__i + 3]; ++G__28941__i;}
  args = new cljs.core.IndexedSeq(G__28941__a,0);
} 
return G__28940__delegate.call(this,x,y,z,args);};
G__28940.cljs$lang$maxFixedArity = 3;
G__28940.cljs$lang$applyTo = (function (arglist__28942){
var x = cljs.core.first(arglist__28942);
arglist__28942 = cljs.core.next(arglist__28942);
var y = cljs.core.first(arglist__28942);
arglist__28942 = cljs.core.next(arglist__28942);
var z = cljs.core.first(arglist__28942);
var args = cljs.core.rest(arglist__28942);
return G__28940__delegate(x,y,z,args);
});
G__28940.cljs$core$IFn$_invoke$arity$variadic = G__28940__delegate;
return G__28940;
})()
;
G__28939 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28939__0.call(this);
case 1:
return G__28939__1.call(this,x);
case 2:
return G__28939__2.call(this,x,y);
case 3:
return G__28939__3.call(this,x,y,z);
default:
var G__28943 = null;
if (arguments.length > 3) {
var G__28944__i = 0, G__28944__a = new Array(arguments.length -  3);
while (G__28944__i < G__28944__a.length) {G__28944__a[G__28944__i] = arguments[G__28944__i + 3]; ++G__28944__i;}
G__28943 = new cljs.core.IndexedSeq(G__28944__a,0);
}
return G__28939__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28943);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28939.cljs$lang$maxFixedArity = 3;
G__28939.cljs$lang$applyTo = G__28939__4.cljs$lang$applyTo;
G__28939.cljs$core$IFn$_invoke$arity$0 = G__28939__0;
G__28939.cljs$core$IFn$_invoke$arity$1 = G__28939__1;
G__28939.cljs$core$IFn$_invoke$arity$2 = G__28939__2;
G__28939.cljs$core$IFn$_invoke$arity$3 = G__28939__3;
G__28939.cljs$core$IFn$_invoke$arity$variadic = G__28939__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28939;
})()
;})(fs__$1))
};
var G__28938 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__28945__i = 0, G__28945__a = new Array(arguments.length -  3);
while (G__28945__i < G__28945__a.length) {G__28945__a[G__28945__i] = arguments[G__28945__i + 3]; ++G__28945__i;}
  fs = new cljs.core.IndexedSeq(G__28945__a,0);
} 
return G__28938__delegate.call(this,f,g,h,fs);};
G__28938.cljs$lang$maxFixedArity = 3;
G__28938.cljs$lang$applyTo = (function (arglist__28946){
var f = cljs.core.first(arglist__28946);
arglist__28946 = cljs.core.next(arglist__28946);
var g = cljs.core.first(arglist__28946);
arglist__28946 = cljs.core.next(arglist__28946);
var h = cljs.core.first(arglist__28946);
var fs = cljs.core.rest(arglist__28946);
return G__28938__delegate(f,g,h,fs);
});
G__28938.cljs$core$IFn$_invoke$arity$variadic = G__28938__delegate;
return G__28938;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__28947 = null;
if (arguments.length > 3) {
var G__28948__i = 0, G__28948__a = new Array(arguments.length -  3);
while (G__28948__i < G__28948__a.length) {G__28948__a[G__28948__i] = arguments[G__28948__i + 3]; ++G__28948__i;}
G__28947 = new cljs.core.IndexedSeq(G__28948__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__28947);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__28949 = cljs.core.next(coll);
coll = G__28949;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__28950 = (n - (1));
var G__28951 = cljs.core.next(coll);
n = G__28950;
coll = G__28951;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__28955 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28955,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28955,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28955,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_28963 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__28964_28970 = cljs.core.first(coll);
var G__28965_28971 = writer;
var G__28966_28972 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28964_28970,G__28965_28971,G__28966_28972) : print_one.call(null,G__28964_28970,G__28965_28971,G__28966_28972));
} else {
}

var coll_28973__$1 = cljs.core.next(coll);
var n_28974 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_28973__$1) && (((n_28974 == null)) || (!((n_28974 === (0)))))){
cljs.core._write(writer,sep);

var G__28967_28975 = cljs.core.first(coll_28973__$1);
var G__28968_28976 = writer;
var G__28969_28977 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28967_28975,G__28968_28976,G__28969_28977) : print_one.call(null,G__28967_28975,G__28968_28976,G__28969_28977));

var G__28978 = cljs.core.next(coll_28973__$1);
var G__28979 = (n_28974 - (1));
coll_28973__$1 = G__28978;
n_28974 = G__28979;
continue;
} else {
if((cljs.core.seq(coll_28973__$1)) && ((n_28974 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_28963;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__28984 = cljs.core.seq(ss);
var chunk__28985 = null;
var count__28986 = (0);
var i__28987 = (0);
while(true){
if((i__28987 < count__28986)){
var s = chunk__28985.cljs$core$IIndexed$_nth$arity$2(null,i__28987);
cljs.core._write(writer,s);

var G__28988 = seq__28984;
var G__28989 = chunk__28985;
var G__28990 = count__28986;
var G__28991 = (i__28987 + (1));
seq__28984 = G__28988;
chunk__28985 = G__28989;
count__28986 = G__28990;
i__28987 = G__28991;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__28984);
if(temp__4406__auto__){
var seq__28984__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28984__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__28984__$1);
var G__28992 = cljs.core.chunk_rest(seq__28984__$1);
var G__28993 = c__15231__auto__;
var G__28994 = cljs.core.count(c__15231__auto__);
var G__28995 = (0);
seq__28984 = G__28992;
chunk__28985 = G__28993;
count__28986 = G__28994;
i__28987 = G__28995;
continue;
} else {
var s = cljs.core.first(seq__28984__$1);
cljs.core._write(writer,s);

var G__28996 = cljs.core.next(seq__28984__$1);
var G__28997 = null;
var G__28998 = (0);
var G__28999 = (0);
seq__28984 = G__28996;
chunk__28985 = G__28997;
count__28986 = G__28998;
i__28987 = G__28999;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__29000__i = 0, G__29000__a = new Array(arguments.length -  1);
while (G__29000__i < G__29000__a.length) {G__29000__a[G__29000__i] = arguments[G__29000__i + 1]; ++G__29000__i;}
  ss = new cljs.core.IndexedSeq(G__29000__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__29001){
var writer = cljs.core.first(arglist__29001);
var ss = cljs.core.rest(arglist__29001);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj29003 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj29003;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__29006 = "[\\\\\"\b\f\n\r\t]";
var G__29007 = "g";
return RegExp(G__29006,G__29007);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__14432__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__29021 = obj;
if(G__29021){
var bit__15125__auto__ = (G__29021.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__15125__auto__) || (G__29021.cljs$core$IMeta$)){
return true;
} else {
if((!G__29021.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__29021);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__29021);
}
})();
if(and__14432__auto____$1){
return cljs.core.meta(obj);
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__29022 = obj;
if(G__29022){
var bit__15118__auto__ = (G__29022.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__15118__auto__) || (G__29022.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__29023 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__29024 = pr_writer;
var G__29025 = writer;
var G__29026 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__29023,G__29024,G__29025,G__29026) : cljs.core.print_map.call(null,G__29023,G__29024,G__29025,G__29026));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__29027 = obj;
return goog.isString(G__29027);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__29029 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__29029;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__29028 = obj;
if(G__29028){
var bit__15125__auto__ = (G__29028.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__15125__auto__) || (G__29028.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__29028.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__29028);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__29028);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__29034 = cljs.core.seq(cljs.core.next(objs));
var chunk__29035 = null;
var count__29036 = (0);
var i__29037 = (0);
while(true){
if((i__29037 < count__29036)){
var obj = chunk__29035.cljs$core$IIndexed$_nth$arity$2(null,i__29037);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__29038 = seq__29034;
var G__29039 = chunk__29035;
var G__29040 = count__29036;
var G__29041 = (i__29037 + (1));
seq__29034 = G__29038;
chunk__29035 = G__29039;
count__29036 = G__29040;
i__29037 = G__29041;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__29034);
if(temp__4406__auto__){
var seq__29034__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29034__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__29034__$1);
var G__29042 = cljs.core.chunk_rest(seq__29034__$1);
var G__29043 = c__15231__auto__;
var G__29044 = cljs.core.count(c__15231__auto__);
var G__29045 = (0);
seq__29034 = G__29042;
chunk__29035 = G__29043;
count__29036 = G__29044;
i__29037 = G__29045;
continue;
} else {
var obj = cljs.core.first(seq__29034__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__29046 = cljs.core.next(seq__29034__$1);
var G__29047 = null;
var G__29048 = (0);
var G__29049 = (0);
seq__29034 = G__29046;
chunk__29035 = G__29047;
count__29036 = G__29048;
i__29037 = G__29049;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29050__i = 0, G__29050__a = new Array(arguments.length -  0);
while (G__29050__i < G__29050__a.length) {G__29050__a[G__29050__i] = arguments[G__29050__i + 0]; ++G__29050__i;}
  objs = new cljs.core.IndexedSeq(G__29050__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__29051){
var objs = cljs.core.seq(arglist__29051);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29052__i = 0, G__29052__a = new Array(arguments.length -  0);
while (G__29052__i < G__29052__a.length) {G__29052__a[G__29052__i] = arguments[G__29052__i + 0]; ++G__29052__i;}
  objs = new cljs.core.IndexedSeq(G__29052__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__29053){
var objs = cljs.core.seq(arglist__29053);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29054__i = 0, G__29054__a = new Array(arguments.length -  0);
while (G__29054__i < G__29054__a.length) {G__29054__a[G__29054__i] = arguments[G__29054__i + 0]; ++G__29054__i;}
  objs = new cljs.core.IndexedSeq(G__29054__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__29055){
var objs = cljs.core.seq(arglist__29055);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29056__i = 0, G__29056__a = new Array(arguments.length -  0);
while (G__29056__i < G__29056__a.length) {G__29056__a[G__29056__i] = arguments[G__29056__i + 0]; ++G__29056__i;}
  objs = new cljs.core.IndexedSeq(G__29056__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__29057){
var objs = cljs.core.seq(arglist__29057);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29058__i = 0, G__29058__a = new Array(arguments.length -  0);
while (G__29058__i < G__29058__a.length) {G__29058__a[G__29058__i] = arguments[G__29058__i + 0]; ++G__29058__i;}
  objs = new cljs.core.IndexedSeq(G__29058__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__29059){
var objs = cljs.core.seq(arglist__29059);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29060__i = 0, G__29060__a = new Array(arguments.length -  0);
while (G__29060__i < G__29060__a.length) {G__29060__a[G__29060__i] = arguments[G__29060__i + 0]; ++G__29060__i;}
  objs = new cljs.core.IndexedSeq(G__29060__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__29061){
var objs = cljs.core.seq(arglist__29061);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29062__i = 0, G__29062__a = new Array(arguments.length -  0);
while (G__29062__i < G__29062__a.length) {G__29062__a[G__29062__i] = arguments[G__29062__i + 0]; ++G__29062__i;}
  objs = new cljs.core.IndexedSeq(G__29062__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__29063){
var objs = cljs.core.seq(arglist__29063);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29064__i = 0, G__29064__a = new Array(arguments.length -  0);
while (G__29064__i < G__29064__a.length) {G__29064__a[G__29064__i] = arguments[G__29064__i + 0]; ++G__29064__i;}
  objs = new cljs.core.IndexedSeq(G__29064__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__29065){
var objs = cljs.core.seq(arglist__29065);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__29072_29078 = cljs.core.key(e);
var G__29073_29079 = w;
var G__29074_29080 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__29072_29078,G__29073_29079,G__29074_29080) : print_one.call(null,G__29072_29078,G__29073_29079,G__29074_29080));

cljs.core._write(w," ");

var G__29075 = cljs.core.val(e);
var G__29076 = w;
var G__29077 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__29075,G__29076,G__29077) : print_one.call(null,G__29075,G__29076,G__29077));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__29081__i = 0, G__29081__a = new Array(arguments.length -  2);
while (G__29081__i < G__29081__a.length) {G__29081__a[G__29081__i] = arguments[G__29081__i + 2]; ++G__29081__i;}
  args = new cljs.core.IndexedSeq(G__29081__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__29082){
var iref = cljs.core.first(arglist__29082);
arglist__29082 = cljs.core.next(arglist__29082);
var f = cljs.core.first(arglist__29082);
var args = cljs.core.rest(arglist__29082);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__29085 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__29085) : cljs.core.atom.call(null,G__29085));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__29087 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29087) : cljs.core.deref.call(null,G__29087));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__29088_SHARP_,p2__29089_SHARP_){
var ret = (function (){var G__29092 = p1__29088_SHARP_;
var G__29093 = p2__29089_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29092,G__29093) : rf.call(null,G__29092,G__29093));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__29096 = null;
var G__29096__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29096__1 = (function (result){
var G__29095 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29095) : rf.call(null,G__29095));
});
var G__29096__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__29096 = function(result,input){
switch(arguments.length){
case 0:
return G__29096__0.call(this);
case 1:
return G__29096__1.call(this,result);
case 2:
return G__29096__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29096.cljs$core$IFn$_invoke$arity$0 = G__29096__0;
G__29096.cljs$core$IFn$_invoke$arity$1 = G__29096__1;
G__29096.cljs$core$IFn$_invoke$arity$2 = G__29096__2;
return G__29096;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__29105 = null;
var G__29105__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29105__1 = (function (result){
var G__29101 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29101) : rf.call(null,G__29101));
});
var G__29105__2 = (function (result,input){
var prior = (function (){var G__29102 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29102) : cljs.core.deref.call(null,G__29102));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__29103 = result;
var G__29104 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29103,G__29104) : rf.call(null,G__29103,G__29104));
}
});
G__29105 = function(result,input){
switch(arguments.length){
case 0:
return G__29105__0.call(this);
case 1:
return G__29105__1.call(this,result);
case 2:
return G__29105__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29105.cljs$core$IFn$_invoke$arity$0 = G__29105__0;
G__29105.cljs$core$IFn$_invoke$arity$1 = G__29105__1;
G__29105.cljs$core$IFn$_invoke$arity$2 = G__29105__2;
return G__29105;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__29107_SHARP_,p2__29106_SHARP_){
var G__29109 = p2__29106_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__29109) : proc.call(null,G__29109));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj29111 = {};
return obj29111;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._clj__GT_js[(function (){var G__29115 = x__15088__auto__;
return goog.typeOf(G__29115);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._key__GT_js[(function (){var G__29119 = x__15088__auto__;
return goog.typeOf(G__29119);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__29122 = k;
if(G__29122){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto__ = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return G__29122.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__29122.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__29122);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__29122);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__29123 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__29123) : cljs.core.clj__GT_js.call(null,G__29123));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__29139 = x;
if(G__29139){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto__ = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return G__29139.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__29139.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__29139);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__29139);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj29141 = {};
return obj29141;
})();
var seq__29142_29152 = cljs.core.seq(x);
var chunk__29143_29153 = null;
var count__29144_29154 = (0);
var i__29145_29155 = (0);
while(true){
if((i__29145_29155 < count__29144_29154)){
var vec__29146_29156 = chunk__29143_29153.cljs$core$IIndexed$_nth$arity$2(null,i__29145_29155);
var k_29157 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29146_29156,(0),null);
var v_29158 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29146_29156,(1),null);
(m[cljs.core.key__GT_js(k_29157)] = clj__GT_js(v_29158));

var G__29159 = seq__29142_29152;
var G__29160 = chunk__29143_29153;
var G__29161 = count__29144_29154;
var G__29162 = (i__29145_29155 + (1));
seq__29142_29152 = G__29159;
chunk__29143_29153 = G__29160;
count__29144_29154 = G__29161;
i__29145_29155 = G__29162;
continue;
} else {
var temp__4406__auto___29163 = cljs.core.seq(seq__29142_29152);
if(temp__4406__auto___29163){
var seq__29142_29164__$1 = temp__4406__auto___29163;
if(cljs.core.chunked_seq_QMARK_(seq__29142_29164__$1)){
var c__15231__auto___29165 = cljs.core.chunk_first(seq__29142_29164__$1);
var G__29166 = cljs.core.chunk_rest(seq__29142_29164__$1);
var G__29167 = c__15231__auto___29165;
var G__29168 = cljs.core.count(c__15231__auto___29165);
var G__29169 = (0);
seq__29142_29152 = G__29166;
chunk__29143_29153 = G__29167;
count__29144_29154 = G__29168;
i__29145_29155 = G__29169;
continue;
} else {
var vec__29147_29170 = cljs.core.first(seq__29142_29164__$1);
var k_29171 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29147_29170,(0),null);
var v_29172 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29147_29170,(1),null);
(m[cljs.core.key__GT_js(k_29171)] = clj__GT_js(v_29172));

var G__29173 = cljs.core.next(seq__29142_29164__$1);
var G__29174 = null;
var G__29175 = (0);
var G__29176 = (0);
seq__29142_29152 = G__29173;
chunk__29143_29153 = G__29174;
count__29144_29154 = G__29175;
i__29145_29155 = G__29176;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__29148_29177 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__29149_29178 = null;
var count__29150_29179 = (0);
var i__29151_29180 = (0);
while(true){
if((i__29151_29180 < count__29150_29179)){
var x_29181__$1 = chunk__29149_29178.cljs$core$IIndexed$_nth$arity$2(null,i__29151_29180);
arr.push(x_29181__$1);

var G__29182 = seq__29148_29177;
var G__29183 = chunk__29149_29178;
var G__29184 = count__29150_29179;
var G__29185 = (i__29151_29180 + (1));
seq__29148_29177 = G__29182;
chunk__29149_29178 = G__29183;
count__29150_29179 = G__29184;
i__29151_29180 = G__29185;
continue;
} else {
var temp__4406__auto___29186 = cljs.core.seq(seq__29148_29177);
if(temp__4406__auto___29186){
var seq__29148_29187__$1 = temp__4406__auto___29186;
if(cljs.core.chunked_seq_QMARK_(seq__29148_29187__$1)){
var c__15231__auto___29188 = cljs.core.chunk_first(seq__29148_29187__$1);
var G__29189 = cljs.core.chunk_rest(seq__29148_29187__$1);
var G__29190 = c__15231__auto___29188;
var G__29191 = cljs.core.count(c__15231__auto___29188);
var G__29192 = (0);
seq__29148_29177 = G__29189;
chunk__29149_29178 = G__29190;
count__29150_29179 = G__29191;
i__29151_29180 = G__29192;
continue;
} else {
var x_29193__$1 = cljs.core.first(seq__29148_29187__$1);
arr.push(x_29193__$1);

var G__29194 = cljs.core.next(seq__29148_29187__$1);
var G__29195 = null;
var G__29196 = (0);
var G__29197 = (0);
seq__29148_29177 = G__29194;
chunk__29149_29178 = G__29195;
count__29150_29179 = G__29196;
i__29151_29180 = G__29197;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj29199 = {};
return obj29199;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._js__GT_clj[(function (){var G__29203 = x__15088__auto__;
return goog.typeOf(G__29203);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__29260__delegate = function (x,opts){
var map__29233 = opts;
var map__29233__$1 = ((cljs.core.seq_QMARK_(map__29233))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29233):map__29233);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29233__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__29233,map__29233__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__29249 = x__$1;
if(G__29249){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto__ = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return G__29249.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__29249.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__29249);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__29249);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__15200__auto__ = ((function (map__29233,map__29233__$1,keywordize_keys,keyfn){
return (function iter__29250(s__29251){
return (new cljs.core.LazySeq(null,((function (map__29233,map__29233__$1,keywordize_keys,keyfn){
return (function (){
var s__29251__$1 = s__29251;
while(true){
var temp__4406__auto__ = cljs.core.seq(s__29251__$1);
if(temp__4406__auto__){
var s__29251__$2 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s__29251__$2)){
var c__15198__auto__ = cljs.core.chunk_first(s__29251__$2);
var size__15199__auto__ = cljs.core.count(c__15198__auto__);
var b__29253 = cljs.core.chunk_buffer(size__15199__auto__);
if((function (){var i__29252 = (0);
while(true){
if((i__29252 < size__15199__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__15198__auto__,i__29252);
cljs.core.chunk_append(b__29253,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__29258 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__29258) : keyfn.call(null,G__29258));
})(),thisfn((x__$1[k]))], null));

var G__29261 = (i__29252 + (1));
i__29252 = G__29261;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__29253),iter__29250(cljs.core.chunk_rest(s__29251__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__29253),null);
}
} else {
var k = cljs.core.first(s__29251__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__29259 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__29259) : keyfn.call(null,G__29259));
})(),thisfn((x__$1[k]))], null),iter__29250(cljs.core.rest(s__29251__$2)));
}
} else {
return null;
}
break;
}
});})(map__29233,map__29233__$1,keywordize_keys,keyfn))
,null,null));
});})(map__29233,map__29233__$1,keywordize_keys,keyfn))
;
return iter__15200__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__29233,map__29233__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__29260 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__29262__i = 0, G__29262__a = new Array(arguments.length -  1);
while (G__29262__i < G__29262__a.length) {G__29262__a[G__29262__i] = arguments[G__29262__i + 1]; ++G__29262__i;}
  opts = new cljs.core.IndexedSeq(G__29262__a,0);
} 
return G__29260__delegate.call(this,x,opts);};
G__29260.cljs$lang$maxFixedArity = 1;
G__29260.cljs$lang$applyTo = (function (arglist__29263){
var x = cljs.core.first(arglist__29263);
var opts = cljs.core.rest(arglist__29263);
return G__29260__delegate(x,opts);
});
G__29260.cljs$core$IFn$_invoke$arity$variadic = G__29260__delegate;
return G__29260;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__29264 = null;
if (arguments.length > 1) {
var G__29265__i = 0, G__29265__a = new Array(arguments.length -  1);
while (G__29265__i < G__29265__a.length) {G__29265__a[G__29265__i] = arguments[G__29265__i + 1]; ++G__29265__i;}
G__29264 = new cljs.core.IndexedSeq(G__29265__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__29264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__29268 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__29268) : cljs.core.atom.call(null,G__29268));
})();
return ((function (mem){
return (function() { 
var G__29270__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__29269 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29269) : cljs.core.deref.call(null,G__29269));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__29270 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29271__i = 0, G__29271__a = new Array(arguments.length -  0);
while (G__29271__i < G__29271__a.length) {G__29271__a[G__29271__i] = arguments[G__29271__i + 0]; ++G__29271__i;}
  args = new cljs.core.IndexedSeq(G__29271__a,0);
} 
return G__29270__delegate.call(this,args);};
G__29270.cljs$lang$maxFixedArity = 0;
G__29270.cljs$lang$applyTo = (function (arglist__29272){
var args = cljs.core.seq(arglist__29272);
return G__29270__delegate(args);
});
G__29270.cljs$core$IFn$_invoke$arity$variadic = G__29270__delegate;
return G__29270;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__29274 = ret;
f = G__29274;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__29275__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__29275 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__29276__i = 0, G__29276__a = new Array(arguments.length -  1);
while (G__29276__i < G__29276__a.length) {G__29276__a[G__29276__i] = arguments[G__29276__i + 1]; ++G__29276__i;}
  args = new cljs.core.IndexedSeq(G__29276__a,0);
} 
return G__29275__delegate.call(this,f,args);};
G__29275.cljs$lang$maxFixedArity = 1;
G__29275.cljs$lang$applyTo = (function (arglist__29277){
var f = cljs.core.first(arglist__29277);
var args = cljs.core.rest(arglist__29277);
return G__29275__delegate(f,args);
});
G__29275.cljs$core$IFn$_invoke$arity$variadic = G__29275__delegate;
return G__29275;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__29278 = null;
if (arguments.length > 1) {
var G__29279__i = 0, G__29279__a = new Array(arguments.length -  1);
while (G__29279__i < G__29279__a.length) {G__29279__a[G__29279__i] = arguments[G__29279__i + 1]; ++G__29279__i;}
G__29278 = new cljs.core.IndexedSeq(G__29279__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__29278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__29282 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__29282) : Math.floor.call(null,G__29282));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__29284 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29284) : f.call(null,G__29284));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__29286 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__29286) : cljs.core.atom.call(null,G__29286));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__29287__i = 0, G__29287__a = new Array(arguments.length -  1);
while (G__29287__i < G__29287__a.length) {G__29287__a[G__29287__i] = arguments[G__29287__i + 1]; ++G__29287__i;}
  args = new cljs.core.IndexedSeq(G__29287__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__29288){
var f = cljs.core.first(arglist__29288);
var args = cljs.core.rest(arglist__29288);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__29353 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29353) : cljs.core.deref.call(null,G__29353));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__14444__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
var and__14432__auto__ = cljs.core.vector_QMARK_(parent);
if(and__14432__auto__){
var and__14432__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__14432__auto____$1){
var and__14432__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__14432__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__29378 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__29376 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__29376) : child.call(null,G__29376));
})(),(function (){var G__29377 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__29377) : parent.call(null,G__29377));
})());
var G__29379 = (i + (1));
ret = G__29378;
i = G__29379;
continue;
}
break;
}
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__29383 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29383) : cljs.core.deref.call(null,G__29383));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__29387 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29387) : cljs.core.deref.call(null,G__29387));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__29391 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29391) : cljs.core.deref.call(null,G__29391));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__29400 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__29400) : targets.call(null,G__29400));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__29401 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__29401) : sources.call(null,G__29401));
})()));
});})(tp,td,ta))
;
var or__14444__auto__ = ((cljs.core.contains_QMARK_((function (){var G__29405 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__29405) : tp.call(null,G__29405));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__29406 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__29406) : ta.call(null,G__29406));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__29407 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__29407) : ta.call(null,G__29407));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__29414 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29414) : parentMap.call(null,G__29414));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__29415 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29415) : parentMap.call(null,G__29415));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__29408_SHARP_){
return cljs.core.cons(cljs.core.first(p1__29408_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__29408_SHARP_),cljs.core.second(p1__29408_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__29416 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29416) : parentMap.call(null,G__29416));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__29409_SHARP_,p2__29410_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__29409_SHARP_,p2__29410_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__29419 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29419) : cljs.core.deref.call(null,G__29419));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__29420 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29420) : cljs.core.deref.call(null,G__29420));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__29436 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29436) : cljs.core.deref.call(null,G__29436));
})().call(null,x);
var or__14444__auto__ = (cljs.core.truth_((function (){var and__14432__auto__ = xprefs;
if(cljs.core.truth_(and__14432__auto__)){
var G__29438 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__29438) : xprefs.call(null,G__29438));
} else {
return and__14432__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__29439 = cljs.core.rest(ps);
ps = G__29439;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__29440 = cljs.core.rest(ps);
ps = G__29440;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__14444__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__29454){
var vec__29455 = p__29454;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29455,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29455,(1),null);
var e = vec__29455;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__29456 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29456) : cljs.core.deref.call(null,G__29456));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__14444__auto__ = (be == null);
if(or__14444__auto__){
return or__14444__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__29457 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29457) : cljs.core.deref.call(null,G__29457));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__29458 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29458) : cljs.core.deref.call(null,G__29458));
})(),(function (){var G__29459 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29459) : cljs.core.deref.call(null,G__29459));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj29461 = {};
return obj29461;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._reset[(function (){var G__29465 = x__15088__auto__;
return goog.typeOf(G__29465);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._reset["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._add_method[(function (){var G__29469 = x__15088__auto__;
return goog.typeOf(G__29469);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._add_method["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._remove_method[(function (){var G__29473 = x__15088__auto__;
return goog.typeOf(G__29473);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._remove_method["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._prefer_method[(function (){var G__29477 = x__15088__auto__;
return goog.typeOf(G__29477);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._get_method[(function (){var G__29481 = x__15088__auto__;
return goog.typeOf(G__29481);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._get_method["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._methods[(function (){var G__29485 = x__15088__auto__;
return goog.typeOf(G__29485);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._methods["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._prefers[(function (){var G__29489 = x__15088__auto__;
return goog.typeOf(G__29489);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._prefers["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29491 = this$__$1;
return goog.getUid(G__29491);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__29492 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29492) : cljs.core.deref.call(null,G__29492));
})(),(function (){var G__29493 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29493) : cljs.core.deref.call(null,G__29493));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4404__auto__ = (function (){var G__29494 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29494) : cljs.core.deref.call(null,G__29494));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4404__auto__)){
var target_fn = temp__4404__auto__;
return target_fn;
} else {
var temp__4404__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4404__auto____$1)){
var target_fn = temp__4404__auto____$1;
return target_fn;
} else {
return (function (){var G__29495 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29495) : cljs.core.deref.call(null,G__29495));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__29496 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29496) : cljs.core.deref.call(null,G__29496));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__29497 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29497) : cljs.core.deref.call(null,G__29497));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__30338 = null;
var G__30338__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__30338__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29498 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__29498) : self__.dispatch_fn.call(null,G__29498));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29499 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__29499) : target_fn.call(null,G__29499));
});
var G__30338__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29500 = a;
var G__29501 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__29500,G__29501) : self__.dispatch_fn.call(null,G__29500,G__29501));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29502 = a;
var G__29503 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__29502,G__29503) : target_fn.call(null,G__29502,G__29503));
});
var G__30338__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29504 = a;
var G__29505 = b;
var G__29506 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__29504,G__29505,G__29506) : self__.dispatch_fn.call(null,G__29504,G__29505,G__29506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29507 = a;
var G__29508 = b;
var G__29509 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__29507,G__29508,G__29509) : target_fn.call(null,G__29507,G__29508,G__29509));
});
var G__30338__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29510 = a;
var G__29511 = b;
var G__29512 = c;
var G__29513 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__29510,G__29511,G__29512,G__29513) : self__.dispatch_fn.call(null,G__29510,G__29511,G__29512,G__29513));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29514 = a;
var G__29515 = b;
var G__29516 = c;
var G__29517 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__29514,G__29515,G__29516,G__29517) : target_fn.call(null,G__29514,G__29515,G__29516,G__29517));
});
var G__30338__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29518 = a;
var G__29519 = b;
var G__29520 = c;
var G__29521 = d;
var G__29522 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__29518,G__29519,G__29520,G__29521,G__29522) : self__.dispatch_fn.call(null,G__29518,G__29519,G__29520,G__29521,G__29522));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29523 = a;
var G__29524 = b;
var G__29525 = c;
var G__29526 = d;
var G__29527 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__29523,G__29524,G__29525,G__29526,G__29527) : target_fn.call(null,G__29523,G__29524,G__29525,G__29526,G__29527));
});
var G__30338__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29528 = a;
var G__29529 = b;
var G__29530 = c;
var G__29531 = d;
var G__29532 = e;
var G__29533 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__29528,G__29529,G__29530,G__29531,G__29532,G__29533) : self__.dispatch_fn.call(null,G__29528,G__29529,G__29530,G__29531,G__29532,G__29533));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29534 = a;
var G__29535 = b;
var G__29536 = c;
var G__29537 = d;
var G__29538 = e;
var G__29539 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__29534,G__29535,G__29536,G__29537,G__29538,G__29539) : target_fn.call(null,G__29534,G__29535,G__29536,G__29537,G__29538,G__29539));
});
var G__30338__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29540 = a;
var G__29541 = b;
var G__29542 = c;
var G__29543 = d;
var G__29544 = e;
var G__29545 = f;
var G__29546 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__29540,G__29541,G__29542,G__29543,G__29544,G__29545,G__29546) : self__.dispatch_fn.call(null,G__29540,G__29541,G__29542,G__29543,G__29544,G__29545,G__29546));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29547 = a;
var G__29548 = b;
var G__29549 = c;
var G__29550 = d;
var G__29551 = e;
var G__29552 = f;
var G__29553 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__29547,G__29548,G__29549,G__29550,G__29551,G__29552,G__29553) : target_fn.call(null,G__29547,G__29548,G__29549,G__29550,G__29551,G__29552,G__29553));
});
var G__30338__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29554 = a;
var G__29555 = b;
var G__29556 = c;
var G__29557 = d;
var G__29558 = e;
var G__29559 = f;
var G__29560 = g;
var G__29561 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__29554,G__29555,G__29556,G__29557,G__29558,G__29559,G__29560,G__29561) : self__.dispatch_fn.call(null,G__29554,G__29555,G__29556,G__29557,G__29558,G__29559,G__29560,G__29561));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29562 = a;
var G__29563 = b;
var G__29564 = c;
var G__29565 = d;
var G__29566 = e;
var G__29567 = f;
var G__29568 = g;
var G__29569 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__29562,G__29563,G__29564,G__29565,G__29566,G__29567,G__29568,G__29569) : target_fn.call(null,G__29562,G__29563,G__29564,G__29565,G__29566,G__29567,G__29568,G__29569));
});
var G__30338__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29570 = a;
var G__29571 = b;
var G__29572 = c;
var G__29573 = d;
var G__29574 = e;
var G__29575 = f;
var G__29576 = g;
var G__29577 = h;
var G__29578 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__29570,G__29571,G__29572,G__29573,G__29574,G__29575,G__29576,G__29577,G__29578) : self__.dispatch_fn.call(null,G__29570,G__29571,G__29572,G__29573,G__29574,G__29575,G__29576,G__29577,G__29578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29579 = a;
var G__29580 = b;
var G__29581 = c;
var G__29582 = d;
var G__29583 = e;
var G__29584 = f;
var G__29585 = g;
var G__29586 = h;
var G__29587 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__29579,G__29580,G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587) : target_fn.call(null,G__29579,G__29580,G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587));
});
var G__30338__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29588 = a;
var G__29589 = b;
var G__29590 = c;
var G__29591 = d;
var G__29592 = e;
var G__29593 = f;
var G__29594 = g;
var G__29595 = h;
var G__29596 = i;
var G__29597 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__29588,G__29589,G__29590,G__29591,G__29592,G__29593,G__29594,G__29595,G__29596,G__29597) : self__.dispatch_fn.call(null,G__29588,G__29589,G__29590,G__29591,G__29592,G__29593,G__29594,G__29595,G__29596,G__29597));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29598 = a;
var G__29599 = b;
var G__29600 = c;
var G__29601 = d;
var G__29602 = e;
var G__29603 = f;
var G__29604 = g;
var G__29605 = h;
var G__29606 = i;
var G__29607 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29598,G__29599,G__29600,G__29601,G__29602,G__29603,G__29604,G__29605,G__29606,G__29607) : target_fn.call(null,G__29598,G__29599,G__29600,G__29601,G__29602,G__29603,G__29604,G__29605,G__29606,G__29607));
});
var G__30338__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29608 = a;
var G__29609 = b;
var G__29610 = c;
var G__29611 = d;
var G__29612 = e;
var G__29613 = f;
var G__29614 = g;
var G__29615 = h;
var G__29616 = i;
var G__29617 = j;
var G__29618 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29608,G__29609,G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616,G__29617,G__29618) : self__.dispatch_fn.call(null,G__29608,G__29609,G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616,G__29617,G__29618));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29619 = a;
var G__29620 = b;
var G__29621 = c;
var G__29622 = d;
var G__29623 = e;
var G__29624 = f;
var G__29625 = g;
var G__29626 = h;
var G__29627 = i;
var G__29628 = j;
var G__29629 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29619,G__29620,G__29621,G__29622,G__29623,G__29624,G__29625,G__29626,G__29627,G__29628,G__29629) : target_fn.call(null,G__29619,G__29620,G__29621,G__29622,G__29623,G__29624,G__29625,G__29626,G__29627,G__29628,G__29629));
});
var G__30338__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29630 = a;
var G__29631 = b;
var G__29632 = c;
var G__29633 = d;
var G__29634 = e;
var G__29635 = f;
var G__29636 = g;
var G__29637 = h;
var G__29638 = i;
var G__29639 = j;
var G__29640 = k;
var G__29641 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29630,G__29631,G__29632,G__29633,G__29634,G__29635,G__29636,G__29637,G__29638,G__29639,G__29640,G__29641) : self__.dispatch_fn.call(null,G__29630,G__29631,G__29632,G__29633,G__29634,G__29635,G__29636,G__29637,G__29638,G__29639,G__29640,G__29641));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29642 = a;
var G__29643 = b;
var G__29644 = c;
var G__29645 = d;
var G__29646 = e;
var G__29647 = f;
var G__29648 = g;
var G__29649 = h;
var G__29650 = i;
var G__29651 = j;
var G__29652 = k;
var G__29653 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29642,G__29643,G__29644,G__29645,G__29646,G__29647,G__29648,G__29649,G__29650,G__29651,G__29652,G__29653) : target_fn.call(null,G__29642,G__29643,G__29644,G__29645,G__29646,G__29647,G__29648,G__29649,G__29650,G__29651,G__29652,G__29653));
});
var G__30338__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29654 = a;
var G__29655 = b;
var G__29656 = c;
var G__29657 = d;
var G__29658 = e;
var G__29659 = f;
var G__29660 = g;
var G__29661 = h;
var G__29662 = i;
var G__29663 = j;
var G__29664 = k;
var G__29665 = l;
var G__29666 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29654,G__29655,G__29656,G__29657,G__29658,G__29659,G__29660,G__29661,G__29662,G__29663,G__29664,G__29665,G__29666) : self__.dispatch_fn.call(null,G__29654,G__29655,G__29656,G__29657,G__29658,G__29659,G__29660,G__29661,G__29662,G__29663,G__29664,G__29665,G__29666));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29667 = a;
var G__29668 = b;
var G__29669 = c;
var G__29670 = d;
var G__29671 = e;
var G__29672 = f;
var G__29673 = g;
var G__29674 = h;
var G__29675 = i;
var G__29676 = j;
var G__29677 = k;
var G__29678 = l;
var G__29679 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29667,G__29668,G__29669,G__29670,G__29671,G__29672,G__29673,G__29674,G__29675,G__29676,G__29677,G__29678,G__29679) : target_fn.call(null,G__29667,G__29668,G__29669,G__29670,G__29671,G__29672,G__29673,G__29674,G__29675,G__29676,G__29677,G__29678,G__29679));
});
var G__30338__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29680 = a;
var G__29681 = b;
var G__29682 = c;
var G__29683 = d;
var G__29684 = e;
var G__29685 = f;
var G__29686 = g;
var G__29687 = h;
var G__29688 = i;
var G__29689 = j;
var G__29690 = k;
var G__29691 = l;
var G__29692 = m;
var G__29693 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29680,G__29681,G__29682,G__29683,G__29684,G__29685,G__29686,G__29687,G__29688,G__29689,G__29690,G__29691,G__29692,G__29693) : self__.dispatch_fn.call(null,G__29680,G__29681,G__29682,G__29683,G__29684,G__29685,G__29686,G__29687,G__29688,G__29689,G__29690,G__29691,G__29692,G__29693));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29694 = a;
var G__29695 = b;
var G__29696 = c;
var G__29697 = d;
var G__29698 = e;
var G__29699 = f;
var G__29700 = g;
var G__29701 = h;
var G__29702 = i;
var G__29703 = j;
var G__29704 = k;
var G__29705 = l;
var G__29706 = m;
var G__29707 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29694,G__29695,G__29696,G__29697,G__29698,G__29699,G__29700,G__29701,G__29702,G__29703,G__29704,G__29705,G__29706,G__29707) : target_fn.call(null,G__29694,G__29695,G__29696,G__29697,G__29698,G__29699,G__29700,G__29701,G__29702,G__29703,G__29704,G__29705,G__29706,G__29707));
});
var G__30338__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29708 = a;
var G__29709 = b;
var G__29710 = c;
var G__29711 = d;
var G__29712 = e;
var G__29713 = f;
var G__29714 = g;
var G__29715 = h;
var G__29716 = i;
var G__29717 = j;
var G__29718 = k;
var G__29719 = l;
var G__29720 = m;
var G__29721 = n;
var G__29722 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29708,G__29709,G__29710,G__29711,G__29712,G__29713,G__29714,G__29715,G__29716,G__29717,G__29718,G__29719,G__29720,G__29721,G__29722) : self__.dispatch_fn.call(null,G__29708,G__29709,G__29710,G__29711,G__29712,G__29713,G__29714,G__29715,G__29716,G__29717,G__29718,G__29719,G__29720,G__29721,G__29722));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29723 = a;
var G__29724 = b;
var G__29725 = c;
var G__29726 = d;
var G__29727 = e;
var G__29728 = f;
var G__29729 = g;
var G__29730 = h;
var G__29731 = i;
var G__29732 = j;
var G__29733 = k;
var G__29734 = l;
var G__29735 = m;
var G__29736 = n;
var G__29737 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29723,G__29724,G__29725,G__29726,G__29727,G__29728,G__29729,G__29730,G__29731,G__29732,G__29733,G__29734,G__29735,G__29736,G__29737) : target_fn.call(null,G__29723,G__29724,G__29725,G__29726,G__29727,G__29728,G__29729,G__29730,G__29731,G__29732,G__29733,G__29734,G__29735,G__29736,G__29737));
});
var G__30338__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29738 = a;
var G__29739 = b;
var G__29740 = c;
var G__29741 = d;
var G__29742 = e;
var G__29743 = f;
var G__29744 = g;
var G__29745 = h;
var G__29746 = i;
var G__29747 = j;
var G__29748 = k;
var G__29749 = l;
var G__29750 = m;
var G__29751 = n;
var G__29752 = o;
var G__29753 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29738,G__29739,G__29740,G__29741,G__29742,G__29743,G__29744,G__29745,G__29746,G__29747,G__29748,G__29749,G__29750,G__29751,G__29752,G__29753) : self__.dispatch_fn.call(null,G__29738,G__29739,G__29740,G__29741,G__29742,G__29743,G__29744,G__29745,G__29746,G__29747,G__29748,G__29749,G__29750,G__29751,G__29752,G__29753));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29754 = a;
var G__29755 = b;
var G__29756 = c;
var G__29757 = d;
var G__29758 = e;
var G__29759 = f;
var G__29760 = g;
var G__29761 = h;
var G__29762 = i;
var G__29763 = j;
var G__29764 = k;
var G__29765 = l;
var G__29766 = m;
var G__29767 = n;
var G__29768 = o;
var G__29769 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29754,G__29755,G__29756,G__29757,G__29758,G__29759,G__29760,G__29761,G__29762,G__29763,G__29764,G__29765,G__29766,G__29767,G__29768,G__29769) : target_fn.call(null,G__29754,G__29755,G__29756,G__29757,G__29758,G__29759,G__29760,G__29761,G__29762,G__29763,G__29764,G__29765,G__29766,G__29767,G__29768,G__29769));
});
var G__30338__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29770 = a;
var G__29771 = b;
var G__29772 = c;
var G__29773 = d;
var G__29774 = e;
var G__29775 = f;
var G__29776 = g;
var G__29777 = h;
var G__29778 = i;
var G__29779 = j;
var G__29780 = k;
var G__29781 = l;
var G__29782 = m;
var G__29783 = n;
var G__29784 = o;
var G__29785 = p;
var G__29786 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29770,G__29771,G__29772,G__29773,G__29774,G__29775,G__29776,G__29777,G__29778,G__29779,G__29780,G__29781,G__29782,G__29783,G__29784,G__29785,G__29786) : self__.dispatch_fn.call(null,G__29770,G__29771,G__29772,G__29773,G__29774,G__29775,G__29776,G__29777,G__29778,G__29779,G__29780,G__29781,G__29782,G__29783,G__29784,G__29785,G__29786));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29787 = a;
var G__29788 = b;
var G__29789 = c;
var G__29790 = d;
var G__29791 = e;
var G__29792 = f;
var G__29793 = g;
var G__29794 = h;
var G__29795 = i;
var G__29796 = j;
var G__29797 = k;
var G__29798 = l;
var G__29799 = m;
var G__29800 = n;
var G__29801 = o;
var G__29802 = p;
var G__29803 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29787,G__29788,G__29789,G__29790,G__29791,G__29792,G__29793,G__29794,G__29795,G__29796,G__29797,G__29798,G__29799,G__29800,G__29801,G__29802,G__29803) : target_fn.call(null,G__29787,G__29788,G__29789,G__29790,G__29791,G__29792,G__29793,G__29794,G__29795,G__29796,G__29797,G__29798,G__29799,G__29800,G__29801,G__29802,G__29803));
});
var G__30338__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29804 = a;
var G__29805 = b;
var G__29806 = c;
var G__29807 = d;
var G__29808 = e;
var G__29809 = f;
var G__29810 = g;
var G__29811 = h;
var G__29812 = i;
var G__29813 = j;
var G__29814 = k;
var G__29815 = l;
var G__29816 = m;
var G__29817 = n;
var G__29818 = o;
var G__29819 = p;
var G__29820 = q;
var G__29821 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29804,G__29805,G__29806,G__29807,G__29808,G__29809,G__29810,G__29811,G__29812,G__29813,G__29814,G__29815,G__29816,G__29817,G__29818,G__29819,G__29820,G__29821) : self__.dispatch_fn.call(null,G__29804,G__29805,G__29806,G__29807,G__29808,G__29809,G__29810,G__29811,G__29812,G__29813,G__29814,G__29815,G__29816,G__29817,G__29818,G__29819,G__29820,G__29821));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29822 = a;
var G__29823 = b;
var G__29824 = c;
var G__29825 = d;
var G__29826 = e;
var G__29827 = f;
var G__29828 = g;
var G__29829 = h;
var G__29830 = i;
var G__29831 = j;
var G__29832 = k;
var G__29833 = l;
var G__29834 = m;
var G__29835 = n;
var G__29836 = o;
var G__29837 = p;
var G__29838 = q;
var G__29839 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29822,G__29823,G__29824,G__29825,G__29826,G__29827,G__29828,G__29829,G__29830,G__29831,G__29832,G__29833,G__29834,G__29835,G__29836,G__29837,G__29838,G__29839) : target_fn.call(null,G__29822,G__29823,G__29824,G__29825,G__29826,G__29827,G__29828,G__29829,G__29830,G__29831,G__29832,G__29833,G__29834,G__29835,G__29836,G__29837,G__29838,G__29839));
});
var G__30338__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29840 = a;
var G__29841 = b;
var G__29842 = c;
var G__29843 = d;
var G__29844 = e;
var G__29845 = f;
var G__29846 = g;
var G__29847 = h;
var G__29848 = i;
var G__29849 = j;
var G__29850 = k;
var G__29851 = l;
var G__29852 = m;
var G__29853 = n;
var G__29854 = o;
var G__29855 = p;
var G__29856 = q;
var G__29857 = r;
var G__29858 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29840,G__29841,G__29842,G__29843,G__29844,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854,G__29855,G__29856,G__29857,G__29858) : self__.dispatch_fn.call(null,G__29840,G__29841,G__29842,G__29843,G__29844,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854,G__29855,G__29856,G__29857,G__29858));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29859 = a;
var G__29860 = b;
var G__29861 = c;
var G__29862 = d;
var G__29863 = e;
var G__29864 = f;
var G__29865 = g;
var G__29866 = h;
var G__29867 = i;
var G__29868 = j;
var G__29869 = k;
var G__29870 = l;
var G__29871 = m;
var G__29872 = n;
var G__29873 = o;
var G__29874 = p;
var G__29875 = q;
var G__29876 = r;
var G__29877 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865,G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877) : target_fn.call(null,G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865,G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877));
});
var G__30338__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29878 = a;
var G__29879 = b;
var G__29880 = c;
var G__29881 = d;
var G__29882 = e;
var G__29883 = f;
var G__29884 = g;
var G__29885 = h;
var G__29886 = i;
var G__29887 = j;
var G__29888 = k;
var G__29889 = l;
var G__29890 = m;
var G__29891 = n;
var G__29892 = o;
var G__29893 = p;
var G__29894 = q;
var G__29895 = r;
var G__29896 = s;
var G__29897 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887,G__29888,G__29889,G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897) : self__.dispatch_fn.call(null,G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887,G__29888,G__29889,G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29898 = a;
var G__29899 = b;
var G__29900 = c;
var G__29901 = d;
var G__29902 = e;
var G__29903 = f;
var G__29904 = g;
var G__29905 = h;
var G__29906 = i;
var G__29907 = j;
var G__29908 = k;
var G__29909 = l;
var G__29910 = m;
var G__29911 = n;
var G__29912 = o;
var G__29913 = p;
var G__29914 = q;
var G__29915 = r;
var G__29916 = s;
var G__29917 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29898,G__29899,G__29900,G__29901,G__29902,G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914,G__29915,G__29916,G__29917) : target_fn.call(null,G__29898,G__29899,G__29900,G__29901,G__29902,G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914,G__29915,G__29916,G__29917));
});
var G__30338__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__30338 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__30338__1.call(this,self__);
case 2:
return G__30338__2.call(this,self__,a);
case 3:
return G__30338__3.call(this,self__,a,b);
case 4:
return G__30338__4.call(this,self__,a,b,c);
case 5:
return G__30338__5.call(this,self__,a,b,c,d);
case 6:
return G__30338__6.call(this,self__,a,b,c,d,e);
case 7:
return G__30338__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__30338__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__30338__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__30338__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__30338__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__30338__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__30338__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__30338__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__30338__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__30338__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__30338__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__30338__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__30338__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__30338__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__30338__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__30338__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30338.cljs$core$IFn$_invoke$arity$1 = G__30338__1;
G__30338.cljs$core$IFn$_invoke$arity$2 = G__30338__2;
G__30338.cljs$core$IFn$_invoke$arity$3 = G__30338__3;
G__30338.cljs$core$IFn$_invoke$arity$4 = G__30338__4;
G__30338.cljs$core$IFn$_invoke$arity$5 = G__30338__5;
G__30338.cljs$core$IFn$_invoke$arity$6 = G__30338__6;
G__30338.cljs$core$IFn$_invoke$arity$7 = G__30338__7;
G__30338.cljs$core$IFn$_invoke$arity$8 = G__30338__8;
G__30338.cljs$core$IFn$_invoke$arity$9 = G__30338__9;
G__30338.cljs$core$IFn$_invoke$arity$10 = G__30338__10;
G__30338.cljs$core$IFn$_invoke$arity$11 = G__30338__11;
G__30338.cljs$core$IFn$_invoke$arity$12 = G__30338__12;
G__30338.cljs$core$IFn$_invoke$arity$13 = G__30338__13;
G__30338.cljs$core$IFn$_invoke$arity$14 = G__30338__14;
G__30338.cljs$core$IFn$_invoke$arity$15 = G__30338__15;
G__30338.cljs$core$IFn$_invoke$arity$16 = G__30338__16;
G__30338.cljs$core$IFn$_invoke$arity$17 = G__30338__17;
G__30338.cljs$core$IFn$_invoke$arity$18 = G__30338__18;
G__30338.cljs$core$IFn$_invoke$arity$19 = G__30338__19;
G__30338.cljs$core$IFn$_invoke$arity$20 = G__30338__20;
G__30338.cljs$core$IFn$_invoke$arity$21 = G__30338__21;
G__30338.cljs$core$IFn$_invoke$arity$22 = G__30338__22;
return G__30338;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args29490){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29490)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29918 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__29918) : self__.dispatch_fn.call(null,G__29918));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29919 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__29919) : target_fn.call(null,G__29919));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29920 = a;
var G__29921 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__29920,G__29921) : self__.dispatch_fn.call(null,G__29920,G__29921));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29922 = a;
var G__29923 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__29922,G__29923) : target_fn.call(null,G__29922,G__29923));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29924 = a;
var G__29925 = b;
var G__29926 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__29924,G__29925,G__29926) : self__.dispatch_fn.call(null,G__29924,G__29925,G__29926));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29927 = a;
var G__29928 = b;
var G__29929 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__29927,G__29928,G__29929) : target_fn.call(null,G__29927,G__29928,G__29929));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29930 = a;
var G__29931 = b;
var G__29932 = c;
var G__29933 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__29930,G__29931,G__29932,G__29933) : self__.dispatch_fn.call(null,G__29930,G__29931,G__29932,G__29933));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29934 = a;
var G__29935 = b;
var G__29936 = c;
var G__29937 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__29934,G__29935,G__29936,G__29937) : target_fn.call(null,G__29934,G__29935,G__29936,G__29937));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29938 = a;
var G__29939 = b;
var G__29940 = c;
var G__29941 = d;
var G__29942 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__29938,G__29939,G__29940,G__29941,G__29942) : self__.dispatch_fn.call(null,G__29938,G__29939,G__29940,G__29941,G__29942));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29943 = a;
var G__29944 = b;
var G__29945 = c;
var G__29946 = d;
var G__29947 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__29943,G__29944,G__29945,G__29946,G__29947) : target_fn.call(null,G__29943,G__29944,G__29945,G__29946,G__29947));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29948 = a;
var G__29949 = b;
var G__29950 = c;
var G__29951 = d;
var G__29952 = e;
var G__29953 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__29948,G__29949,G__29950,G__29951,G__29952,G__29953) : self__.dispatch_fn.call(null,G__29948,G__29949,G__29950,G__29951,G__29952,G__29953));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29954 = a;
var G__29955 = b;
var G__29956 = c;
var G__29957 = d;
var G__29958 = e;
var G__29959 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__29954,G__29955,G__29956,G__29957,G__29958,G__29959) : target_fn.call(null,G__29954,G__29955,G__29956,G__29957,G__29958,G__29959));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29960 = a;
var G__29961 = b;
var G__29962 = c;
var G__29963 = d;
var G__29964 = e;
var G__29965 = f;
var G__29966 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966) : self__.dispatch_fn.call(null,G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29967 = a;
var G__29968 = b;
var G__29969 = c;
var G__29970 = d;
var G__29971 = e;
var G__29972 = f;
var G__29973 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__29967,G__29968,G__29969,G__29970,G__29971,G__29972,G__29973) : target_fn.call(null,G__29967,G__29968,G__29969,G__29970,G__29971,G__29972,G__29973));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29974 = a;
var G__29975 = b;
var G__29976 = c;
var G__29977 = d;
var G__29978 = e;
var G__29979 = f;
var G__29980 = g;
var G__29981 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__29974,G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981) : self__.dispatch_fn.call(null,G__29974,G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29982 = a;
var G__29983 = b;
var G__29984 = c;
var G__29985 = d;
var G__29986 = e;
var G__29987 = f;
var G__29988 = g;
var G__29989 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988,G__29989) : target_fn.call(null,G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988,G__29989));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29990 = a;
var G__29991 = b;
var G__29992 = c;
var G__29993 = d;
var G__29994 = e;
var G__29995 = f;
var G__29996 = g;
var G__29997 = h;
var G__29998 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__29990,G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998) : self__.dispatch_fn.call(null,G__29990,G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29999 = a;
var G__30000 = b;
var G__30001 = c;
var G__30002 = d;
var G__30003 = e;
var G__30004 = f;
var G__30005 = g;
var G__30006 = h;
var G__30007 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005,G__30006,G__30007) : target_fn.call(null,G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005,G__30006,G__30007));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30008 = a;
var G__30009 = b;
var G__30010 = c;
var G__30011 = d;
var G__30012 = e;
var G__30013 = f;
var G__30014 = g;
var G__30015 = h;
var G__30016 = i;
var G__30017 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__30008,G__30009,G__30010,G__30011,G__30012,G__30013,G__30014,G__30015,G__30016,G__30017) : self__.dispatch_fn.call(null,G__30008,G__30009,G__30010,G__30011,G__30012,G__30013,G__30014,G__30015,G__30016,G__30017));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30018 = a;
var G__30019 = b;
var G__30020 = c;
var G__30021 = d;
var G__30022 = e;
var G__30023 = f;
var G__30024 = g;
var G__30025 = h;
var G__30026 = i;
var G__30027 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__30018,G__30019,G__30020,G__30021,G__30022,G__30023,G__30024,G__30025,G__30026,G__30027) : target_fn.call(null,G__30018,G__30019,G__30020,G__30021,G__30022,G__30023,G__30024,G__30025,G__30026,G__30027));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30028 = a;
var G__30029 = b;
var G__30030 = c;
var G__30031 = d;
var G__30032 = e;
var G__30033 = f;
var G__30034 = g;
var G__30035 = h;
var G__30036 = i;
var G__30037 = j;
var G__30038 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__30028,G__30029,G__30030,G__30031,G__30032,G__30033,G__30034,G__30035,G__30036,G__30037,G__30038) : self__.dispatch_fn.call(null,G__30028,G__30029,G__30030,G__30031,G__30032,G__30033,G__30034,G__30035,G__30036,G__30037,G__30038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30039 = a;
var G__30040 = b;
var G__30041 = c;
var G__30042 = d;
var G__30043 = e;
var G__30044 = f;
var G__30045 = g;
var G__30046 = h;
var G__30047 = i;
var G__30048 = j;
var G__30049 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__30039,G__30040,G__30041,G__30042,G__30043,G__30044,G__30045,G__30046,G__30047,G__30048,G__30049) : target_fn.call(null,G__30039,G__30040,G__30041,G__30042,G__30043,G__30044,G__30045,G__30046,G__30047,G__30048,G__30049));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30050 = a;
var G__30051 = b;
var G__30052 = c;
var G__30053 = d;
var G__30054 = e;
var G__30055 = f;
var G__30056 = g;
var G__30057 = h;
var G__30058 = i;
var G__30059 = j;
var G__30060 = k;
var G__30061 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__30050,G__30051,G__30052,G__30053,G__30054,G__30055,G__30056,G__30057,G__30058,G__30059,G__30060,G__30061) : self__.dispatch_fn.call(null,G__30050,G__30051,G__30052,G__30053,G__30054,G__30055,G__30056,G__30057,G__30058,G__30059,G__30060,G__30061));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30062 = a;
var G__30063 = b;
var G__30064 = c;
var G__30065 = d;
var G__30066 = e;
var G__30067 = f;
var G__30068 = g;
var G__30069 = h;
var G__30070 = i;
var G__30071 = j;
var G__30072 = k;
var G__30073 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__30062,G__30063,G__30064,G__30065,G__30066,G__30067,G__30068,G__30069,G__30070,G__30071,G__30072,G__30073) : target_fn.call(null,G__30062,G__30063,G__30064,G__30065,G__30066,G__30067,G__30068,G__30069,G__30070,G__30071,G__30072,G__30073));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30074 = a;
var G__30075 = b;
var G__30076 = c;
var G__30077 = d;
var G__30078 = e;
var G__30079 = f;
var G__30080 = g;
var G__30081 = h;
var G__30082 = i;
var G__30083 = j;
var G__30084 = k;
var G__30085 = l;
var G__30086 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__30074,G__30075,G__30076,G__30077,G__30078,G__30079,G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086) : self__.dispatch_fn.call(null,G__30074,G__30075,G__30076,G__30077,G__30078,G__30079,G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30087 = a;
var G__30088 = b;
var G__30089 = c;
var G__30090 = d;
var G__30091 = e;
var G__30092 = f;
var G__30093 = g;
var G__30094 = h;
var G__30095 = i;
var G__30096 = j;
var G__30097 = k;
var G__30098 = l;
var G__30099 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__30087,G__30088,G__30089,G__30090,G__30091,G__30092,G__30093,G__30094,G__30095,G__30096,G__30097,G__30098,G__30099) : target_fn.call(null,G__30087,G__30088,G__30089,G__30090,G__30091,G__30092,G__30093,G__30094,G__30095,G__30096,G__30097,G__30098,G__30099));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30100 = a;
var G__30101 = b;
var G__30102 = c;
var G__30103 = d;
var G__30104 = e;
var G__30105 = f;
var G__30106 = g;
var G__30107 = h;
var G__30108 = i;
var G__30109 = j;
var G__30110 = k;
var G__30111 = l;
var G__30112 = m;
var G__30113 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__30100,G__30101,G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113) : self__.dispatch_fn.call(null,G__30100,G__30101,G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30114 = a;
var G__30115 = b;
var G__30116 = c;
var G__30117 = d;
var G__30118 = e;
var G__30119 = f;
var G__30120 = g;
var G__30121 = h;
var G__30122 = i;
var G__30123 = j;
var G__30124 = k;
var G__30125 = l;
var G__30126 = m;
var G__30127 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__30114,G__30115,G__30116,G__30117,G__30118,G__30119,G__30120,G__30121,G__30122,G__30123,G__30124,G__30125,G__30126,G__30127) : target_fn.call(null,G__30114,G__30115,G__30116,G__30117,G__30118,G__30119,G__30120,G__30121,G__30122,G__30123,G__30124,G__30125,G__30126,G__30127));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30128 = a;
var G__30129 = b;
var G__30130 = c;
var G__30131 = d;
var G__30132 = e;
var G__30133 = f;
var G__30134 = g;
var G__30135 = h;
var G__30136 = i;
var G__30137 = j;
var G__30138 = k;
var G__30139 = l;
var G__30140 = m;
var G__30141 = n;
var G__30142 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__30128,G__30129,G__30130,G__30131,G__30132,G__30133,G__30134,G__30135,G__30136,G__30137,G__30138,G__30139,G__30140,G__30141,G__30142) : self__.dispatch_fn.call(null,G__30128,G__30129,G__30130,G__30131,G__30132,G__30133,G__30134,G__30135,G__30136,G__30137,G__30138,G__30139,G__30140,G__30141,G__30142));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30143 = a;
var G__30144 = b;
var G__30145 = c;
var G__30146 = d;
var G__30147 = e;
var G__30148 = f;
var G__30149 = g;
var G__30150 = h;
var G__30151 = i;
var G__30152 = j;
var G__30153 = k;
var G__30154 = l;
var G__30155 = m;
var G__30156 = n;
var G__30157 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__30143,G__30144,G__30145,G__30146,G__30147,G__30148,G__30149,G__30150,G__30151,G__30152,G__30153,G__30154,G__30155,G__30156,G__30157) : target_fn.call(null,G__30143,G__30144,G__30145,G__30146,G__30147,G__30148,G__30149,G__30150,G__30151,G__30152,G__30153,G__30154,G__30155,G__30156,G__30157));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30158 = a;
var G__30159 = b;
var G__30160 = c;
var G__30161 = d;
var G__30162 = e;
var G__30163 = f;
var G__30164 = g;
var G__30165 = h;
var G__30166 = i;
var G__30167 = j;
var G__30168 = k;
var G__30169 = l;
var G__30170 = m;
var G__30171 = n;
var G__30172 = o;
var G__30173 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__30158,G__30159,G__30160,G__30161,G__30162,G__30163,G__30164,G__30165,G__30166,G__30167,G__30168,G__30169,G__30170,G__30171,G__30172,G__30173) : self__.dispatch_fn.call(null,G__30158,G__30159,G__30160,G__30161,G__30162,G__30163,G__30164,G__30165,G__30166,G__30167,G__30168,G__30169,G__30170,G__30171,G__30172,G__30173));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30174 = a;
var G__30175 = b;
var G__30176 = c;
var G__30177 = d;
var G__30178 = e;
var G__30179 = f;
var G__30180 = g;
var G__30181 = h;
var G__30182 = i;
var G__30183 = j;
var G__30184 = k;
var G__30185 = l;
var G__30186 = m;
var G__30187 = n;
var G__30188 = o;
var G__30189 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__30174,G__30175,G__30176,G__30177,G__30178,G__30179,G__30180,G__30181,G__30182,G__30183,G__30184,G__30185,G__30186,G__30187,G__30188,G__30189) : target_fn.call(null,G__30174,G__30175,G__30176,G__30177,G__30178,G__30179,G__30180,G__30181,G__30182,G__30183,G__30184,G__30185,G__30186,G__30187,G__30188,G__30189));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30190 = a;
var G__30191 = b;
var G__30192 = c;
var G__30193 = d;
var G__30194 = e;
var G__30195 = f;
var G__30196 = g;
var G__30197 = h;
var G__30198 = i;
var G__30199 = j;
var G__30200 = k;
var G__30201 = l;
var G__30202 = m;
var G__30203 = n;
var G__30204 = o;
var G__30205 = p;
var G__30206 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__30190,G__30191,G__30192,G__30193,G__30194,G__30195,G__30196,G__30197,G__30198,G__30199,G__30200,G__30201,G__30202,G__30203,G__30204,G__30205,G__30206) : self__.dispatch_fn.call(null,G__30190,G__30191,G__30192,G__30193,G__30194,G__30195,G__30196,G__30197,G__30198,G__30199,G__30200,G__30201,G__30202,G__30203,G__30204,G__30205,G__30206));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30207 = a;
var G__30208 = b;
var G__30209 = c;
var G__30210 = d;
var G__30211 = e;
var G__30212 = f;
var G__30213 = g;
var G__30214 = h;
var G__30215 = i;
var G__30216 = j;
var G__30217 = k;
var G__30218 = l;
var G__30219 = m;
var G__30220 = n;
var G__30221 = o;
var G__30222 = p;
var G__30223 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__30207,G__30208,G__30209,G__30210,G__30211,G__30212,G__30213,G__30214,G__30215,G__30216,G__30217,G__30218,G__30219,G__30220,G__30221,G__30222,G__30223) : target_fn.call(null,G__30207,G__30208,G__30209,G__30210,G__30211,G__30212,G__30213,G__30214,G__30215,G__30216,G__30217,G__30218,G__30219,G__30220,G__30221,G__30222,G__30223));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30224 = a;
var G__30225 = b;
var G__30226 = c;
var G__30227 = d;
var G__30228 = e;
var G__30229 = f;
var G__30230 = g;
var G__30231 = h;
var G__30232 = i;
var G__30233 = j;
var G__30234 = k;
var G__30235 = l;
var G__30236 = m;
var G__30237 = n;
var G__30238 = o;
var G__30239 = p;
var G__30240 = q;
var G__30241 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__30224,G__30225,G__30226,G__30227,G__30228,G__30229,G__30230,G__30231,G__30232,G__30233,G__30234,G__30235,G__30236,G__30237,G__30238,G__30239,G__30240,G__30241) : self__.dispatch_fn.call(null,G__30224,G__30225,G__30226,G__30227,G__30228,G__30229,G__30230,G__30231,G__30232,G__30233,G__30234,G__30235,G__30236,G__30237,G__30238,G__30239,G__30240,G__30241));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30242 = a;
var G__30243 = b;
var G__30244 = c;
var G__30245 = d;
var G__30246 = e;
var G__30247 = f;
var G__30248 = g;
var G__30249 = h;
var G__30250 = i;
var G__30251 = j;
var G__30252 = k;
var G__30253 = l;
var G__30254 = m;
var G__30255 = n;
var G__30256 = o;
var G__30257 = p;
var G__30258 = q;
var G__30259 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__30242,G__30243,G__30244,G__30245,G__30246,G__30247,G__30248,G__30249,G__30250,G__30251,G__30252,G__30253,G__30254,G__30255,G__30256,G__30257,G__30258,G__30259) : target_fn.call(null,G__30242,G__30243,G__30244,G__30245,G__30246,G__30247,G__30248,G__30249,G__30250,G__30251,G__30252,G__30253,G__30254,G__30255,G__30256,G__30257,G__30258,G__30259));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30260 = a;
var G__30261 = b;
var G__30262 = c;
var G__30263 = d;
var G__30264 = e;
var G__30265 = f;
var G__30266 = g;
var G__30267 = h;
var G__30268 = i;
var G__30269 = j;
var G__30270 = k;
var G__30271 = l;
var G__30272 = m;
var G__30273 = n;
var G__30274 = o;
var G__30275 = p;
var G__30276 = q;
var G__30277 = r;
var G__30278 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__30260,G__30261,G__30262,G__30263,G__30264,G__30265,G__30266,G__30267,G__30268,G__30269,G__30270,G__30271,G__30272,G__30273,G__30274,G__30275,G__30276,G__30277,G__30278) : self__.dispatch_fn.call(null,G__30260,G__30261,G__30262,G__30263,G__30264,G__30265,G__30266,G__30267,G__30268,G__30269,G__30270,G__30271,G__30272,G__30273,G__30274,G__30275,G__30276,G__30277,G__30278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30279 = a;
var G__30280 = b;
var G__30281 = c;
var G__30282 = d;
var G__30283 = e;
var G__30284 = f;
var G__30285 = g;
var G__30286 = h;
var G__30287 = i;
var G__30288 = j;
var G__30289 = k;
var G__30290 = l;
var G__30291 = m;
var G__30292 = n;
var G__30293 = o;
var G__30294 = p;
var G__30295 = q;
var G__30296 = r;
var G__30297 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__30279,G__30280,G__30281,G__30282,G__30283,G__30284,G__30285,G__30286,G__30287,G__30288,G__30289,G__30290,G__30291,G__30292,G__30293,G__30294,G__30295,G__30296,G__30297) : target_fn.call(null,G__30279,G__30280,G__30281,G__30282,G__30283,G__30284,G__30285,G__30286,G__30287,G__30288,G__30289,G__30290,G__30291,G__30292,G__30293,G__30294,G__30295,G__30296,G__30297));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30298 = a;
var G__30299 = b;
var G__30300 = c;
var G__30301 = d;
var G__30302 = e;
var G__30303 = f;
var G__30304 = g;
var G__30305 = h;
var G__30306 = i;
var G__30307 = j;
var G__30308 = k;
var G__30309 = l;
var G__30310 = m;
var G__30311 = n;
var G__30312 = o;
var G__30313 = p;
var G__30314 = q;
var G__30315 = r;
var G__30316 = s;
var G__30317 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__30298,G__30299,G__30300,G__30301,G__30302,G__30303,G__30304,G__30305,G__30306,G__30307,G__30308,G__30309,G__30310,G__30311,G__30312,G__30313,G__30314,G__30315,G__30316,G__30317) : self__.dispatch_fn.call(null,G__30298,G__30299,G__30300,G__30301,G__30302,G__30303,G__30304,G__30305,G__30306,G__30307,G__30308,G__30309,G__30310,G__30311,G__30312,G__30313,G__30314,G__30315,G__30316,G__30317));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30318 = a;
var G__30319 = b;
var G__30320 = c;
var G__30321 = d;
var G__30322 = e;
var G__30323 = f;
var G__30324 = g;
var G__30325 = h;
var G__30326 = i;
var G__30327 = j;
var G__30328 = k;
var G__30329 = l;
var G__30330 = m;
var G__30331 = n;
var G__30332 = o;
var G__30333 = p;
var G__30334 = q;
var G__30335 = r;
var G__30336 = s;
var G__30337 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__30318,G__30319,G__30320,G__30321,G__30322,G__30323,G__30324,G__30325,G__30326,G__30327,G__30328,G__30329,G__30330,G__30331,G__30332,G__30333,G__30334,G__30335,G__30336,G__30337) : target_fn.call(null,G__30318,G__30319,G__30320,G__30321,G__30322,G__30323,G__30324,G__30325,G__30326,G__30327,G__30328,G__30329,G__30330,G__30331,G__30332,G__30333,G__30334,G__30335,G__30336,G__30337));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__30339 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__30339);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__30344 = msg;
return Error(G__30344);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__30349 = x;
var G__30350 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__30349,G__30350) : pred.call(null,G__30349,G__30350));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__30351 = y;
var G__30352 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__30351,G__30352) : pred.call(null,G__30351,G__30352));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map