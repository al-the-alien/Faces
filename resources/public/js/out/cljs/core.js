// Compiled by ClojureScript 0.0-2816 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__27238__delegate = function (args){
return console.log.apply(console,(function (){var G__27237 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__27237) : cljs.core.into_array.call(null,G__27237));
})());
};
var G__27238 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27239__i = 0, G__27239__a = new Array(arguments.length -  0);
while (G__27239__i < G__27239__a.length) {G__27239__a[G__27239__i] = arguments[G__27239__i + 0]; ++G__27239__i;}
  args = new cljs.core.IndexedSeq(G__27239__a,0);
} 
return G__27238__delegate.call(this,args);};
G__27238.cljs$lang$maxFixedArity = 0;
G__27238.cljs$lang$applyTo = (function (arglist__27240){
var args = cljs.core.seq(arglist__27240);
return G__27238__delegate(args);
});
G__27238.cljs$core$IFn$_invoke$arity$variadic = G__27238__delegate;
return G__27238;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__27242 = x;
return goog.isString(G__27242);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__27244 = x__$1;
return goog.typeOf(G__27244);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__14432__auto__ = ty;
if(cljs.core.truth_(and__14432__auto__)){
return ty.cljs$lang$type;
} else {
return and__14432__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__27246 = obj;
return goog.typeOf(G__27246);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4404__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4404__auto__)){
var s = temp__4404__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__27248 = Symbol;
return goog.typeOf(G__27248);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__15331__auto___27250 = len;
var i_27251 = (0);
while(true){
if((i_27251 < n__15331__auto___27250)){
(new_arr[i_27251] = (arr[i_27251]));

var G__27252 = (i_27251 + (1));
i_27251 = G__27252;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__27253 = (i + (1));
i = G__27253;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__27262__delegate = function (array,i,idxs){
var G__27259 = aget;
var G__27260 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__27261 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__27259,G__27260,G__27261) : cljs.core.apply.call(null,G__27259,G__27260,G__27261));
};
var G__27262 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__27263__i = 0, G__27263__a = new Array(arguments.length -  2);
while (G__27263__i < G__27263__a.length) {G__27263__a[G__27263__i] = arguments[G__27263__i + 2]; ++G__27263__i;}
  idxs = new cljs.core.IndexedSeq(G__27263__a,0);
} 
return G__27262__delegate.call(this,array,i,idxs);};
G__27262.cljs$lang$maxFixedArity = 2;
G__27262.cljs$lang$applyTo = (function (arglist__27264){
var array = cljs.core.first(arglist__27264);
arglist__27264 = cljs.core.next(arglist__27264);
var i = cljs.core.first(arglist__27264);
var idxs = cljs.core.rest(arglist__27264);
return G__27262__delegate(array,i,idxs);
});
G__27262.cljs$core$IFn$_invoke$arity$variadic = G__27262__delegate;
return G__27262;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__27265 = null;
if (arguments.length > 2) {
var G__27266__i = 0, G__27266__a = new Array(arguments.length -  2);
while (G__27266__i < G__27266__a.length) {G__27266__a[G__27266__i] = arguments[G__27266__i + 2]; ++G__27266__i;}
G__27265 = new cljs.core.IndexedSeq(G__27266__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__27265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__27275__delegate = function (array,idx,idx2,idxv){
var G__27271 = aset;
var G__27272 = (array[idx]);
var G__27273 = idx2;
var G__27274 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__27271,G__27272,G__27273,G__27274) : cljs.core.apply.call(null,G__27271,G__27272,G__27273,G__27274));
};
var G__27275 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__27276__i = 0, G__27276__a = new Array(arguments.length -  3);
while (G__27276__i < G__27276__a.length) {G__27276__a[G__27276__i] = arguments[G__27276__i + 3]; ++G__27276__i;}
  idxv = new cljs.core.IndexedSeq(G__27276__a,0);
} 
return G__27275__delegate.call(this,array,idx,idx2,idxv);};
G__27275.cljs$lang$maxFixedArity = 3;
G__27275.cljs$lang$applyTo = (function (arglist__27277){
var array = cljs.core.first(arglist__27277);
arglist__27277 = cljs.core.next(arglist__27277);
var idx = cljs.core.first(arglist__27277);
arglist__27277 = cljs.core.next(arglist__27277);
var idx2 = cljs.core.first(arglist__27277);
var idxv = cljs.core.rest(arglist__27277);
return G__27275__delegate(array,idx,idx2,idxv);
});
G__27275.cljs$core$IFn$_invoke$arity$variadic = G__27275__delegate;
return G__27275;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__27278 = null;
if (arguments.length > 3) {
var G__27279__i = 0, G__27279__a = new Array(arguments.length -  3);
while (G__27279__i < G__27279__a.length) {G__27279__a[G__27279__i] = arguments[G__27279__i + 3]; ++G__27279__i;}
G__27278 = new cljs.core.IndexedSeq(G__27279__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__27278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__27285 = (function (a,x){
a.push(x);

return a;
});
var G__27286 = [];
var G__27287 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__27285,G__27286,G__27287) : cljs.core.reduce.call(null,G__27285,G__27286,G__27287));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__27288__i = 0, G__27288__a = new Array(arguments.length -  2);
while (G__27288__i < G__27288__a.length) {G__27288__a[G__27288__i] = arguments[G__27288__i + 2]; ++G__27288__i;}
  args = new cljs.core.IndexedSeq(G__27288__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__27289){
var obj = cljs.core.first(arglist__27289);
arglist__27289 = cljs.core.next(arglist__27289);
var s = cljs.core.first(arglist__27289);
var args = cljs.core.rest(arglist__27289);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj27291 = {};
return obj27291;
})();


cljs.core.IFn = (function (){var obj27293 = {};
return obj27293;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27339 = x__15088__auto__;
return goog.typeOf(G__27339);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27341 = x__15088__auto__;
return goog.typeOf(G__27341);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27343 = x__15088__auto__;
return goog.typeOf(G__27343);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27345 = x__15088__auto__;
return goog.typeOf(G__27345);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27347 = x__15088__auto__;
return goog.typeOf(G__27347);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27349 = x__15088__auto__;
return goog.typeOf(G__27349);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27351 = x__15088__auto__;
return goog.typeOf(G__27351);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27353 = x__15088__auto__;
return goog.typeOf(G__27353);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27355 = x__15088__auto__;
return goog.typeOf(G__27355);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27357 = x__15088__auto__;
return goog.typeOf(G__27357);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27359 = x__15088__auto__;
return goog.typeOf(G__27359);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27361 = x__15088__auto__;
return goog.typeOf(G__27361);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27363 = x__15088__auto__;
return goog.typeOf(G__27363);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27365 = x__15088__auto__;
return goog.typeOf(G__27365);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27367 = x__15088__auto__;
return goog.typeOf(G__27367);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27369 = x__15088__auto__;
return goog.typeOf(G__27369);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27371 = x__15088__auto__;
return goog.typeOf(G__27371);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27373 = x__15088__auto__;
return goog.typeOf(G__27373);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27375 = x__15088__auto__;
return goog.typeOf(G__27375);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27377 = x__15088__auto__;
return goog.typeOf(G__27377);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27379 = x__15088__auto__;
return goog.typeOf(G__27379);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._invoke[(function (){var G__27381 = x__15088__auto__;
return goog.typeOf(G__27381);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._invoke["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj27383 = {};
return obj27383;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__14432__auto__ = value;
if(and__14432__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__14432__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__15088__auto__ = (((value == null))?null:value);
return (function (){var or__14444__auto__ = (cljs.core._clone[(function (){var G__27387 = x__15088__auto__;
return goog.typeOf(G__27387);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._clone["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj27389 = {};
return obj27389;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._count[(function (){var G__27393 = x__15088__auto__;
return goog.typeOf(G__27393);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._count["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj27395 = {};
return obj27395;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._empty[(function (){var G__27399 = x__15088__auto__;
return goog.typeOf(G__27399);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._empty["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj27401 = {};
return obj27401;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._conj[(function (){var G__27405 = x__15088__auto__;
return goog.typeOf(G__27405);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._conj["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj27407 = {};
return obj27407;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._nth[(function (){var G__27413 = x__15088__auto__;
return goog.typeOf(G__27413);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._nth["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._nth[(function (){var G__27415 = x__15088__auto__;
return goog.typeOf(G__27415);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._nth["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj27417 = {};
return obj27417;
})();


cljs.core.ISeq = (function (){var obj27419 = {};
return obj27419;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._first[(function (){var G__27423 = x__15088__auto__;
return goog.typeOf(G__27423);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._first["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._rest[(function (){var G__27427 = x__15088__auto__;
return goog.typeOf(G__27427);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._rest["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj27429 = {};
return obj27429;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._next[(function (){var G__27433 = x__15088__auto__;
return goog.typeOf(G__27433);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._next["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj27435 = {};
return obj27435;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._lookup[(function (){var G__27441 = x__15088__auto__;
return goog.typeOf(G__27441);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._lookup["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._lookup[(function (){var G__27443 = x__15088__auto__;
return goog.typeOf(G__27443);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._lookup["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj27445 = {};
return obj27445;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__27449 = x__15088__auto__;
return goog.typeOf(G__27449);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._assoc[(function (){var G__27453 = x__15088__auto__;
return goog.typeOf(G__27453);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._assoc["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj27455 = {};
return obj27455;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._dissoc[(function (){var G__27459 = x__15088__auto__;
return goog.typeOf(G__27459);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._dissoc["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj27461 = {};
return obj27461;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._key[(function (){var G__27465 = x__15088__auto__;
return goog.typeOf(G__27465);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._key["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._val[(function (){var G__27469 = x__15088__auto__;
return goog.typeOf(G__27469);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._val["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj27471 = {};
return obj27471;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._disjoin[(function (){var G__27475 = x__15088__auto__;
return goog.typeOf(G__27475);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._disjoin["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj27477 = {};
return obj27477;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._peek[(function (){var G__27481 = x__15088__auto__;
return goog.typeOf(G__27481);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._peek["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._pop[(function (){var G__27485 = x__15088__auto__;
return goog.typeOf(G__27485);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._pop["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj27487 = {};
return obj27487;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._assoc_n[(function (){var G__27491 = x__15088__auto__;
return goog.typeOf(G__27491);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj27493 = {};
return obj27493;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._deref[(function (){var G__27497 = x__15088__auto__;
return goog.typeOf(G__27497);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._deref["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj27499 = {};
return obj27499;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._deref_with_timeout[(function (){var G__27503 = x__15088__auto__;
return goog.typeOf(G__27503);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj27505 = {};
return obj27505;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._meta[(function (){var G__27509 = x__15088__auto__;
return goog.typeOf(G__27509);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._meta["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj27511 = {};
return obj27511;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._with_meta[(function (){var G__27515 = x__15088__auto__;
return goog.typeOf(G__27515);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._with_meta["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj27517 = {};
return obj27517;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._reduce[(function (){var G__27523 = x__15088__auto__;
return goog.typeOf(G__27523);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._reduce["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._reduce[(function (){var G__27525 = x__15088__auto__;
return goog.typeOf(G__27525);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._reduce["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj27527 = {};
return obj27527;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._kv_reduce[(function (){var G__27531 = x__15088__auto__;
return goog.typeOf(G__27531);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj27533 = {};
return obj27533;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._equiv[(function (){var G__27537 = x__15088__auto__;
return goog.typeOf(G__27537);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._equiv["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj27539 = {};
return obj27539;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._hash[(function (){var G__27543 = x__15088__auto__;
return goog.typeOf(G__27543);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._hash["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj27545 = {};
return obj27545;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._seq[(function (){var G__27549 = x__15088__auto__;
return goog.typeOf(G__27549);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._seq["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj27551 = {};
return obj27551;
})();


cljs.core.IList = (function (){var obj27553 = {};
return obj27553;
})();


cljs.core.IRecord = (function (){var obj27555 = {};
return obj27555;
})();


cljs.core.IReversible = (function (){var obj27557 = {};
return obj27557;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._rseq[(function (){var G__27561 = x__15088__auto__;
return goog.typeOf(G__27561);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._rseq["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj27563 = {};
return obj27563;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._sorted_seq[(function (){var G__27567 = x__15088__auto__;
return goog.typeOf(G__27567);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._sorted_seq_from[(function (){var G__27571 = x__15088__auto__;
return goog.typeOf(G__27571);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._entry_key[(function (){var G__27575 = x__15088__auto__;
return goog.typeOf(G__27575);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._entry_key["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._comparator[(function (){var G__27579 = x__15088__auto__;
return goog.typeOf(G__27579);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._comparator["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj27581 = {};
return obj27581;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__14432__auto__ = writer;
if(and__14432__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__14432__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__15088__auto__ = (((writer == null))?null:writer);
return (function (){var or__14444__auto__ = (cljs.core._write[(function (){var G__27585 = x__15088__auto__;
return goog.typeOf(G__27585);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._write["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__14432__auto__ = writer;
if(and__14432__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__14432__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__15088__auto__ = (((writer == null))?null:writer);
return (function (){var or__14444__auto__ = (cljs.core._flush[(function (){var G__27589 = x__15088__auto__;
return goog.typeOf(G__27589);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._flush["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj27591 = {};
return obj27591;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._pr_writer[(function (){var G__27595 = x__15088__auto__;
return goog.typeOf(G__27595);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj27597 = {};
return obj27597;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__14432__auto__ = d;
if(and__14432__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__14432__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__15088__auto__ = (((d == null))?null:d);
return (function (){var or__14444__auto__ = (cljs.core._realized_QMARK_[(function (){var G__27601 = x__15088__auto__;
return goog.typeOf(G__27601);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj27603 = {};
return obj27603;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._notify_watches[(function (){var G__27607 = x__15088__auto__;
return goog.typeOf(G__27607);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._add_watch[(function (){var G__27611 = x__15088__auto__;
return goog.typeOf(G__27611);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._add_watch["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__14432__auto__ = this$;
if(and__14432__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__14432__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__15088__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14444__auto__ = (cljs.core._remove_watch[(function (){var G__27615 = x__15088__auto__;
return goog.typeOf(G__27615);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj27617 = {};
return obj27617;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._as_transient[(function (){var G__27621 = x__15088__auto__;
return goog.typeOf(G__27621);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._as_transient["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj27623 = {};
return obj27623;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._conj_BANG_[(function (){var G__27627 = x__15088__auto__;
return goog.typeOf(G__27627);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._persistent_BANG_[(function (){var G__27631 = x__15088__auto__;
return goog.typeOf(G__27631);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj27633 = {};
return obj27633;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._assoc_BANG_[(function (){var G__27637 = x__15088__auto__;
return goog.typeOf(G__27637);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj27639 = {};
return obj27639;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__27643 = x__15088__auto__;
return goog.typeOf(G__27643);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj27645 = {};
return obj27645;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__27649 = x__15088__auto__;
return goog.typeOf(G__27649);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._pop_BANG_[(function (){var G__27653 = x__15088__auto__;
return goog.typeOf(G__27653);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj27655 = {};
return obj27655;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__14432__auto__ = tcoll;
if(and__14432__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__15088__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14444__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__27659 = x__15088__auto__;
return goog.typeOf(G__27659);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj27661 = {};
return obj27661;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._compare[(function (){var G__27665 = x__15088__auto__;
return goog.typeOf(G__27665);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._compare["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj27667 = {};
return obj27667;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._drop_first[(function (){var G__27671 = x__15088__auto__;
return goog.typeOf(G__27671);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._drop_first["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj27673 = {};
return obj27673;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._chunked_first[(function (){var G__27677 = x__15088__auto__;
return goog.typeOf(G__27677);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._chunked_rest[(function (){var G__27681 = x__15088__auto__;
return goog.typeOf(G__27681);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj27683 = {};
return obj27683;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._chunked_next[(function (){var G__27687 = x__15088__auto__;
return goog.typeOf(G__27687);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj27689 = {};
return obj27689;
})();

cljs.core._name = (function _name(x){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._name[(function (){var G__27693 = x__15088__auto__;
return goog.typeOf(G__27693);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._name["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._namespace[(function (){var G__27697 = x__15088__auto__;
return goog.typeOf(G__27697);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._namespace["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj27699 = {};
return obj27699;
})();


cljs.core.IReset = (function (){var obj27701 = {};
return obj27701;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._reset_BANG_[(function (){var G__27705 = x__15088__auto__;
return goog.typeOf(G__27705);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj27707 = {};
return obj27707;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._swap_BANG_[(function (){var G__27717 = x__15088__auto__;
return goog.typeOf(G__27717);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._swap_BANG_[(function (){var G__27719 = x__15088__auto__;
return goog.typeOf(G__27719);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._swap_BANG_[(function (){var G__27721 = x__15088__auto__;
return goog.typeOf(G__27721);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._swap_BANG_[(function (){var G__27723 = x__15088__auto__;
return goog.typeOf(G__27723);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj27725 = {};
return obj27725;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__14432__auto__ = o;
if(and__14432__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__14432__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__15088__auto__ = (((o == null))?null:o);
return (function (){var or__14444__auto__ = (cljs.core._vreset_BANG_[(function (){var G__27729 = x__15088__auto__;
return goog.typeOf(G__27729);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj27731 = {};
return obj27731;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__14432__auto__ = coll;
if(and__14432__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__14432__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__15088__auto__ = (((coll == null))?null:coll);
return (function (){var or__14444__auto__ = (cljs.core._iterator[(function (){var G__27735 = x__15088__auto__;
return goog.typeOf(G__27735);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._iterator["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__27738 = (4294967295);
var G__27739 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__27738,G__27739) : Math.imul.call(null,G__27738,G__27739));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__27742 = a;
var G__27743 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__27742,G__27743) : Math.imul.call(null,G__27742,G__27743));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__27744 = (i + (2));
var G__27745 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__27744;
h1 = G__27745;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj27747 = {};
return obj27747;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__27748 = (i + (1));
var G__27749 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__27748;
hash = G__27749;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj27753 = {};
return obj27753;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__27756 = o;
if(G__27756){
var bit__15118__auto__ = (G__27756.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__15118__auto__) || (G__27756.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__27757 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__27757) : Math.floor.call(null,G__27757));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__14432__auto__ = cljs.core.not(a.ns);
if(and__14432__auto__){
return b.ns;
} else {
return and__14432__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__27764 = a.ns;
var G__27765 = b.ns;
return goog.array.defaultCompare(G__27764,G__27765);
})();
if(((0) === nsc)){
var G__27766 = a.name;
var G__27767 = b.name;
return goog.array.defaultCompare(G__27766,G__27767);
} else {
return nsc;
}
}
} else {
var G__27768 = a.name;
var G__27769 = b.name;
return goog.array.defaultCompare(G__27768,G__27769);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__14865__auto__ = self__._hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__27771 = null;
var G__27771__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__27771__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__27771 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__27771__2.call(this,self__,coll);
case 3:
return G__27771__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27771.cljs$core$IFn$_invoke$arity$2 = G__27771__2;
G__27771.cljs$core$IFn$_invoke$arity$3 = G__27771__3;
return G__27771;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args27770){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27770)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__27819 = null;
var G__27819__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__27819__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__27819__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__27819__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__27819__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__27819__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__27819__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__27819__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__27819__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__27819__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__27819__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__27819__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__27819__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__27819__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__27819__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__27819__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__27819__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__27819__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__27819__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__27819__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__27819__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__27819__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27775 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__27776 = a;
var G__27777 = b;
var G__27778 = c;
var G__27779 = d;
var G__27780 = e;
var G__27781 = f;
var G__27782 = g;
var G__27783 = h;
var G__27784 = i;
var G__27785 = j;
var G__27786 = k;
var G__27787 = l;
var G__27788 = m;
var G__27789 = n;
var G__27790 = o;
var G__27791 = p;
var G__27792 = q;
var G__27793 = r;
var G__27794 = s;
var G__27795 = t;
var G__27796 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__27775,G__27776,G__27777,G__27778,G__27779,G__27780,G__27781,G__27782,G__27783,G__27784,G__27785,G__27786,G__27787,G__27788,G__27789,G__27790,G__27791,G__27792,G__27793,G__27794,G__27795,G__27796) : cljs.core.apply.call(null,G__27775,G__27776,G__27777,G__27778,G__27779,G__27780,G__27781,G__27782,G__27783,G__27784,G__27785,G__27786,G__27787,G__27788,G__27789,G__27790,G__27791,G__27792,G__27793,G__27794,G__27795,G__27796));
});
G__27819 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__27819__1.call(this,self__);
case 2:
return G__27819__2.call(this,self__,a);
case 3:
return G__27819__3.call(this,self__,a,b);
case 4:
return G__27819__4.call(this,self__,a,b,c);
case 5:
return G__27819__5.call(this,self__,a,b,c,d);
case 6:
return G__27819__6.call(this,self__,a,b,c,d,e);
case 7:
return G__27819__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__27819__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__27819__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__27819__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__27819__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__27819__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__27819__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__27819__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__27819__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__27819__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__27819__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__27819__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__27819__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__27819__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__27819__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__27819__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27819.cljs$core$IFn$_invoke$arity$1 = G__27819__1;
G__27819.cljs$core$IFn$_invoke$arity$2 = G__27819__2;
G__27819.cljs$core$IFn$_invoke$arity$3 = G__27819__3;
G__27819.cljs$core$IFn$_invoke$arity$4 = G__27819__4;
G__27819.cljs$core$IFn$_invoke$arity$5 = G__27819__5;
G__27819.cljs$core$IFn$_invoke$arity$6 = G__27819__6;
G__27819.cljs$core$IFn$_invoke$arity$7 = G__27819__7;
G__27819.cljs$core$IFn$_invoke$arity$8 = G__27819__8;
G__27819.cljs$core$IFn$_invoke$arity$9 = G__27819__9;
G__27819.cljs$core$IFn$_invoke$arity$10 = G__27819__10;
G__27819.cljs$core$IFn$_invoke$arity$11 = G__27819__11;
G__27819.cljs$core$IFn$_invoke$arity$12 = G__27819__12;
G__27819.cljs$core$IFn$_invoke$arity$13 = G__27819__13;
G__27819.cljs$core$IFn$_invoke$arity$14 = G__27819__14;
G__27819.cljs$core$IFn$_invoke$arity$15 = G__27819__15;
G__27819.cljs$core$IFn$_invoke$arity$16 = G__27819__16;
G__27819.cljs$core$IFn$_invoke$arity$17 = G__27819__17;
G__27819.cljs$core$IFn$_invoke$arity$18 = G__27819__18;
G__27819.cljs$core$IFn$_invoke$arity$19 = G__27819__19;
G__27819.cljs$core$IFn$_invoke$arity$20 = G__27819__20;
G__27819.cljs$core$IFn$_invoke$arity$21 = G__27819__21;
G__27819.cljs$core$IFn$_invoke$arity$22 = G__27819__22;
return G__27819;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args27774){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27774)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__27797 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__27798 = a;
var G__27799 = b;
var G__27800 = c;
var G__27801 = d;
var G__27802 = e;
var G__27803 = f;
var G__27804 = g;
var G__27805 = h;
var G__27806 = i;
var G__27807 = j;
var G__27808 = k;
var G__27809 = l;
var G__27810 = m;
var G__27811 = n;
var G__27812 = o;
var G__27813 = p;
var G__27814 = q;
var G__27815 = r;
var G__27816 = s;
var G__27817 = t;
var G__27818 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__27797,G__27798,G__27799,G__27800,G__27801,G__27802,G__27803,G__27804,G__27805,G__27806,G__27807,G__27808,G__27809,G__27810,G__27811,G__27812,G__27813,G__27814,G__27815,G__27816,G__27817,G__27818) : cljs.core.apply.call(null,G__27797,G__27798,G__27799,G__27800,G__27801,G__27802,G__27803,G__27804,G__27805,G__27806,G__27807,G__27808,G__27809,G__27810,G__27811,G__27812,G__27813,G__27814,G__27815,G__27816,G__27817,G__27818));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__27821 = x;
if(G__27821){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto__ = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return G__27821.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__27821.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__27821);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__27821);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__27823 = value;
if(G__27823){
var bit__15125__auto__ = (G__27823.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__15125__auto__) || (G__27823.cljs$core$ICloneable$)){
return true;
} else {
if((!G__27823.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__27823);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__27823);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__27825 = coll;
if(G__27825){
var bit__15118__auto__ = (G__27825.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__15118__auto__) || (G__27825.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__27827 = coll;
if(G__27827){
var bit__15118__auto__ = (G__27827.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15118__auto__) || (G__27827.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__27829 = coll;
if(G__27829){
var bit__15118__auto__ = (G__27829.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15118__auto__) || (G__27829.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__27831 = coll;
if(G__27831){
var bit__15118__auto__ = (G__27831.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15118__auto__) || (G__27831.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__27836__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__27837 = y;
var G__27838 = cljs.core.first(more);
var G__27839 = cljs.core.next(more);
x = G__27837;
y = G__27838;
more = G__27839;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27836 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27840__i = 0, G__27840__a = new Array(arguments.length -  2);
while (G__27840__i < G__27840__a.length) {G__27840__a[G__27840__i] = arguments[G__27840__i + 2]; ++G__27840__i;}
  more = new cljs.core.IndexedSeq(G__27840__a,0);
} 
return G__27836__delegate.call(this,x,y,more);};
G__27836.cljs$lang$maxFixedArity = 2;
G__27836.cljs$lang$applyTo = (function (arglist__27841){
var x = cljs.core.first(arglist__27841);
arglist__27841 = cljs.core.next(arglist__27841);
var y = cljs.core.first(arglist__27841);
var more = cljs.core.rest(arglist__27841);
return G__27836__delegate(x,y,more);
});
G__27836.cljs$core$IFn$_invoke$arity$variadic = G__27836__delegate;
return G__27836;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__27842 = null;
if (arguments.length > 2) {
var G__27843__i = 0, G__27843__a = new Array(arguments.length -  2);
while (G__27843__i < G__27843__a.length) {G__27843__a[G__27843__i] = arguments[G__27843__i + 2]; ++G__27843__i;}
G__27842 = new cljs.core.IndexedSeq(G__27843__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27842);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__27844 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__27844) : cljs.core.es6_iterator_seq.call(null,G__27844));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__27845 = (n + (1));
var G__27846 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__27847 = cljs.core.next(coll__$1);
n = G__27845;
hash_code = G__27846;
coll__$1 = G__27847;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__27848 = (n + (1));
var G__27849 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__27850 = cljs.core.next(coll__$1);
n = G__27848;
hash_code = G__27849;
coll__$1 = G__27850;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__27851 = o;
return goog.getUid(G__27851);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__27853 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27853) : cljs.core.deref.call(null,G__27853));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__27860 = val;
var G__27861 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27860,G__27861) : f.call(null,G__27860,G__27861));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27866 = nval;
var G__27867 = (n + (1));
val = G__27866;
n = G__27867;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__27862 = val__$1;
var G__27863 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27862,G__27863) : f.call(null,G__27862,G__27863));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27868 = nval;
var G__27869 = (n + (1));
val__$1 = G__27868;
n = G__27869;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__27864 = val__$1;
var G__27865 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27864,G__27865) : f.call(null,G__27864,G__27865));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27870 = nval;
var G__27871 = (n + (1));
val__$1 = G__27870;
n = G__27871;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__27878 = val;
var G__27879 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27878,G__27879) : f.call(null,G__27878,G__27879));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27884 = nval;
var G__27885 = (n + (1));
val = G__27884;
n = G__27885;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__27880 = val__$1;
var G__27881 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27880,G__27881) : f.call(null,G__27880,G__27881));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27886 = nval;
var G__27887 = (n + (1));
val__$1 = G__27886;
n = G__27887;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__27882 = val__$1;
var G__27883 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27882,G__27883) : f.call(null,G__27882,G__27883));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27888 = nval;
var G__27889 = (n + (1));
val__$1 = G__27888;
n = G__27889;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__27891 = x;
if(G__27891){
var bit__15125__auto__ = (G__27891.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__15125__auto__) || (G__27891.cljs$core$ICounted$)){
return true;
} else {
if((!G__27891.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__27891);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__27891);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__27893 = x;
if(G__27893){
var bit__15125__auto__ = (G__27893.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__15125__auto__) || (G__27893.cljs$core$IIndexed$)){
return true;
} else {
if((!G__27893.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__27893);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__27893);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__27894 = coll__$1;
var G__27895 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__27894,G__27895) : cljs.core.equiv_sequential.call(null,G__27894,G__27895));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27896 = o;
var G__27897 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__27896,G__27897) : cljs.core.cons.call(null,G__27896,G__27897));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__27900 = coll__$1;
var G__27901 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__27900,G__27901) : cljs.core.equiv_sequential.call(null,G__27900,G__27901));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__27902 = cljs.core.List.EMPTY;
var G__27903 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__27902,G__27903) : cljs.core.with_meta.call(null,G__27902,G__27903));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__27904 = f;
var G__27905 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__27904,G__27905) : cljs.core.seq_reduce.call(null,G__27904,G__27905));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__27906 = f;
var G__27907 = start;
var G__27908 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__27906,G__27907,G__27908) : cljs.core.seq_reduce.call(null,G__27906,G__27907,G__27908));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27909 = o;
var G__27910 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__27909,G__27910) : cljs.core.cons.call(null,G__27909,G__27910));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__27911 = sn;
s = G__27911;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__27916__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__27917 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__27918 = cljs.core.first(xs);
var G__27919 = cljs.core.next(xs);
coll = G__27917;
x = G__27918;
xs = G__27919;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__27916 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__27920__i = 0, G__27920__a = new Array(arguments.length -  2);
while (G__27920__i < G__27920__a.length) {G__27920__a[G__27920__i] = arguments[G__27920__i + 2]; ++G__27920__i;}
  xs = new cljs.core.IndexedSeq(G__27920__a,0);
} 
return G__27916__delegate.call(this,coll,x,xs);};
G__27916.cljs$lang$maxFixedArity = 2;
G__27916.cljs$lang$applyTo = (function (arglist__27921){
var coll = cljs.core.first(arglist__27921);
arglist__27921 = cljs.core.next(arglist__27921);
var x = cljs.core.first(arglist__27921);
var xs = cljs.core.rest(arglist__27921);
return G__27916__delegate(coll,x,xs);
});
G__27916.cljs$core$IFn$_invoke$arity$variadic = G__27916__delegate;
return G__27916;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__27922 = null;
if (arguments.length > 2) {
var G__27923__i = 0, G__27923__a = new Array(arguments.length -  2);
while (G__27923__i < G__27923__a.length) {G__27923__a[G__27923__i] = arguments[G__27923__i + 2]; ++G__27923__i;}
G__27922 = new cljs.core.IndexedSeq(G__27923__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__27922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__27924 = cljs.core.next(s);
var G__27925 = (acc + (1));
s = G__27924;
acc = G__27925;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__27927 = coll;
if(G__27927){
var bit__15118__auto__ = (G__27927.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__15118__auto__) || (G__27927.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__27928 = cljs.core.next(coll);
var G__27929 = (n - (1));
coll = G__27928;
n = G__27929;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__27930 = cljs.core.next(coll);
var G__27931 = (n - (1));
var G__27932 = not_found;
coll = G__27930;
n = G__27931;
not_found = G__27932;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__27937 = coll;
if(G__27937){
var bit__15118__auto__ = (G__27937.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__15118__auto__) || (G__27937.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__27938 = coll;
if(G__27938){
var bit__15125__auto__ = (G__27938.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15125__auto__) || (G__27938.cljs$core$ISeq$)){
return true;
} else {
if((!G__27938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27938);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__27939 = coll;
if(G__27939){
var bit__15118__auto__ = (G__27939.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__15118__auto__) || (G__27939.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__27940 = coll;
if(G__27940){
var bit__15125__auto__ = (G__27940.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15125__auto__) || (G__27940.cljs$core$ISeq$)){
return true;
} else {
if((!G__27940.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27940);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27940);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__27941 = (n__$1 - (1));
var G__27942 = cljs.core.rest(xs);
n__$1 = G__27941;
xs = G__27942;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__27945 = o;
if(G__27945){
var bit__15118__auto__ = (G__27945.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__15118__auto__) || (G__27945.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__27946 = o;
if(G__27946){
var bit__15118__auto__ = (G__27946.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__15118__auto__) || (G__27946.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__27950__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__27951 = ret;
var G__27952 = cljs.core.first(kvs);
var G__27953 = cljs.core.second(kvs);
var G__27954 = cljs.core.nnext(kvs);
coll = G__27951;
k = G__27952;
v = G__27953;
kvs = G__27954;
continue;
} else {
return ret;
}
break;
}
};
var G__27950 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__27955__i = 0, G__27955__a = new Array(arguments.length -  3);
while (G__27955__i < G__27955__a.length) {G__27955__a[G__27955__i] = arguments[G__27955__i + 3]; ++G__27955__i;}
  kvs = new cljs.core.IndexedSeq(G__27955__a,0);
} 
return G__27950__delegate.call(this,coll,k,v,kvs);};
G__27950.cljs$lang$maxFixedArity = 3;
G__27950.cljs$lang$applyTo = (function (arglist__27956){
var coll = cljs.core.first(arglist__27956);
arglist__27956 = cljs.core.next(arglist__27956);
var k = cljs.core.first(arglist__27956);
arglist__27956 = cljs.core.next(arglist__27956);
var v = cljs.core.first(arglist__27956);
var kvs = cljs.core.rest(arglist__27956);
return G__27950__delegate(coll,k,v,kvs);
});
G__27950.cljs$core$IFn$_invoke$arity$variadic = G__27950__delegate;
return G__27950;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__27957 = null;
if (arguments.length > 3) {
var G__27958__i = 0, G__27958__a = new Array(arguments.length -  3);
while (G__27958__i < G__27958__a.length) {G__27958__a[G__27958__i] = arguments[G__27958__i + 3]; ++G__27958__i;}
G__27957 = new cljs.core.IndexedSeq(G__27958__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__27957);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__27961__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__27962 = ret;
var G__27963 = cljs.core.first(ks);
var G__27964 = cljs.core.next(ks);
coll = G__27962;
k = G__27963;
ks = G__27964;
continue;
} else {
return ret;
}
}
break;
}
};
var G__27961 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__27965__i = 0, G__27965__a = new Array(arguments.length -  2);
while (G__27965__i < G__27965__a.length) {G__27965__a[G__27965__i] = arguments[G__27965__i + 2]; ++G__27965__i;}
  ks = new cljs.core.IndexedSeq(G__27965__a,0);
} 
return G__27961__delegate.call(this,coll,k,ks);};
G__27961.cljs$lang$maxFixedArity = 2;
G__27961.cljs$lang$applyTo = (function (arglist__27966){
var coll = cljs.core.first(arglist__27966);
arglist__27966 = cljs.core.next(arglist__27966);
var k = cljs.core.first(arglist__27966);
var ks = cljs.core.rest(arglist__27966);
return G__27961__delegate(coll,k,ks);
});
G__27961.cljs$core$IFn$_invoke$arity$variadic = G__27961__delegate;
return G__27961;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__27967 = null;
if (arguments.length > 2) {
var G__27968__i = 0, G__27968__a = new Array(arguments.length -  2);
while (G__27968__i < G__27968__a.length) {G__27968__a[G__27968__i] = arguments[G__27968__i + 2]; ++G__27968__i;}
G__27967 = new cljs.core.IndexedSeq(G__27968__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__27967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__14444__auto__ = (function (){var G__27973 = f;
return goog.isFunction(G__27973);
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__27974 = f;
if(G__27974){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto____$1 = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
return G__27974.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__27974.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__27974);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__27974);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__28440 = null;
var G__28440__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__28440__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27976 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__27976) : self__.afn.call(null,G__27976));
});
var G__28440__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27977 = a;
var G__27978 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__27977,G__27978) : self__.afn.call(null,G__27977,G__27978));
});
var G__28440__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27979 = a;
var G__27980 = b;
var G__27981 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__27979,G__27980,G__27981) : self__.afn.call(null,G__27979,G__27980,G__27981));
});
var G__28440__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27982 = a;
var G__27983 = b;
var G__27984 = c;
var G__27985 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__27982,G__27983,G__27984,G__27985) : self__.afn.call(null,G__27982,G__27983,G__27984,G__27985));
});
var G__28440__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27986 = a;
var G__27987 = b;
var G__27988 = c;
var G__27989 = d;
var G__27990 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__27986,G__27987,G__27988,G__27989,G__27990) : self__.afn.call(null,G__27986,G__27987,G__27988,G__27989,G__27990));
});
var G__28440__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27991 = a;
var G__27992 = b;
var G__27993 = c;
var G__27994 = d;
var G__27995 = e;
var G__27996 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__27991,G__27992,G__27993,G__27994,G__27995,G__27996) : self__.afn.call(null,G__27991,G__27992,G__27993,G__27994,G__27995,G__27996));
});
var G__28440__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27997 = a;
var G__27998 = b;
var G__27999 = c;
var G__28000 = d;
var G__28001 = e;
var G__28002 = f;
var G__28003 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__27997,G__27998,G__27999,G__28000,G__28001,G__28002,G__28003) : self__.afn.call(null,G__27997,G__27998,G__27999,G__28000,G__28001,G__28002,G__28003));
});
var G__28440__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28004 = a;
var G__28005 = b;
var G__28006 = c;
var G__28007 = d;
var G__28008 = e;
var G__28009 = f;
var G__28010 = g;
var G__28011 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__28004,G__28005,G__28006,G__28007,G__28008,G__28009,G__28010,G__28011) : self__.afn.call(null,G__28004,G__28005,G__28006,G__28007,G__28008,G__28009,G__28010,G__28011));
});
var G__28440__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28012 = a;
var G__28013 = b;
var G__28014 = c;
var G__28015 = d;
var G__28016 = e;
var G__28017 = f;
var G__28018 = g;
var G__28019 = h;
var G__28020 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__28012,G__28013,G__28014,G__28015,G__28016,G__28017,G__28018,G__28019,G__28020) : self__.afn.call(null,G__28012,G__28013,G__28014,G__28015,G__28016,G__28017,G__28018,G__28019,G__28020));
});
var G__28440__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28021 = a;
var G__28022 = b;
var G__28023 = c;
var G__28024 = d;
var G__28025 = e;
var G__28026 = f;
var G__28027 = g;
var G__28028 = h;
var G__28029 = i;
var G__28030 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__28021,G__28022,G__28023,G__28024,G__28025,G__28026,G__28027,G__28028,G__28029,G__28030) : self__.afn.call(null,G__28021,G__28022,G__28023,G__28024,G__28025,G__28026,G__28027,G__28028,G__28029,G__28030));
});
var G__28440__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28031 = a;
var G__28032 = b;
var G__28033 = c;
var G__28034 = d;
var G__28035 = e;
var G__28036 = f;
var G__28037 = g;
var G__28038 = h;
var G__28039 = i;
var G__28040 = j;
var G__28041 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__28031,G__28032,G__28033,G__28034,G__28035,G__28036,G__28037,G__28038,G__28039,G__28040,G__28041) : self__.afn.call(null,G__28031,G__28032,G__28033,G__28034,G__28035,G__28036,G__28037,G__28038,G__28039,G__28040,G__28041));
});
var G__28440__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28042 = a;
var G__28043 = b;
var G__28044 = c;
var G__28045 = d;
var G__28046 = e;
var G__28047 = f;
var G__28048 = g;
var G__28049 = h;
var G__28050 = i;
var G__28051 = j;
var G__28052 = k;
var G__28053 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__28042,G__28043,G__28044,G__28045,G__28046,G__28047,G__28048,G__28049,G__28050,G__28051,G__28052,G__28053) : self__.afn.call(null,G__28042,G__28043,G__28044,G__28045,G__28046,G__28047,G__28048,G__28049,G__28050,G__28051,G__28052,G__28053));
});
var G__28440__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28054 = a;
var G__28055 = b;
var G__28056 = c;
var G__28057 = d;
var G__28058 = e;
var G__28059 = f;
var G__28060 = g;
var G__28061 = h;
var G__28062 = i;
var G__28063 = j;
var G__28064 = k;
var G__28065 = l;
var G__28066 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__28054,G__28055,G__28056,G__28057,G__28058,G__28059,G__28060,G__28061,G__28062,G__28063,G__28064,G__28065,G__28066) : self__.afn.call(null,G__28054,G__28055,G__28056,G__28057,G__28058,G__28059,G__28060,G__28061,G__28062,G__28063,G__28064,G__28065,G__28066));
});
var G__28440__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28067 = a;
var G__28068 = b;
var G__28069 = c;
var G__28070 = d;
var G__28071 = e;
var G__28072 = f;
var G__28073 = g;
var G__28074 = h;
var G__28075 = i;
var G__28076 = j;
var G__28077 = k;
var G__28078 = l;
var G__28079 = m;
var G__28080 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__28067,G__28068,G__28069,G__28070,G__28071,G__28072,G__28073,G__28074,G__28075,G__28076,G__28077,G__28078,G__28079,G__28080) : self__.afn.call(null,G__28067,G__28068,G__28069,G__28070,G__28071,G__28072,G__28073,G__28074,G__28075,G__28076,G__28077,G__28078,G__28079,G__28080));
});
var G__28440__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28081 = a;
var G__28082 = b;
var G__28083 = c;
var G__28084 = d;
var G__28085 = e;
var G__28086 = f;
var G__28087 = g;
var G__28088 = h;
var G__28089 = i;
var G__28090 = j;
var G__28091 = k;
var G__28092 = l;
var G__28093 = m;
var G__28094 = n;
var G__28095 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__28081,G__28082,G__28083,G__28084,G__28085,G__28086,G__28087,G__28088,G__28089,G__28090,G__28091,G__28092,G__28093,G__28094,G__28095) : self__.afn.call(null,G__28081,G__28082,G__28083,G__28084,G__28085,G__28086,G__28087,G__28088,G__28089,G__28090,G__28091,G__28092,G__28093,G__28094,G__28095));
});
var G__28440__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28096 = a;
var G__28097 = b;
var G__28098 = c;
var G__28099 = d;
var G__28100 = e;
var G__28101 = f;
var G__28102 = g;
var G__28103 = h;
var G__28104 = i;
var G__28105 = j;
var G__28106 = k;
var G__28107 = l;
var G__28108 = m;
var G__28109 = n;
var G__28110 = o;
var G__28111 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__28096,G__28097,G__28098,G__28099,G__28100,G__28101,G__28102,G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109,G__28110,G__28111) : self__.afn.call(null,G__28096,G__28097,G__28098,G__28099,G__28100,G__28101,G__28102,G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109,G__28110,G__28111));
});
var G__28440__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28112 = a;
var G__28113 = b;
var G__28114 = c;
var G__28115 = d;
var G__28116 = e;
var G__28117 = f;
var G__28118 = g;
var G__28119 = h;
var G__28120 = i;
var G__28121 = j;
var G__28122 = k;
var G__28123 = l;
var G__28124 = m;
var G__28125 = n;
var G__28126 = o;
var G__28127 = p;
var G__28128 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__28112,G__28113,G__28114,G__28115,G__28116,G__28117,G__28118,G__28119,G__28120,G__28121,G__28122,G__28123,G__28124,G__28125,G__28126,G__28127,G__28128) : self__.afn.call(null,G__28112,G__28113,G__28114,G__28115,G__28116,G__28117,G__28118,G__28119,G__28120,G__28121,G__28122,G__28123,G__28124,G__28125,G__28126,G__28127,G__28128));
});
var G__28440__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28129 = a;
var G__28130 = b;
var G__28131 = c;
var G__28132 = d;
var G__28133 = e;
var G__28134 = f;
var G__28135 = g;
var G__28136 = h;
var G__28137 = i;
var G__28138 = j;
var G__28139 = k;
var G__28140 = l;
var G__28141 = m;
var G__28142 = n;
var G__28143 = o;
var G__28144 = p;
var G__28145 = q;
var G__28146 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__28129,G__28130,G__28131,G__28132,G__28133,G__28134,G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142,G__28143,G__28144,G__28145,G__28146) : self__.afn.call(null,G__28129,G__28130,G__28131,G__28132,G__28133,G__28134,G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142,G__28143,G__28144,G__28145,G__28146));
});
var G__28440__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28147 = a;
var G__28148 = b;
var G__28149 = c;
var G__28150 = d;
var G__28151 = e;
var G__28152 = f;
var G__28153 = g;
var G__28154 = h;
var G__28155 = i;
var G__28156 = j;
var G__28157 = k;
var G__28158 = l;
var G__28159 = m;
var G__28160 = n;
var G__28161 = o;
var G__28162 = p;
var G__28163 = q;
var G__28164 = r;
var G__28165 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__28147,G__28148,G__28149,G__28150,G__28151,G__28152,G__28153,G__28154,G__28155,G__28156,G__28157,G__28158,G__28159,G__28160,G__28161,G__28162,G__28163,G__28164,G__28165) : self__.afn.call(null,G__28147,G__28148,G__28149,G__28150,G__28151,G__28152,G__28153,G__28154,G__28155,G__28156,G__28157,G__28158,G__28159,G__28160,G__28161,G__28162,G__28163,G__28164,G__28165));
});
var G__28440__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28166 = a;
var G__28167 = b;
var G__28168 = c;
var G__28169 = d;
var G__28170 = e;
var G__28171 = f;
var G__28172 = g;
var G__28173 = h;
var G__28174 = i;
var G__28175 = j;
var G__28176 = k;
var G__28177 = l;
var G__28178 = m;
var G__28179 = n;
var G__28180 = o;
var G__28181 = p;
var G__28182 = q;
var G__28183 = r;
var G__28184 = s;
var G__28185 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__28166,G__28167,G__28168,G__28169,G__28170,G__28171,G__28172,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183,G__28184,G__28185) : self__.afn.call(null,G__28166,G__28167,G__28168,G__28169,G__28170,G__28171,G__28172,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183,G__28184,G__28185));
});
var G__28440__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28186 = self__.afn;
var G__28187 = a;
var G__28188 = b;
var G__28189 = c;
var G__28190 = d;
var G__28191 = e;
var G__28192 = f;
var G__28193 = g;
var G__28194 = h;
var G__28195 = i;
var G__28196 = j;
var G__28197 = k;
var G__28198 = l;
var G__28199 = m;
var G__28200 = n;
var G__28201 = o;
var G__28202 = p;
var G__28203 = q;
var G__28204 = r;
var G__28205 = s;
var G__28206 = t;
var G__28207 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__28186,G__28187,G__28188,G__28189,G__28190,G__28191,G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199,G__28200,G__28201,G__28202,G__28203,G__28204,G__28205,G__28206,G__28207) : cljs.core.apply.call(null,G__28186,G__28187,G__28188,G__28189,G__28190,G__28191,G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199,G__28200,G__28201,G__28202,G__28203,G__28204,G__28205,G__28206,G__28207));
});
G__28440 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__28440__1.call(this,self__);
case 2:
return G__28440__2.call(this,self__,a);
case 3:
return G__28440__3.call(this,self__,a,b);
case 4:
return G__28440__4.call(this,self__,a,b,c);
case 5:
return G__28440__5.call(this,self__,a,b,c,d);
case 6:
return G__28440__6.call(this,self__,a,b,c,d,e);
case 7:
return G__28440__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__28440__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__28440__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__28440__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__28440__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__28440__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__28440__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__28440__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__28440__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__28440__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__28440__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__28440__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__28440__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__28440__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__28440__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__28440__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28440.cljs$core$IFn$_invoke$arity$1 = G__28440__1;
G__28440.cljs$core$IFn$_invoke$arity$2 = G__28440__2;
G__28440.cljs$core$IFn$_invoke$arity$3 = G__28440__3;
G__28440.cljs$core$IFn$_invoke$arity$4 = G__28440__4;
G__28440.cljs$core$IFn$_invoke$arity$5 = G__28440__5;
G__28440.cljs$core$IFn$_invoke$arity$6 = G__28440__6;
G__28440.cljs$core$IFn$_invoke$arity$7 = G__28440__7;
G__28440.cljs$core$IFn$_invoke$arity$8 = G__28440__8;
G__28440.cljs$core$IFn$_invoke$arity$9 = G__28440__9;
G__28440.cljs$core$IFn$_invoke$arity$10 = G__28440__10;
G__28440.cljs$core$IFn$_invoke$arity$11 = G__28440__11;
G__28440.cljs$core$IFn$_invoke$arity$12 = G__28440__12;
G__28440.cljs$core$IFn$_invoke$arity$13 = G__28440__13;
G__28440.cljs$core$IFn$_invoke$arity$14 = G__28440__14;
G__28440.cljs$core$IFn$_invoke$arity$15 = G__28440__15;
G__28440.cljs$core$IFn$_invoke$arity$16 = G__28440__16;
G__28440.cljs$core$IFn$_invoke$arity$17 = G__28440__17;
G__28440.cljs$core$IFn$_invoke$arity$18 = G__28440__18;
G__28440.cljs$core$IFn$_invoke$arity$19 = G__28440__19;
G__28440.cljs$core$IFn$_invoke$arity$20 = G__28440__20;
G__28440.cljs$core$IFn$_invoke$arity$21 = G__28440__21;
G__28440.cljs$core$IFn$_invoke$arity$22 = G__28440__22;
return G__28440;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args27975){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27975)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__28208 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__28208) : self__.afn.call(null,G__28208));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__28209 = a;
var G__28210 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__28209,G__28210) : self__.afn.call(null,G__28209,G__28210));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__28211 = a;
var G__28212 = b;
var G__28213 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__28211,G__28212,G__28213) : self__.afn.call(null,G__28211,G__28212,G__28213));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__28214 = a;
var G__28215 = b;
var G__28216 = c;
var G__28217 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__28214,G__28215,G__28216,G__28217) : self__.afn.call(null,G__28214,G__28215,G__28216,G__28217));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__28218 = a;
var G__28219 = b;
var G__28220 = c;
var G__28221 = d;
var G__28222 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__28218,G__28219,G__28220,G__28221,G__28222) : self__.afn.call(null,G__28218,G__28219,G__28220,G__28221,G__28222));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__28223 = a;
var G__28224 = b;
var G__28225 = c;
var G__28226 = d;
var G__28227 = e;
var G__28228 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__28223,G__28224,G__28225,G__28226,G__28227,G__28228) : self__.afn.call(null,G__28223,G__28224,G__28225,G__28226,G__28227,G__28228));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__28229 = a;
var G__28230 = b;
var G__28231 = c;
var G__28232 = d;
var G__28233 = e;
var G__28234 = f;
var G__28235 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__28229,G__28230,G__28231,G__28232,G__28233,G__28234,G__28235) : self__.afn.call(null,G__28229,G__28230,G__28231,G__28232,G__28233,G__28234,G__28235));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__28236 = a;
var G__28237 = b;
var G__28238 = c;
var G__28239 = d;
var G__28240 = e;
var G__28241 = f;
var G__28242 = g;
var G__28243 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__28236,G__28237,G__28238,G__28239,G__28240,G__28241,G__28242,G__28243) : self__.afn.call(null,G__28236,G__28237,G__28238,G__28239,G__28240,G__28241,G__28242,G__28243));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__28244 = a;
var G__28245 = b;
var G__28246 = c;
var G__28247 = d;
var G__28248 = e;
var G__28249 = f;
var G__28250 = g;
var G__28251 = h;
var G__28252 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__28244,G__28245,G__28246,G__28247,G__28248,G__28249,G__28250,G__28251,G__28252) : self__.afn.call(null,G__28244,G__28245,G__28246,G__28247,G__28248,G__28249,G__28250,G__28251,G__28252));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__28253 = a;
var G__28254 = b;
var G__28255 = c;
var G__28256 = d;
var G__28257 = e;
var G__28258 = f;
var G__28259 = g;
var G__28260 = h;
var G__28261 = i;
var G__28262 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__28253,G__28254,G__28255,G__28256,G__28257,G__28258,G__28259,G__28260,G__28261,G__28262) : self__.afn.call(null,G__28253,G__28254,G__28255,G__28256,G__28257,G__28258,G__28259,G__28260,G__28261,G__28262));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__28263 = a;
var G__28264 = b;
var G__28265 = c;
var G__28266 = d;
var G__28267 = e;
var G__28268 = f;
var G__28269 = g;
var G__28270 = h;
var G__28271 = i;
var G__28272 = j;
var G__28273 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__28263,G__28264,G__28265,G__28266,G__28267,G__28268,G__28269,G__28270,G__28271,G__28272,G__28273) : self__.afn.call(null,G__28263,G__28264,G__28265,G__28266,G__28267,G__28268,G__28269,G__28270,G__28271,G__28272,G__28273));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__28274 = a;
var G__28275 = b;
var G__28276 = c;
var G__28277 = d;
var G__28278 = e;
var G__28279 = f;
var G__28280 = g;
var G__28281 = h;
var G__28282 = i;
var G__28283 = j;
var G__28284 = k;
var G__28285 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__28274,G__28275,G__28276,G__28277,G__28278,G__28279,G__28280,G__28281,G__28282,G__28283,G__28284,G__28285) : self__.afn.call(null,G__28274,G__28275,G__28276,G__28277,G__28278,G__28279,G__28280,G__28281,G__28282,G__28283,G__28284,G__28285));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__28286 = a;
var G__28287 = b;
var G__28288 = c;
var G__28289 = d;
var G__28290 = e;
var G__28291 = f;
var G__28292 = g;
var G__28293 = h;
var G__28294 = i;
var G__28295 = j;
var G__28296 = k;
var G__28297 = l;
var G__28298 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__28286,G__28287,G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295,G__28296,G__28297,G__28298) : self__.afn.call(null,G__28286,G__28287,G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295,G__28296,G__28297,G__28298));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__28299 = a;
var G__28300 = b;
var G__28301 = c;
var G__28302 = d;
var G__28303 = e;
var G__28304 = f;
var G__28305 = g;
var G__28306 = h;
var G__28307 = i;
var G__28308 = j;
var G__28309 = k;
var G__28310 = l;
var G__28311 = m;
var G__28312 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__28299,G__28300,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309,G__28310,G__28311,G__28312) : self__.afn.call(null,G__28299,G__28300,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309,G__28310,G__28311,G__28312));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__28313 = a;
var G__28314 = b;
var G__28315 = c;
var G__28316 = d;
var G__28317 = e;
var G__28318 = f;
var G__28319 = g;
var G__28320 = h;
var G__28321 = i;
var G__28322 = j;
var G__28323 = k;
var G__28324 = l;
var G__28325 = m;
var G__28326 = n;
var G__28327 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__28313,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326,G__28327) : self__.afn.call(null,G__28313,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326,G__28327));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__28328 = a;
var G__28329 = b;
var G__28330 = c;
var G__28331 = d;
var G__28332 = e;
var G__28333 = f;
var G__28334 = g;
var G__28335 = h;
var G__28336 = i;
var G__28337 = j;
var G__28338 = k;
var G__28339 = l;
var G__28340 = m;
var G__28341 = n;
var G__28342 = o;
var G__28343 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__28328,G__28329,G__28330,G__28331,G__28332,G__28333,G__28334,G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342,G__28343) : self__.afn.call(null,G__28328,G__28329,G__28330,G__28331,G__28332,G__28333,G__28334,G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342,G__28343));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__28344 = a;
var G__28345 = b;
var G__28346 = c;
var G__28347 = d;
var G__28348 = e;
var G__28349 = f;
var G__28350 = g;
var G__28351 = h;
var G__28352 = i;
var G__28353 = j;
var G__28354 = k;
var G__28355 = l;
var G__28356 = m;
var G__28357 = n;
var G__28358 = o;
var G__28359 = p;
var G__28360 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350,G__28351,G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360) : self__.afn.call(null,G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350,G__28351,G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__28361 = a;
var G__28362 = b;
var G__28363 = c;
var G__28364 = d;
var G__28365 = e;
var G__28366 = f;
var G__28367 = g;
var G__28368 = h;
var G__28369 = i;
var G__28370 = j;
var G__28371 = k;
var G__28372 = l;
var G__28373 = m;
var G__28374 = n;
var G__28375 = o;
var G__28376 = p;
var G__28377 = q;
var G__28378 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378) : self__.afn.call(null,G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__28379 = a;
var G__28380 = b;
var G__28381 = c;
var G__28382 = d;
var G__28383 = e;
var G__28384 = f;
var G__28385 = g;
var G__28386 = h;
var G__28387 = i;
var G__28388 = j;
var G__28389 = k;
var G__28390 = l;
var G__28391 = m;
var G__28392 = n;
var G__28393 = o;
var G__28394 = p;
var G__28395 = q;
var G__28396 = r;
var G__28397 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__28379,G__28380,G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391,G__28392,G__28393,G__28394,G__28395,G__28396,G__28397) : self__.afn.call(null,G__28379,G__28380,G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391,G__28392,G__28393,G__28394,G__28395,G__28396,G__28397));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__28398 = a;
var G__28399 = b;
var G__28400 = c;
var G__28401 = d;
var G__28402 = e;
var G__28403 = f;
var G__28404 = g;
var G__28405 = h;
var G__28406 = i;
var G__28407 = j;
var G__28408 = k;
var G__28409 = l;
var G__28410 = m;
var G__28411 = n;
var G__28412 = o;
var G__28413 = p;
var G__28414 = q;
var G__28415 = r;
var G__28416 = s;
var G__28417 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__28398,G__28399,G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412,G__28413,G__28414,G__28415,G__28416,G__28417) : self__.afn.call(null,G__28398,G__28399,G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412,G__28413,G__28414,G__28415,G__28416,G__28417));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__28418 = self__.afn;
var G__28419 = a;
var G__28420 = b;
var G__28421 = c;
var G__28422 = d;
var G__28423 = e;
var G__28424 = f;
var G__28425 = g;
var G__28426 = h;
var G__28427 = i;
var G__28428 = j;
var G__28429 = k;
var G__28430 = l;
var G__28431 = m;
var G__28432 = n;
var G__28433 = o;
var G__28434 = p;
var G__28435 = q;
var G__28436 = r;
var G__28437 = s;
var G__28438 = t;
var G__28439 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__28418,G__28419,G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429,G__28430,G__28431,G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439) : cljs.core.apply.call(null,G__28418,G__28419,G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429,G__28430,G__28431,G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__28444 = o;
if(G__28444){
var bit__15125__auto__ = (G__28444.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__15125__auto__) || (G__28444.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__28444.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__28444);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__28444);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__14432__auto__ = !((o == null));
if(and__14432__auto__){
var G__28448 = o;
if(G__28448){
var bit__15125__auto__ = (G__28448.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__15125__auto__) || (G__28448.cljs$core$IMeta$)){
return true;
} else {
if((!G__28448.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28448);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28448);
}
} else {
return and__14432__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__28451__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__28452 = ret;
var G__28453 = cljs.core.first(ks);
var G__28454 = cljs.core.next(ks);
coll = G__28452;
k = G__28453;
ks = G__28454;
continue;
} else {
return ret;
}
}
break;
}
};
var G__28451 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__28455__i = 0, G__28455__a = new Array(arguments.length -  2);
while (G__28455__i < G__28455__a.length) {G__28455__a[G__28455__i] = arguments[G__28455__i + 2]; ++G__28455__i;}
  ks = new cljs.core.IndexedSeq(G__28455__a,0);
} 
return G__28451__delegate.call(this,coll,k,ks);};
G__28451.cljs$lang$maxFixedArity = 2;
G__28451.cljs$lang$applyTo = (function (arglist__28456){
var coll = cljs.core.first(arglist__28456);
arglist__28456 = cljs.core.next(arglist__28456);
var k = cljs.core.first(arglist__28456);
var ks = cljs.core.rest(arglist__28456);
return G__28451__delegate(coll,k,ks);
});
G__28451.cljs$core$IFn$_invoke$arity$variadic = G__28451__delegate;
return G__28451;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__28457 = null;
if (arguments.length > 2) {
var G__28458__i = 0, G__28458__a = new Array(arguments.length -  2);
while (G__28458__i < G__28458__a.length) {G__28458__a[G__28458__i] = arguments[G__28458__i + 2]; ++G__28458__i;}
G__28457 = new cljs.core.IndexedSeq(G__28458__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__28457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__28460 = x;
if(G__28460){
var bit__15125__auto__ = (G__28460.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__15125__auto__) || (G__28460.cljs$core$ICollection$)){
return true;
} else {
if((!G__28460.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__28460);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__28460);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__28462 = x;
if(G__28462){
var bit__15125__auto__ = (G__28462.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__15125__auto__) || (G__28462.cljs$core$ISet$)){
return true;
} else {
if((!G__28462.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__28462);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__28462);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__28464 = x;
if(G__28464){
var bit__15125__auto__ = (G__28464.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__15125__auto__) || (G__28464.cljs$core$IAssociative$)){
return true;
} else {
if((!G__28464.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__28464);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__28464);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__28466 = x;
if(G__28466){
var bit__15125__auto__ = (G__28466.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__15125__auto__) || (G__28466.cljs$core$ISequential$)){
return true;
} else {
if((!G__28466.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__28466);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__28466);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__28468 = x;
if(G__28468){
var bit__15125__auto__ = (G__28468.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__15125__auto__) || (G__28468.cljs$core$ISorted$)){
return true;
} else {
if((!G__28468.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__28468);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__28468);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__28470 = x;
if(G__28470){
var bit__15125__auto__ = (G__28470.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__15125__auto__) || (G__28470.cljs$core$IReduce$)){
return true;
} else {
if((!G__28470.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__28470);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__28470);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__28472 = x;
if(G__28472){
var bit__15125__auto__ = (G__28472.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__15125__auto__) || (G__28472.cljs$core$IMap$)){
return true;
} else {
if((!G__28472.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__28472);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__28472);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__28474 = x;
if(G__28474){
var bit__15125__auto__ = (G__28474.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__15125__auto__) || (G__28474.cljs$core$IVector$)){
return true;
} else {
if((!G__28474.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__28474);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__28474);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__28476 = x;
if(G__28476){
var bit__15118__auto__ = (G__28476.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__15118__auto__) || (G__28476.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj28482 = {};
return obj28482;
});
var js_obj__1 = (function() { 
var G__28485__delegate = function (keyvals){
var G__28483 = goog.object.create;
var G__28484 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__28483,G__28484) : cljs.core.apply.call(null,G__28483,G__28484));
};
var G__28485 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28486__i = 0, G__28486__a = new Array(arguments.length -  0);
while (G__28486__i < G__28486__a.length) {G__28486__a[G__28486__i] = arguments[G__28486__i + 0]; ++G__28486__i;}
  keyvals = new cljs.core.IndexedSeq(G__28486__a,0);
} 
return G__28485__delegate.call(this,keyvals);};
G__28485.cljs$lang$maxFixedArity = 0;
G__28485.cljs$lang$applyTo = (function (arglist__28487){
var keyvals = cljs.core.seq(arglist__28487);
return G__28485__delegate(keyvals);
});
G__28485.cljs$core$IFn$_invoke$arity$variadic = G__28485__delegate;
return G__28485;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__28488 = null;
if (arguments.length > 0) {
var G__28489__i = 0, G__28489__a = new Array(arguments.length -  0);
while (G__28489__i < G__28489__a.length) {G__28489__a[G__28489__i] = arguments[G__28489__i + 0]; ++G__28489__i;}
G__28488 = new cljs.core.IndexedSeq(G__28489__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__28488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__28492_28494 = obj;
var G__28493_28495 = ((function (G__28492_28494,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__28492_28494,keys))
;
goog.object.forEach(G__28492_28494,G__28493_28495);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__28496 = (i__$1 + (1));
var G__28497 = (j__$1 + (1));
var G__28498 = (len__$1 - (1));
i__$1 = G__28496;
j__$1 = G__28497;
len__$1 = G__28498;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__28499 = (i__$1 - (1));
var G__28500 = (j__$1 - (1));
var G__28501 = (len__$1 - (1));
i__$1 = G__28499;
j__$1 = G__28500;
len__$1 = G__28501;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj28503 = {};
return obj28503;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__28505 = s;
if(G__28505){
var bit__15125__auto__ = (G__28505.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15125__auto__) || (G__28505.cljs$core$ISeq$)){
return true;
} else {
if((!G__28505.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28505);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28505);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__28507 = s;
if(G__28507){
var bit__15125__auto__ = (G__28507.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__15125__auto__) || (G__28507.cljs$core$ISeqable$)){
return true;
} else {
if((!G__28507.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__28507);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__28507);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__14444__auto__ = cljs.core.fn_QMARK_(f);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var G__28511 = f;
if(G__28511){
var bit__15125__auto__ = (G__28511.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__15125__auto__) || (G__28511.cljs$core$IFn$)){
return true;
} else {
if((!G__28511.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__28511);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__28511);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__28524 = n;
return isNaN(G__28524);
})())) && (!((n === Infinity))) && (((function (){var G__28525 = n;
return parseFloat(G__28525);
})() === (function (){var G__28526 = n;
var G__28527 = (10);
return parseInt(G__28526,G__28527);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__28528__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__28529 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__28530 = etc;
s = G__28529;
xs = G__28530;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__28528 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28531__i = 0, G__28531__a = new Array(arguments.length -  2);
while (G__28531__i < G__28531__a.length) {G__28531__a[G__28531__i] = arguments[G__28531__i + 2]; ++G__28531__i;}
  more = new cljs.core.IndexedSeq(G__28531__a,0);
} 
return G__28528__delegate.call(this,x,y,more);};
G__28528.cljs$lang$maxFixedArity = 2;
G__28528.cljs$lang$applyTo = (function (arglist__28532){
var x = cljs.core.first(arglist__28532);
arglist__28532 = cljs.core.next(arglist__28532);
var y = cljs.core.first(arglist__28532);
var more = cljs.core.rest(arglist__28532);
return G__28528__delegate(x,y,more);
});
G__28528.cljs$core$IFn$_invoke$arity$variadic = G__28528__delegate;
return G__28528;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__28533 = null;
if (arguments.length > 2) {
var G__28534__i = 0, G__28534__a = new Array(arguments.length -  2);
while (G__28534__i < G__28534__a.length) {G__28534__a[G__28534__i] = arguments[G__28534__i + 2]; ++G__28534__i;}
G__28533 = new cljs.core.IndexedSeq(G__28534__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__28538 = x;
if(G__28538){
var bit__15118__auto__ = (G__28538.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__15118__auto__) || (G__28538.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__28539 = x;
var G__28540 = y;
return goog.array.defaultCompare(G__28539,G__28540);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__28545 = xs;
var G__28546 = ys;
var G__28547 = len;
var G__28548 = (n + (1));
xs = G__28545;
ys = G__28546;
len = G__28547;
n = G__28548;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__28553 = x;
var G__28554 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28553,G__28554) : f.call(null,G__28553,G__28554));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__28555 = y;
var G__28556 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28555,G__28556) : f.call(null,G__28555,G__28556));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__28562 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__28562) : cljs.core.to_array.call(null,G__28562));
})();
var G__28563_28565 = a;
var G__28564_28566 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__28563_28565,G__28564_28566);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__28572 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28572) : keyfn.call(null,G__28572));
})(),(function (){var G__28573 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28573) : keyfn.call(null,G__28573));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var G__28579 = f;
var G__28580 = cljs.core.first(s);
var G__28581 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__28579,G__28580,G__28581) : cljs.core.reduce.call(null,G__28579,G__28580,G__28581));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__28582 = val__$1;
var G__28583 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28582,G__28583) : f.call(null,G__28582,G__28583));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__28584 = nval;
var G__28585 = cljs.core.next(coll__$1);
val__$1 = G__28584;
coll__$1 = G__28585;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__28589 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__28589) : cljs.core.to_array.call(null,G__28589));
})();
var G__28590_28592 = a;
goog.array.shuffle(G__28590_28592);

var G__28591 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__28591) : cljs.core.vec.call(null,G__28591));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__28595 = coll;
if(G__28595){
var bit__15118__auto__ = (G__28595.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__15118__auto__) || (G__28595.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__28596 = coll;
if(G__28596){
var bit__15118__auto__ = (G__28596.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__15118__auto__) || (G__28596.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__28605 = null;
var G__28605__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__28605__1 = (function (x){
var G__28602 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__28602) : cf.call(null,G__28602));
});
var G__28605__2 = (function (x,y){
var G__28603 = x;
var G__28604 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28603,G__28604) : f.call(null,G__28603,G__28604));
});
G__28605 = function(x,y){
switch(arguments.length){
case 0:
return G__28605__0.call(this);
case 1:
return G__28605__1.call(this,x);
case 2:
return G__28605__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28605.cljs$core$IFn$_invoke$arity$0 = G__28605__0;
G__28605.cljs$core$IFn$_invoke$arity$1 = G__28605__1;
G__28605.cljs$core$IFn$_invoke$arity$2 = G__28605__2;
return G__28605;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__28612 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__28612) : xform.call(null,G__28612));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__28613 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__28613) : f__$1.call(null,G__28613));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__28614__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__28614 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28615__i = 0, G__28615__a = new Array(arguments.length -  2);
while (G__28615__i < G__28615__a.length) {G__28615__a[G__28615__i] = arguments[G__28615__i + 2]; ++G__28615__i;}
  more = new cljs.core.IndexedSeq(G__28615__a,0);
} 
return G__28614__delegate.call(this,x,y,more);};
G__28614.cljs$lang$maxFixedArity = 2;
G__28614.cljs$lang$applyTo = (function (arglist__28616){
var x = cljs.core.first(arglist__28616);
arglist__28616 = cljs.core.next(arglist__28616);
var y = cljs.core.first(arglist__28616);
var more = cljs.core.rest(arglist__28616);
return G__28614__delegate(x,y,more);
});
G__28614.cljs$core$IFn$_invoke$arity$variadic = G__28614__delegate;
return G__28614;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__28617 = null;
if (arguments.length > 2) {
var G__28618__i = 0, G__28618__a = new Array(arguments.length -  2);
while (G__28618__i < G__28618__a.length) {G__28618__a[G__28618__i] = arguments[G__28618__i + 2]; ++G__28618__i;}
G__28617 = new cljs.core.IndexedSeq(G__28618__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__28619__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__28619 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28620__i = 0, G__28620__a = new Array(arguments.length -  2);
while (G__28620__i < G__28620__a.length) {G__28620__a[G__28620__i] = arguments[G__28620__i + 2]; ++G__28620__i;}
  more = new cljs.core.IndexedSeq(G__28620__a,0);
} 
return G__28619__delegate.call(this,x,y,more);};
G__28619.cljs$lang$maxFixedArity = 2;
G__28619.cljs$lang$applyTo = (function (arglist__28621){
var x = cljs.core.first(arglist__28621);
arglist__28621 = cljs.core.next(arglist__28621);
var y = cljs.core.first(arglist__28621);
var more = cljs.core.rest(arglist__28621);
return G__28619__delegate(x,y,more);
});
G__28619.cljs$core$IFn$_invoke$arity$variadic = G__28619__delegate;
return G__28619;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__28622 = null;
if (arguments.length > 2) {
var G__28623__i = 0, G__28623__a = new Array(arguments.length -  2);
while (G__28623__i < G__28623__a.length) {G__28623__a[G__28623__i] = arguments[G__28623__i + 2]; ++G__28623__i;}
G__28622 = new cljs.core.IndexedSeq(G__28623__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28622);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__28624__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__28624 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28625__i = 0, G__28625__a = new Array(arguments.length -  2);
while (G__28625__i < G__28625__a.length) {G__28625__a[G__28625__i] = arguments[G__28625__i + 2]; ++G__28625__i;}
  more = new cljs.core.IndexedSeq(G__28625__a,0);
} 
return G__28624__delegate.call(this,x,y,more);};
G__28624.cljs$lang$maxFixedArity = 2;
G__28624.cljs$lang$applyTo = (function (arglist__28626){
var x = cljs.core.first(arglist__28626);
arglist__28626 = cljs.core.next(arglist__28626);
var y = cljs.core.first(arglist__28626);
var more = cljs.core.rest(arglist__28626);
return G__28624__delegate(x,y,more);
});
G__28624.cljs$core$IFn$_invoke$arity$variadic = G__28624__delegate;
return G__28624;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__28627 = null;
if (arguments.length > 2) {
var G__28628__i = 0, G__28628__a = new Array(arguments.length -  2);
while (G__28628__i < G__28628__a.length) {G__28628__a[G__28628__i] = arguments[G__28628__i + 2]; ++G__28628__i;}
G__28627 = new cljs.core.IndexedSeq(G__28628__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28627);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__28633__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__28633 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28634__i = 0, G__28634__a = new Array(arguments.length -  2);
while (G__28634__i < G__28634__a.length) {G__28634__a[G__28634__i] = arguments[G__28634__i + 2]; ++G__28634__i;}
  more = new cljs.core.IndexedSeq(G__28634__a,0);
} 
return G__28633__delegate.call(this,x,y,more);};
G__28633.cljs$lang$maxFixedArity = 2;
G__28633.cljs$lang$applyTo = (function (arglist__28635){
var x = cljs.core.first(arglist__28635);
arglist__28635 = cljs.core.next(arglist__28635);
var y = cljs.core.first(arglist__28635);
var more = cljs.core.rest(arglist__28635);
return G__28633__delegate(x,y,more);
});
G__28633.cljs$core$IFn$_invoke$arity$variadic = G__28633__delegate;
return G__28633;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__28636 = null;
if (arguments.length > 2) {
var G__28637__i = 0, G__28637__a = new Array(arguments.length -  2);
while (G__28637__i < G__28637__a.length) {G__28637__a[G__28637__i] = arguments[G__28637__i + 2]; ++G__28637__i;}
G__28636 = new cljs.core.IndexedSeq(G__28637__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28636);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__28638__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__28639 = y;
var G__28640 = cljs.core.first(more);
var G__28641 = cljs.core.next(more);
x = G__28639;
y = G__28640;
more = G__28641;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28638 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28642__i = 0, G__28642__a = new Array(arguments.length -  2);
while (G__28642__i < G__28642__a.length) {G__28642__a[G__28642__i] = arguments[G__28642__i + 2]; ++G__28642__i;}
  more = new cljs.core.IndexedSeq(G__28642__a,0);
} 
return G__28638__delegate.call(this,x,y,more);};
G__28638.cljs$lang$maxFixedArity = 2;
G__28638.cljs$lang$applyTo = (function (arglist__28643){
var x = cljs.core.first(arglist__28643);
arglist__28643 = cljs.core.next(arglist__28643);
var y = cljs.core.first(arglist__28643);
var more = cljs.core.rest(arglist__28643);
return G__28638__delegate(x,y,more);
});
G__28638.cljs$core$IFn$_invoke$arity$variadic = G__28638__delegate;
return G__28638;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__28644 = null;
if (arguments.length > 2) {
var G__28645__i = 0, G__28645__a = new Array(arguments.length -  2);
while (G__28645__i < G__28645__a.length) {G__28645__a[G__28645__i] = arguments[G__28645__i + 2]; ++G__28645__i;}
G__28644 = new cljs.core.IndexedSeq(G__28645__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__28646__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__28647 = y;
var G__28648 = cljs.core.first(more);
var G__28649 = cljs.core.next(more);
x = G__28647;
y = G__28648;
more = G__28649;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28646 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28650__i = 0, G__28650__a = new Array(arguments.length -  2);
while (G__28650__i < G__28650__a.length) {G__28650__a[G__28650__i] = arguments[G__28650__i + 2]; ++G__28650__i;}
  more = new cljs.core.IndexedSeq(G__28650__a,0);
} 
return G__28646__delegate.call(this,x,y,more);};
G__28646.cljs$lang$maxFixedArity = 2;
G__28646.cljs$lang$applyTo = (function (arglist__28651){
var x = cljs.core.first(arglist__28651);
arglist__28651 = cljs.core.next(arglist__28651);
var y = cljs.core.first(arglist__28651);
var more = cljs.core.rest(arglist__28651);
return G__28646__delegate(x,y,more);
});
G__28646.cljs$core$IFn$_invoke$arity$variadic = G__28646__delegate;
return G__28646;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__28652 = null;
if (arguments.length > 2) {
var G__28653__i = 0, G__28653__a = new Array(arguments.length -  2);
while (G__28653__i < G__28653__a.length) {G__28653__a[G__28653__i] = arguments[G__28653__i + 2]; ++G__28653__i;}
G__28652 = new cljs.core.IndexedSeq(G__28653__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__28654__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__28655 = y;
var G__28656 = cljs.core.first(more);
var G__28657 = cljs.core.next(more);
x = G__28655;
y = G__28656;
more = G__28657;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28654 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28658__i = 0, G__28658__a = new Array(arguments.length -  2);
while (G__28658__i < G__28658__a.length) {G__28658__a[G__28658__i] = arguments[G__28658__i + 2]; ++G__28658__i;}
  more = new cljs.core.IndexedSeq(G__28658__a,0);
} 
return G__28654__delegate.call(this,x,y,more);};
G__28654.cljs$lang$maxFixedArity = 2;
G__28654.cljs$lang$applyTo = (function (arglist__28659){
var x = cljs.core.first(arglist__28659);
arglist__28659 = cljs.core.next(arglist__28659);
var y = cljs.core.first(arglist__28659);
var more = cljs.core.rest(arglist__28659);
return G__28654__delegate(x,y,more);
});
G__28654.cljs$core$IFn$_invoke$arity$variadic = G__28654__delegate;
return G__28654;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__28660 = null;
if (arguments.length > 2) {
var G__28661__i = 0, G__28661__a = new Array(arguments.length -  2);
while (G__28661__i < G__28661__a.length) {G__28661__a[G__28661__i] = arguments[G__28661__i + 2]; ++G__28661__i;}
G__28660 = new cljs.core.IndexedSeq(G__28661__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__28662__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__28663 = y;
var G__28664 = cljs.core.first(more);
var G__28665 = cljs.core.next(more);
x = G__28663;
y = G__28664;
more = G__28665;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28662 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28666__i = 0, G__28666__a = new Array(arguments.length -  2);
while (G__28666__i < G__28666__a.length) {G__28666__a[G__28666__i] = arguments[G__28666__i + 2]; ++G__28666__i;}
  more = new cljs.core.IndexedSeq(G__28666__a,0);
} 
return G__28662__delegate.call(this,x,y,more);};
G__28662.cljs$lang$maxFixedArity = 2;
G__28662.cljs$lang$applyTo = (function (arglist__28667){
var x = cljs.core.first(arglist__28667);
arglist__28667 = cljs.core.next(arglist__28667);
var y = cljs.core.first(arglist__28667);
var more = cljs.core.rest(arglist__28667);
return G__28662__delegate(x,y,more);
});
G__28662.cljs$core$IFn$_invoke$arity$variadic = G__28662__delegate;
return G__28662;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__28668 = null;
if (arguments.length > 2) {
var G__28669__i = 0, G__28669__a = new Array(arguments.length -  2);
while (G__28669__i < G__28669__a.length) {G__28669__a[G__28669__i] = arguments[G__28669__i + 2]; ++G__28669__i;}
G__28668 = new cljs.core.IndexedSeq(G__28669__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__14761__auto__ = x;
var y__14762__auto__ = y;
return ((x__14761__auto__ > y__14762__auto__) ? x__14761__auto__ : y__14762__auto__);
});
var max__3 = (function() { 
var G__28670__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__14761__auto__ = x;
var y__14762__auto__ = y;
return ((x__14761__auto__ > y__14762__auto__) ? x__14761__auto__ : y__14762__auto__);
})(),more);
};
var G__28670 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28671__i = 0, G__28671__a = new Array(arguments.length -  2);
while (G__28671__i < G__28671__a.length) {G__28671__a[G__28671__i] = arguments[G__28671__i + 2]; ++G__28671__i;}
  more = new cljs.core.IndexedSeq(G__28671__a,0);
} 
return G__28670__delegate.call(this,x,y,more);};
G__28670.cljs$lang$maxFixedArity = 2;
G__28670.cljs$lang$applyTo = (function (arglist__28672){
var x = cljs.core.first(arglist__28672);
arglist__28672 = cljs.core.next(arglist__28672);
var y = cljs.core.first(arglist__28672);
var more = cljs.core.rest(arglist__28672);
return G__28670__delegate(x,y,more);
});
G__28670.cljs$core$IFn$_invoke$arity$variadic = G__28670__delegate;
return G__28670;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__28673 = null;
if (arguments.length > 2) {
var G__28674__i = 0, G__28674__a = new Array(arguments.length -  2);
while (G__28674__i < G__28674__a.length) {G__28674__a[G__28674__i] = arguments[G__28674__i + 2]; ++G__28674__i;}
G__28673 = new cljs.core.IndexedSeq(G__28674__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28673);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__14768__auto__ = x;
var y__14769__auto__ = y;
return ((x__14768__auto__ < y__14769__auto__) ? x__14768__auto__ : y__14769__auto__);
});
var min__3 = (function() { 
var G__28675__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__14768__auto__ = x;
var y__14769__auto__ = y;
return ((x__14768__auto__ < y__14769__auto__) ? x__14768__auto__ : y__14769__auto__);
})(),more);
};
var G__28675 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28676__i = 0, G__28676__a = new Array(arguments.length -  2);
while (G__28676__i < G__28676__a.length) {G__28676__a[G__28676__i] = arguments[G__28676__i + 2]; ++G__28676__i;}
  more = new cljs.core.IndexedSeq(G__28676__a,0);
} 
return G__28675__delegate.call(this,x,y,more);};
G__28675.cljs$lang$maxFixedArity = 2;
G__28675.cljs$lang$applyTo = (function (arglist__28677){
var x = cljs.core.first(arglist__28677);
arglist__28677 = cljs.core.next(arglist__28677);
var y = cljs.core.first(arglist__28677);
var more = cljs.core.rest(arglist__28677);
return G__28675__delegate(x,y,more);
});
G__28675.cljs$core$IFn$_invoke$arity$variadic = G__28675__delegate;
return G__28675;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__28678 = null;
if (arguments.length > 2) {
var G__28679__i = 0, G__28679__a = new Array(arguments.length -  2);
while (G__28679__i < G__28679__a.length) {G__28679__a[G__28679__i] = arguments[G__28679__i + 2]; ++G__28679__i;}
G__28678 = new cljs.core.IndexedSeq(G__28679__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28678);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__28680__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__28680 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28681__i = 0, G__28681__a = new Array(arguments.length -  2);
while (G__28681__i < G__28681__a.length) {G__28681__a[G__28681__i] = arguments[G__28681__i + 2]; ++G__28681__i;}
  more = new cljs.core.IndexedSeq(G__28681__a,0);
} 
return G__28680__delegate.call(this,x,y,more);};
G__28680.cljs$lang$maxFixedArity = 2;
G__28680.cljs$lang$applyTo = (function (arglist__28682){
var x = cljs.core.first(arglist__28682);
arglist__28682 = cljs.core.next(arglist__28682);
var y = cljs.core.first(arglist__28682);
var more = cljs.core.rest(arglist__28682);
return G__28680__delegate(x,y,more);
});
G__28680.cljs$core$IFn$_invoke$arity$variadic = G__28680__delegate;
return G__28680;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__28683 = null;
if (arguments.length > 2) {
var G__28684__i = 0, G__28684__a = new Array(arguments.length -  2);
while (G__28684__i < G__28684__a.length) {G__28684__a[G__28684__i] = arguments[G__28684__i + 2]; ++G__28684__i;}
G__28683 = new cljs.core.IndexedSeq(G__28684__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28683);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__28685__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__28685 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28686__i = 0, G__28686__a = new Array(arguments.length -  2);
while (G__28686__i < G__28686__a.length) {G__28686__a[G__28686__i] = arguments[G__28686__i + 2]; ++G__28686__i;}
  more = new cljs.core.IndexedSeq(G__28686__a,0);
} 
return G__28685__delegate.call(this,x,y,more);};
G__28685.cljs$lang$maxFixedArity = 2;
G__28685.cljs$lang$applyTo = (function (arglist__28687){
var x = cljs.core.first(arglist__28687);
arglist__28687 = cljs.core.next(arglist__28687);
var y = cljs.core.first(arglist__28687);
var more = cljs.core.rest(arglist__28687);
return G__28685__delegate(x,y,more);
});
G__28685.cljs$core$IFn$_invoke$arity$variadic = G__28685__delegate;
return G__28685;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__28688 = null;
if (arguments.length > 2) {
var G__28689__i = 0, G__28689__a = new Array(arguments.length -  2);
while (G__28689__i < G__28689__a.length) {G__28689__a[G__28689__i] = arguments[G__28689__i + 2]; ++G__28689__i;}
G__28688 = new cljs.core.IndexedSeq(G__28689__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28688);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__28694__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__28694 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28695__i = 0, G__28695__a = new Array(arguments.length -  2);
while (G__28695__i < G__28695__a.length) {G__28695__a[G__28695__i] = arguments[G__28695__i + 2]; ++G__28695__i;}
  more = new cljs.core.IndexedSeq(G__28695__a,0);
} 
return G__28694__delegate.call(this,x,y,more);};
G__28694.cljs$lang$maxFixedArity = 2;
G__28694.cljs$lang$applyTo = (function (arglist__28696){
var x = cljs.core.first(arglist__28696);
arglist__28696 = cljs.core.next(arglist__28696);
var y = cljs.core.first(arglist__28696);
var more = cljs.core.rest(arglist__28696);
return G__28694__delegate(x,y,more);
});
G__28694.cljs$core$IFn$_invoke$arity$variadic = G__28694__delegate;
return G__28694;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__28697 = null;
if (arguments.length > 2) {
var G__28698__i = 0, G__28698__a = new Array(arguments.length -  2);
while (G__28698__i < G__28698__a.length) {G__28698__a[G__28698__i] = arguments[G__28698__i + 2]; ++G__28698__i;}
G__28697 = new cljs.core.IndexedSeq(G__28698__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28697);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__28699__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__28699 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28700__i = 0, G__28700__a = new Array(arguments.length -  2);
while (G__28700__i < G__28700__a.length) {G__28700__a[G__28700__i] = arguments[G__28700__i + 2]; ++G__28700__i;}
  more = new cljs.core.IndexedSeq(G__28700__a,0);
} 
return G__28699__delegate.call(this,x,y,more);};
G__28699.cljs$lang$maxFixedArity = 2;
G__28699.cljs$lang$applyTo = (function (arglist__28701){
var x = cljs.core.first(arglist__28701);
arglist__28701 = cljs.core.next(arglist__28701);
var y = cljs.core.first(arglist__28701);
var more = cljs.core.rest(arglist__28701);
return G__28699__delegate(x,y,more);
});
G__28699.cljs$core$IFn$_invoke$arity$variadic = G__28699__delegate;
return G__28699;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__28702 = null;
if (arguments.length > 2) {
var G__28703__i = 0, G__28703__a = new Array(arguments.length -  2);
while (G__28703__i < G__28703__a.length) {G__28703__a[G__28703__i] = arguments[G__28703__i + 2]; ++G__28703__i;}
G__28702 = new cljs.core.IndexedSeq(G__28703__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28702);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__28704__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__28704 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28705__i = 0, G__28705__a = new Array(arguments.length -  2);
while (G__28705__i < G__28705__a.length) {G__28705__a[G__28705__i] = arguments[G__28705__i + 2]; ++G__28705__i;}
  more = new cljs.core.IndexedSeq(G__28705__a,0);
} 
return G__28704__delegate.call(this,x,y,more);};
G__28704.cljs$lang$maxFixedArity = 2;
G__28704.cljs$lang$applyTo = (function (arglist__28706){
var x = cljs.core.first(arglist__28706);
arglist__28706 = cljs.core.next(arglist__28706);
var y = cljs.core.first(arglist__28706);
var more = cljs.core.rest(arglist__28706);
return G__28704__delegate(x,y,more);
});
G__28704.cljs$core$IFn$_invoke$arity$variadic = G__28704__delegate;
return G__28704;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__28707 = null;
if (arguments.length > 2) {
var G__28708__i = 0, G__28708__a = new Array(arguments.length -  2);
while (G__28708__i < G__28708__a.length) {G__28708__a[G__28708__i] = arguments[G__28708__i + 2]; ++G__28708__i;}
G__28707 = new cljs.core.IndexedSeq(G__28708__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__28711 = x;
var G__28712 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__28711,G__28712) : cljs.core.mod.call(null,G__28711,G__28712));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__28713__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__28713 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28714__i = 0, G__28714__a = new Array(arguments.length -  2);
while (G__28714__i < G__28714__a.length) {G__28714__a[G__28714__i] = arguments[G__28714__i + 2]; ++G__28714__i;}
  more = new cljs.core.IndexedSeq(G__28714__a,0);
} 
return G__28713__delegate.call(this,x,y,more);};
G__28713.cljs$lang$maxFixedArity = 2;
G__28713.cljs$lang$applyTo = (function (arglist__28715){
var x = cljs.core.first(arglist__28715);
arglist__28715 = cljs.core.next(arglist__28715);
var y = cljs.core.first(arglist__28715);
var more = cljs.core.rest(arglist__28715);
return G__28713__delegate(x,y,more);
});
G__28713.cljs$core$IFn$_invoke$arity$variadic = G__28713__delegate;
return G__28713;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__28716 = null;
if (arguments.length > 2) {
var G__28717__i = 0, G__28717__a = new Array(arguments.length -  2);
while (G__28717__i < G__28717__a.length) {G__28717__a[G__28717__i] = arguments[G__28717__i + 2]; ++G__28717__i;}
G__28716 = new cljs.core.IndexedSeq(G__28717__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__28718__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__28718 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28719__i = 0, G__28719__a = new Array(arguments.length -  2);
while (G__28719__i < G__28719__a.length) {G__28719__a[G__28719__i] = arguments[G__28719__i + 2]; ++G__28719__i;}
  more = new cljs.core.IndexedSeq(G__28719__a,0);
} 
return G__28718__delegate.call(this,x,y,more);};
G__28718.cljs$lang$maxFixedArity = 2;
G__28718.cljs$lang$applyTo = (function (arglist__28720){
var x = cljs.core.first(arglist__28720);
arglist__28720 = cljs.core.next(arglist__28720);
var y = cljs.core.first(arglist__28720);
var more = cljs.core.rest(arglist__28720);
return G__28718__delegate(x,y,more);
});
G__28718.cljs$core$IFn$_invoke$arity$variadic = G__28718__delegate;
return G__28718;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__28721 = null;
if (arguments.length > 2) {
var G__28722__i = 0, G__28722__a = new Array(arguments.length -  2);
while (G__28722__i < G__28722__a.length) {G__28722__a[G__28722__i] = arguments[G__28722__i + 2]; ++G__28722__i;}
G__28721 = new cljs.core.IndexedSeq(G__28722__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28721);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__28725 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28725) : Math.floor.call(null,G__28725));
} else {
var G__28726 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__28726) : Math.ceil.call(null,G__28726));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__28727__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__28727 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28728__i = 0, G__28728__a = new Array(arguments.length -  2);
while (G__28728__i < G__28728__a.length) {G__28728__a[G__28728__i] = arguments[G__28728__i + 2]; ++G__28728__i;}
  more = new cljs.core.IndexedSeq(G__28728__a,0);
} 
return G__28727__delegate.call(this,x,y,more);};
G__28727.cljs$lang$maxFixedArity = 2;
G__28727.cljs$lang$applyTo = (function (arglist__28729){
var x = cljs.core.first(arglist__28729);
arglist__28729 = cljs.core.next(arglist__28729);
var y = cljs.core.first(arglist__28729);
var more = cljs.core.rest(arglist__28729);
return G__28727__delegate(x,y,more);
});
G__28727.cljs$core$IFn$_invoke$arity$variadic = G__28727__delegate;
return G__28727;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__28730 = null;
if (arguments.length > 2) {
var G__28731__i = 0, G__28731__a = new Array(arguments.length -  2);
while (G__28731__i < G__28731__a.length) {G__28731__a[G__28731__i] = arguments[G__28731__i + 2]; ++G__28731__i;}
G__28730 = new cljs.core.IndexedSeq(G__28731__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__28732__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__28732 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28733__i = 0, G__28733__a = new Array(arguments.length -  2);
while (G__28733__i < G__28733__a.length) {G__28733__a[G__28733__i] = arguments[G__28733__i + 2]; ++G__28733__i;}
  more = new cljs.core.IndexedSeq(G__28733__a,0);
} 
return G__28732__delegate.call(this,x,y,more);};
G__28732.cljs$lang$maxFixedArity = 2;
G__28732.cljs$lang$applyTo = (function (arglist__28734){
var x = cljs.core.first(arglist__28734);
arglist__28734 = cljs.core.next(arglist__28734);
var y = cljs.core.first(arglist__28734);
var more = cljs.core.rest(arglist__28734);
return G__28732__delegate(x,y,more);
});
G__28732.cljs$core$IFn$_invoke$arity$variadic = G__28732__delegate;
return G__28732;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__28735 = null;
if (arguments.length > 2) {
var G__28736__i = 0, G__28736__a = new Array(arguments.length -  2);
while (G__28736__i < G__28736__a.length) {G__28736__a[G__28736__i] = arguments[G__28736__i + 2]; ++G__28736__i;}
G__28735 = new cljs.core.IndexedSeq(G__28736__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__28737__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__28737 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28738__i = 0, G__28738__a = new Array(arguments.length -  2);
while (G__28738__i < G__28738__a.length) {G__28738__a[G__28738__i] = arguments[G__28738__i + 2]; ++G__28738__i;}
  more = new cljs.core.IndexedSeq(G__28738__a,0);
} 
return G__28737__delegate.call(this,x,y,more);};
G__28737.cljs$lang$maxFixedArity = 2;
G__28737.cljs$lang$applyTo = (function (arglist__28739){
var x = cljs.core.first(arglist__28739);
arglist__28739 = cljs.core.next(arglist__28739);
var y = cljs.core.first(arglist__28739);
var more = cljs.core.rest(arglist__28739);
return G__28737__delegate(x,y,more);
});
G__28737.cljs$core$IFn$_invoke$arity$variadic = G__28737__delegate;
return G__28737;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__28740 = null;
if (arguments.length > 2) {
var G__28741__i = 0, G__28741__a = new Array(arguments.length -  2);
while (G__28741__i < G__28741__a.length) {G__28741__a[G__28741__i] = arguments[G__28741__i + 2]; ++G__28741__i;}
G__28740 = new cljs.core.IndexedSeq(G__28741__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__28742__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__28742 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28743__i = 0, G__28743__a = new Array(arguments.length -  2);
while (G__28743__i < G__28743__a.length) {G__28743__a[G__28743__i] = arguments[G__28743__i + 2]; ++G__28743__i;}
  more = new cljs.core.IndexedSeq(G__28743__a,0);
} 
return G__28742__delegate.call(this,x,y,more);};
G__28742.cljs$lang$maxFixedArity = 2;
G__28742.cljs$lang$applyTo = (function (arglist__28744){
var x = cljs.core.first(arglist__28744);
arglist__28744 = cljs.core.next(arglist__28744);
var y = cljs.core.first(arglist__28744);
var more = cljs.core.rest(arglist__28744);
return G__28742__delegate(x,y,more);
});
G__28742.cljs$core$IFn$_invoke$arity$variadic = G__28742__delegate;
return G__28742;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__28745 = null;
if (arguments.length > 2) {
var G__28746__i = 0, G__28746__a = new Array(arguments.length -  2);
while (G__28746__i < G__28746__a.length) {G__28746__a[G__28746__i] = arguments[G__28746__i + 2]; ++G__28746__i;}
G__28745 = new cljs.core.IndexedSeq(G__28746__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__28751__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__28752 = y;
var G__28753 = cljs.core.first(more);
var G__28754 = cljs.core.next(more);
x = G__28752;
y = G__28753;
more = G__28754;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28751 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28755__i = 0, G__28755__a = new Array(arguments.length -  2);
while (G__28755__i < G__28755__a.length) {G__28755__a[G__28755__i] = arguments[G__28755__i + 2]; ++G__28755__i;}
  more = new cljs.core.IndexedSeq(G__28755__a,0);
} 
return G__28751__delegate.call(this,x,y,more);};
G__28751.cljs$lang$maxFixedArity = 2;
G__28751.cljs$lang$applyTo = (function (arglist__28756){
var x = cljs.core.first(arglist__28756);
arglist__28756 = cljs.core.next(arglist__28756);
var y = cljs.core.first(arglist__28756);
var more = cljs.core.rest(arglist__28756);
return G__28751__delegate(x,y,more);
});
G__28751.cljs$core$IFn$_invoke$arity$variadic = G__28751__delegate;
return G__28751;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__28757 = null;
if (arguments.length > 2) {
var G__28758__i = 0, G__28758__a = new Array(arguments.length -  2);
while (G__28758__i < G__28758__a.length) {G__28758__a[G__28758__i] = arguments[G__28758__i + 2]; ++G__28758__i;}
G__28757 = new cljs.core.IndexedSeq(G__28758__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__28759 = (n__$1 - (1));
var G__28760 = cljs.core.next(xs);
n__$1 = G__28759;
xs = G__28760;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__28764 = x;
return goog.string.buildString(G__28764);
}
});
var str__2 = (function() { 
var G__28765__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__28766 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__28767 = cljs.core.next(more);
sb = G__28766;
more = G__28767;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__28765 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__28768__i = 0, G__28768__a = new Array(arguments.length -  1);
while (G__28768__i < G__28768__a.length) {G__28768__a[G__28768__i] = arguments[G__28768__i + 1]; ++G__28768__i;}
  ys = new cljs.core.IndexedSeq(G__28768__a,0);
} 
return G__28765__delegate.call(this,x,ys);};
G__28765.cljs$lang$maxFixedArity = 1;
G__28765.cljs$lang$applyTo = (function (arglist__28769){
var x = cljs.core.first(arglist__28769);
var ys = cljs.core.rest(arglist__28769);
return G__28765__delegate(x,ys);
});
G__28765.cljs$core$IFn$_invoke$arity$variadic = G__28765__delegate;
return G__28765;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__28770 = null;
if (arguments.length > 1) {
var G__28771__i = 0, G__28771__a = new Array(arguments.length -  1);
while (G__28771__i < G__28771__a.length) {G__28771__a[G__28771__i] = arguments[G__28771__i + 1]; ++G__28771__i;}
G__28770 = new cljs.core.IndexedSeq(G__28771__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__28772 = cljs.core.next(xs);
var G__28773 = cljs.core.next(ys);
xs = G__28772;
ys = G__28773;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__28774 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__28775 = cljs.core.next(s);
res = G__28774;
s = G__28775;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__28780 = ((h + (cljs.core.hash((function (){var G__28778 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28778) : cljs.core.key.call(null,G__28778));
})()) ^ cljs.core.hash((function (){var G__28779 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28779) : cljs.core.val.call(null,G__28779));
})()))) % (4503599627370496));
var G__28781 = cljs.core.next(s);
h = G__28780;
s = G__28781;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__28782 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__28783 = cljs.core.next(s__$1);
h = G__28782;
s__$1 = G__28783;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__28794_28804 = cljs.core.seq(fn_map);
var chunk__28795_28805 = null;
var count__28796_28806 = (0);
var i__28797_28807 = (0);
while(true){
if((i__28797_28807 < count__28796_28806)){
var vec__28798_28808 = chunk__28795_28805.cljs$core$IIndexed$_nth$arity$2(null,i__28797_28807);
var key_name_28809 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28798_28808,(0),null);
var f_28810 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28798_28808,(1),null);
var str_name_28811 = (function (){var G__28799 = key_name_28809;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__28799) : cljs.core.name.call(null,G__28799));
})();
(obj[str_name_28811] = f_28810);

var G__28812 = seq__28794_28804;
var G__28813 = chunk__28795_28805;
var G__28814 = count__28796_28806;
var G__28815 = (i__28797_28807 + (1));
seq__28794_28804 = G__28812;
chunk__28795_28805 = G__28813;
count__28796_28806 = G__28814;
i__28797_28807 = G__28815;
continue;
} else {
var temp__4406__auto___28816 = cljs.core.seq(seq__28794_28804);
if(temp__4406__auto___28816){
var seq__28794_28817__$1 = temp__4406__auto___28816;
if(cljs.core.chunked_seq_QMARK_(seq__28794_28817__$1)){
var c__15231__auto___28818 = (function (){var G__28800 = seq__28794_28817__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__28800) : cljs.core.chunk_first.call(null,G__28800));
})();
var G__28819 = (function (){var G__28801 = seq__28794_28817__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__28801) : cljs.core.chunk_rest.call(null,G__28801));
})();
var G__28820 = c__15231__auto___28818;
var G__28821 = cljs.core.count(c__15231__auto___28818);
var G__28822 = (0);
seq__28794_28804 = G__28819;
chunk__28795_28805 = G__28820;
count__28796_28806 = G__28821;
i__28797_28807 = G__28822;
continue;
} else {
var vec__28802_28823 = cljs.core.first(seq__28794_28817__$1);
var key_name_28824 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28802_28823,(0),null);
var f_28825 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28802_28823,(1),null);
var str_name_28826 = (function (){var G__28803 = key_name_28824;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__28803) : cljs.core.name.call(null,G__28803));
})();
(obj[str_name_28826] = f_28825);

var G__28827 = cljs.core.next(seq__28794_28817__$1);
var G__28828 = null;
var G__28829 = (0);
var G__28830 = (0);
seq__28794_28804 = G__28827;
chunk__28795_28805 = G__28828;
count__28796_28806 = G__28829;
i__28797_28807 = G__28830;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__28832 = coll;
if(G__28832){
var bit__15125__auto__ = (G__28832.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__15125__auto__) || (G__28832.cljs$core$IReversible$)){
return true;
} else {
if((!G__28832.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__28832);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__28832);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__28833 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__28833;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__28834 = (i - (1));
var G__28835 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__28834;
r = G__28835;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__28836__i = 0, G__28836__a = new Array(arguments.length -  0);
while (G__28836__i < G__28836__a.length) {G__28836__a[G__28836__i] = arguments[G__28836__i + 0]; ++G__28836__i;}
  xs = new cljs.core.IndexedSeq(G__28836__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__28837){
var xs = cljs.core.seq(arglist__28837);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__14444__auto__ = (coll == null);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var G__28841 = coll;
if(G__28841){
var bit__15118__auto__ = (G__28841.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15118__auto__) || (G__28841.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__28843 = x;
if(G__28843){
var bit__15125__auto__ = (G__28843.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__15125__auto__) || (G__28843.cljs$core$IList$)){
return true;
} else {
if((!G__28843.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__28843);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__28843);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__14432__auto__ = cljs.core.not(a.ns);
if(and__14432__auto__){
return b.ns;
} else {
return and__14432__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__28850 = a.ns;
var G__28851 = b.ns;
return goog.array.defaultCompare(G__28850,G__28851);
})();
if(((0) === nsc)){
var G__28852 = a.name;
var G__28853 = b.name;
return goog.array.defaultCompare(G__28852,G__28853);
} else {
return nsc;
}
}
} else {
var G__28854 = a.name;
var G__28855 = b.name;
return goog.array.defaultCompare(G__28854,G__28855);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__14865__auto__ = self__._hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__28857 = null;
var G__28857__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__28857__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__28857 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__28857__2.call(this,self__,coll);
case 3:
return G__28857__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28857.cljs$core$IFn$_invoke$arity$2 = G__28857__2;
G__28857.cljs$core$IFn$_invoke$arity$3 = G__28857__3;
return G__28857;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args28856){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28856)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__28859 = x;
if(G__28859){
var bit__15118__auto__ = (G__28859.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__15118__auto__) || (G__28859.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__28861 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__28861) : cljs.core.name.call(null,G__28861));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__28862 = ls.sval();
ls = G__28862;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__28864 = s;
if(G__28864){
var bit__15118__auto__ = (G__28864.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__15118__auto__) || (G__28864.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__28865 = cljs.core.next(s__$1);
s__$1 = G__28865;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_28866 = (0);
var xs_28867 = cljs.core.seq(coll);
while(true){
if(xs_28867){
(ret[i_28866] = cljs.core.to_array(cljs.core.first(xs_28867)));

var G__28868 = (i_28866 + (1));
var G__28869 = cljs.core.next(xs_28867);
i_28866 = G__28868;
xs_28867 = G__28869;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28872 = (i + (1));
var G__28873 = cljs.core.next(s__$1);
i = G__28872;
s__$1 = G__28873;
continue;
} else {
return a;
}
break;
}
} else {
var n__15331__auto___28874 = size;
var i_28875 = (0);
while(true){
if((i_28875 < n__15331__auto___28874)){
(a[i_28875] = init_val_or_seq);

var G__28876 = (i_28875 + (1));
i_28875 = G__28876;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28879 = (i + (1));
var G__28880 = cljs.core.next(s__$1);
i = G__28879;
s__$1 = G__28880;
continue;
} else {
return a;
}
break;
}
} else {
var n__15331__auto___28881 = size;
var i_28882 = (0);
while(true){
if((i_28882 < n__15331__auto___28881)){
(a[i_28882] = init_val_or_seq);

var G__28883 = (i_28882 + (1));
i_28882 = G__28883;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28886 = (i + (1));
var G__28887 = cljs.core.next(s__$1);
i = G__28886;
s__$1 = G__28887;
continue;
} else {
return a;
}
break;
}
} else {
var n__15331__auto___28888 = size;
var i_28889 = (0);
while(true){
if((i_28889 < n__15331__auto___28888)){
(a[i_28889] = init_val_or_seq);

var G__28890 = (i_28889 + (1));
i_28889 = G__28890;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28893 = (i + (1));
var G__28894 = cljs.core.next(s__$1);
i = G__28893;
s__$1 = G__28894;
continue;
} else {
return a;
}
break;
}
} else {
var n__15331__auto___28895 = size;
var i_28896 = (0);
while(true){
if((i_28896 < n__15331__auto___28895)){
(a[i_28896] = init_val_or_seq);

var G__28897 = (i_28896 + (1));
i_28896 = G__28897;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__28898 = cljs.core.next(s__$1);
var G__28899 = (i - (1));
var G__28900 = (sum + (1));
s__$1 = G__28898;
i = G__28899;
sum = G__28900;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__28920__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__28920 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__28921__i = 0, G__28921__a = new Array(arguments.length -  2);
while (G__28921__i < G__28921__a.length) {G__28921__a[G__28921__i] = arguments[G__28921__i + 2]; ++G__28921__i;}
  zs = new cljs.core.IndexedSeq(G__28921__a,0);
} 
return G__28920__delegate.call(this,x,y,zs);};
G__28920.cljs$lang$maxFixedArity = 2;
G__28920.cljs$lang$applyTo = (function (arglist__28922){
var x = cljs.core.first(arglist__28922);
arglist__28922 = cljs.core.next(arglist__28922);
var y = cljs.core.first(arglist__28922);
var zs = cljs.core.rest(arglist__28922);
return G__28920__delegate(x,y,zs);
});
G__28920.cljs$core$IFn$_invoke$arity$variadic = G__28920__delegate;
return G__28920;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__28923 = null;
if (arguments.length > 2) {
var G__28924__i = 0, G__28924__a = new Array(arguments.length -  2);
while (G__28924__i < G__28924__a.length) {G__28924__a[G__28924__i] = arguments[G__28924__i + 2]; ++G__28924__i;}
G__28923 = new cljs.core.IndexedSeq(G__28924__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28923);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__28925__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__28925 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__28926__i = 0, G__28926__a = new Array(arguments.length -  4);
while (G__28926__i < G__28926__a.length) {G__28926__a[G__28926__i] = arguments[G__28926__i + 4]; ++G__28926__i;}
  more = new cljs.core.IndexedSeq(G__28926__a,0);
} 
return G__28925__delegate.call(this,a,b,c,d,more);};
G__28925.cljs$lang$maxFixedArity = 4;
G__28925.cljs$lang$applyTo = (function (arglist__28927){
var a = cljs.core.first(arglist__28927);
arglist__28927 = cljs.core.next(arglist__28927);
var b = cljs.core.first(arglist__28927);
arglist__28927 = cljs.core.next(arglist__28927);
var c = cljs.core.first(arglist__28927);
arglist__28927 = cljs.core.next(arglist__28927);
var d = cljs.core.first(arglist__28927);
var more = cljs.core.rest(arglist__28927);
return G__28925__delegate(a,b,c,d,more);
});
G__28925.cljs$core$IFn$_invoke$arity$variadic = G__28925__delegate;
return G__28925;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__28928 = null;
if (arguments.length > 4) {
var G__28929__i = 0, G__28929__a = new Array(arguments.length -  4);
while (G__28929__i < G__28929__a.length) {G__28929__a[G__28929__i] = arguments[G__28929__i + 4]; ++G__28929__i;}
G__28928 = new cljs.core.IndexedSeq(G__28929__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__28928);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__28930__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__28931 = ntcoll;
var G__28932 = cljs.core.first(vals);
var G__28933 = cljs.core.next(vals);
tcoll = G__28931;
val = G__28932;
vals = G__28933;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28930 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__28934__i = 0, G__28934__a = new Array(arguments.length -  2);
while (G__28934__i < G__28934__a.length) {G__28934__a[G__28934__i] = arguments[G__28934__i + 2]; ++G__28934__i;}
  vals = new cljs.core.IndexedSeq(G__28934__a,0);
} 
return G__28930__delegate.call(this,tcoll,val,vals);};
G__28930.cljs$lang$maxFixedArity = 2;
G__28930.cljs$lang$applyTo = (function (arglist__28935){
var tcoll = cljs.core.first(arglist__28935);
arglist__28935 = cljs.core.next(arglist__28935);
var val = cljs.core.first(arglist__28935);
var vals = cljs.core.rest(arglist__28935);
return G__28930__delegate(tcoll,val,vals);
});
G__28930.cljs$core$IFn$_invoke$arity$variadic = G__28930__delegate;
return G__28930;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__28936 = null;
if (arguments.length > 2) {
var G__28937__i = 0, G__28937__a = new Array(arguments.length -  2);
while (G__28937__i < G__28937__a.length) {G__28937__a[G__28937__i] = arguments[G__28937__i + 2]; ++G__28937__i;}
G__28936 = new cljs.core.IndexedSeq(G__28937__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__28936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__28938__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__28939 = ntcoll;
var G__28940 = cljs.core.first(kvs);
var G__28941 = cljs.core.second(kvs);
var G__28942 = cljs.core.nnext(kvs);
tcoll = G__28939;
key = G__28940;
val = G__28941;
kvs = G__28942;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28938 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__28943__i = 0, G__28943__a = new Array(arguments.length -  3);
while (G__28943__i < G__28943__a.length) {G__28943__a[G__28943__i] = arguments[G__28943__i + 3]; ++G__28943__i;}
  kvs = new cljs.core.IndexedSeq(G__28943__a,0);
} 
return G__28938__delegate.call(this,tcoll,key,val,kvs);};
G__28938.cljs$lang$maxFixedArity = 3;
G__28938.cljs$lang$applyTo = (function (arglist__28944){
var tcoll = cljs.core.first(arglist__28944);
arglist__28944 = cljs.core.next(arglist__28944);
var key = cljs.core.first(arglist__28944);
arglist__28944 = cljs.core.next(arglist__28944);
var val = cljs.core.first(arglist__28944);
var kvs = cljs.core.rest(arglist__28944);
return G__28938__delegate(tcoll,key,val,kvs);
});
G__28938.cljs$core$IFn$_invoke$arity$variadic = G__28938__delegate;
return G__28938;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__28945 = null;
if (arguments.length > 3) {
var G__28946__i = 0, G__28946__a = new Array(arguments.length -  3);
while (G__28946__i < G__28946__a.length) {G__28946__a[G__28946__i] = arguments[G__28946__i + 3]; ++G__28946__i;}
G__28945 = new cljs.core.IndexedSeq(G__28946__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__28945);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__28947__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__28948 = ntcoll;
var G__28949 = cljs.core.first(ks);
var G__28950 = cljs.core.next(ks);
tcoll = G__28948;
key = G__28949;
ks = G__28950;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28947 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__28951__i = 0, G__28951__a = new Array(arguments.length -  2);
while (G__28951__i < G__28951__a.length) {G__28951__a[G__28951__i] = arguments[G__28951__i + 2]; ++G__28951__i;}
  ks = new cljs.core.IndexedSeq(G__28951__a,0);
} 
return G__28947__delegate.call(this,tcoll,key,ks);};
G__28947.cljs$lang$maxFixedArity = 2;
G__28947.cljs$lang$applyTo = (function (arglist__28952){
var tcoll = cljs.core.first(arglist__28952);
arglist__28952 = cljs.core.next(arglist__28952);
var key = cljs.core.first(arglist__28952);
var ks = cljs.core.rest(arglist__28952);
return G__28947__delegate(tcoll,key,ks);
});
G__28947.cljs$core$IFn$_invoke$arity$variadic = G__28947__delegate;
return G__28947;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__28953 = null;
if (arguments.length > 2) {
var G__28954__i = 0, G__28954__a = new Array(arguments.length -  2);
while (G__28954__i < G__28954__a.length) {G__28954__a[G__28954__i] = arguments[G__28954__i + 2]; ++G__28954__i;}
G__28953 = new cljs.core.IndexedSeq(G__28954__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__28953);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__28955__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__28956 = ntcoll;
var G__28957 = cljs.core.first(vals);
var G__28958 = cljs.core.next(vals);
tcoll = G__28956;
val = G__28957;
vals = G__28958;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28955 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__28959__i = 0, G__28959__a = new Array(arguments.length -  2);
while (G__28959__i < G__28959__a.length) {G__28959__a[G__28959__i] = arguments[G__28959__i + 2]; ++G__28959__i;}
  vals = new cljs.core.IndexedSeq(G__28959__a,0);
} 
return G__28955__delegate.call(this,tcoll,val,vals);};
G__28955.cljs$lang$maxFixedArity = 2;
G__28955.cljs$lang$applyTo = (function (arglist__28960){
var tcoll = cljs.core.first(arglist__28960);
arglist__28960 = cljs.core.next(arglist__28960);
var val = cljs.core.first(arglist__28960);
var vals = cljs.core.rest(arglist__28960);
return G__28955__delegate(tcoll,val,vals);
});
G__28955.cljs$core$IFn$_invoke$arity$variadic = G__28955__delegate;
return G__28955;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__28961 = null;
if (arguments.length > 2) {
var G__28962__i = 0, G__28962__a = new Array(arguments.length -  2);
while (G__28962__i < G__28962__a.length) {G__28962__a[G__28962__i] = arguments[G__28962__i + 2]; ++G__28962__i;}
G__28961 = new cljs.core.IndexedSeq(G__28962__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__28961);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a15375 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a15375);
} else {
var G__29173 = a15375;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29173) : f.call(null,G__29173));
}
} else {
var b15376 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a15375,b15376);
} else {
var G__29174 = a15375;
var G__29175 = b15376;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29174,G__29175) : f.call(null,G__29174,G__29175));
}
} else {
var c15377 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a15375,b15376,c15377);
} else {
var G__29176 = a15375;
var G__29177 = b15376;
var G__29178 = c15377;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29176,G__29177,G__29178) : f.call(null,G__29176,G__29177,G__29178));
}
} else {
var d15378 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a15375,b15376,c15377,d15378);
} else {
var G__29179 = a15375;
var G__29180 = b15376;
var G__29181 = c15377;
var G__29182 = d15378;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29179,G__29180,G__29181,G__29182) : f.call(null,G__29179,G__29180,G__29181,G__29182));
}
} else {
var e15379 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a15375,b15376,c15377,d15378,e15379);
} else {
var G__29183 = a15375;
var G__29184 = b15376;
var G__29185 = c15377;
var G__29186 = d15378;
var G__29187 = e15379;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29183,G__29184,G__29185,G__29186,G__29187) : f.call(null,G__29183,G__29184,G__29185,G__29186,G__29187));
}
} else {
var f15380 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a15375,b15376,c15377,d15378,e15379,f15380);
} else {
var G__29188 = a15375;
var G__29189 = b15376;
var G__29190 = c15377;
var G__29191 = d15378;
var G__29192 = e15379;
var G__29193 = f15380;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__29188,G__29189,G__29190,G__29191,G__29192,G__29193) : f.call(null,G__29188,G__29189,G__29190,G__29191,G__29192,G__29193));
}
} else {
var g15381 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a15375,b15376,c15377,d15378,e15379,f15380,g15381);
} else {
var G__29194 = a15375;
var G__29195 = b15376;
var G__29196 = c15377;
var G__29197 = d15378;
var G__29198 = e15379;
var G__29199 = f15380;
var G__29200 = g15381;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__29194,G__29195,G__29196,G__29197,G__29198,G__29199,G__29200) : f.call(null,G__29194,G__29195,G__29196,G__29197,G__29198,G__29199,G__29200));
}
} else {
var h15382 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382);
} else {
var G__29201 = a15375;
var G__29202 = b15376;
var G__29203 = c15377;
var G__29204 = d15378;
var G__29205 = e15379;
var G__29206 = f15380;
var G__29207 = g15381;
var G__29208 = h15382;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__29201,G__29202,G__29203,G__29204,G__29205,G__29206,G__29207,G__29208) : f.call(null,G__29201,G__29202,G__29203,G__29204,G__29205,G__29206,G__29207,G__29208));
}
} else {
var i15383 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383);
} else {
var G__29209 = a15375;
var G__29210 = b15376;
var G__29211 = c15377;
var G__29212 = d15378;
var G__29213 = e15379;
var G__29214 = f15380;
var G__29215 = g15381;
var G__29216 = h15382;
var G__29217 = i15383;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__29209,G__29210,G__29211,G__29212,G__29213,G__29214,G__29215,G__29216,G__29217) : f.call(null,G__29209,G__29210,G__29211,G__29212,G__29213,G__29214,G__29215,G__29216,G__29217));
}
} else {
var j15384 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384);
} else {
var G__29218 = a15375;
var G__29219 = b15376;
var G__29220 = c15377;
var G__29221 = d15378;
var G__29222 = e15379;
var G__29223 = f15380;
var G__29224 = g15381;
var G__29225 = h15382;
var G__29226 = i15383;
var G__29227 = j15384;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__29218,G__29219,G__29220,G__29221,G__29222,G__29223,G__29224,G__29225,G__29226,G__29227) : f.call(null,G__29218,G__29219,G__29220,G__29221,G__29222,G__29223,G__29224,G__29225,G__29226,G__29227));
}
} else {
var k15385 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385);
} else {
var G__29228 = a15375;
var G__29229 = b15376;
var G__29230 = c15377;
var G__29231 = d15378;
var G__29232 = e15379;
var G__29233 = f15380;
var G__29234 = g15381;
var G__29235 = h15382;
var G__29236 = i15383;
var G__29237 = j15384;
var G__29238 = k15385;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__29228,G__29229,G__29230,G__29231,G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238) : f.call(null,G__29228,G__29229,G__29230,G__29231,G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238));
}
} else {
var l15386 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386);
} else {
var G__29239 = a15375;
var G__29240 = b15376;
var G__29241 = c15377;
var G__29242 = d15378;
var G__29243 = e15379;
var G__29244 = f15380;
var G__29245 = g15381;
var G__29246 = h15382;
var G__29247 = i15383;
var G__29248 = j15384;
var G__29249 = k15385;
var G__29250 = l15386;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__29239,G__29240,G__29241,G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248,G__29249,G__29250) : f.call(null,G__29239,G__29240,G__29241,G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248,G__29249,G__29250));
}
} else {
var m15387 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387);
} else {
var G__29251 = a15375;
var G__29252 = b15376;
var G__29253 = c15377;
var G__29254 = d15378;
var G__29255 = e15379;
var G__29256 = f15380;
var G__29257 = g15381;
var G__29258 = h15382;
var G__29259 = i15383;
var G__29260 = j15384;
var G__29261 = k15385;
var G__29262 = l15386;
var G__29263 = m15387;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__29251,G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259,G__29260,G__29261,G__29262,G__29263) : f.call(null,G__29251,G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259,G__29260,G__29261,G__29262,G__29263));
}
} else {
var n15388 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388);
} else {
var G__29264 = a15375;
var G__29265 = b15376;
var G__29266 = c15377;
var G__29267 = d15378;
var G__29268 = e15379;
var G__29269 = f15380;
var G__29270 = g15381;
var G__29271 = h15382;
var G__29272 = i15383;
var G__29273 = j15384;
var G__29274 = k15385;
var G__29275 = l15386;
var G__29276 = m15387;
var G__29277 = n15388;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__29264,G__29265,G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274,G__29275,G__29276,G__29277) : f.call(null,G__29264,G__29265,G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274,G__29275,G__29276,G__29277));
}
} else {
var o15389 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389);
} else {
var G__29278 = a15375;
var G__29279 = b15376;
var G__29280 = c15377;
var G__29281 = d15378;
var G__29282 = e15379;
var G__29283 = f15380;
var G__29284 = g15381;
var G__29285 = h15382;
var G__29286 = i15383;
var G__29287 = j15384;
var G__29288 = k15385;
var G__29289 = l15386;
var G__29290 = m15387;
var G__29291 = n15388;
var G__29292 = o15389;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__29278,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286,G__29287,G__29288,G__29289,G__29290,G__29291,G__29292) : f.call(null,G__29278,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286,G__29287,G__29288,G__29289,G__29290,G__29291,G__29292));
}
} else {
var p15390 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390);
} else {
var G__29293 = a15375;
var G__29294 = b15376;
var G__29295 = c15377;
var G__29296 = d15378;
var G__29297 = e15379;
var G__29298 = f15380;
var G__29299 = g15381;
var G__29300 = h15382;
var G__29301 = i15383;
var G__29302 = j15384;
var G__29303 = k15385;
var G__29304 = l15386;
var G__29305 = m15387;
var G__29306 = n15388;
var G__29307 = o15389;
var G__29308 = p15390;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__29293,G__29294,G__29295,G__29296,G__29297,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306,G__29307,G__29308) : f.call(null,G__29293,G__29294,G__29295,G__29296,G__29297,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306,G__29307,G__29308));
}
} else {
var q15391 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390,q15391);
} else {
var G__29309 = a15375;
var G__29310 = b15376;
var G__29311 = c15377;
var G__29312 = d15378;
var G__29313 = e15379;
var G__29314 = f15380;
var G__29315 = g15381;
var G__29316 = h15382;
var G__29317 = i15383;
var G__29318 = j15384;
var G__29319 = k15385;
var G__29320 = l15386;
var G__29321 = m15387;
var G__29322 = n15388;
var G__29323 = o15389;
var G__29324 = p15390;
var G__29325 = q15391;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321,G__29322,G__29323,G__29324,G__29325) : f.call(null,G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321,G__29322,G__29323,G__29324,G__29325));
}
} else {
var r15392 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390,q15391,r15392);
} else {
var G__29326 = a15375;
var G__29327 = b15376;
var G__29328 = c15377;
var G__29329 = d15378;
var G__29330 = e15379;
var G__29331 = f15380;
var G__29332 = g15381;
var G__29333 = h15382;
var G__29334 = i15383;
var G__29335 = j15384;
var G__29336 = k15385;
var G__29337 = l15386;
var G__29338 = m15387;
var G__29339 = n15388;
var G__29340 = o15389;
var G__29341 = p15390;
var G__29342 = q15391;
var G__29343 = r15392;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336,G__29337,G__29338,G__29339,G__29340,G__29341,G__29342,G__29343) : f.call(null,G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336,G__29337,G__29338,G__29339,G__29340,G__29341,G__29342,G__29343));
}
} else {
var s15393 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390,q15391,r15392,s15393);
} else {
var G__29344 = a15375;
var G__29345 = b15376;
var G__29346 = c15377;
var G__29347 = d15378;
var G__29348 = e15379;
var G__29349 = f15380;
var G__29350 = g15381;
var G__29351 = h15382;
var G__29352 = i15383;
var G__29353 = j15384;
var G__29354 = k15385;
var G__29355 = l15386;
var G__29356 = m15387;
var G__29357 = n15388;
var G__29358 = o15389;
var G__29359 = p15390;
var G__29360 = q15391;
var G__29361 = r15392;
var G__29362 = s15393;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__29344,G__29345,G__29346,G__29347,G__29348,G__29349,G__29350,G__29351,G__29352,G__29353,G__29354,G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362) : f.call(null,G__29344,G__29345,G__29346,G__29347,G__29348,G__29349,G__29350,G__29351,G__29352,G__29353,G__29354,G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362));
}
} else {
var t15394 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a15375,b15376,c15377,d15378,e15379,f15380,g15381,h15382,i15383,j15384,k15385,l15386,m15387,n15388,o15389,p15390,q15391,r15392,s15393,t15394);
} else {
var G__29363 = a15375;
var G__29364 = b15376;
var G__29365 = c15377;
var G__29366 = d15378;
var G__29367 = e15379;
var G__29368 = f15380;
var G__29369 = g15381;
var G__29370 = h15382;
var G__29371 = i15383;
var G__29372 = j15384;
var G__29373 = k15385;
var G__29374 = l15386;
var G__29375 = m15387;
var G__29376 = n15388;
var G__29377 = o15389;
var G__29378 = p15390;
var G__29379 = q15391;
var G__29380 = r15392;
var G__29381 = s15393;
var G__29382 = t15394;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__29363,G__29364,G__29365,G__29366,G__29367,G__29368,G__29369,G__29370,G__29371,G__29372,G__29373,G__29374,G__29375,G__29376,G__29377,G__29378,G__29379,G__29380,G__29381,G__29382) : f.call(null,G__29363,G__29364,G__29365,G__29366,G__29367,G__29368,G__29369,G__29370,G__29371,G__29372,G__29373,G__29374,G__29375,G__29376,G__29377,G__29378,G__29379,G__29380,G__29381,G__29382));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__29383__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__29383 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__29384__i = 0, G__29384__a = new Array(arguments.length -  5);
while (G__29384__i < G__29384__a.length) {G__29384__a[G__29384__i] = arguments[G__29384__i + 5]; ++G__29384__i;}
  args = new cljs.core.IndexedSeq(G__29384__a,0);
} 
return G__29383__delegate.call(this,f,a,b,c,d,args);};
G__29383.cljs$lang$maxFixedArity = 5;
G__29383.cljs$lang$applyTo = (function (arglist__29385){
var f = cljs.core.first(arglist__29385);
arglist__29385 = cljs.core.next(arglist__29385);
var a = cljs.core.first(arglist__29385);
arglist__29385 = cljs.core.next(arglist__29385);
var b = cljs.core.first(arglist__29385);
arglist__29385 = cljs.core.next(arglist__29385);
var c = cljs.core.first(arglist__29385);
arglist__29385 = cljs.core.next(arglist__29385);
var d = cljs.core.first(arglist__29385);
var args = cljs.core.rest(arglist__29385);
return G__29383__delegate(f,a,b,c,d,args);
});
G__29383.cljs$core$IFn$_invoke$arity$variadic = G__29383__delegate;
return G__29383;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__29386 = null;
if (arguments.length > 5) {
var G__29387__i = 0, G__29387__a = new Array(arguments.length -  5);
while (G__29387__i < G__29387__a.length) {G__29387__a[G__29387__i] = arguments[G__29387__i + 5]; ++G__29387__i;}
G__29386 = new cljs.core.IndexedSeq(G__29387__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__29386);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__29403 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29403) : f.call(null,G__29403));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__29404 = cljs.core.meta(obj);
var G__29405 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29404,G__29405) : f.call(null,G__29404,G__29405));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__29406 = cljs.core.meta(obj);
var G__29407 = a;
var G__29408 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29406,G__29407,G__29408) : f.call(null,G__29406,G__29407,G__29408));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__29409 = cljs.core.meta(obj);
var G__29410 = a;
var G__29411 = b;
var G__29412 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29409,G__29410,G__29411,G__29412) : f.call(null,G__29409,G__29410,G__29411,G__29412));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__29413 = cljs.core.meta(obj);
var G__29414 = a;
var G__29415 = b;
var G__29416 = c;
var G__29417 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29413,G__29414,G__29415,G__29416,G__29417) : f.call(null,G__29413,G__29414,G__29415,G__29416,G__29417));
})());
});
var vary_meta__7 = (function() { 
var G__29418__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__29418 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__29419__i = 0, G__29419__a = new Array(arguments.length -  6);
while (G__29419__i < G__29419__a.length) {G__29419__a[G__29419__i] = arguments[G__29419__i + 6]; ++G__29419__i;}
  args = new cljs.core.IndexedSeq(G__29419__a,0);
} 
return G__29418__delegate.call(this,obj,f,a,b,c,d,args);};
G__29418.cljs$lang$maxFixedArity = 6;
G__29418.cljs$lang$applyTo = (function (arglist__29420){
var obj = cljs.core.first(arglist__29420);
arglist__29420 = cljs.core.next(arglist__29420);
var f = cljs.core.first(arglist__29420);
arglist__29420 = cljs.core.next(arglist__29420);
var a = cljs.core.first(arglist__29420);
arglist__29420 = cljs.core.next(arglist__29420);
var b = cljs.core.first(arglist__29420);
arglist__29420 = cljs.core.next(arglist__29420);
var c = cljs.core.first(arglist__29420);
arglist__29420 = cljs.core.next(arglist__29420);
var d = cljs.core.first(arglist__29420);
var args = cljs.core.rest(arglist__29420);
return G__29418__delegate(obj,f,a,b,c,d,args);
});
G__29418.cljs$core$IFn$_invoke$arity$variadic = G__29418__delegate;
return G__29418;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__29421 = null;
if (arguments.length > 6) {
var G__29422__i = 0, G__29422__a = new Array(arguments.length -  6);
while (G__29422__i < G__29422__a.length) {G__29422__a[G__29422__i] = arguments[G__29422__i + 6]; ++G__29422__i;}
G__29421 = new cljs.core.IndexedSeq(G__29422__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__29421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__29423__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__29423 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29424__i = 0, G__29424__a = new Array(arguments.length -  2);
while (G__29424__i < G__29424__a.length) {G__29424__a[G__29424__i] = arguments[G__29424__i + 2]; ++G__29424__i;}
  more = new cljs.core.IndexedSeq(G__29424__a,0);
} 
return G__29423__delegate.call(this,x,y,more);};
G__29423.cljs$lang$maxFixedArity = 2;
G__29423.cljs$lang$applyTo = (function (arglist__29425){
var x = cljs.core.first(arglist__29425);
arglist__29425 = cljs.core.next(arglist__29425);
var y = cljs.core.first(arglist__29425);
var more = cljs.core.rest(arglist__29425);
return G__29423__delegate(x,y,more);
});
G__29423.cljs$core$IFn$_invoke$arity$variadic = G__29423__delegate;
return G__29423;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__29426 = null;
if (arguments.length > 2) {
var G__29427__i = 0, G__29427__a = new Array(arguments.length -  2);
while (G__29427__i < G__29427__a.length) {G__29427__a[G__29427__i] = arguments[G__29427__i + 2]; ++G__29427__i;}
G__29426 = new cljs.core.IndexedSeq(G__29427__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t29431 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t29431 = (function (nil_iter,meta29432){
this.nil_iter = nil_iter;
this.meta29432 = meta29432;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t29431.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t29431.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t29431.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t29431.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_29433){
var self__ = this;
var _29433__$1 = this;
return self__.meta29432;
});

cljs.core.t29431.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_29433,meta29432__$1){
var self__ = this;
var _29433__$1 = this;
return (new cljs.core.t29431(self__.nil_iter,meta29432__$1));
});

cljs.core.t29431.cljs$lang$type = true;

cljs.core.t29431.cljs$lang$ctorStr = "cljs.core/t29431";

cljs.core.t29431.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/t29431");
});

cljs.core.__GT_t29431 = (function __GT_t29431(nil_iter__$1,meta29432){
return (new cljs.core.t29431(nil_iter__$1,meta29432));
});

}

return (new cljs.core.t29431(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__14432__auto__ = !((lt.stepper == null));
if(and__14432__auto__){
return self__.iter.hasNext();
} else {
return and__14432__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__29434 = lt;
var G__29435 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__29434,G__29435) : self__.xform.call(null,G__29434,G__29435));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__29436 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__29436) : self__.xform.call(null,G__29436));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__29438 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__29438) : xform.call(null,G__29438));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__29440 = cljs.core.next(iters__$1);
iters__$1 = G__29440;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__15331__auto___29441 = self__.iters.length;
var i_29442 = (0);
while(true){
if((i_29442 < n__15331__auto___29441)){
(self__.nexts[i_29442] = (self__.iters[i_29442]).next());

var G__29443 = (i_29442 + (1));
i_29442 = G__29443;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__14432__auto__ = !((lt.stepper == null));
if(and__14432__auto__){
return this$.hasNext();
} else {
return and__14432__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__29439 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__29439) : self__.xform.call(null,G__29439));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__29448 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__29448) : xform.call(null,G__29448));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__29449_29453 = cljs.core.seq(colls);
var chunk__29450_29454 = null;
var count__29451_29455 = (0);
var i__29452_29456 = (0);
while(true){
if((i__29452_29456 < count__29451_29455)){
var coll_29457 = chunk__29450_29454.cljs$core$IIndexed$_nth$arity$2(null,i__29452_29456);
iters.push(cljs.core.iter(coll_29457));

var G__29458 = seq__29449_29453;
var G__29459 = chunk__29450_29454;
var G__29460 = count__29451_29455;
var G__29461 = (i__29452_29456 + (1));
seq__29449_29453 = G__29458;
chunk__29450_29454 = G__29459;
count__29451_29455 = G__29460;
i__29452_29456 = G__29461;
continue;
} else {
var temp__4406__auto___29462 = cljs.core.seq(seq__29449_29453);
if(temp__4406__auto___29462){
var seq__29449_29463__$1 = temp__4406__auto___29462;
if(cljs.core.chunked_seq_QMARK_(seq__29449_29463__$1)){
var c__15231__auto___29464 = cljs.core.chunk_first(seq__29449_29463__$1);
var G__29465 = cljs.core.chunk_rest(seq__29449_29463__$1);
var G__29466 = c__15231__auto___29464;
var G__29467 = cljs.core.count(c__15231__auto___29464);
var G__29468 = (0);
seq__29449_29453 = G__29465;
chunk__29450_29454 = G__29466;
count__29451_29455 = G__29467;
i__29452_29456 = G__29468;
continue;
} else {
var coll_29469 = cljs.core.first(seq__29449_29463__$1);
iters.push(cljs.core.iter(coll_29469));

var G__29470 = cljs.core.next(seq__29449_29463__$1);
var G__29471 = null;
var G__29472 = (0);
var G__29473 = (0);
seq__29449_29453 = G__29470;
chunk__29450_29454 = G__29471;
count__29451_29455 = G__29472;
i__29452_29456 = G__29473;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__14444__auto__ = cljs.core.seq(coll);
if(or__14444__auto__){
return or__14444__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__29474__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__29474 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__29475__i = 0, G__29475__a = new Array(arguments.length -  2);
while (G__29475__i < G__29475__a.length) {G__29475__a[G__29475__i] = arguments[G__29475__i + 2]; ++G__29475__i;}
  colls = new cljs.core.IndexedSeq(G__29475__a,0);
} 
return G__29474__delegate.call(this,xform,coll,colls);};
G__29474.cljs$lang$maxFixedArity = 2;
G__29474.cljs$lang$applyTo = (function (arglist__29476){
var xform = cljs.core.first(arglist__29476);
arglist__29476 = cljs.core.next(arglist__29476);
var coll = cljs.core.first(arglist__29476);
var colls = cljs.core.rest(arglist__29476);
return G__29474__delegate(xform,coll,colls);
});
G__29474.cljs$core$IFn$_invoke$arity$variadic = G__29474__delegate;
return G__29474;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__29477 = null;
if (arguments.length > 2) {
var G__29478__i = 0, G__29478__a = new Array(arguments.length -  2);
while (G__29478__i < G__29478__a.length) {G__29478__a[G__29478__i] = arguments[G__29478__i + 2]; ++G__29478__i;}
G__29477 = new cljs.core.IndexedSeq(G__29478__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__29477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__29480 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29480) : pred.call(null,G__29480));
})())){
var G__29481 = pred;
var G__29482 = cljs.core.next(coll);
pred = G__29481;
coll = G__29482;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__14444__auto__ = (function (){var G__29486 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29486) : pred.call(null,G__29486));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__29487 = pred;
var G__29488 = cljs.core.next(coll);
pred = G__29487;
coll = G__29488;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__29495 = null;
var G__29495__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__29495__1 = (function (x){
return cljs.core.not((function (){var G__29492 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29492) : f.call(null,G__29492));
})());
});
var G__29495__2 = (function (x,y){
return cljs.core.not((function (){var G__29493 = x;
var G__29494 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29493,G__29494) : f.call(null,G__29493,G__29494));
})());
});
var G__29495__3 = (function() { 
var G__29496__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__29496 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__29497__i = 0, G__29497__a = new Array(arguments.length -  2);
while (G__29497__i < G__29497__a.length) {G__29497__a[G__29497__i] = arguments[G__29497__i + 2]; ++G__29497__i;}
  zs = new cljs.core.IndexedSeq(G__29497__a,0);
} 
return G__29496__delegate.call(this,x,y,zs);};
G__29496.cljs$lang$maxFixedArity = 2;
G__29496.cljs$lang$applyTo = (function (arglist__29498){
var x = cljs.core.first(arglist__29498);
arglist__29498 = cljs.core.next(arglist__29498);
var y = cljs.core.first(arglist__29498);
var zs = cljs.core.rest(arglist__29498);
return G__29496__delegate(x,y,zs);
});
G__29496.cljs$core$IFn$_invoke$arity$variadic = G__29496__delegate;
return G__29496;
})()
;
G__29495 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__29495__0.call(this);
case 1:
return G__29495__1.call(this,x);
case 2:
return G__29495__2.call(this,x,y);
default:
var G__29499 = null;
if (arguments.length > 2) {
var G__29500__i = 0, G__29500__a = new Array(arguments.length -  2);
while (G__29500__i < G__29500__a.length) {G__29500__a[G__29500__i] = arguments[G__29500__i + 2]; ++G__29500__i;}
G__29499 = new cljs.core.IndexedSeq(G__29500__a,0);
}
return G__29495__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29495.cljs$lang$maxFixedArity = 2;
G__29495.cljs$lang$applyTo = G__29495__3.cljs$lang$applyTo;
G__29495.cljs$core$IFn$_invoke$arity$0 = G__29495__0;
G__29495.cljs$core$IFn$_invoke$arity$1 = G__29495__1;
G__29495.cljs$core$IFn$_invoke$arity$2 = G__29495__2;
G__29495.cljs$core$IFn$_invoke$arity$variadic = G__29495__3.cljs$core$IFn$_invoke$arity$variadic;
return G__29495;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__29501__delegate = function (args){
return x;
};
var G__29501 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29502__i = 0, G__29502__a = new Array(arguments.length -  0);
while (G__29502__i < G__29502__a.length) {G__29502__a[G__29502__i] = arguments[G__29502__i + 0]; ++G__29502__i;}
  args = new cljs.core.IndexedSeq(G__29502__a,0);
} 
return G__29501__delegate.call(this,args);};
G__29501.cljs$lang$maxFixedArity = 0;
G__29501.cljs$lang$applyTo = (function (arglist__29503){
var args = cljs.core.seq(arglist__29503);
return G__29501__delegate(args);
});
G__29501.cljs$core$IFn$_invoke$arity$variadic = G__29501__delegate;
return G__29501;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__29558 = null;
var G__29558__0 = (function (){
var G__29531 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29531) : f.call(null,G__29531));
});
var G__29558__1 = (function (x){
var G__29532 = (function (){var G__29533 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29533) : g.call(null,G__29533));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29532) : f.call(null,G__29532));
});
var G__29558__2 = (function (x,y){
var G__29534 = (function (){var G__29535 = x;
var G__29536 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__29535,G__29536) : g.call(null,G__29535,G__29536));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29534) : f.call(null,G__29534));
});
var G__29558__3 = (function (x,y,z){
var G__29537 = (function (){var G__29538 = x;
var G__29539 = y;
var G__29540 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__29538,G__29539,G__29540) : g.call(null,G__29538,G__29539,G__29540));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29537) : f.call(null,G__29537));
});
var G__29558__4 = (function() { 
var G__29559__delegate = function (x,y,z,args){
var G__29541 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29541) : f.call(null,G__29541));
};
var G__29559 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29560__i = 0, G__29560__a = new Array(arguments.length -  3);
while (G__29560__i < G__29560__a.length) {G__29560__a[G__29560__i] = arguments[G__29560__i + 3]; ++G__29560__i;}
  args = new cljs.core.IndexedSeq(G__29560__a,0);
} 
return G__29559__delegate.call(this,x,y,z,args);};
G__29559.cljs$lang$maxFixedArity = 3;
G__29559.cljs$lang$applyTo = (function (arglist__29561){
var x = cljs.core.first(arglist__29561);
arglist__29561 = cljs.core.next(arglist__29561);
var y = cljs.core.first(arglist__29561);
arglist__29561 = cljs.core.next(arglist__29561);
var z = cljs.core.first(arglist__29561);
var args = cljs.core.rest(arglist__29561);
return G__29559__delegate(x,y,z,args);
});
G__29559.cljs$core$IFn$_invoke$arity$variadic = G__29559__delegate;
return G__29559;
})()
;
G__29558 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29558__0.call(this);
case 1:
return G__29558__1.call(this,x);
case 2:
return G__29558__2.call(this,x,y);
case 3:
return G__29558__3.call(this,x,y,z);
default:
var G__29562 = null;
if (arguments.length > 3) {
var G__29563__i = 0, G__29563__a = new Array(arguments.length -  3);
while (G__29563__i < G__29563__a.length) {G__29563__a[G__29563__i] = arguments[G__29563__i + 3]; ++G__29563__i;}
G__29562 = new cljs.core.IndexedSeq(G__29563__a,0);
}
return G__29558__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29558.cljs$lang$maxFixedArity = 3;
G__29558.cljs$lang$applyTo = G__29558__4.cljs$lang$applyTo;
G__29558.cljs$core$IFn$_invoke$arity$0 = G__29558__0;
G__29558.cljs$core$IFn$_invoke$arity$1 = G__29558__1;
G__29558.cljs$core$IFn$_invoke$arity$2 = G__29558__2;
G__29558.cljs$core$IFn$_invoke$arity$3 = G__29558__3;
G__29558.cljs$core$IFn$_invoke$arity$variadic = G__29558__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29558;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__29564 = null;
var G__29564__0 = (function (){
var G__29542 = (function (){var G__29543 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29543) : g.call(null,G__29543));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29542) : f.call(null,G__29542));
});
var G__29564__1 = (function (x){
var G__29544 = (function (){var G__29545 = (function (){var G__29546 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__29546) : h.call(null,G__29546));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29545) : g.call(null,G__29545));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29544) : f.call(null,G__29544));
});
var G__29564__2 = (function (x,y){
var G__29547 = (function (){var G__29548 = (function (){var G__29549 = x;
var G__29550 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__29549,G__29550) : h.call(null,G__29549,G__29550));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29548) : g.call(null,G__29548));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29547) : f.call(null,G__29547));
});
var G__29564__3 = (function (x,y,z){
var G__29551 = (function (){var G__29552 = (function (){var G__29553 = x;
var G__29554 = y;
var G__29555 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__29553,G__29554,G__29555) : h.call(null,G__29553,G__29554,G__29555));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29552) : g.call(null,G__29552));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29551) : f.call(null,G__29551));
});
var G__29564__4 = (function() { 
var G__29565__delegate = function (x,y,z,args){
var G__29556 = (function (){var G__29557 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29557) : g.call(null,G__29557));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29556) : f.call(null,G__29556));
};
var G__29565 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29566__i = 0, G__29566__a = new Array(arguments.length -  3);
while (G__29566__i < G__29566__a.length) {G__29566__a[G__29566__i] = arguments[G__29566__i + 3]; ++G__29566__i;}
  args = new cljs.core.IndexedSeq(G__29566__a,0);
} 
return G__29565__delegate.call(this,x,y,z,args);};
G__29565.cljs$lang$maxFixedArity = 3;
G__29565.cljs$lang$applyTo = (function (arglist__29567){
var x = cljs.core.first(arglist__29567);
arglist__29567 = cljs.core.next(arglist__29567);
var y = cljs.core.first(arglist__29567);
arglist__29567 = cljs.core.next(arglist__29567);
var z = cljs.core.first(arglist__29567);
var args = cljs.core.rest(arglist__29567);
return G__29565__delegate(x,y,z,args);
});
G__29565.cljs$core$IFn$_invoke$arity$variadic = G__29565__delegate;
return G__29565;
})()
;
G__29564 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29564__0.call(this);
case 1:
return G__29564__1.call(this,x);
case 2:
return G__29564__2.call(this,x,y);
case 3:
return G__29564__3.call(this,x,y,z);
default:
var G__29568 = null;
if (arguments.length > 3) {
var G__29569__i = 0, G__29569__a = new Array(arguments.length -  3);
while (G__29569__i < G__29569__a.length) {G__29569__a[G__29569__i] = arguments[G__29569__i + 3]; ++G__29569__i;}
G__29568 = new cljs.core.IndexedSeq(G__29569__a,0);
}
return G__29564__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29564.cljs$lang$maxFixedArity = 3;
G__29564.cljs$lang$applyTo = G__29564__4.cljs$lang$applyTo;
G__29564.cljs$core$IFn$_invoke$arity$0 = G__29564__0;
G__29564.cljs$core$IFn$_invoke$arity$1 = G__29564__1;
G__29564.cljs$core$IFn$_invoke$arity$2 = G__29564__2;
G__29564.cljs$core$IFn$_invoke$arity$3 = G__29564__3;
G__29564.cljs$core$IFn$_invoke$arity$variadic = G__29564__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29564;
})()
});
var comp__4 = (function() { 
var G__29570__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__29571__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__29572 = cljs.core.first(fs__$2).call(null,ret);
var G__29573 = cljs.core.next(fs__$2);
ret = G__29572;
fs__$2 = G__29573;
continue;
} else {
return ret;
}
break;
}
};
var G__29571 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29574__i = 0, G__29574__a = new Array(arguments.length -  0);
while (G__29574__i < G__29574__a.length) {G__29574__a[G__29574__i] = arguments[G__29574__i + 0]; ++G__29574__i;}
  args = new cljs.core.IndexedSeq(G__29574__a,0);
} 
return G__29571__delegate.call(this,args);};
G__29571.cljs$lang$maxFixedArity = 0;
G__29571.cljs$lang$applyTo = (function (arglist__29575){
var args = cljs.core.seq(arglist__29575);
return G__29571__delegate(args);
});
G__29571.cljs$core$IFn$_invoke$arity$variadic = G__29571__delegate;
return G__29571;
})()
;
;})(fs__$1))
};
var G__29570 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__29576__i = 0, G__29576__a = new Array(arguments.length -  3);
while (G__29576__i < G__29576__a.length) {G__29576__a[G__29576__i] = arguments[G__29576__i + 3]; ++G__29576__i;}
  fs = new cljs.core.IndexedSeq(G__29576__a,0);
} 
return G__29570__delegate.call(this,f1,f2,f3,fs);};
G__29570.cljs$lang$maxFixedArity = 3;
G__29570.cljs$lang$applyTo = (function (arglist__29577){
var f1 = cljs.core.first(arglist__29577);
arglist__29577 = cljs.core.next(arglist__29577);
var f2 = cljs.core.first(arglist__29577);
arglist__29577 = cljs.core.next(arglist__29577);
var f3 = cljs.core.first(arglist__29577);
var fs = cljs.core.rest(arglist__29577);
return G__29570__delegate(f1,f2,f3,fs);
});
G__29570.cljs$core$IFn$_invoke$arity$variadic = G__29570__delegate;
return G__29570;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__29578 = null;
if (arguments.length > 3) {
var G__29579__i = 0, G__29579__a = new Array(arguments.length -  3);
while (G__29579__i < G__29579__a.length) {G__29579__a[G__29579__i] = arguments[G__29579__i + 3]; ++G__29579__i;}
G__29578 = new cljs.core.IndexedSeq(G__29579__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__29578);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__29664 = null;
var G__29664__0 = (function (){
var G__29622 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29622) : f.call(null,G__29622));
});
var G__29664__1 = (function (x){
var G__29623 = arg1;
var G__29624 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29623,G__29624) : f.call(null,G__29623,G__29624));
});
var G__29664__2 = (function (x,y){
var G__29625 = arg1;
var G__29626 = x;
var G__29627 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29625,G__29626,G__29627) : f.call(null,G__29625,G__29626,G__29627));
});
var G__29664__3 = (function (x,y,z){
var G__29628 = arg1;
var G__29629 = x;
var G__29630 = y;
var G__29631 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29628,G__29629,G__29630,G__29631) : f.call(null,G__29628,G__29629,G__29630,G__29631));
});
var G__29664__4 = (function() { 
var G__29665__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__29665 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29666__i = 0, G__29666__a = new Array(arguments.length -  3);
while (G__29666__i < G__29666__a.length) {G__29666__a[G__29666__i] = arguments[G__29666__i + 3]; ++G__29666__i;}
  args = new cljs.core.IndexedSeq(G__29666__a,0);
} 
return G__29665__delegate.call(this,x,y,z,args);};
G__29665.cljs$lang$maxFixedArity = 3;
G__29665.cljs$lang$applyTo = (function (arglist__29667){
var x = cljs.core.first(arglist__29667);
arglist__29667 = cljs.core.next(arglist__29667);
var y = cljs.core.first(arglist__29667);
arglist__29667 = cljs.core.next(arglist__29667);
var z = cljs.core.first(arglist__29667);
var args = cljs.core.rest(arglist__29667);
return G__29665__delegate(x,y,z,args);
});
G__29665.cljs$core$IFn$_invoke$arity$variadic = G__29665__delegate;
return G__29665;
})()
;
G__29664 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29664__0.call(this);
case 1:
return G__29664__1.call(this,x);
case 2:
return G__29664__2.call(this,x,y);
case 3:
return G__29664__3.call(this,x,y,z);
default:
var G__29668 = null;
if (arguments.length > 3) {
var G__29669__i = 0, G__29669__a = new Array(arguments.length -  3);
while (G__29669__i < G__29669__a.length) {G__29669__a[G__29669__i] = arguments[G__29669__i + 3]; ++G__29669__i;}
G__29668 = new cljs.core.IndexedSeq(G__29669__a,0);
}
return G__29664__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29664.cljs$lang$maxFixedArity = 3;
G__29664.cljs$lang$applyTo = G__29664__4.cljs$lang$applyTo;
G__29664.cljs$core$IFn$_invoke$arity$0 = G__29664__0;
G__29664.cljs$core$IFn$_invoke$arity$1 = G__29664__1;
G__29664.cljs$core$IFn$_invoke$arity$2 = G__29664__2;
G__29664.cljs$core$IFn$_invoke$arity$3 = G__29664__3;
G__29664.cljs$core$IFn$_invoke$arity$variadic = G__29664__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29664;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__29670 = null;
var G__29670__0 = (function (){
var G__29632 = arg1;
var G__29633 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29632,G__29633) : f.call(null,G__29632,G__29633));
});
var G__29670__1 = (function (x){
var G__29634 = arg1;
var G__29635 = arg2;
var G__29636 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29634,G__29635,G__29636) : f.call(null,G__29634,G__29635,G__29636));
});
var G__29670__2 = (function (x,y){
var G__29637 = arg1;
var G__29638 = arg2;
var G__29639 = x;
var G__29640 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29637,G__29638,G__29639,G__29640) : f.call(null,G__29637,G__29638,G__29639,G__29640));
});
var G__29670__3 = (function (x,y,z){
var G__29641 = arg1;
var G__29642 = arg2;
var G__29643 = x;
var G__29644 = y;
var G__29645 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29641,G__29642,G__29643,G__29644,G__29645) : f.call(null,G__29641,G__29642,G__29643,G__29644,G__29645));
});
var G__29670__4 = (function() { 
var G__29671__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__29671 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29672__i = 0, G__29672__a = new Array(arguments.length -  3);
while (G__29672__i < G__29672__a.length) {G__29672__a[G__29672__i] = arguments[G__29672__i + 3]; ++G__29672__i;}
  args = new cljs.core.IndexedSeq(G__29672__a,0);
} 
return G__29671__delegate.call(this,x,y,z,args);};
G__29671.cljs$lang$maxFixedArity = 3;
G__29671.cljs$lang$applyTo = (function (arglist__29673){
var x = cljs.core.first(arglist__29673);
arglist__29673 = cljs.core.next(arglist__29673);
var y = cljs.core.first(arglist__29673);
arglist__29673 = cljs.core.next(arglist__29673);
var z = cljs.core.first(arglist__29673);
var args = cljs.core.rest(arglist__29673);
return G__29671__delegate(x,y,z,args);
});
G__29671.cljs$core$IFn$_invoke$arity$variadic = G__29671__delegate;
return G__29671;
})()
;
G__29670 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29670__0.call(this);
case 1:
return G__29670__1.call(this,x);
case 2:
return G__29670__2.call(this,x,y);
case 3:
return G__29670__3.call(this,x,y,z);
default:
var G__29674 = null;
if (arguments.length > 3) {
var G__29675__i = 0, G__29675__a = new Array(arguments.length -  3);
while (G__29675__i < G__29675__a.length) {G__29675__a[G__29675__i] = arguments[G__29675__i + 3]; ++G__29675__i;}
G__29674 = new cljs.core.IndexedSeq(G__29675__a,0);
}
return G__29670__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29674);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29670.cljs$lang$maxFixedArity = 3;
G__29670.cljs$lang$applyTo = G__29670__4.cljs$lang$applyTo;
G__29670.cljs$core$IFn$_invoke$arity$0 = G__29670__0;
G__29670.cljs$core$IFn$_invoke$arity$1 = G__29670__1;
G__29670.cljs$core$IFn$_invoke$arity$2 = G__29670__2;
G__29670.cljs$core$IFn$_invoke$arity$3 = G__29670__3;
G__29670.cljs$core$IFn$_invoke$arity$variadic = G__29670__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29670;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__29676 = null;
var G__29676__0 = (function (){
var G__29646 = arg1;
var G__29647 = arg2;
var G__29648 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29646,G__29647,G__29648) : f.call(null,G__29646,G__29647,G__29648));
});
var G__29676__1 = (function (x){
var G__29649 = arg1;
var G__29650 = arg2;
var G__29651 = arg3;
var G__29652 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29649,G__29650,G__29651,G__29652) : f.call(null,G__29649,G__29650,G__29651,G__29652));
});
var G__29676__2 = (function (x,y){
var G__29653 = arg1;
var G__29654 = arg2;
var G__29655 = arg3;
var G__29656 = x;
var G__29657 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29653,G__29654,G__29655,G__29656,G__29657) : f.call(null,G__29653,G__29654,G__29655,G__29656,G__29657));
});
var G__29676__3 = (function (x,y,z){
var G__29658 = arg1;
var G__29659 = arg2;
var G__29660 = arg3;
var G__29661 = x;
var G__29662 = y;
var G__29663 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__29658,G__29659,G__29660,G__29661,G__29662,G__29663) : f.call(null,G__29658,G__29659,G__29660,G__29661,G__29662,G__29663));
});
var G__29676__4 = (function() { 
var G__29677__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__29677 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29678__i = 0, G__29678__a = new Array(arguments.length -  3);
while (G__29678__i < G__29678__a.length) {G__29678__a[G__29678__i] = arguments[G__29678__i + 3]; ++G__29678__i;}
  args = new cljs.core.IndexedSeq(G__29678__a,0);
} 
return G__29677__delegate.call(this,x,y,z,args);};
G__29677.cljs$lang$maxFixedArity = 3;
G__29677.cljs$lang$applyTo = (function (arglist__29679){
var x = cljs.core.first(arglist__29679);
arglist__29679 = cljs.core.next(arglist__29679);
var y = cljs.core.first(arglist__29679);
arglist__29679 = cljs.core.next(arglist__29679);
var z = cljs.core.first(arglist__29679);
var args = cljs.core.rest(arglist__29679);
return G__29677__delegate(x,y,z,args);
});
G__29677.cljs$core$IFn$_invoke$arity$variadic = G__29677__delegate;
return G__29677;
})()
;
G__29676 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29676__0.call(this);
case 1:
return G__29676__1.call(this,x);
case 2:
return G__29676__2.call(this,x,y);
case 3:
return G__29676__3.call(this,x,y,z);
default:
var G__29680 = null;
if (arguments.length > 3) {
var G__29681__i = 0, G__29681__a = new Array(arguments.length -  3);
while (G__29681__i < G__29681__a.length) {G__29681__a[G__29681__i] = arguments[G__29681__i + 3]; ++G__29681__i;}
G__29680 = new cljs.core.IndexedSeq(G__29681__a,0);
}
return G__29676__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29680);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29676.cljs$lang$maxFixedArity = 3;
G__29676.cljs$lang$applyTo = G__29676__4.cljs$lang$applyTo;
G__29676.cljs$core$IFn$_invoke$arity$0 = G__29676__0;
G__29676.cljs$core$IFn$_invoke$arity$1 = G__29676__1;
G__29676.cljs$core$IFn$_invoke$arity$2 = G__29676__2;
G__29676.cljs$core$IFn$_invoke$arity$3 = G__29676__3;
G__29676.cljs$core$IFn$_invoke$arity$variadic = G__29676__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29676;
})()
});
var partial__5 = (function() { 
var G__29682__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__29683__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__29683 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29684__i = 0, G__29684__a = new Array(arguments.length -  0);
while (G__29684__i < G__29684__a.length) {G__29684__a[G__29684__i] = arguments[G__29684__i + 0]; ++G__29684__i;}
  args = new cljs.core.IndexedSeq(G__29684__a,0);
} 
return G__29683__delegate.call(this,args);};
G__29683.cljs$lang$maxFixedArity = 0;
G__29683.cljs$lang$applyTo = (function (arglist__29685){
var args = cljs.core.seq(arglist__29685);
return G__29683__delegate(args);
});
G__29683.cljs$core$IFn$_invoke$arity$variadic = G__29683__delegate;
return G__29683;
})()
;
};
var G__29682 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__29686__i = 0, G__29686__a = new Array(arguments.length -  4);
while (G__29686__i < G__29686__a.length) {G__29686__a[G__29686__i] = arguments[G__29686__i + 4]; ++G__29686__i;}
  more = new cljs.core.IndexedSeq(G__29686__a,0);
} 
return G__29682__delegate.call(this,f,arg1,arg2,arg3,more);};
G__29682.cljs$lang$maxFixedArity = 4;
G__29682.cljs$lang$applyTo = (function (arglist__29687){
var f = cljs.core.first(arglist__29687);
arglist__29687 = cljs.core.next(arglist__29687);
var arg1 = cljs.core.first(arglist__29687);
arglist__29687 = cljs.core.next(arglist__29687);
var arg2 = cljs.core.first(arglist__29687);
arglist__29687 = cljs.core.next(arglist__29687);
var arg3 = cljs.core.first(arglist__29687);
var more = cljs.core.rest(arglist__29687);
return G__29682__delegate(f,arg1,arg2,arg3,more);
});
G__29682.cljs$core$IFn$_invoke$arity$variadic = G__29682__delegate;
return G__29682;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__29688 = null;
if (arguments.length > 4) {
var G__29689__i = 0, G__29689__a = new Array(arguments.length -  4);
while (G__29689__i < G__29689__a.length) {G__29689__a[G__29689__i] = arguments[G__29689__i + 4]; ++G__29689__i;}
G__29688 = new cljs.core.IndexedSeq(G__29689__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__29688);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__29722 = null;
var G__29722__1 = (function (a){
var G__29706 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29706) : f.call(null,G__29706));
});
var G__29722__2 = (function (a,b){
var G__29707 = (((a == null))?x:a);
var G__29708 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29707,G__29708) : f.call(null,G__29707,G__29708));
});
var G__29722__3 = (function (a,b,c){
var G__29709 = (((a == null))?x:a);
var G__29710 = b;
var G__29711 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29709,G__29710,G__29711) : f.call(null,G__29709,G__29710,G__29711));
});
var G__29722__4 = (function() { 
var G__29723__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__29723 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__29724__i = 0, G__29724__a = new Array(arguments.length -  3);
while (G__29724__i < G__29724__a.length) {G__29724__a[G__29724__i] = arguments[G__29724__i + 3]; ++G__29724__i;}
  ds = new cljs.core.IndexedSeq(G__29724__a,0);
} 
return G__29723__delegate.call(this,a,b,c,ds);};
G__29723.cljs$lang$maxFixedArity = 3;
G__29723.cljs$lang$applyTo = (function (arglist__29725){
var a = cljs.core.first(arglist__29725);
arglist__29725 = cljs.core.next(arglist__29725);
var b = cljs.core.first(arglist__29725);
arglist__29725 = cljs.core.next(arglist__29725);
var c = cljs.core.first(arglist__29725);
var ds = cljs.core.rest(arglist__29725);
return G__29723__delegate(a,b,c,ds);
});
G__29723.cljs$core$IFn$_invoke$arity$variadic = G__29723__delegate;
return G__29723;
})()
;
G__29722 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__29722__1.call(this,a);
case 2:
return G__29722__2.call(this,a,b);
case 3:
return G__29722__3.call(this,a,b,c);
default:
var G__29726 = null;
if (arguments.length > 3) {
var G__29727__i = 0, G__29727__a = new Array(arguments.length -  3);
while (G__29727__i < G__29727__a.length) {G__29727__a[G__29727__i] = arguments[G__29727__i + 3]; ++G__29727__i;}
G__29726 = new cljs.core.IndexedSeq(G__29727__a,0);
}
return G__29722__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__29726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29722.cljs$lang$maxFixedArity = 3;
G__29722.cljs$lang$applyTo = G__29722__4.cljs$lang$applyTo;
G__29722.cljs$core$IFn$_invoke$arity$1 = G__29722__1;
G__29722.cljs$core$IFn$_invoke$arity$2 = G__29722__2;
G__29722.cljs$core$IFn$_invoke$arity$3 = G__29722__3;
G__29722.cljs$core$IFn$_invoke$arity$variadic = G__29722__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29722;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__29728 = null;
var G__29728__2 = (function (a,b){
var G__29712 = (((a == null))?x:a);
var G__29713 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29712,G__29713) : f.call(null,G__29712,G__29713));
});
var G__29728__3 = (function (a,b,c){
var G__29714 = (((a == null))?x:a);
var G__29715 = (((b == null))?y:b);
var G__29716 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29714,G__29715,G__29716) : f.call(null,G__29714,G__29715,G__29716));
});
var G__29728__4 = (function() { 
var G__29729__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__29729 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__29730__i = 0, G__29730__a = new Array(arguments.length -  3);
while (G__29730__i < G__29730__a.length) {G__29730__a[G__29730__i] = arguments[G__29730__i + 3]; ++G__29730__i;}
  ds = new cljs.core.IndexedSeq(G__29730__a,0);
} 
return G__29729__delegate.call(this,a,b,c,ds);};
G__29729.cljs$lang$maxFixedArity = 3;
G__29729.cljs$lang$applyTo = (function (arglist__29731){
var a = cljs.core.first(arglist__29731);
arglist__29731 = cljs.core.next(arglist__29731);
var b = cljs.core.first(arglist__29731);
arglist__29731 = cljs.core.next(arglist__29731);
var c = cljs.core.first(arglist__29731);
var ds = cljs.core.rest(arglist__29731);
return G__29729__delegate(a,b,c,ds);
});
G__29729.cljs$core$IFn$_invoke$arity$variadic = G__29729__delegate;
return G__29729;
})()
;
G__29728 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__29728__2.call(this,a,b);
case 3:
return G__29728__3.call(this,a,b,c);
default:
var G__29732 = null;
if (arguments.length > 3) {
var G__29733__i = 0, G__29733__a = new Array(arguments.length -  3);
while (G__29733__i < G__29733__a.length) {G__29733__a[G__29733__i] = arguments[G__29733__i + 3]; ++G__29733__i;}
G__29732 = new cljs.core.IndexedSeq(G__29733__a,0);
}
return G__29728__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__29732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29728.cljs$lang$maxFixedArity = 3;
G__29728.cljs$lang$applyTo = G__29728__4.cljs$lang$applyTo;
G__29728.cljs$core$IFn$_invoke$arity$2 = G__29728__2;
G__29728.cljs$core$IFn$_invoke$arity$3 = G__29728__3;
G__29728.cljs$core$IFn$_invoke$arity$variadic = G__29728__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29728;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__29734 = null;
var G__29734__2 = (function (a,b){
var G__29717 = (((a == null))?x:a);
var G__29718 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29717,G__29718) : f.call(null,G__29717,G__29718));
});
var G__29734__3 = (function (a,b,c){
var G__29719 = (((a == null))?x:a);
var G__29720 = (((b == null))?y:b);
var G__29721 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29719,G__29720,G__29721) : f.call(null,G__29719,G__29720,G__29721));
});
var G__29734__4 = (function() { 
var G__29735__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__29735 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__29736__i = 0, G__29736__a = new Array(arguments.length -  3);
while (G__29736__i < G__29736__a.length) {G__29736__a[G__29736__i] = arguments[G__29736__i + 3]; ++G__29736__i;}
  ds = new cljs.core.IndexedSeq(G__29736__a,0);
} 
return G__29735__delegate.call(this,a,b,c,ds);};
G__29735.cljs$lang$maxFixedArity = 3;
G__29735.cljs$lang$applyTo = (function (arglist__29737){
var a = cljs.core.first(arglist__29737);
arglist__29737 = cljs.core.next(arglist__29737);
var b = cljs.core.first(arglist__29737);
arglist__29737 = cljs.core.next(arglist__29737);
var c = cljs.core.first(arglist__29737);
var ds = cljs.core.rest(arglist__29737);
return G__29735__delegate(a,b,c,ds);
});
G__29735.cljs$core$IFn$_invoke$arity$variadic = G__29735__delegate;
return G__29735;
})()
;
G__29734 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__29734__2.call(this,a,b);
case 3:
return G__29734__3.call(this,a,b,c);
default:
var G__29738 = null;
if (arguments.length > 3) {
var G__29739__i = 0, G__29739__a = new Array(arguments.length -  3);
while (G__29739__i < G__29739__a.length) {G__29739__a[G__29739__i] = arguments[G__29739__i + 3]; ++G__29739__i;}
G__29738 = new cljs.core.IndexedSeq(G__29739__a,0);
}
return G__29734__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__29738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29734.cljs$lang$maxFixedArity = 3;
G__29734.cljs$lang$applyTo = G__29734__4.cljs$lang$applyTo;
G__29734.cljs$core$IFn$_invoke$arity$2 = G__29734__2;
G__29734.cljs$core$IFn$_invoke$arity$3 = G__29734__3;
G__29734.cljs$core$IFn$_invoke$arity$variadic = G__29734__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29734;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__29770 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__29770) : cljs.core.volatile_BANG_.call(null,G__29770));
})();
return ((function (i){
return (function() {
var G__29800 = null;
var G__29800__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29800__1 = (function (result){
var G__29771 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29771) : rf.call(null,G__29771));
});
var G__29800__2 = (function (result,input){
var G__29772 = result;
var G__29773 = (function (){var G__29774 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__29775 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29774,G__29775) : f.call(null,G__29774,G__29775));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29772,G__29773) : rf.call(null,G__29772,G__29773));
});
G__29800 = function(result,input){
switch(arguments.length){
case 0:
return G__29800__0.call(this);
case 1:
return G__29800__1.call(this,result);
case 2:
return G__29800__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29800.cljs$core$IFn$_invoke$arity$0 = G__29800__0;
G__29800.cljs$core$IFn$_invoke$arity$1 = G__29800__1;
G__29800.cljs$core$IFn$_invoke$arity$2 = G__29800__2;
return G__29800;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___29801 = size;
var i_29802 = (0);
while(true){
if((i_29802 < n__15331__auto___29801)){
cljs.core.chunk_append(b,(function (){var G__29796 = (idx + i_29802);
var G__29797 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29802);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29796,G__29797) : f.call(null,G__29796,G__29797));
})());

var G__29803 = (i_29802 + (1));
i_29802 = G__29803;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__29798 = idx;
var G__29799 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29798,G__29799) : f.call(null,G__29798,G__29799));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__29822 = null;
var G__29822__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29822__1 = (function (result){
var G__29816 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29816) : rf.call(null,G__29816));
});
var G__29822__2 = (function (result,input){
var v = (function (){var G__29817 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29817) : f.call(null,G__29817));
})();
if((v == null)){
return result;
} else {
var G__29818 = result;
var G__29819 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29818,G__29819) : rf.call(null,G__29818,G__29819));
}
});
G__29822 = function(result,input){
switch(arguments.length){
case 0:
return G__29822__0.call(this);
case 1:
return G__29822__1.call(this,result);
case 2:
return G__29822__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29822.cljs$core$IFn$_invoke$arity$0 = G__29822__0;
G__29822.cljs$core$IFn$_invoke$arity$1 = G__29822__1;
G__29822.cljs$core$IFn$_invoke$arity$2 = G__29822__2;
return G__29822;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___29823 = size;
var i_29824 = (0);
while(true){
if((i_29824 < n__15331__auto___29823)){
var x_29825 = (function (){var G__29820 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29824);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29820) : f.call(null,G__29820));
})();
if((x_29825 == null)){
} else {
cljs.core.chunk_append(b,x_29825);
}

var G__29826 = (i_29824 + (1));
i_29824 = G__29826;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__29821 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29821) : f.call(null,G__29821));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29827 = this$__$1;
return goog.getUid(G__29827);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__29828 = cljs.core.seq(self__.watches);
var chunk__29829 = null;
var count__29830 = (0);
var i__29831 = (0);
while(true){
if((i__29831 < count__29830)){
var vec__29832 = chunk__29829.cljs$core$IIndexed$_nth$arity$2(null,i__29831);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29832,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29832,(1),null);
var G__29833_29842 = key;
var G__29834_29843 = this$__$1;
var G__29835_29844 = oldval;
var G__29836_29845 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29833_29842,G__29834_29843,G__29835_29844,G__29836_29845) : f.call(null,G__29833_29842,G__29834_29843,G__29835_29844,G__29836_29845));

var G__29846 = seq__29828;
var G__29847 = chunk__29829;
var G__29848 = count__29830;
var G__29849 = (i__29831 + (1));
seq__29828 = G__29846;
chunk__29829 = G__29847;
count__29830 = G__29848;
i__29831 = G__29849;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__29828);
if(temp__4406__auto__){
var seq__29828__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29828__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__29828__$1);
var G__29850 = cljs.core.chunk_rest(seq__29828__$1);
var G__29851 = c__15231__auto__;
var G__29852 = cljs.core.count(c__15231__auto__);
var G__29853 = (0);
seq__29828 = G__29850;
chunk__29829 = G__29851;
count__29830 = G__29852;
i__29831 = G__29853;
continue;
} else {
var vec__29837 = cljs.core.first(seq__29828__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29837,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29837,(1),null);
var G__29838_29854 = key;
var G__29839_29855 = this$__$1;
var G__29840_29856 = oldval;
var G__29841_29857 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29838_29854,G__29839_29855,G__29840_29856,G__29841_29857) : f.call(null,G__29838_29854,G__29839_29855,G__29840_29856,G__29841_29857));

var G__29858 = cljs.core.next(seq__29828__$1);
var G__29859 = null;
var G__29860 = (0);
var G__29861 = (0);
seq__29828 = G__29858;
chunk__29829 = G__29859;
count__29830 = G__29860;
i__29831 = G__29861;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__29865__delegate = function (x,p__29862){
var map__29864 = p__29862;
var map__29864__$1 = ((cljs.core.seq_QMARK_(map__29864))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29864):map__29864);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29864__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29864__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__29865 = function (x,var_args){
var p__29862 = null;
if (arguments.length > 1) {
var G__29866__i = 0, G__29866__a = new Array(arguments.length -  1);
while (G__29866__i < G__29866__a.length) {G__29866__a[G__29866__i] = arguments[G__29866__i + 1]; ++G__29866__i;}
  p__29862 = new cljs.core.IndexedSeq(G__29866__a,0);
} 
return G__29865__delegate.call(this,x,p__29862);};
G__29865.cljs$lang$maxFixedArity = 1;
G__29865.cljs$lang$applyTo = (function (arglist__29867){
var x = cljs.core.first(arglist__29867);
var p__29862 = cljs.core.rest(arglist__29867);
return G__29865__delegate(x,p__29862);
});
G__29865.cljs$core$IFn$_invoke$arity$variadic = G__29865__delegate;
return G__29865;
})()
;
atom = function(x,var_args){
var p__29862 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__29868 = null;
if (arguments.length > 1) {
var G__29869__i = 0, G__29869__a = new Array(arguments.length -  1);
while (G__29869__i < G__29869__a.length) {G__29869__a[G__29869__i] = arguments[G__29869__i + 1]; ++G__29869__i;}
G__29868 = new cljs.core.IndexedSeq(G__29869__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__29868);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__29872 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__29872) : validate.call(null,G__29872));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__29873 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__29873) : cljs.core.pr_str.call(null,G__29873));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__29880 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29880) : f.call(null,G__29880));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__29881 = a.state;
var G__29882 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29881,G__29882) : f.call(null,G__29881,G__29882));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__29883 = a.state;
var G__29884 = x;
var G__29885 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29883,G__29884,G__29885) : f.call(null,G__29883,G__29884,G__29885));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__29886__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__29886 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__29887__i = 0, G__29887__a = new Array(arguments.length -  4);
while (G__29887__i < G__29887__a.length) {G__29887__a[G__29887__i] = arguments[G__29887__i + 4]; ++G__29887__i;}
  more = new cljs.core.IndexedSeq(G__29887__a,0);
} 
return G__29886__delegate.call(this,a,f,x,y,more);};
G__29886.cljs$lang$maxFixedArity = 4;
G__29886.cljs$lang$applyTo = (function (arglist__29888){
var a = cljs.core.first(arglist__29888);
arglist__29888 = cljs.core.next(arglist__29888);
var f = cljs.core.first(arglist__29888);
arglist__29888 = cljs.core.next(arglist__29888);
var x = cljs.core.first(arglist__29888);
arglist__29888 = cljs.core.next(arglist__29888);
var y = cljs.core.first(arglist__29888);
var more = cljs.core.rest(arglist__29888);
return G__29886__delegate(a,f,x,y,more);
});
G__29886.cljs$core$IFn$_invoke$arity$variadic = G__29886__delegate;
return G__29886;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__29889 = null;
if (arguments.length > 4) {
var G__29890__i = 0, G__29890__a = new Array(arguments.length -  4);
while (G__29890__i < G__29890__a.length) {G__29890__a[G__29890__i] = arguments[G__29890__i + 4]; ++G__29890__i;}
G__29889 = new cljs.core.IndexedSeq(G__29890__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__29889);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__29957 = null;
var G__29957__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29957__1 = (function (result){
var G__29924 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29924) : rf.call(null,G__29924));
});
var G__29957__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__29925 = i;
var G__29926 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29925,G__29926) : f.call(null,G__29925,G__29926));
})();
if((v == null)){
return result;
} else {
var G__29927 = result;
var G__29928 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29927,G__29928) : rf.call(null,G__29927,G__29928));
}
});
G__29957 = function(result,input){
switch(arguments.length){
case 0:
return G__29957__0.call(this);
case 1:
return G__29957__1.call(this,result);
case 2:
return G__29957__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29957.cljs$core$IFn$_invoke$arity$0 = G__29957__0;
G__29957.cljs$core$IFn$_invoke$arity$1 = G__29957__1;
G__29957.cljs$core$IFn$_invoke$arity$2 = G__29957__2;
return G__29957;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___29958 = size;
var i_29959 = (0);
while(true){
if((i_29959 < n__15331__auto___29958)){
var x_29960 = (function (){var G__29953 = (idx + i_29959);
var G__29954 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29959);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29953,G__29954) : f.call(null,G__29953,G__29954));
})();
if((x_29960 == null)){
} else {
cljs.core.chunk_append(b,x_29960);
}

var G__29961 = (i_29959 + (1));
i_29959 = G__29961;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__29955 = idx;
var G__29956 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29955,G__29956) : f.call(null,G__29955,G__29956));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__30175 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30175) : p.call(null,G__30175));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__30177 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30177) : p.call(null,G__30177));
})();
if(cljs.core.truth_(and__14432__auto__)){
var G__30178 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30178) : p.call(null,G__30178));
} else {
return and__14432__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__30180 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30180) : p.call(null,G__30180));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__30182 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30182) : p.call(null,G__30182));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var G__30183 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30183) : p.call(null,G__30183));
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__30352__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__30352 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30353__i = 0, G__30353__a = new Array(arguments.length -  3);
while (G__30353__i < G__30353__a.length) {G__30353__a[G__30353__i] = arguments[G__30353__i + 3]; ++G__30353__i;}
  args = new cljs.core.IndexedSeq(G__30353__a,0);
} 
return G__30352__delegate.call(this,x,y,z,args);};
G__30352.cljs$lang$maxFixedArity = 3;
G__30352.cljs$lang$applyTo = (function (arglist__30354){
var x = cljs.core.first(arglist__30354);
arglist__30354 = cljs.core.next(arglist__30354);
var y = cljs.core.first(arglist__30354);
arglist__30354 = cljs.core.next(arglist__30354);
var z = cljs.core.first(arglist__30354);
var args = cljs.core.rest(arglist__30354);
return G__30352__delegate(x,y,z,args);
});
G__30352.cljs$core$IFn$_invoke$arity$variadic = G__30352__delegate;
return G__30352;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__30355 = null;
if (arguments.length > 3) {
var G__30356__i = 0, G__30356__a = new Array(arguments.length -  3);
while (G__30356__i < G__30356__a.length) {G__30356__a[G__30356__i] = arguments[G__30356__i + 3]; ++G__30356__i;}
G__30355 = new cljs.core.IndexedSeq(G__30356__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__30215 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30215) : p1.call(null,G__30215));
})();
if(cljs.core.truth_(and__14432__auto__)){
var G__30216 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30216) : p2.call(null,G__30216));
} else {
return and__14432__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__30218 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30218) : p1.call(null,G__30218));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__30220 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30220) : p1.call(null,G__30220));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var and__14432__auto____$2 = (function (){var G__30222 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30222) : p2.call(null,G__30222));
})();
if(cljs.core.truth_(and__14432__auto____$2)){
var G__30223 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30223) : p2.call(null,G__30223));
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__30225 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30225) : p1.call(null,G__30225));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__30227 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30227) : p1.call(null,G__30227));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var and__14432__auto____$2 = (function (){var G__30229 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30229) : p1.call(null,G__30229));
})();
if(cljs.core.truth_(and__14432__auto____$2)){
var and__14432__auto____$3 = (function (){var G__30231 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30231) : p2.call(null,G__30231));
})();
if(cljs.core.truth_(and__14432__auto____$3)){
var and__14432__auto____$4 = (function (){var G__30233 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30233) : p2.call(null,G__30233));
})();
if(cljs.core.truth_(and__14432__auto____$4)){
var G__30234 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30234) : p2.call(null,G__30234));
} else {
return and__14432__auto____$4;
}
} else {
return and__14432__auto____$3;
}
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__30357__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__29962_SHARP_){
var and__14432__auto__ = (function (){var G__30239 = p1__29962_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30239) : p1.call(null,G__30239));
})();
if(cljs.core.truth_(and__14432__auto__)){
var G__30240 = p1__29962_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30240) : p2.call(null,G__30240));
} else {
return and__14432__auto__;
}
}),args)));
};
var G__30357 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30358__i = 0, G__30358__a = new Array(arguments.length -  3);
while (G__30358__i < G__30358__a.length) {G__30358__a[G__30358__i] = arguments[G__30358__i + 3]; ++G__30358__i;}
  args = new cljs.core.IndexedSeq(G__30358__a,0);
} 
return G__30357__delegate.call(this,x,y,z,args);};
G__30357.cljs$lang$maxFixedArity = 3;
G__30357.cljs$lang$applyTo = (function (arglist__30359){
var x = cljs.core.first(arglist__30359);
arglist__30359 = cljs.core.next(arglist__30359);
var y = cljs.core.first(arglist__30359);
arglist__30359 = cljs.core.next(arglist__30359);
var z = cljs.core.first(arglist__30359);
var args = cljs.core.rest(arglist__30359);
return G__30357__delegate(x,y,z,args);
});
G__30357.cljs$core$IFn$_invoke$arity$variadic = G__30357__delegate;
return G__30357;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__30360 = null;
if (arguments.length > 3) {
var G__30361__i = 0, G__30361__a = new Array(arguments.length -  3);
while (G__30361__i < G__30361__a.length) {G__30361__a[G__30361__i] = arguments[G__30361__i + 3]; ++G__30361__i;}
G__30360 = new cljs.core.IndexedSeq(G__30361__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30360);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__30286 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30286) : p1.call(null,G__30286));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__30288 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30288) : p2.call(null,G__30288));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var G__30289 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30289) : p3.call(null,G__30289));
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__30291 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30291) : p1.call(null,G__30291));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__30293 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30293) : p2.call(null,G__30293));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var and__14432__auto____$2 = (function (){var G__30295 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30295) : p3.call(null,G__30295));
})();
if(cljs.core.truth_(and__14432__auto____$2)){
var and__14432__auto____$3 = (function (){var G__30297 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30297) : p1.call(null,G__30297));
})();
if(cljs.core.truth_(and__14432__auto____$3)){
var and__14432__auto____$4 = (function (){var G__30299 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30299) : p2.call(null,G__30299));
})();
if(cljs.core.truth_(and__14432__auto____$4)){
var G__30300 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30300) : p3.call(null,G__30300));
} else {
return and__14432__auto____$4;
}
} else {
return and__14432__auto____$3;
}
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__14432__auto__ = (function (){var G__30302 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30302) : p1.call(null,G__30302));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__30304 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30304) : p2.call(null,G__30304));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var and__14432__auto____$2 = (function (){var G__30306 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30306) : p3.call(null,G__30306));
})();
if(cljs.core.truth_(and__14432__auto____$2)){
var and__14432__auto____$3 = (function (){var G__30308 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30308) : p1.call(null,G__30308));
})();
if(cljs.core.truth_(and__14432__auto____$3)){
var and__14432__auto____$4 = (function (){var G__30310 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30310) : p2.call(null,G__30310));
})();
if(cljs.core.truth_(and__14432__auto____$4)){
var and__14432__auto____$5 = (function (){var G__30312 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30312) : p3.call(null,G__30312));
})();
if(cljs.core.truth_(and__14432__auto____$5)){
var and__14432__auto____$6 = (function (){var G__30314 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30314) : p1.call(null,G__30314));
})();
if(cljs.core.truth_(and__14432__auto____$6)){
var and__14432__auto____$7 = (function (){var G__30316 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30316) : p2.call(null,G__30316));
})();
if(cljs.core.truth_(and__14432__auto____$7)){
var G__30317 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30317) : p3.call(null,G__30317));
} else {
return and__14432__auto____$7;
}
} else {
return and__14432__auto____$6;
}
} else {
return and__14432__auto____$5;
}
} else {
return and__14432__auto____$4;
}
} else {
return and__14432__auto____$3;
}
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__30362__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__29963_SHARP_){
var and__14432__auto__ = (function (){var G__30324 = p1__29963_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30324) : p1.call(null,G__30324));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__30326 = p1__29963_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30326) : p2.call(null,G__30326));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var G__30327 = p1__29963_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30327) : p3.call(null,G__30327));
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
}),args)));
};
var G__30362 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30363__i = 0, G__30363__a = new Array(arguments.length -  3);
while (G__30363__i < G__30363__a.length) {G__30363__a[G__30363__i] = arguments[G__30363__i + 3]; ++G__30363__i;}
  args = new cljs.core.IndexedSeq(G__30363__a,0);
} 
return G__30362__delegate.call(this,x,y,z,args);};
G__30362.cljs$lang$maxFixedArity = 3;
G__30362.cljs$lang$applyTo = (function (arglist__30364){
var x = cljs.core.first(arglist__30364);
arglist__30364 = cljs.core.next(arglist__30364);
var y = cljs.core.first(arglist__30364);
arglist__30364 = cljs.core.next(arglist__30364);
var z = cljs.core.first(arglist__30364);
var args = cljs.core.rest(arglist__30364);
return G__30362__delegate(x,y,z,args);
});
G__30362.cljs$core$IFn$_invoke$arity$variadic = G__30362__delegate;
return G__30362;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__30365 = null;
if (arguments.length > 3) {
var G__30366__i = 0, G__30366__a = new Array(arguments.length -  3);
while (G__30366__i < G__30366__a.length) {G__30366__a[G__30366__i] = arguments[G__30366__i + 3]; ++G__30366__i;}
G__30365 = new cljs.core.IndexedSeq(G__30366__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__30367__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29964_SHARP_){
var G__30343 = x;
return (p1__29964_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29964_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30343) : p1__29964_SHARP_.call(null,G__30343));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29965_SHARP_){
var and__14432__auto__ = (function (){var G__30345 = x;
return (p1__29965_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29965_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30345) : p1__29965_SHARP_.call(null,G__30345));
})();
if(cljs.core.truth_(and__14432__auto__)){
var G__30346 = y;
return (p1__29965_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29965_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30346) : p1__29965_SHARP_.call(null,G__30346));
} else {
return and__14432__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29966_SHARP_){
var and__14432__auto__ = (function (){var G__30348 = x;
return (p1__29966_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29966_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30348) : p1__29966_SHARP_.call(null,G__30348));
})();
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__30350 = y;
return (p1__29966_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29966_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30350) : p1__29966_SHARP_.call(null,G__30350));
})();
if(cljs.core.truth_(and__14432__auto____$1)){
var G__30351 = z;
return (p1__29966_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29966_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30351) : p1__29966_SHARP_.call(null,G__30351));
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__30368__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29967_SHARP_){
return cljs.core.every_QMARK_(p1__29967_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__30368 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30369__i = 0, G__30369__a = new Array(arguments.length -  3);
while (G__30369__i < G__30369__a.length) {G__30369__a[G__30369__i] = arguments[G__30369__i + 3]; ++G__30369__i;}
  args = new cljs.core.IndexedSeq(G__30369__a,0);
} 
return G__30368__delegate.call(this,x,y,z,args);};
G__30368.cljs$lang$maxFixedArity = 3;
G__30368.cljs$lang$applyTo = (function (arglist__30370){
var x = cljs.core.first(arglist__30370);
arglist__30370 = cljs.core.next(arglist__30370);
var y = cljs.core.first(arglist__30370);
arglist__30370 = cljs.core.next(arglist__30370);
var z = cljs.core.first(arglist__30370);
var args = cljs.core.rest(arglist__30370);
return G__30368__delegate(x,y,z,args);
});
G__30368.cljs$core$IFn$_invoke$arity$variadic = G__30368__delegate;
return G__30368;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__30371 = null;
if (arguments.length > 3) {
var G__30372__i = 0, G__30372__a = new Array(arguments.length -  3);
while (G__30372__i < G__30372__a.length) {G__30372__a[G__30372__i] = arguments[G__30372__i + 3]; ++G__30372__i;}
G__30371 = new cljs.core.IndexedSeq(G__30372__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__30367 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__30373__i = 0, G__30373__a = new Array(arguments.length -  3);
while (G__30373__i < G__30373__a.length) {G__30373__a[G__30373__i] = arguments[G__30373__i + 3]; ++G__30373__i;}
  ps = new cljs.core.IndexedSeq(G__30373__a,0);
} 
return G__30367__delegate.call(this,p1,p2,p3,ps);};
G__30367.cljs$lang$maxFixedArity = 3;
G__30367.cljs$lang$applyTo = (function (arglist__30374){
var p1 = cljs.core.first(arglist__30374);
arglist__30374 = cljs.core.next(arglist__30374);
var p2 = cljs.core.first(arglist__30374);
arglist__30374 = cljs.core.next(arglist__30374);
var p3 = cljs.core.first(arglist__30374);
var ps = cljs.core.rest(arglist__30374);
return G__30367__delegate(p1,p2,p3,ps);
});
G__30367.cljs$core$IFn$_invoke$arity$variadic = G__30367__delegate;
return G__30367;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__30375 = null;
if (arguments.length > 3) {
var G__30376__i = 0, G__30376__a = new Array(arguments.length -  3);
while (G__30376__i < G__30376__a.length) {G__30376__a[G__30376__i] = arguments[G__30376__i + 3]; ++G__30376__i;}
G__30375 = new cljs.core.IndexedSeq(G__30376__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__30375);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__30582 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30582) : p.call(null,G__30582));
});
var sp1__2 = (function (x,y){
var or__14444__auto__ = (function (){var G__30584 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30584) : p.call(null,G__30584));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__30585 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30585) : p.call(null,G__30585));
}
});
var sp1__3 = (function (x,y,z){
var or__14444__auto__ = (function (){var G__30587 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30587) : p.call(null,G__30587));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__30589 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30589) : p.call(null,G__30589));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var G__30590 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30590) : p.call(null,G__30590));
}
}
});
var sp1__4 = (function() { 
var G__30751__delegate = function (x,y,z,args){
var or__14444__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__30751 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30752__i = 0, G__30752__a = new Array(arguments.length -  3);
while (G__30752__i < G__30752__a.length) {G__30752__a[G__30752__i] = arguments[G__30752__i + 3]; ++G__30752__i;}
  args = new cljs.core.IndexedSeq(G__30752__a,0);
} 
return G__30751__delegate.call(this,x,y,z,args);};
G__30751.cljs$lang$maxFixedArity = 3;
G__30751.cljs$lang$applyTo = (function (arglist__30753){
var x = cljs.core.first(arglist__30753);
arglist__30753 = cljs.core.next(arglist__30753);
var y = cljs.core.first(arglist__30753);
arglist__30753 = cljs.core.next(arglist__30753);
var z = cljs.core.first(arglist__30753);
var args = cljs.core.rest(arglist__30753);
return G__30751__delegate(x,y,z,args);
});
G__30751.cljs$core$IFn$_invoke$arity$variadic = G__30751__delegate;
return G__30751;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__30754 = null;
if (arguments.length > 3) {
var G__30755__i = 0, G__30755__a = new Array(arguments.length -  3);
while (G__30755__i < G__30755__a.length) {G__30755__a[G__30755__i] = arguments[G__30755__i + 3]; ++G__30755__i;}
G__30754 = new cljs.core.IndexedSeq(G__30755__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30754);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__14444__auto__ = (function (){var G__30622 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30622) : p1.call(null,G__30622));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__30623 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30623) : p2.call(null,G__30623));
}
});
var sp2__2 = (function (x,y){
var or__14444__auto__ = (function (){var G__30625 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30625) : p1.call(null,G__30625));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__30627 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30627) : p1.call(null,G__30627));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__30629 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30629) : p2.call(null,G__30629));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var G__30630 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30630) : p2.call(null,G__30630));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__14444__auto__ = (function (){var G__30632 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30632) : p1.call(null,G__30632));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__30634 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30634) : p1.call(null,G__30634));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__30636 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30636) : p1.call(null,G__30636));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var or__14444__auto____$3 = (function (){var G__30638 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30638) : p2.call(null,G__30638));
})();
if(cljs.core.truth_(or__14444__auto____$3)){
return or__14444__auto____$3;
} else {
var or__14444__auto____$4 = (function (){var G__30640 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30640) : p2.call(null,G__30640));
})();
if(cljs.core.truth_(or__14444__auto____$4)){
return or__14444__auto____$4;
} else {
var G__30641 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30641) : p2.call(null,G__30641));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__30756__delegate = function (x,y,z,args){
var or__14444__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.some(((function (or__14444__auto__){
return (function (p1__30377_SHARP_){
var or__14444__auto____$1 = (function (){var G__30643 = p1__30377_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30643) : p1.call(null,G__30643));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var G__30644 = p1__30377_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30644) : p2.call(null,G__30644));
}
});})(or__14444__auto__))
,args);
}
};
var G__30756 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30757__i = 0, G__30757__a = new Array(arguments.length -  3);
while (G__30757__i < G__30757__a.length) {G__30757__a[G__30757__i] = arguments[G__30757__i + 3]; ++G__30757__i;}
  args = new cljs.core.IndexedSeq(G__30757__a,0);
} 
return G__30756__delegate.call(this,x,y,z,args);};
G__30756.cljs$lang$maxFixedArity = 3;
G__30756.cljs$lang$applyTo = (function (arglist__30758){
var x = cljs.core.first(arglist__30758);
arglist__30758 = cljs.core.next(arglist__30758);
var y = cljs.core.first(arglist__30758);
arglist__30758 = cljs.core.next(arglist__30758);
var z = cljs.core.first(arglist__30758);
var args = cljs.core.rest(arglist__30758);
return G__30756__delegate(x,y,z,args);
});
G__30756.cljs$core$IFn$_invoke$arity$variadic = G__30756__delegate;
return G__30756;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__30759 = null;
if (arguments.length > 3) {
var G__30760__i = 0, G__30760__a = new Array(arguments.length -  3);
while (G__30760__i < G__30760__a.length) {G__30760__a[G__30760__i] = arguments[G__30760__i + 3]; ++G__30760__i;}
G__30759 = new cljs.core.IndexedSeq(G__30760__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__14444__auto__ = (function (){var G__30690 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30690) : p1.call(null,G__30690));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__30692 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30692) : p2.call(null,G__30692));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var G__30693 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30693) : p3.call(null,G__30693));
}
}
});
var sp3__2 = (function (x,y){
var or__14444__auto__ = (function (){var G__30695 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30695) : p1.call(null,G__30695));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__30697 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30697) : p2.call(null,G__30697));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__30699 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30699) : p3.call(null,G__30699));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var or__14444__auto____$3 = (function (){var G__30701 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30701) : p1.call(null,G__30701));
})();
if(cljs.core.truth_(or__14444__auto____$3)){
return or__14444__auto____$3;
} else {
var or__14444__auto____$4 = (function (){var G__30703 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30703) : p2.call(null,G__30703));
})();
if(cljs.core.truth_(or__14444__auto____$4)){
return or__14444__auto____$4;
} else {
var G__30704 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30704) : p3.call(null,G__30704));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__14444__auto__ = (function (){var G__30706 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30706) : p1.call(null,G__30706));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__30708 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30708) : p2.call(null,G__30708));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__30710 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30710) : p3.call(null,G__30710));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var or__14444__auto____$3 = (function (){var G__30712 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30712) : p1.call(null,G__30712));
})();
if(cljs.core.truth_(or__14444__auto____$3)){
return or__14444__auto____$3;
} else {
var or__14444__auto____$4 = (function (){var G__30714 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30714) : p2.call(null,G__30714));
})();
if(cljs.core.truth_(or__14444__auto____$4)){
return or__14444__auto____$4;
} else {
var or__14444__auto____$5 = (function (){var G__30716 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30716) : p3.call(null,G__30716));
})();
if(cljs.core.truth_(or__14444__auto____$5)){
return or__14444__auto____$5;
} else {
var or__14444__auto____$6 = (function (){var G__30718 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30718) : p1.call(null,G__30718));
})();
if(cljs.core.truth_(or__14444__auto____$6)){
return or__14444__auto____$6;
} else {
var or__14444__auto____$7 = (function (){var G__30720 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30720) : p2.call(null,G__30720));
})();
if(cljs.core.truth_(or__14444__auto____$7)){
return or__14444__auto____$7;
} else {
var G__30721 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30721) : p3.call(null,G__30721));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__30761__delegate = function (x,y,z,args){
var or__14444__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.some(((function (or__14444__auto__){
return (function (p1__30378_SHARP_){
var or__14444__auto____$1 = (function (){var G__30723 = p1__30378_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30723) : p1.call(null,G__30723));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var G__30725 = p1__30378_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30725) : p2.call(null,G__30725));
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
var G__30726 = p1__30378_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30726) : p3.call(null,G__30726));
}
}
});})(or__14444__auto__))
,args);
}
};
var G__30761 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30762__i = 0, G__30762__a = new Array(arguments.length -  3);
while (G__30762__i < G__30762__a.length) {G__30762__a[G__30762__i] = arguments[G__30762__i + 3]; ++G__30762__i;}
  args = new cljs.core.IndexedSeq(G__30762__a,0);
} 
return G__30761__delegate.call(this,x,y,z,args);};
G__30761.cljs$lang$maxFixedArity = 3;
G__30761.cljs$lang$applyTo = (function (arglist__30763){
var x = cljs.core.first(arglist__30763);
arglist__30763 = cljs.core.next(arglist__30763);
var y = cljs.core.first(arglist__30763);
arglist__30763 = cljs.core.next(arglist__30763);
var z = cljs.core.first(arglist__30763);
var args = cljs.core.rest(arglist__30763);
return G__30761__delegate(x,y,z,args);
});
G__30761.cljs$core$IFn$_invoke$arity$variadic = G__30761__delegate;
return G__30761;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__30764 = null;
if (arguments.length > 3) {
var G__30765__i = 0, G__30765__a = new Array(arguments.length -  3);
while (G__30765__i < G__30765__a.length) {G__30765__a[G__30765__i] = arguments[G__30765__i + 3]; ++G__30765__i;}
G__30764 = new cljs.core.IndexedSeq(G__30765__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30764);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__30766__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__30379_SHARP_){
var G__30742 = x;
return (p1__30379_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30379_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30742) : p1__30379_SHARP_.call(null,G__30742));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__30380_SHARP_){
var or__14444__auto__ = (function (){var G__30744 = x;
return (p1__30380_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30380_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30744) : p1__30380_SHARP_.call(null,G__30744));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var G__30745 = y;
return (p1__30380_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30380_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30745) : p1__30380_SHARP_.call(null,G__30745));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__30381_SHARP_){
var or__14444__auto__ = (function (){var G__30747 = x;
return (p1__30381_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30381_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30747) : p1__30381_SHARP_.call(null,G__30747));
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var G__30749 = y;
return (p1__30381_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30381_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30749) : p1__30381_SHARP_.call(null,G__30749));
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var G__30750 = z;
return (p1__30381_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30381_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30750) : p1__30381_SHARP_.call(null,G__30750));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__30767__delegate = function (x,y,z,args){
var or__14444__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.some(((function (or__14444__auto__,ps__$1){
return (function (p1__30382_SHARP_){
return cljs.core.some(p1__30382_SHARP_,args);
});})(or__14444__auto__,ps__$1))
,ps__$1);
}
};
var G__30767 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30768__i = 0, G__30768__a = new Array(arguments.length -  3);
while (G__30768__i < G__30768__a.length) {G__30768__a[G__30768__i] = arguments[G__30768__i + 3]; ++G__30768__i;}
  args = new cljs.core.IndexedSeq(G__30768__a,0);
} 
return G__30767__delegate.call(this,x,y,z,args);};
G__30767.cljs$lang$maxFixedArity = 3;
G__30767.cljs$lang$applyTo = (function (arglist__30769){
var x = cljs.core.first(arglist__30769);
arglist__30769 = cljs.core.next(arglist__30769);
var y = cljs.core.first(arglist__30769);
arglist__30769 = cljs.core.next(arglist__30769);
var z = cljs.core.first(arglist__30769);
var args = cljs.core.rest(arglist__30769);
return G__30767__delegate(x,y,z,args);
});
G__30767.cljs$core$IFn$_invoke$arity$variadic = G__30767__delegate;
return G__30767;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__30770 = null;
if (arguments.length > 3) {
var G__30771__i = 0, G__30771__a = new Array(arguments.length -  3);
while (G__30771__i < G__30771__a.length) {G__30771__a[G__30771__i] = arguments[G__30771__i + 3]; ++G__30771__i;}
G__30770 = new cljs.core.IndexedSeq(G__30771__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__30766 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__30772__i = 0, G__30772__a = new Array(arguments.length -  3);
while (G__30772__i < G__30772__a.length) {G__30772__a[G__30772__i] = arguments[G__30772__i + 3]; ++G__30772__i;}
  ps = new cljs.core.IndexedSeq(G__30772__a,0);
} 
return G__30766__delegate.call(this,p1,p2,p3,ps);};
G__30766.cljs$lang$maxFixedArity = 3;
G__30766.cljs$lang$applyTo = (function (arglist__30773){
var p1 = cljs.core.first(arglist__30773);
arglist__30773 = cljs.core.next(arglist__30773);
var p2 = cljs.core.first(arglist__30773);
arglist__30773 = cljs.core.next(arglist__30773);
var p3 = cljs.core.first(arglist__30773);
var ps = cljs.core.rest(arglist__30773);
return G__30766__delegate(p1,p2,p3,ps);
});
G__30766.cljs$core$IFn$_invoke$arity$variadic = G__30766__delegate;
return G__30766;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__30774 = null;
if (arguments.length > 3) {
var G__30775__i = 0, G__30775__a = new Array(arguments.length -  3);
while (G__30775__i < G__30775__a.length) {G__30775__a[G__30775__i] = arguments[G__30775__i + 3]; ++G__30775__i;}
G__30774 = new cljs.core.IndexedSeq(G__30775__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__30774);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__30830 = null;
var G__30830__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30830__1 = (function (result){
var G__30816 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30816) : rf.call(null,G__30816));
});
var G__30830__2 = (function (result,input){
var G__30817 = result;
var G__30818 = (function (){var G__30819 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30819) : f.call(null,G__30819));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30817,G__30818) : rf.call(null,G__30817,G__30818));
});
var G__30830__3 = (function() { 
var G__30831__delegate = function (result,input,inputs){
var G__30820 = result;
var G__30821 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30820,G__30821) : rf.call(null,G__30820,G__30821));
};
var G__30831 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__30832__i = 0, G__30832__a = new Array(arguments.length -  2);
while (G__30832__i < G__30832__a.length) {G__30832__a[G__30832__i] = arguments[G__30832__i + 2]; ++G__30832__i;}
  inputs = new cljs.core.IndexedSeq(G__30832__a,0);
} 
return G__30831__delegate.call(this,result,input,inputs);};
G__30831.cljs$lang$maxFixedArity = 2;
G__30831.cljs$lang$applyTo = (function (arglist__30833){
var result = cljs.core.first(arglist__30833);
arglist__30833 = cljs.core.next(arglist__30833);
var input = cljs.core.first(arglist__30833);
var inputs = cljs.core.rest(arglist__30833);
return G__30831__delegate(result,input,inputs);
});
G__30831.cljs$core$IFn$_invoke$arity$variadic = G__30831__delegate;
return G__30831;
})()
;
G__30830 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__30830__0.call(this);
case 1:
return G__30830__1.call(this,result);
case 2:
return G__30830__2.call(this,result,input);
default:
var G__30834 = null;
if (arguments.length > 2) {
var G__30835__i = 0, G__30835__a = new Array(arguments.length -  2);
while (G__30835__i < G__30835__a.length) {G__30835__a[G__30835__i] = arguments[G__30835__i + 2]; ++G__30835__i;}
G__30834 = new cljs.core.IndexedSeq(G__30835__a,0);
}
return G__30830__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__30834);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30830.cljs$lang$maxFixedArity = 2;
G__30830.cljs$lang$applyTo = G__30830__3.cljs$lang$applyTo;
G__30830.cljs$core$IFn$_invoke$arity$0 = G__30830__0;
G__30830.cljs$core$IFn$_invoke$arity$1 = G__30830__1;
G__30830.cljs$core$IFn$_invoke$arity$2 = G__30830__2;
G__30830.cljs$core$IFn$_invoke$arity$variadic = G__30830__3.cljs$core$IFn$_invoke$arity$variadic;
return G__30830;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___30836 = size;
var i_30837 = (0);
while(true){
if((i_30837 < n__15331__auto___30836)){
cljs.core.chunk_append(b,(function (){var G__30822 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30837);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30822) : f.call(null,G__30822));
})());

var G__30838 = (i_30837 + (1));
i_30837 = G__30838;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__30823 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30823) : f.call(null,G__30823));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__30824 = cljs.core.first(s1);
var G__30825 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30824,G__30825) : f.call(null,G__30824,G__30825));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__30826 = cljs.core.first(s1);
var G__30827 = cljs.core.first(s2);
var G__30828 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30826,G__30827,G__30828) : f.call(null,G__30826,G__30827,G__30828));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__30839__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__30776_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__30776_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__30839 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__30840__i = 0, G__30840__a = new Array(arguments.length -  4);
while (G__30840__i < G__30840__a.length) {G__30840__a[G__30840__i] = arguments[G__30840__i + 4]; ++G__30840__i;}
  colls = new cljs.core.IndexedSeq(G__30840__a,0);
} 
return G__30839__delegate.call(this,f,c1,c2,c3,colls);};
G__30839.cljs$lang$maxFixedArity = 4;
G__30839.cljs$lang$applyTo = (function (arglist__30841){
var f = cljs.core.first(arglist__30841);
arglist__30841 = cljs.core.next(arglist__30841);
var c1 = cljs.core.first(arglist__30841);
arglist__30841 = cljs.core.next(arglist__30841);
var c2 = cljs.core.first(arglist__30841);
arglist__30841 = cljs.core.next(arglist__30841);
var c3 = cljs.core.first(arglist__30841);
var colls = cljs.core.rest(arglist__30841);
return G__30839__delegate(f,c1,c2,c3,colls);
});
G__30839.cljs$core$IFn$_invoke$arity$variadic = G__30839__delegate;
return G__30839;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__30842 = null;
if (arguments.length > 4) {
var G__30843__i = 0, G__30843__a = new Array(arguments.length -  4);
while (G__30843__i < G__30843__a.length) {G__30843__a[G__30843__i] = arguments[G__30843__i + 4]; ++G__30843__i;}
G__30842 = new cljs.core.IndexedSeq(G__30843__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__30842);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__30852 = null;
var G__30852__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30852__1 = (function (result){
var G__30849 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30849) : rf.call(null,G__30849));
});
var G__30852__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__30850 = result;
var G__30851 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30850,G__30851) : rf.call(null,G__30850,G__30851));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__30852 = function(result,input){
switch(arguments.length){
case 0:
return G__30852__0.call(this);
case 1:
return G__30852__1.call(this,result);
case 2:
return G__30852__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30852.cljs$core$IFn$_invoke$arity$0 = G__30852__0;
G__30852.cljs$core$IFn$_invoke$arity$1 = G__30852__1;
G__30852.cljs$core$IFn$_invoke$arity$2 = G__30852__2;
return G__30852;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__30859 = null;
var G__30859__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30859__1 = (function (result){
var G__30856 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30856) : rf.call(null,G__30856));
});
var G__30859__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__30857 = result;
var G__30858 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30857,G__30858) : rf.call(null,G__30857,G__30858));
}
});
G__30859 = function(result,input){
switch(arguments.length){
case 0:
return G__30859__0.call(this);
case 1:
return G__30859__1.call(this,result);
case 2:
return G__30859__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30859.cljs$core$IFn$_invoke$arity$0 = G__30859__0;
G__30859.cljs$core$IFn$_invoke$arity$1 = G__30859__1;
G__30859.cljs$core$IFn$_invoke$arity$2 = G__30859__2;
return G__30859;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__30860 = (n__$1 - (1));
var G__30861 = cljs.core.rest(s);
n__$1 = G__30860;
coll__$1 = G__30861;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__30864 = cljs.core.next(s);
var G__30865 = cljs.core.next(lead);
s = G__30864;
lead = G__30865;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__30878 = null;
var G__30878__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30878__1 = (function (result){
var G__30872 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30872) : rf.call(null,G__30872));
});
var G__30878__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__14432__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__14432__auto__)){
var G__30873 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30873) : pred.call(null,G__30873));
} else {
return and__14432__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__30874 = result;
var G__30875 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30874,G__30875) : rf.call(null,G__30874,G__30875));
}
});
G__30878 = function(result,input){
switch(arguments.length){
case 0:
return G__30878__0.call(this);
case 1:
return G__30878__1.call(this,result);
case 2:
return G__30878__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30878.cljs$core$IFn$_invoke$arity$0 = G__30878__0;
G__30878.cljs$core$IFn$_invoke$arity$1 = G__30878__1;
G__30878.cljs$core$IFn$_invoke$arity$2 = G__30878__2;
return G__30878;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__14432__auto__ = s;
if(and__14432__auto__){
var G__30877 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__30877) : pred__$1.call(null,G__30877));
} else {
return and__14432__auto__;
}
})())){
var G__30879 = pred__$1;
var G__30880 = cljs.core.rest(s);
pred__$1 = G__30879;
coll__$1 = G__30880;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__30889 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30889) : f.call(null,G__30889));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__30892__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__30892 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__30893__i = 0, G__30893__a = new Array(arguments.length -  2);
while (G__30893__i < G__30893__a.length) {G__30893__a[G__30893__i] = arguments[G__30893__i + 2]; ++G__30893__i;}
  colls = new cljs.core.IndexedSeq(G__30893__a,0);
} 
return G__30892__delegate.call(this,c1,c2,colls);};
G__30892.cljs$lang$maxFixedArity = 2;
G__30892.cljs$lang$applyTo = (function (arglist__30894){
var c1 = cljs.core.first(arglist__30894);
arglist__30894 = cljs.core.next(arglist__30894);
var c2 = cljs.core.first(arglist__30894);
var colls = cljs.core.rest(arglist__30894);
return G__30892__delegate(c1,c2,colls);
});
G__30892.cljs$core$IFn$_invoke$arity$variadic = G__30892__delegate;
return G__30892;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__30895 = null;
if (arguments.length > 2) {
var G__30896__i = 0, G__30896__a = new Array(arguments.length -  2);
while (G__30896__i < G__30896__a.length) {G__30896__a[G__30896__i] = arguments[G__30896__i + 2]; ++G__30896__i;}
G__30895 = new cljs.core.IndexedSeq(G__30896__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__30895);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__30911 = null;
var G__30911__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30911__1 = (function (result){
var G__30904 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30904) : rf.call(null,G__30904));
});
var G__30911__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__30905 = result;
var G__30906 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30905,G__30906) : rf.call(null,G__30905,G__30906));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__30907 = sepr;
var G__30908 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30907,G__30908) : rf.call(null,G__30907,G__30908));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__30909 = result;
var G__30910 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30909,G__30910) : rf.call(null,G__30909,G__30910));
}
});
G__30911 = function(result,input){
switch(arguments.length){
case 0:
return G__30911__0.call(this);
case 1:
return G__30911__1.call(this,result);
case 2:
return G__30911__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30911.cljs$core$IFn$_invoke$arity$0 = G__30911__0;
G__30911.cljs$core$IFn$_invoke$arity$1 = G__30911__1;
G__30911.cljs$core$IFn$_invoke$arity$2 = G__30911__2;
return G__30911;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var coll__$1 = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__30920__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__30920 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__30921__i = 0, G__30921__a = new Array(arguments.length -  1);
while (G__30921__i < G__30921__a.length) {G__30921__a[G__30921__i] = arguments[G__30921__i + 1]; ++G__30921__i;}
  colls = new cljs.core.IndexedSeq(G__30921__a,0);
} 
return G__30920__delegate.call(this,f,colls);};
G__30920.cljs$lang$maxFixedArity = 1;
G__30920.cljs$lang$applyTo = (function (arglist__30922){
var f = cljs.core.first(arglist__30922);
var colls = cljs.core.rest(arglist__30922);
return G__30920__delegate(f,colls);
});
G__30920.cljs$core$IFn$_invoke$arity$variadic = G__30920__delegate;
return G__30920;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__30923 = null;
if (arguments.length > 1) {
var G__30924__i = 0, G__30924__a = new Array(arguments.length -  1);
while (G__30924__i < G__30924__a.length) {G__30924__a[G__30924__i] = arguments[G__30924__i + 1]; ++G__30924__i;}
G__30923 = new cljs.core.IndexedSeq(G__30924__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__30923);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__30943 = null;
var G__30943__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30943__1 = (function (result){
var G__30937 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30937) : rf.call(null,G__30937));
});
var G__30943__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__30938 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30938) : pred.call(null,G__30938));
})())){
var G__30939 = result;
var G__30940 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30939,G__30940) : rf.call(null,G__30939,G__30940));
} else {
return result;
}
});
G__30943 = function(result,input){
switch(arguments.length){
case 0:
return G__30943__0.call(this);
case 1:
return G__30943__1.call(this,result);
case 2:
return G__30943__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30943.cljs$core$IFn$_invoke$arity$0 = G__30943__0;
G__30943.cljs$core$IFn$_invoke$arity$1 = G__30943__1;
G__30943.cljs$core$IFn$_invoke$arity$2 = G__30943__2;
return G__30943;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15331__auto___30944 = size;
var i_30945 = (0);
while(true){
if((i_30945 < n__15331__auto___30944)){
if(cljs.core.truth_((function (){var G__30941 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30945);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30941) : pred.call(null,G__30941));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30945));
} else {
}

var G__30946 = (i_30945 + (1));
i_30945 = G__30946;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__30942 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30942) : pred.call(null,G__30942));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__30953 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__30953) : branch_QMARK_.call(null,G__30953));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__30954 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__30954) : children.call(null,G__30954));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__30955_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__30955_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__30958 = to;
if(G__30958){
var bit__15118__auto__ = (G__30958.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__15118__auto__) || (G__30958.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__30959 = to;
if(G__30959){
var bit__15118__auto__ = (G__30959.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__15118__auto__) || (G__30959.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__30961 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30961) : f.call(null,G__30961));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__30962__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__30962 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__30963__i = 0, G__30963__a = new Array(arguments.length -  4);
while (G__30963__i < G__30963__a.length) {G__30963__a[G__30963__i] = arguments[G__30963__i + 4]; ++G__30963__i;}
  colls = new cljs.core.IndexedSeq(G__30963__a,0);
} 
return G__30962__delegate.call(this,f,c1,c2,c3,colls);};
G__30962.cljs$lang$maxFixedArity = 4;
G__30962.cljs$lang$applyTo = (function (arglist__30964){
var f = cljs.core.first(arglist__30964);
arglist__30964 = cljs.core.next(arglist__30964);
var c1 = cljs.core.first(arglist__30964);
arglist__30964 = cljs.core.next(arglist__30964);
var c2 = cljs.core.first(arglist__30964);
arglist__30964 = cljs.core.next(arglist__30964);
var c3 = cljs.core.first(arglist__30964);
var colls = cljs.core.rest(arglist__30964);
return G__30962__delegate(f,c1,c2,c3,colls);
});
G__30962.cljs$core$IFn$_invoke$arity$variadic = G__30962__delegate;
return G__30962;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__30965 = null;
if (arguments.length > 4) {
var G__30966__i = 0, G__30966__a = new Array(arguments.length -  4);
while (G__30966__i < G__30966__a.length) {G__30966__a[G__30966__i] = arguments[G__30966__i + 4]; ++G__30966__i;}
G__30965 = new cljs.core.IndexedSeq(G__30966__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__30965);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__30968 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30968) : pred.call(null,G__30968));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__30983 = m__$1;
if(G__30983){
var bit__15125__auto__ = (G__30983.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__15125__auto__) || (G__30983.cljs$core$ILookup$)){
return true;
} else {
if((!G__30983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__30983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__30983);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__30984 = sentinel;
var G__30985 = m__$2;
var G__30986 = cljs.core.next(ks__$1);
sentinel = G__30984;
m__$1 = G__30985;
ks__$1 = G__30986;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__30987,v){
var vec__30992 = p__30987;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30992,(0),null);
var ks = cljs.core.nthnext(vec__30992,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__30993,f){
var vec__31031 = p__30993;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31031,(0),null);
var ks = cljs.core.nthnext(vec__31031,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31032 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31032) : f.call(null,G__31032));
})());
}
});
var update_in__4 = (function (m,p__30994,f,a){
var vec__31033 = p__30994;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31033,(0),null);
var ks = cljs.core.nthnext(vec__31033,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31034 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31035 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31034,G__31035) : f.call(null,G__31034,G__31035));
})());
}
});
var update_in__5 = (function (m,p__30995,f,a,b){
var vec__31036 = p__30995;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31036,(0),null);
var ks = cljs.core.nthnext(vec__31036,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31037 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31038 = a;
var G__31039 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31037,G__31038,G__31039) : f.call(null,G__31037,G__31038,G__31039));
})());
}
});
var update_in__6 = (function (m,p__30996,f,a,b,c){
var vec__31040 = p__30996;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31040,(0),null);
var ks = cljs.core.nthnext(vec__31040,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31041 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31042 = a;
var G__31043 = b;
var G__31044 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31041,G__31042,G__31043,G__31044) : f.call(null,G__31041,G__31042,G__31043,G__31044));
})());
}
});
var update_in__7 = (function() { 
var G__31046__delegate = function (m,p__30997,f,a,b,c,args){
var vec__31045 = p__30997;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31045,(0),null);
var ks = cljs.core.nthnext(vec__31045,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__31046 = function (m,p__30997,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__31047__i = 0, G__31047__a = new Array(arguments.length -  6);
while (G__31047__i < G__31047__a.length) {G__31047__a[G__31047__i] = arguments[G__31047__i + 6]; ++G__31047__i;}
  args = new cljs.core.IndexedSeq(G__31047__a,0);
} 
return G__31046__delegate.call(this,m,p__30997,f,a,b,c,args);};
G__31046.cljs$lang$maxFixedArity = 6;
G__31046.cljs$lang$applyTo = (function (arglist__31048){
var m = cljs.core.first(arglist__31048);
arglist__31048 = cljs.core.next(arglist__31048);
var p__30997 = cljs.core.first(arglist__31048);
arglist__31048 = cljs.core.next(arglist__31048);
var f = cljs.core.first(arglist__31048);
arglist__31048 = cljs.core.next(arglist__31048);
var a = cljs.core.first(arglist__31048);
arglist__31048 = cljs.core.next(arglist__31048);
var b = cljs.core.first(arglist__31048);
arglist__31048 = cljs.core.next(arglist__31048);
var c = cljs.core.first(arglist__31048);
var args = cljs.core.rest(arglist__31048);
return G__31046__delegate(m,p__30997,f,a,b,c,args);
});
G__31046.cljs$core$IFn$_invoke$arity$variadic = G__31046__delegate;
return G__31046;
})()
;
update_in = function(m,p__30997,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__30997,f);
case 4:
return update_in__4.call(this,m,p__30997,f,a);
case 5:
return update_in__5.call(this,m,p__30997,f,a,b);
case 6:
return update_in__6.call(this,m,p__30997,f,a,b,c);
default:
var G__31049 = null;
if (arguments.length > 6) {
var G__31050__i = 0, G__31050__a = new Array(arguments.length -  6);
while (G__31050__i < G__31050__a.length) {G__31050__a[G__31050__i] = arguments[G__31050__i + 6]; ++G__31050__i;}
G__31049 = new cljs.core.IndexedSeq(G__31050__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__30997,f,a,b,c, G__31049);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31061 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31061) : f.call(null,G__31061));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31062 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31063 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31062,G__31063) : f.call(null,G__31062,G__31063));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31064 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31065 = x;
var G__31066 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31064,G__31065,G__31066) : f.call(null,G__31064,G__31065,G__31066));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31067 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31068 = x;
var G__31069 = y;
var G__31070 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31067,G__31068,G__31069,G__31070) : f.call(null,G__31067,G__31068,G__31069,G__31070));
})());
});
var update__7 = (function() { 
var G__31071__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__31071 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__31072__i = 0, G__31072__a = new Array(arguments.length -  6);
while (G__31072__i < G__31072__a.length) {G__31072__a[G__31072__i] = arguments[G__31072__i + 6]; ++G__31072__i;}
  more = new cljs.core.IndexedSeq(G__31072__a,0);
} 
return G__31071__delegate.call(this,m,k,f,x,y,z,more);};
G__31071.cljs$lang$maxFixedArity = 6;
G__31071.cljs$lang$applyTo = (function (arglist__31073){
var m = cljs.core.first(arglist__31073);
arglist__31073 = cljs.core.next(arglist__31073);
var k = cljs.core.first(arglist__31073);
arglist__31073 = cljs.core.next(arglist__31073);
var f = cljs.core.first(arglist__31073);
arglist__31073 = cljs.core.next(arglist__31073);
var x = cljs.core.first(arglist__31073);
arglist__31073 = cljs.core.next(arglist__31073);
var y = cljs.core.first(arglist__31073);
arglist__31073 = cljs.core.next(arglist__31073);
var z = cljs.core.first(arglist__31073);
var more = cljs.core.rest(arglist__31073);
return G__31071__delegate(m,k,f,x,y,z,more);
});
G__31071.cljs$core$IFn$_invoke$arity$variadic = G__31071__delegate;
return G__31071;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__31074 = null;
if (arguments.length > 6) {
var G__31075__i = 0, G__31075__a = new Array(arguments.length -  6);
while (G__31075__i < G__31075__a.length) {G__31075__a[G__31075__i] = arguments[G__31075__i + 6]; ++G__31075__i;}
G__31074 = new cljs.core.IndexedSeq(G__31075__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__31074);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__31076 = (ll - (5));
var G__31077 = r;
ll = G__31076;
ret = G__31077;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__31082 = cljs.core.pv_aget(node,(0));
var G__31083 = (level - (5));
node = G__31082;
level = G__31083;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__31084 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__31085 = (level - (5));
node = G__31084;
level = G__31085;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__31095 = init__$2;
var G__31096 = (j + i);
var G__31097 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31095,G__31096,G__31097) : f.call(null,G__31095,G__31096,G__31097));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__31108 = (j + (1));
var G__31109 = init__$3;
j = G__31108;
init__$2 = G__31109;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31098 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31098) : cljs.core.deref.call(null,G__31098));
} else {
var G__31110 = (i + len);
var G__31111 = init__$2;
i = G__31110;
init__$1 = G__31111;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__31099 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__31099) : cljs.core.tv_editable_root.call(null,G__31099));
})(),(function (){var G__31100 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__31100) : cljs.core.tv_editable_tail.call(null,G__31100));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__31101 = init__$2;
var G__31102 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31101,G__31102) : f.call(null,G__31101,G__31102));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__31112 = (j + (1));
var G__31113 = init__$3;
j = G__31112;
init__$2 = G__31113;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31103 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31103) : cljs.core.deref.call(null,G__31103));
} else {
var G__31114 = (i + len);
var G__31115 = init__$2;
i = G__31114;
init__$1 = G__31115;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__31104 = coll__$1;
var G__31105 = cljs.core.first_array_for_longvec(coll__$1);
var G__31106 = (0);
var G__31107 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31104,G__31105,G__31106,G__31107) : cljs.core.chunked_seq.call(null,G__31104,G__31105,G__31106,G__31107));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__15331__auto___31116 = len;
var i_31117 = (0);
while(true){
if((i_31117 < n__15331__auto___31116)){
(new_tail[i_31117] = (self__.tail[i_31117]));

var G__31118 = (i_31117 + (1));
i_31117 = G__31118;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__31119 = null;
var G__31119__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__31119__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__31119 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31119__2.call(this,self__,k);
case 3:
return G__31119__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31119.cljs$core$IFn$_invoke$arity$2 = G__31119__2;
G__31119.cljs$core$IFn$_invoke$arity$3 = G__31119__3;
return G__31119;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args31094){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31094)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__31120 = (i + (1));
var G__31121 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__31120;
out = G__31121;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31122__i = 0, G__31122__a = new Array(arguments.length -  0);
while (G__31122__i < G__31122__a.length) {G__31122__a[G__31122__i] = arguments[G__31122__i + 0]; ++G__31122__i;}
  args = new cljs.core.IndexedSeq(G__31122__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__31123){
var args = cljs.core.seq(arglist__31123);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__31124 = self__.vec;
var G__31125 = self__.node;
var G__31126 = self__.i;
var G__31127 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31124,G__31125,G__31126,G__31127) : cljs.core.chunked_seq.call(null,G__31124,G__31125,G__31126,G__31127));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__31128 = self__.vec;
var G__31129 = (self__.i + self__.off);
var G__31130 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__31128,G__31129,G__31130) : cljs.core.subvec.call(null,G__31128,G__31129,G__31130));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__31131 = self__.vec;
var G__31132 = (self__.i + self__.off);
var G__31133 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__31131,G__31132,G__31133) : cljs.core.subvec.call(null,G__31131,G__31132,G__31133));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__31134 = self__.vec;
var G__31135 = self__.node;
var G__31136 = self__.i;
var G__31137 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31134,G__31135,G__31136,G__31137) : cljs.core.chunked_seq.call(null,G__31134,G__31135,G__31136,G__31137));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__31138 = self__.vec;
var G__31139 = cljs.core.unchecked_array_for(self__.vec,end);
var G__31140 = end;
var G__31141 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31138,G__31139,G__31140,G__31141) : cljs.core.chunked_seq.call(null,G__31138,G__31139,G__31140,G__31141));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__31142 = self__.vec;
var G__31143 = self__.node;
var G__31144 = self__.i;
var G__31145 = self__.off;
var G__31146 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__31142,G__31143,G__31144,G__31145,G__31146) : cljs.core.chunked_seq.call(null,G__31142,G__31143,G__31144,G__31145,G__31146));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__31147 = self__.vec;
var G__31148 = cljs.core.unchecked_array_for(self__.vec,end);
var G__31149 = end;
var G__31150 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31147,G__31148,G__31149,G__31150) : cljs.core.chunked_seq.call(null,G__31147,G__31148,G__31149,G__31150));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__31152 = self__.meta;
var G__31153 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__31154 = self__.start;
var G__31155 = (function (){var x__14761__auto__ = self__.end;
var y__14762__auto__ = (v_pos + (1));
return ((x__14761__auto__ > y__14762__auto__) ? x__14761__auto__ : y__14762__auto__);
})();
var G__31156 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31152,G__31153,G__31154,G__31155,G__31156) : cljs.core.build_subvec.call(null,G__31152,G__31153,G__31154,G__31155,G__31156));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__31157 = self__.meta;
var G__31158 = self__.v;
var G__31159 = self__.start;
var G__31160 = (self__.end - (1));
var G__31161 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31157,G__31158,G__31159,G__31160,G__31161) : cljs.core.build_subvec.call(null,G__31157,G__31158,G__31159,G__31160,G__31161));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__31163 = meta__$1;
var G__31164 = self__.v;
var G__31165 = self__.start;
var G__31166 = self__.end;
var G__31167 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31163,G__31164,G__31165,G__31166,G__31167) : cljs.core.build_subvec.call(null,G__31163,G__31164,G__31165,G__31166,G__31167));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__31168 = self__.meta;
var G__31169 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__31170 = self__.start;
var G__31171 = (self__.end + (1));
var G__31172 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31168,G__31169,G__31170,G__31171,G__31172) : cljs.core.build_subvec.call(null,G__31168,G__31169,G__31170,G__31171,G__31172));
});

cljs.core.Subvec.prototype.call = (function() {
var G__31173 = null;
var G__31173__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__31173__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__31173 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31173__2.call(this,self__,k);
case 3:
return G__31173__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31173.cljs$core$IFn$_invoke$arity$2 = G__31173__2;
G__31173.cljs$core$IFn$_invoke$arity$3 = G__31173__3;
return G__31173;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args31151){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31151)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__31174 = meta;
var G__31175 = v.v;
var G__31176 = (v.start + start);
var G__31177 = (v.start + end);
var G__31178 = __hash;
meta = G__31174;
v = G__31175;
start = G__31176;
end = G__31177;
__hash = G__31178;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj31185 = {};
return obj31185;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__31193 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__31194 = (level - (5));
node = G__31193;
level = G__31194;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__31198 = null;
var G__31198__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31198__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31198 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31198__2.call(this,self__,k);
case 3:
return G__31198__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31198.cljs$core$IFn$_invoke$arity$2 = G__31198__2;
G__31198.cljs$core$IFn$_invoke$arity$3 = G__31198__3;
return G__31198;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args31195){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31195)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__14444__auto__ = self__.front;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__14444__auto__ = self__.rear;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__31199 = (i + incr);
i = G__31199;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__31200 = (i + (1));
var G__31201 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__31200;
out = G__31201;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj31205 = {};
return obj31205;
})();
var l = ks.length;
var i_31206 = (0);
while(true){
if((i_31206 < l)){
var k_31207 = (ks[i_31206]);
(new_obj[k_31207] = (obj[k_31207]));

var G__31208 = (i_31206 + (1));
i_31206 = G__31208;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__14432__auto__ = (function (){var G__31212 = k;
return goog.isString(G__31212);
})();
if(cljs.core.truth_(and__14432__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__14432__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__31213 = init__$1;
var G__31214 = k;
var G__31215 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31213,G__31214,G__31215) : f.call(null,G__31213,G__31214,G__31215));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31216 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31216) : cljs.core.deref.call(null,G__31216));
} else {
var G__31222 = cljs.core.rest(keys__$1);
var G__31223 = init__$2;
keys__$1 = G__31222;
init__$1 = G__31223;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__14432__auto__ = (function (){var G__31218 = k;
return goog.isString(G__31218);
})();
if(cljs.core.truth_(and__14432__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__14432__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__31219 = k;
return goog.isString(G__31219);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__14432__auto__ = (function (){var G__31221 = k;
return goog.isString(G__31221);
})();
if(cljs.core.truth_(and__14432__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__14432__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__31209_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__31209_SHARP_,(self__.strobj[p1__31209_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__31224 = null;
var G__31224__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31224__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31224 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31224__2.call(this,self__,k);
case 3:
return G__31224__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31224.cljs$core$IFn$_invoke$arity$2 = G__31224__2;
G__31224.cljs$core$IFn$_invoke$arity$3 = G__31224__3;
return G__31224;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args31210){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31210)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj31226 = {};
return obj31226;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__31227 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31227,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31227,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__31228 = (i + (2));
i = G__31228;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__31229 = (i + (2));
i = G__31229;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__31230 = (i + (2));
i = G__31230;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__31231 = (i + (2));
i = G__31231;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__31232 = (i + (2));
i = G__31232;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__14444__auto__ = (function (){var G__31236 = k;
return goog.isString(G__31236);
})();
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_31237 = (0);
while(true){
if((i_31237 < l)){
(narr[i_31237] = (arr[i_31237]));

var G__31238 = (i_31237 + (1));
i_31237 = G__31238;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31240 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31240) : cljs.core.keys.call(null,G__31240));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31241 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31241) : cljs.core.vals.call(null,G__31241));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31242 = cljs.core.seq(coll);
var chunk__31243 = null;
var count__31244 = (0);
var i__31245 = (0);
while(true){
if((i__31245 < count__31244)){
var vec__31246 = chunk__31243.cljs$core$IIndexed$_nth$arity$2(null,i__31245);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31246,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31246,(1),null);
var G__31247_31260 = v;
var G__31248_31261 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31247_31260,G__31248_31261) : f.call(null,G__31247_31260,G__31248_31261));

var G__31262 = seq__31242;
var G__31263 = chunk__31243;
var G__31264 = count__31244;
var G__31265 = (i__31245 + (1));
seq__31242 = G__31262;
chunk__31243 = G__31263;
count__31244 = G__31264;
i__31245 = G__31265;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31242);
if(temp__4406__auto__){
var seq__31242__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31242__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__31242__$1);
var G__31266 = cljs.core.chunk_rest(seq__31242__$1);
var G__31267 = c__15231__auto__;
var G__31268 = cljs.core.count(c__15231__auto__);
var G__31269 = (0);
seq__31242 = G__31266;
chunk__31243 = G__31267;
count__31244 = G__31268;
i__31245 = G__31269;
continue;
} else {
var vec__31249 = cljs.core.first(seq__31242__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31249,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31249,(1),null);
var G__31250_31270 = v;
var G__31251_31271 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31250_31270,G__31251_31271) : f.call(null,G__31250_31270,G__31251_31271));

var G__31272 = cljs.core.next(seq__31242__$1);
var G__31273 = null;
var G__31274 = (0);
var G__31275 = (0);
seq__31242 = G__31272;
chunk__31243 = G__31273;
count__31244 = G__31274;
i__31245 = G__31275;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__31252 = init__$1;
var G__31253 = (self__.arr[i]);
var G__31254 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31252,G__31253,G__31254) : f.call(null,G__31252,G__31253,G__31254));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31255 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31255) : cljs.core.deref.call(null,G__31255));
} else {
var G__31276 = (i + (2));
var G__31277 = init__$2;
i = G__31276;
init__$1 = G__31277;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__31256 = other;
if(G__31256){
var bit__15118__auto__ = (G__31256.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__15118__auto__) || (G__31256.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__31278 = (i + (2));
i = G__31278;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj31258 = {};
return obj31258;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__31279 = (s + (2));
var G__31280 = d;
s = G__31279;
d = G__31280;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__31281 = (s + (2));
var G__31282 = (d + (2));
s = G__31281;
d = G__31282;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__31259 = cljs.core.aclone(self__.arr);
(G__31259[(idx + (1))] = v);

return G__31259;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__31283 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__31284 = cljs.core.next(es);
ret = G__31283;
es = G__31284;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__31285 = null;
var G__31285__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31285__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31285 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31285__2.call(this,self__,k);
case 3:
return G__31285__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31285.cljs$core$IFn$_invoke$arity$2 = G__31285__2;
G__31285.cljs$core$IFn$_invoke$arity$3 = G__31285__3;
return G__31285;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args31239){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31239)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__31286 = (i + (2));
var G__31287 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__31286;
ret = G__31287;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__31288_31296 = self__.arr;
G__31288_31296.pop();

G__31288_31296.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__31289 = self__.len;
var G__31290 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__31289,G__31290) : cljs.core.array__GT_transient_hash_map.call(null,G__31289,G__31290));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__31291 = o;
if(G__31291){
var bit__15125__auto__ = (G__31291.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__15125__auto__) || (G__31291.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__31291.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31291);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31291);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__31292 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31292) : cljs.core.key.call(null,G__31292));
})(),(function (){var G__31293 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31293) : cljs.core.val.call(null,G__31293));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__31297 = cljs.core.next(es);
var G__31298 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__31294 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31294) : cljs.core.key.call(null,G__31294));
})(),(function (){var G__31295 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31295) : cljs.core.val.call(null,G__31295));
})());
es = G__31297;
tcoll__$2 = G__31298;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__31299 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__31300 = (i + (2));
out = G__31299;
i = G__31300;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__31303 = cljs.core.aclone(arr);
(G__31303[i] = a);

return G__31303;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__31304 = cljs.core.aclone(arr);
(G__31304[i] = a);

(G__31304[j] = b);

return G__31304;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__31309 = init__$1;
var G__31310 = k;
var G__31311 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31309,G__31310,G__31311) : f.call(null,G__31309,G__31310,G__31311));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31312 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31312) : cljs.core.deref.call(null,G__31312));
} else {
var G__31313 = (i + (2));
var G__31314 = init__$2;
i = G__31313;
init__$1 = G__31314;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__31315 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__31315) : cljs.core.create_inode_seq.call(null,G__31315));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_31329 = (0);
var j_31330 = (0);
while(true){
if((i_31329 < (32))){
if((((self__.bitmap >>> i_31329) & (1)) === (0))){
var G__31331 = (i_31329 + (1));
var G__31332 = j_31330;
i_31329 = G__31331;
j_31330 = G__31332;
continue;
} else {
(nodes[i_31329] = ((!(((self__.arr[j_31330]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_31330])),(self__.arr[j_31330]),(self__.arr[(j_31330 + (1))]),added_leaf_QMARK_):(self__.arr[(j_31330 + (1))])));

var G__31333 = (i_31329 + (1));
var G__31334 = (j_31330 + (2));
i_31329 = G__31333;
j_31330 = G__31334;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__31316 = edit__$1;
var G__31317 = (shift + (5));
var G__31318 = key_or_nil;
var G__31319 = val_or_node;
var G__31320 = hash;
var G__31321 = key;
var G__31322 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__31316,G__31317,G__31318,G__31319,G__31320,G__31321,G__31322) : cljs.core.create_node.call(null,G__31316,G__31317,G__31318,G__31319,G__31320,G__31321,G__31322));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_31335 = (0);
var j_31336 = (0);
while(true){
if((i_31335 < (32))){
if((((self__.bitmap >>> i_31335) & (1)) === (0))){
var G__31337 = (i_31335 + (1));
var G__31338 = j_31336;
i_31335 = G__31337;
j_31336 = G__31338;
continue;
} else {
(nodes[i_31335] = ((!(((self__.arr[j_31336]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_31336])),(self__.arr[j_31336]),(self__.arr[(j_31336 + (1))]),added_leaf_QMARK_):(self__.arr[(j_31336 + (1))])));

var G__31339 = (i_31335 + (1));
var G__31340 = (j_31336 + (2));
i_31335 = G__31339;
j_31336 = G__31340;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__31323 = (shift + (5));
var G__31324 = key_or_nil;
var G__31325 = val_or_node;
var G__31326 = hash;
var G__31327 = key;
var G__31328 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__31323,G__31324,G__31325,G__31326,G__31327,G__31328) : cljs.core.create_node.call(null,G__31323,G__31324,G__31325,G__31326,G__31327,G__31328));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__31341 = (i + (1));
var G__31342 = (j + (2));
var G__31343 = (bitmap | ((1) << i));
i = G__31341;
j = G__31342;
bitmap = G__31343;
continue;
} else {
var G__31344 = (i + (1));
var G__31345 = j;
var G__31346 = bitmap;
i = G__31344;
j = G__31345;
bitmap = G__31346;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__31347 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__31347) : cljs.core.create_array_node_seq.call(null,G__31347));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31348 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31348) : cljs.core.deref.call(null,G__31348));
} else {
var G__31349 = (i + (1));
var G__31350 = init__$2;
i = G__31349;
init__$1 = G__31350;
continue;
}
} else {
var G__31351 = (i + (1));
var G__31352 = init__$1;
i = G__31351;
init__$1 = G__31352;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__31353 = (i + (2));
i = G__31353;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__31354 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__31354) : cljs.core.create_inode_seq.call(null,G__31354));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__31355 = self__.nodes;
var G__31356 = (self__.i + (2));
var G__31357 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__31355,G__31356,G__31357) : cljs.core.create_inode_seq.call(null,G__31355,G__31356,G__31357));
} else {
var G__31358 = self__.nodes;
var G__31359 = self__.i;
var G__31360 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__31358,G__31359,G__31360) : cljs.core.create_inode_seq.call(null,G__31358,G__31359,G__31360));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4404__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4404__auto__)){
var node = temp__4404__auto__;
var temp__4404__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var node_seq = temp__4404__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__31364 = (j + (2));
j = G__31364;
continue;
}
} else {
var G__31365 = (j + (2));
j = G__31365;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__31366 = null;
var G__31367 = self__.nodes;
var G__31368 = self__.i;
var G__31369 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__31366,G__31367,G__31368,G__31369) : cljs.core.create_array_node_seq.call(null,G__31366,G__31367,G__31368,G__31369));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4404__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4404__auto__)){
var nj = temp__4404__auto__;
var temp__4404__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var ns = temp__4404__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__31374 = (j + (1));
j = G__31374;
continue;
}
} else {
var G__31375 = (j + (1));
j = G__31375;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31377 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31377) : cljs.core.keys.call(null,G__31377));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31378 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31378) : cljs.core.vals.call(null,G__31378));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31379 = cljs.core.seq(coll);
var chunk__31380 = null;
var count__31381 = (0);
var i__31382 = (0);
while(true){
if((i__31382 < count__31381)){
var vec__31383 = chunk__31380.cljs$core$IIndexed$_nth$arity$2(null,i__31382);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31383,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31383,(1),null);
var G__31384_31395 = v;
var G__31385_31396 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31384_31395,G__31385_31396) : f.call(null,G__31384_31395,G__31385_31396));

var G__31397 = seq__31379;
var G__31398 = chunk__31380;
var G__31399 = count__31381;
var G__31400 = (i__31382 + (1));
seq__31379 = G__31397;
chunk__31380 = G__31398;
count__31381 = G__31399;
i__31382 = G__31400;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31379);
if(temp__4406__auto__){
var seq__31379__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31379__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__31379__$1);
var G__31401 = cljs.core.chunk_rest(seq__31379__$1);
var G__31402 = c__15231__auto__;
var G__31403 = cljs.core.count(c__15231__auto__);
var G__31404 = (0);
seq__31379 = G__31401;
chunk__31380 = G__31402;
count__31381 = G__31403;
i__31382 = G__31404;
continue;
} else {
var vec__31386 = cljs.core.first(seq__31379__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31386,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31386,(1),null);
var G__31387_31405 = v;
var G__31388_31406 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31387_31405,G__31388_31406) : f.call(null,G__31387_31405,G__31388_31406));

var G__31407 = cljs.core.next(seq__31379__$1);
var G__31408 = null;
var G__31409 = (0);
var G__31410 = (0);
seq__31379 = G__31407;
chunk__31380 = G__31408;
count__31381 = G__31409;
i__31382 = G__31410;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__31389 = init;
var G__31390 = null;
var G__31391 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31389,G__31390,G__31391) : f.call(null,G__31389,G__31390,G__31391));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__31392 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31392) : cljs.core.deref.call(null,G__31392));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj31394 = {};
return obj31394;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__31411 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__31412 = cljs.core.next(es);
ret = G__31411;
es = G__31412;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__31413 = null;
var G__31413__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31413__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31413 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31413__2.call(this,self__,k);
case 3:
return G__31413__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31413.cljs$core$IFn$_invoke$arity$2 = G__31413__2;
G__31413.cljs$core$IFn$_invoke$arity$3 = G__31413__3;
return G__31413;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args31376){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31376)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__31414 = (i + (2));
var G__31415 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__31414;
ret = G__31415;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__31416 = (i + (1));
var G__31417 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__31416;
out = G__31417;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__31418 = o;
if(G__31418){
var bit__15125__auto__ = (G__31418.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__15125__auto__) || (G__31418.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__31418.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31418);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31418);
}
})()){
return tcoll.assoc_BANG_((function (){var G__31419 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31419) : cljs.core.key.call(null,G__31419));
})(),(function (){var G__31420 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31420) : cljs.core.val.call(null,G__31420));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__31423 = cljs.core.next(es);
var G__31424 = tcoll__$1.assoc_BANG_((function (){var G__31421 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31421) : cljs.core.key.call(null,G__31421));
})(),(function (){var G__31422 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31422) : cljs.core.val.call(null,G__31422));
})());
es = G__31423;
tcoll__$1 = G__31424;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__31425 = ((ascending_QMARK_)?t.left:t.right);
var G__31426 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__31425;
stack__$1 = G__31426;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__31439 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31439) : cljs.core.deref.call(null,G__31439));
} else {
var init__$2 = (function (){var G__31440 = init__$1;
var G__31441 = node.key;
var G__31442 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31440,G__31441,G__31442) : f.call(null,G__31440,G__31441,G__31442));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31443 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31443) : cljs.core.deref.call(null,G__31443));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__31444 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31444) : cljs.core.deref.call(null,G__31444));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__31446 = null;
var G__31446__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31446__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31446 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31446__2.call(this,self__,k);
case 3:
return G__31446__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31446.cljs$core$IFn$_invoke$arity$2 = G__31446__2;
G__31446.cljs$core$IFn$_invoke$arity$3 = G__31446__3;
return G__31446;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args31445){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31445)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__31448 = null;
var G__31448__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31448__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31448 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31448__2.call(this,self__,k);
case 3:
return G__31448__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31448.cljs$core$IFn$_invoke$arity$2 = G__31448__2;
G__31448.cljs$core$IFn$_invoke$arity$3 = G__31448__3;
return G__31448;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args31447){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31447)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__31461 = k;
var G__31462 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31461,G__31462) : comp.call(null,G__31461,G__31462));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__31481 = k;
var G__31482 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31481,G__31482) : comp.call(null,G__31481,G__31482));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__31493 = k;
var G__31494 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31493,G__31494) : comp.call(null,G__31493,G__31494));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31496 = cljs.core.seq(coll);
var chunk__31497 = null;
var count__31498 = (0);
var i__31499 = (0);
while(true){
if((i__31499 < count__31498)){
var vec__31500 = chunk__31497.cljs$core$IIndexed$_nth$arity$2(null,i__31499);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31500,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31500,(1),null);
var G__31501_31513 = v;
var G__31502_31514 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31501_31513,G__31502_31514) : f.call(null,G__31501_31513,G__31502_31514));

var G__31515 = seq__31496;
var G__31516 = chunk__31497;
var G__31517 = count__31498;
var G__31518 = (i__31499 + (1));
seq__31496 = G__31515;
chunk__31497 = G__31516;
count__31498 = G__31517;
i__31499 = G__31518;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31496);
if(temp__4406__auto__){
var seq__31496__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31496__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__31496__$1);
var G__31519 = cljs.core.chunk_rest(seq__31496__$1);
var G__31520 = c__15231__auto__;
var G__31521 = cljs.core.count(c__15231__auto__);
var G__31522 = (0);
seq__31496 = G__31519;
chunk__31497 = G__31520;
count__31498 = G__31521;
i__31499 = G__31522;
continue;
} else {
var vec__31503 = cljs.core.first(seq__31496__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31503,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31503,(1),null);
var G__31504_31523 = v;
var G__31505_31524 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31504_31523,G__31505_31524) : f.call(null,G__31504_31523,G__31505_31524));

var G__31525 = cljs.core.next(seq__31496__$1);
var G__31526 = null;
var G__31527 = (0);
var G__31528 = (0);
seq__31496 = G__31525;
chunk__31497 = G__31526;
count__31498 = G__31527;
i__31499 = G__31528;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31506 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31506) : cljs.core.keys.call(null,G__31506));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31507 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31507) : cljs.core.vals.call(null,G__31507));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__31508 = k;
var G__31509 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__31508,G__31509) : self__.comp.call(null,G__31508,G__31509));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__31529 = t.left;
t = G__31529;
continue;
} else {
var G__31530 = t.right;
t = G__31530;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__31531 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__31532 = cljs.core.next(es);
ret = G__31531;
es = G__31532;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__31533 = null;
var G__31533__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31533__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31533 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31533__2.call(this,self__,k);
case 3:
return G__31533__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31533.cljs$core$IFn$_invoke$arity$2 = G__31533__2;
G__31533.cljs$core$IFn$_invoke$arity$3 = G__31533__3;
return G__31533;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args31495){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31495)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__31510 = k;
var G__31511 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__31510,G__31511) : self__.comp.call(null,G__31510,G__31511));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__31534 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__31535 = t.left;
stack = G__31534;
t = G__31535;
continue;
} else {
var G__31536 = stack;
var G__31537 = t.right;
stack = G__31536;
t = G__31537;
continue;
}
} else {
if((c > (0))){
var G__31538 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__31539 = t.right;
stack = G__31538;
t = G__31539;
continue;
} else {
var G__31540 = stack;
var G__31541 = t.left;
stack = G__31540;
t = G__31541;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__31512 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31512) : cljs.core.key.call(null,G__31512));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__31542 = cljs.core.nnext(in$);
var G__31543 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__31542;
out = G__31543;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31544__i = 0, G__31544__a = new Array(arguments.length -  0);
while (G__31544__i < G__31544__a.length) {G__31544__a[G__31544__i] = arguments[G__31544__i + 0]; ++G__31544__i;}
  keyvals = new cljs.core.IndexedSeq(G__31544__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__31545){
var keyvals = cljs.core.seq(arglist__31545);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31546__i = 0, G__31546__a = new Array(arguments.length -  0);
while (G__31546__i < G__31546__a.length) {G__31546__a[G__31546__i] = arguments[G__31546__i + 0]; ++G__31546__i;}
  keyvals = new cljs.core.IndexedSeq(G__31546__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__31547){
var keyvals = cljs.core.seq(arglist__31547);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj31551 = {};
return obj31551;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__31552 = cljs.core.nnext(kvs);
kvs = G__31552;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31553__i = 0, G__31553__a = new Array(arguments.length -  0);
while (G__31553__i < G__31553__a.length) {G__31553__a[G__31553__i] = arguments[G__31553__i + 0]; ++G__31553__i;}
  keyvals = new cljs.core.IndexedSeq(G__31553__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__31554){
var keyvals = cljs.core.seq(arglist__31554);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__31555 = cljs.core.nnext(in$);
var G__31556 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__31555;
out = G__31556;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31557__i = 0, G__31557__a = new Array(arguments.length -  0);
while (G__31557__i < G__31557__a.length) {G__31557__a[G__31557__i] = arguments[G__31557__i + 0]; ++G__31557__i;}
  keyvals = new cljs.core.IndexedSeq(G__31557__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__31558){
var keyvals = cljs.core.seq(arglist__31558);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__31559 = cljs.core.nnext(in$);
var G__31560 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__31559;
out = G__31560;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__31561__i = 0, G__31561__a = new Array(arguments.length -  1);
while (G__31561__i < G__31561__a.length) {G__31561__a[G__31561__i] = arguments[G__31561__i + 1]; ++G__31561__i;}
  keyvals = new cljs.core.IndexedSeq(G__31561__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__31562){
var comparator = cljs.core.first(arglist__31562);
var keyvals = cljs.core.rest(arglist__31562);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31563 = self__.mseq;
if(G__31563){
var bit__15125__auto__ = (G__31563.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15125__auto__) || (G__31563.cljs$core$INext$)){
return true;
} else {
if((!G__31563.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31563);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31563);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31564 = self__.mseq;
if(G__31564){
var bit__15125__auto__ = (G__31564.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15125__auto__) || (G__31564.cljs$core$INext$)){
return true;
} else {
if((!G__31564.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31564);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31564);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31565 = self__.mseq;
if(G__31565){
var bit__15125__auto__ = (G__31565.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15125__auto__) || (G__31565.cljs$core$INext$)){
return true;
} else {
if((!G__31565.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31565);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31565);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31566 = self__.mseq;
if(G__31566){
var bit__15125__auto__ = (G__31566.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15125__auto__) || (G__31566.cljs$core$INext$)){
return true;
} else {
if((!G__31566.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31566);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31566);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__31567_SHARP_,p2__31568_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__14444__auto__ = p1__31567_SHARP_;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__31568_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__31569__i = 0, G__31569__a = new Array(arguments.length -  0);
while (G__31569__i < G__31569__a.length) {G__31569__a[G__31569__i] = arguments[G__31569__i + 0]; ++G__31569__i;}
  maps = new cljs.core.IndexedSeq(G__31569__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__31570){
var maps = cljs.core.seq(arglist__31570);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31573 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31574 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31573,G__31574) : f.call(null,G__31573,G__31574));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__14444__auto__ = m1;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__31575__i = 0, G__31575__a = new Array(arguments.length -  1);
while (G__31575__i < G__31575__a.length) {G__31575__a[G__31575__i] = arguments[G__31575__i + 1]; ++G__31575__i;}
  maps = new cljs.core.IndexedSeq(G__31575__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__31576){
var f = cljs.core.first(arglist__31576);
var maps = cljs.core.rest(arglist__31576);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__31577 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__31578 = cljs.core.next(keys);
ret = G__31577;
keys = G__31578;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31581 = cljs.core.seq(coll);
var chunk__31582 = null;
var count__31583 = (0);
var i__31584 = (0);
while(true){
if((i__31584 < count__31583)){
var vec__31585 = chunk__31582.cljs$core$IIndexed$_nth$arity$2(null,i__31584);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31585,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31585,(1),null);
var G__31586_31591 = v;
var G__31587_31592 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31586_31591,G__31587_31592) : f.call(null,G__31586_31591,G__31587_31592));

var G__31593 = seq__31581;
var G__31594 = chunk__31582;
var G__31595 = count__31583;
var G__31596 = (i__31584 + (1));
seq__31581 = G__31593;
chunk__31582 = G__31594;
count__31583 = G__31595;
i__31584 = G__31596;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31581);
if(temp__4406__auto__){
var seq__31581__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31581__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__31581__$1);
var G__31597 = cljs.core.chunk_rest(seq__31581__$1);
var G__31598 = c__15231__auto__;
var G__31599 = cljs.core.count(c__15231__auto__);
var G__31600 = (0);
seq__31581 = G__31597;
chunk__31582 = G__31598;
count__31583 = G__31599;
i__31584 = G__31600;
continue;
} else {
var vec__31588 = cljs.core.first(seq__31581__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31588,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31588,(1),null);
var G__31589_31601 = v;
var G__31590_31602 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31589_31601,G__31590_31602) : f.call(null,G__31589_31601,G__31590_31602));

var G__31603 = cljs.core.next(seq__31581__$1);
var G__31604 = null;
var G__31605 = (0);
var G__31606 = (0);
seq__31581 = G__31603;
chunk__31582 = G__31604;
count__31583 = G__31605;
i__31584 = G__31606;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__31579_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__31579_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__31607 = null;
var G__31607__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31607__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31607 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31607__2.call(this,self__,k);
case 3:
return G__31607__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31607.cljs$core$IFn$_invoke$arity$2 = G__31607__2;
G__31607.cljs$core$IFn$_invoke$arity$3 = G__31607__3;
return G__31607;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args31580){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31580)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__31608 = (i + (1));
var G__31609 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__31608;
out = G__31609;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__31610 = (i + (1));
var G__31611 = cljs.core._conj_BANG_(out,(items[i]));
i = G__31610;
out = G__31611;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__31613 = null;
var G__31613__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__31613__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__31613 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31613__2.call(this,self__,k);
case 3:
return G__31613__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31613.cljs$core$IFn$_invoke$arity$2 = G__31613__2;
G__31613.cljs$core$IFn$_invoke$arity$3 = G__31613__3;
return G__31613;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args31612){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31612)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31616 = cljs.core.seq(coll);
var chunk__31617 = null;
var count__31618 = (0);
var i__31619 = (0);
while(true){
if((i__31619 < count__31618)){
var vec__31620 = chunk__31617.cljs$core$IIndexed$_nth$arity$2(null,i__31619);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31620,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31620,(1),null);
var G__31621_31626 = v;
var G__31622_31627 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31621_31626,G__31622_31627) : f.call(null,G__31621_31626,G__31622_31627));

var G__31628 = seq__31616;
var G__31629 = chunk__31617;
var G__31630 = count__31618;
var G__31631 = (i__31619 + (1));
seq__31616 = G__31628;
chunk__31617 = G__31629;
count__31618 = G__31630;
i__31619 = G__31631;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31616);
if(temp__4406__auto__){
var seq__31616__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31616__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__31616__$1);
var G__31632 = cljs.core.chunk_rest(seq__31616__$1);
var G__31633 = c__15231__auto__;
var G__31634 = cljs.core.count(c__15231__auto__);
var G__31635 = (0);
seq__31616 = G__31632;
chunk__31617 = G__31633;
count__31618 = G__31634;
i__31619 = G__31635;
continue;
} else {
var vec__31623 = cljs.core.first(seq__31616__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31623,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31623,(1),null);
var G__31624_31636 = v;
var G__31625_31637 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31624_31636,G__31625_31637) : f.call(null,G__31624_31636,G__31625_31637));

var G__31638 = cljs.core.next(seq__31616__$1);
var G__31639 = null;
var G__31640 = (0);
var G__31641 = (0);
seq__31616 = G__31638;
chunk__31617 = G__31639;
count__31618 = G__31640;
i__31619 = G__31641;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__31614_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__31614_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__31642 = null;
var G__31642__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31642__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31642 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31642__2.call(this,self__,k);
case 3:
return G__31642__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31642.cljs$core$IFn$_invoke$arity$2 = G__31642__2;
G__31642.cljs$core$IFn$_invoke$arity$3 = G__31642__3;
return G__31642;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args31615){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31615)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__15325__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__15325__auto__.length)){
var G__31643 = (i + (1));
var G__31644 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__31643;
res = G__31644;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__31645 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__31646 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__31645;
out = G__31646;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__31647__delegate = function (keys){
return cljs.core.set(keys);
};
var G__31647 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__31648__i = 0, G__31648__a = new Array(arguments.length -  0);
while (G__31648__i < G__31648__a.length) {G__31648__a[G__31648__i] = arguments[G__31648__i + 0]; ++G__31648__i;}
  keys = new cljs.core.IndexedSeq(G__31648__a,0);
} 
return G__31647__delegate.call(this,keys);};
G__31647.cljs$lang$maxFixedArity = 0;
G__31647.cljs$lang$applyTo = (function (arglist__31649){
var keys = cljs.core.seq(arglist__31649);
return G__31647__delegate(keys);
});
G__31647.cljs$core$IFn$_invoke$arity$variadic = G__31647__delegate;
return G__31647;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__31650 = null;
if (arguments.length > 0) {
var G__31651__i = 0, G__31651__a = new Array(arguments.length -  0);
while (G__31651__i < G__31651__a.length) {G__31651__a[G__31651__i] = arguments[G__31651__i + 0]; ++G__31651__i;}
G__31650 = new cljs.core.IndexedSeq(G__31651__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__31650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__31652__i = 0, G__31652__a = new Array(arguments.length -  0);
while (G__31652__i < G__31652__a.length) {G__31652__a[G__31652__i] = arguments[G__31652__i + 0]; ++G__31652__i;}
  keys = new cljs.core.IndexedSeq(G__31652__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__31653){
var keys = cljs.core.seq(arglist__31653);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__31654__i = 0, G__31654__a = new Array(arguments.length -  1);
while (G__31654__i < G__31654__a.length) {G__31654__a[G__31654__i] = arguments[G__31654__i + 1]; ++G__31654__i;}
  keys = new cljs.core.IndexedSeq(G__31654__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__31655){
var comparator = cljs.core.first(arglist__31655);
var keys = cljs.core.rest(arglist__31655);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__31656_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__31656_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.val(e);
} else {
return p1__31656_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4404__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__31657_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__31657_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.second(e);
} else {
return p1__31657_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__31678 = null;
var G__31678__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31678__1 = (function (result){
var G__31668 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31668) : rf.call(null,G__31668));
});
var G__31678__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__31669 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31669) : cljs.core.deref.call(null,G__31669));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__31670 = result;
var G__31671 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31670,G__31671) : rf.call(null,G__31670,G__31671));
}
});
G__31678 = function(result,input){
switch(arguments.length){
case 0:
return G__31678__0.call(this);
case 1:
return G__31678__1.call(this,result);
case 2:
return G__31678__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31678.cljs$core$IFn$_invoke$arity$0 = G__31678__0;
G__31678.cljs$core$IFn$_invoke$arity$1 = G__31678__1;
G__31678.cljs$core$IFn$_invoke$arity$2 = G__31678__2;
return G__31678;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__31676,seen__$1){
while(true){
var vec__31677 = p__31676;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31677,(0),null);
var xs__$1 = vec__31677;
var temp__4406__auto__ = cljs.core.seq(xs__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__31679 = cljs.core.rest(s);
var G__31680 = seen__$1;
p__31676 = G__31679;
seen__$1 = G__31680;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__31681 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__31682 = cljs.core.next(s__$1);
ret = G__31681;
s__$1 = G__31682;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__31684 = x;
if(G__31684){
var bit__15118__auto__ = (G__31684.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__15118__auto__) || (G__31684.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__31685 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__31686 = cljs.core.next(ks);
var G__31687 = cljs.core.next(vs);
map = G__31685;
ks = G__31686;
vs = G__31687;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__31698 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31698) : k.call(null,G__31698));
})() > (function (){var G__31699 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31699) : k.call(null,G__31699));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__31700__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__31688_SHARP_,p2__31689_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__31688_SHARP_,p2__31689_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__31700 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__31701__i = 0, G__31701__a = new Array(arguments.length -  3);
while (G__31701__i < G__31701__a.length) {G__31701__a[G__31701__i] = arguments[G__31701__i + 3]; ++G__31701__i;}
  more = new cljs.core.IndexedSeq(G__31701__a,0);
} 
return G__31700__delegate.call(this,k,x,y,more);};
G__31700.cljs$lang$maxFixedArity = 3;
G__31700.cljs$lang$applyTo = (function (arglist__31702){
var k = cljs.core.first(arglist__31702);
arglist__31702 = cljs.core.next(arglist__31702);
var x = cljs.core.first(arglist__31702);
arglist__31702 = cljs.core.next(arglist__31702);
var y = cljs.core.first(arglist__31702);
var more = cljs.core.rest(arglist__31702);
return G__31700__delegate(k,x,y,more);
});
G__31700.cljs$core$IFn$_invoke$arity$variadic = G__31700__delegate;
return G__31700;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__31703 = null;
if (arguments.length > 3) {
var G__31704__i = 0, G__31704__a = new Array(arguments.length -  3);
while (G__31704__i < G__31704__a.length) {G__31704__a[G__31704__i] = arguments[G__31704__i + 3]; ++G__31704__i;}
G__31703 = new cljs.core.IndexedSeq(G__31704__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__31703);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__31715 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31715) : k.call(null,G__31715));
})() < (function (){var G__31716 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31716) : k.call(null,G__31716));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__31717__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__31705_SHARP_,p2__31706_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__31705_SHARP_,p2__31706_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__31717 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__31718__i = 0, G__31718__a = new Array(arguments.length -  3);
while (G__31718__i < G__31718__a.length) {G__31718__a[G__31718__i] = arguments[G__31718__i + 3]; ++G__31718__i;}
  more = new cljs.core.IndexedSeq(G__31718__a,0);
} 
return G__31717__delegate.call(this,k,x,y,more);};
G__31717.cljs$lang$maxFixedArity = 3;
G__31717.cljs$lang$applyTo = (function (arglist__31719){
var k = cljs.core.first(arglist__31719);
arglist__31719 = cljs.core.next(arglist__31719);
var x = cljs.core.first(arglist__31719);
arglist__31719 = cljs.core.next(arglist__31719);
var y = cljs.core.first(arglist__31719);
var more = cljs.core.rest(arglist__31719);
return G__31717__delegate(k,x,y,more);
});
G__31717.cljs$core$IFn$_invoke$arity$variadic = G__31717__delegate;
return G__31717;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__31720 = null;
if (arguments.length > 3) {
var G__31721__i = 0, G__31721__a = new Array(arguments.length -  3);
while (G__31721__i < G__31721__a.length) {G__31721__a[G__31721__i] = arguments[G__31721__i + 3]; ++G__31721__i;}
G__31720 = new cljs.core.IndexedSeq(G__31721__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__31720);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__31738 = null;
var G__31738__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31738__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__31733 = result;
var G__31734 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31733,G__31734) : rf.call(null,G__31733,G__31734));
})());
})());
var G__31735 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31735) : rf.call(null,G__31735));
});
var G__31738__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__31736 = result;
var G__31737 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31736,G__31737) : rf.call(null,G__31736,G__31737));
} else {
return result;
}
});
G__31738 = function(result,input){
switch(arguments.length){
case 0:
return G__31738__0.call(this);
case 1:
return G__31738__1.call(this,result);
case 2:
return G__31738__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31738.cljs$core$IFn$_invoke$arity$0 = G__31738__0;
G__31738.cljs$core$IFn$_invoke$arity$1 = G__31738__1;
G__31738.cljs$core$IFn$_invoke$arity$2 = G__31738__2;
return G__31738;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__31751 = null;
var G__31751__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31751__1 = (function (result){
var G__31746 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31746) : rf.call(null,G__31746));
});
var G__31751__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__31747 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31747) : pred.call(null,G__31747));
})())){
var G__31748 = result;
var G__31749 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31748,G__31749) : rf.call(null,G__31748,G__31749));
} else {
return cljs.core.reduced(result);
}
});
G__31751 = function(result,input){
switch(arguments.length){
case 0:
return G__31751__0.call(this);
case 1:
return G__31751__1.call(this,result);
case 2:
return G__31751__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31751.cljs$core$IFn$_invoke$arity$0 = G__31751__0;
G__31751.cljs$core$IFn$_invoke$arity$1 = G__31751__1;
G__31751.cljs$core$IFn$_invoke$arity$2 = G__31751__2;
return G__31751;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.truth_((function (){var G__31750 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31750) : pred.call(null,G__31750));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__31756 = (function (){var G__31758 = cljs.core._entry_key(sc,e);
var G__31759 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31758,G__31759) : comp.call(null,G__31758,G__31759));
})();
var G__31757 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__31756,G__31757) : test.call(null,G__31756,G__31757));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__31763 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31763,(0),null);
var s = vec__31763;
if(cljs.core.truth_((function (){var G__31764 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__31764) : include.call(null,G__31764));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__31765 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31765,(0),null);
var s = vec__31765;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__31769 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31769,(0),null);
var s = vec__31769;
if(cljs.core.truth_((function (){var G__31770 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__31770) : include.call(null,G__31770));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__31771 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31771,(0),null);
var s = vec__31771;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__31772 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__31772) : Math.ceil.call(null,G__31772));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__14865__auto__ = self__.__hash;
if(!((h__14865__auto__ == null))){
return h__14865__auto__;
} else {
var h__14865__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__14865__auto____$1;

return h__14865__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__31773 = ret;
var G__31774 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31773,G__31774) : f.call(null,G__31773,G__31774));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__31775 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31775) : cljs.core.deref.call(null,G__31775));
} else {
var G__31776 = (i + self__.step);
var G__31777 = ret__$1;
i = G__31776;
ret = G__31777;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__31795 = null;
var G__31795__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31795__1 = (function (result){
var G__31792 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31792) : rf.call(null,G__31792));
});
var G__31795__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__31793 = result;
var G__31794 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31793,G__31794) : rf.call(null,G__31793,G__31794));
} else {
return result;
}
});
G__31795 = function(result,input){
switch(arguments.length){
case 0:
return G__31795__0.call(this);
case 1:
return G__31795__1.call(this,result);
case 2:
return G__31795__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31795.cljs$core$IFn$_invoke$arity$0 = G__31795__0;
G__31795.cljs$core$IFn$_invoke$arity$1 = G__31795__1;
G__31795.cljs$core$IFn$_invoke$arity$2 = G__31795__2;
return G__31795;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__31817 = null;
var G__31817__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31817__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__31808 = result;
var G__31809 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31808,G__31809) : rf.call(null,G__31808,G__31809));
})());
})());
var G__31810 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31810) : rf.call(null,G__31810));
});
var G__31817__2 = (function (result,input){
var pval = (function (){var G__31811 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31811) : cljs.core.deref.call(null,G__31811));
})();
var val = (function (){var G__31812 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31812) : f.call(null,G__31812));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__31813 = result;
var G__31814 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31813,G__31814) : rf.call(null,G__31813,G__31814));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__31817 = function(result,input){
switch(arguments.length){
case 0:
return G__31817__0.call(this);
case 1:
return G__31817__1.call(this,result);
case 2:
return G__31817__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31817.cljs$core$IFn$_invoke$arity$0 = G__31817__0;
G__31817.cljs$core$IFn$_invoke$arity$1 = G__31817__1;
G__31817.cljs$core$IFn$_invoke$arity$2 = G__31817__2;
return G__31817;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__31815 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31815) : f.call(null,G__31815));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4406__auto__){
return (function (p1__31796_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__31816 = p1__31796_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31816) : f.call(null,G__31816));
})());
});})(fst,fv,s,temp__4406__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__31826 = init;
var G__31827 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31826,G__31827) : f.call(null,G__31826,G__31827));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__31922 = null;
var G__31922__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__31922__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31880 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31880) : f.call(null,G__31880));
})()],null));
});
var G__31922__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31881 = x;
var G__31882 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31881,G__31882) : f.call(null,G__31881,G__31882));
})()],null));
});
var G__31922__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31883 = x;
var G__31884 = y;
var G__31885 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31883,G__31884,G__31885) : f.call(null,G__31883,G__31884,G__31885));
})()],null));
});
var G__31922__4 = (function() { 
var G__31923__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__31923 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31924__i = 0, G__31924__a = new Array(arguments.length -  3);
while (G__31924__i < G__31924__a.length) {G__31924__a[G__31924__i] = arguments[G__31924__i + 3]; ++G__31924__i;}
  args = new cljs.core.IndexedSeq(G__31924__a,0);
} 
return G__31923__delegate.call(this,x,y,z,args);};
G__31923.cljs$lang$maxFixedArity = 3;
G__31923.cljs$lang$applyTo = (function (arglist__31925){
var x = cljs.core.first(arglist__31925);
arglist__31925 = cljs.core.next(arglist__31925);
var y = cljs.core.first(arglist__31925);
arglist__31925 = cljs.core.next(arglist__31925);
var z = cljs.core.first(arglist__31925);
var args = cljs.core.rest(arglist__31925);
return G__31923__delegate(x,y,z,args);
});
G__31923.cljs$core$IFn$_invoke$arity$variadic = G__31923__delegate;
return G__31923;
})()
;
G__31922 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31922__0.call(this);
case 1:
return G__31922__1.call(this,x);
case 2:
return G__31922__2.call(this,x,y);
case 3:
return G__31922__3.call(this,x,y,z);
default:
var G__31926 = null;
if (arguments.length > 3) {
var G__31927__i = 0, G__31927__a = new Array(arguments.length -  3);
while (G__31927__i < G__31927__a.length) {G__31927__a[G__31927__i] = arguments[G__31927__i + 3]; ++G__31927__i;}
G__31926 = new cljs.core.IndexedSeq(G__31927__a,0);
}
return G__31922__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31922.cljs$lang$maxFixedArity = 3;
G__31922.cljs$lang$applyTo = G__31922__4.cljs$lang$applyTo;
G__31922.cljs$core$IFn$_invoke$arity$0 = G__31922__0;
G__31922.cljs$core$IFn$_invoke$arity$1 = G__31922__1;
G__31922.cljs$core$IFn$_invoke$arity$2 = G__31922__2;
G__31922.cljs$core$IFn$_invoke$arity$3 = G__31922__3;
G__31922.cljs$core$IFn$_invoke$arity$variadic = G__31922__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31922;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__31928 = null;
var G__31928__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__31928__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31886 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31886) : f.call(null,G__31886));
})(),(function (){var G__31887 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31887) : g.call(null,G__31887));
})()],null));
});
var G__31928__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31888 = x;
var G__31889 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31888,G__31889) : f.call(null,G__31888,G__31889));
})(),(function (){var G__31890 = x;
var G__31891 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__31890,G__31891) : g.call(null,G__31890,G__31891));
})()],null));
});
var G__31928__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31892 = x;
var G__31893 = y;
var G__31894 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31892,G__31893,G__31894) : f.call(null,G__31892,G__31893,G__31894));
})(),(function (){var G__31895 = x;
var G__31896 = y;
var G__31897 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__31895,G__31896,G__31897) : g.call(null,G__31895,G__31896,G__31897));
})()],null));
});
var G__31928__4 = (function() { 
var G__31929__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__31929 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31930__i = 0, G__31930__a = new Array(arguments.length -  3);
while (G__31930__i < G__31930__a.length) {G__31930__a[G__31930__i] = arguments[G__31930__i + 3]; ++G__31930__i;}
  args = new cljs.core.IndexedSeq(G__31930__a,0);
} 
return G__31929__delegate.call(this,x,y,z,args);};
G__31929.cljs$lang$maxFixedArity = 3;
G__31929.cljs$lang$applyTo = (function (arglist__31931){
var x = cljs.core.first(arglist__31931);
arglist__31931 = cljs.core.next(arglist__31931);
var y = cljs.core.first(arglist__31931);
arglist__31931 = cljs.core.next(arglist__31931);
var z = cljs.core.first(arglist__31931);
var args = cljs.core.rest(arglist__31931);
return G__31929__delegate(x,y,z,args);
});
G__31929.cljs$core$IFn$_invoke$arity$variadic = G__31929__delegate;
return G__31929;
})()
;
G__31928 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31928__0.call(this);
case 1:
return G__31928__1.call(this,x);
case 2:
return G__31928__2.call(this,x,y);
case 3:
return G__31928__3.call(this,x,y,z);
default:
var G__31932 = null;
if (arguments.length > 3) {
var G__31933__i = 0, G__31933__a = new Array(arguments.length -  3);
while (G__31933__i < G__31933__a.length) {G__31933__a[G__31933__i] = arguments[G__31933__i + 3]; ++G__31933__i;}
G__31932 = new cljs.core.IndexedSeq(G__31933__a,0);
}
return G__31928__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31932);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31928.cljs$lang$maxFixedArity = 3;
G__31928.cljs$lang$applyTo = G__31928__4.cljs$lang$applyTo;
G__31928.cljs$core$IFn$_invoke$arity$0 = G__31928__0;
G__31928.cljs$core$IFn$_invoke$arity$1 = G__31928__1;
G__31928.cljs$core$IFn$_invoke$arity$2 = G__31928__2;
G__31928.cljs$core$IFn$_invoke$arity$3 = G__31928__3;
G__31928.cljs$core$IFn$_invoke$arity$variadic = G__31928__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31928;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__31934 = null;
var G__31934__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__31934__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31898 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31898) : f.call(null,G__31898));
})(),(function (){var G__31899 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31899) : g.call(null,G__31899));
})(),(function (){var G__31900 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__31900) : h.call(null,G__31900));
})()],null));
});
var G__31934__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31901 = x;
var G__31902 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31901,G__31902) : f.call(null,G__31901,G__31902));
})(),(function (){var G__31903 = x;
var G__31904 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__31903,G__31904) : g.call(null,G__31903,G__31904));
})(),(function (){var G__31905 = x;
var G__31906 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__31905,G__31906) : h.call(null,G__31905,G__31906));
})()],null));
});
var G__31934__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31907 = x;
var G__31908 = y;
var G__31909 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31907,G__31908,G__31909) : f.call(null,G__31907,G__31908,G__31909));
})(),(function (){var G__31910 = x;
var G__31911 = y;
var G__31912 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__31910,G__31911,G__31912) : g.call(null,G__31910,G__31911,G__31912));
})(),(function (){var G__31913 = x;
var G__31914 = y;
var G__31915 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__31913,G__31914,G__31915) : h.call(null,G__31913,G__31914,G__31915));
})()],null));
});
var G__31934__4 = (function() { 
var G__31935__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__31935 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31936__i = 0, G__31936__a = new Array(arguments.length -  3);
while (G__31936__i < G__31936__a.length) {G__31936__a[G__31936__i] = arguments[G__31936__i + 3]; ++G__31936__i;}
  args = new cljs.core.IndexedSeq(G__31936__a,0);
} 
return G__31935__delegate.call(this,x,y,z,args);};
G__31935.cljs$lang$maxFixedArity = 3;
G__31935.cljs$lang$applyTo = (function (arglist__31937){
var x = cljs.core.first(arglist__31937);
arglist__31937 = cljs.core.next(arglist__31937);
var y = cljs.core.first(arglist__31937);
arglist__31937 = cljs.core.next(arglist__31937);
var z = cljs.core.first(arglist__31937);
var args = cljs.core.rest(arglist__31937);
return G__31935__delegate(x,y,z,args);
});
G__31935.cljs$core$IFn$_invoke$arity$variadic = G__31935__delegate;
return G__31935;
})()
;
G__31934 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31934__0.call(this);
case 1:
return G__31934__1.call(this,x);
case 2:
return G__31934__2.call(this,x,y);
case 3:
return G__31934__3.call(this,x,y,z);
default:
var G__31938 = null;
if (arguments.length > 3) {
var G__31939__i = 0, G__31939__a = new Array(arguments.length -  3);
while (G__31939__i < G__31939__a.length) {G__31939__a[G__31939__i] = arguments[G__31939__i + 3]; ++G__31939__i;}
G__31938 = new cljs.core.IndexedSeq(G__31939__a,0);
}
return G__31934__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31938);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31934.cljs$lang$maxFixedArity = 3;
G__31934.cljs$lang$applyTo = G__31934__4.cljs$lang$applyTo;
G__31934.cljs$core$IFn$_invoke$arity$0 = G__31934__0;
G__31934.cljs$core$IFn$_invoke$arity$1 = G__31934__1;
G__31934.cljs$core$IFn$_invoke$arity$2 = G__31934__2;
G__31934.cljs$core$IFn$_invoke$arity$3 = G__31934__3;
G__31934.cljs$core$IFn$_invoke$arity$variadic = G__31934__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31934;
})()
});
var juxt__4 = (function() { 
var G__31940__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__31941 = null;
var G__31941__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31828_SHARP_,p2__31829_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31828_SHARP_,(function (){return (p2__31829_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__31829_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__31829_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31941__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31830_SHARP_,p2__31831_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31830_SHARP_,(function (){var G__31916 = x;
return (p2__31831_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__31831_SHARP_.cljs$core$IFn$_invoke$arity$1(G__31916) : p2__31831_SHARP_.call(null,G__31916));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31941__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31832_SHARP_,p2__31833_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31832_SHARP_,(function (){var G__31917 = x;
var G__31918 = y;
return (p2__31833_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__31833_SHARP_.cljs$core$IFn$_invoke$arity$2(G__31917,G__31918) : p2__31833_SHARP_.call(null,G__31917,G__31918));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31941__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31834_SHARP_,p2__31835_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31834_SHARP_,(function (){var G__31919 = x;
var G__31920 = y;
var G__31921 = z;
return (p2__31835_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__31835_SHARP_.cljs$core$IFn$_invoke$arity$3(G__31919,G__31920,G__31921) : p2__31835_SHARP_.call(null,G__31919,G__31920,G__31921));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31941__4 = (function() { 
var G__31942__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31836_SHARP_,p2__31837_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31836_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__31837_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__31942 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31943__i = 0, G__31943__a = new Array(arguments.length -  3);
while (G__31943__i < G__31943__a.length) {G__31943__a[G__31943__i] = arguments[G__31943__i + 3]; ++G__31943__i;}
  args = new cljs.core.IndexedSeq(G__31943__a,0);
} 
return G__31942__delegate.call(this,x,y,z,args);};
G__31942.cljs$lang$maxFixedArity = 3;
G__31942.cljs$lang$applyTo = (function (arglist__31944){
var x = cljs.core.first(arglist__31944);
arglist__31944 = cljs.core.next(arglist__31944);
var y = cljs.core.first(arglist__31944);
arglist__31944 = cljs.core.next(arglist__31944);
var z = cljs.core.first(arglist__31944);
var args = cljs.core.rest(arglist__31944);
return G__31942__delegate(x,y,z,args);
});
G__31942.cljs$core$IFn$_invoke$arity$variadic = G__31942__delegate;
return G__31942;
})()
;
G__31941 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31941__0.call(this);
case 1:
return G__31941__1.call(this,x);
case 2:
return G__31941__2.call(this,x,y);
case 3:
return G__31941__3.call(this,x,y,z);
default:
var G__31945 = null;
if (arguments.length > 3) {
var G__31946__i = 0, G__31946__a = new Array(arguments.length -  3);
while (G__31946__i < G__31946__a.length) {G__31946__a[G__31946__i] = arguments[G__31946__i + 3]; ++G__31946__i;}
G__31945 = new cljs.core.IndexedSeq(G__31946__a,0);
}
return G__31941__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31945);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31941.cljs$lang$maxFixedArity = 3;
G__31941.cljs$lang$applyTo = G__31941__4.cljs$lang$applyTo;
G__31941.cljs$core$IFn$_invoke$arity$0 = G__31941__0;
G__31941.cljs$core$IFn$_invoke$arity$1 = G__31941__1;
G__31941.cljs$core$IFn$_invoke$arity$2 = G__31941__2;
G__31941.cljs$core$IFn$_invoke$arity$3 = G__31941__3;
G__31941.cljs$core$IFn$_invoke$arity$variadic = G__31941__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31941;
})()
;})(fs__$1))
};
var G__31940 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__31947__i = 0, G__31947__a = new Array(arguments.length -  3);
while (G__31947__i < G__31947__a.length) {G__31947__a[G__31947__i] = arguments[G__31947__i + 3]; ++G__31947__i;}
  fs = new cljs.core.IndexedSeq(G__31947__a,0);
} 
return G__31940__delegate.call(this,f,g,h,fs);};
G__31940.cljs$lang$maxFixedArity = 3;
G__31940.cljs$lang$applyTo = (function (arglist__31948){
var f = cljs.core.first(arglist__31948);
arglist__31948 = cljs.core.next(arglist__31948);
var g = cljs.core.first(arglist__31948);
arglist__31948 = cljs.core.next(arglist__31948);
var h = cljs.core.first(arglist__31948);
var fs = cljs.core.rest(arglist__31948);
return G__31940__delegate(f,g,h,fs);
});
G__31940.cljs$core$IFn$_invoke$arity$variadic = G__31940__delegate;
return G__31940;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__31949 = null;
if (arguments.length > 3) {
var G__31950__i = 0, G__31950__a = new Array(arguments.length -  3);
while (G__31950__i < G__31950__a.length) {G__31950__a[G__31950__i] = arguments[G__31950__i + 3]; ++G__31950__i;}
G__31949 = new cljs.core.IndexedSeq(G__31950__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__31949);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__31951 = cljs.core.next(coll);
coll = G__31951;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__31952 = (n - (1));
var G__31953 = cljs.core.next(coll);
n = G__31952;
coll = G__31953;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__31957 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31957,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31957,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31957,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_31965 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__31966_31972 = cljs.core.first(coll);
var G__31967_31973 = writer;
var G__31968_31974 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__31966_31972,G__31967_31973,G__31968_31974) : print_one.call(null,G__31966_31972,G__31967_31973,G__31968_31974));
} else {
}

var coll_31975__$1 = cljs.core.next(coll);
var n_31976 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_31975__$1) && (((n_31976 == null)) || (!((n_31976 === (0)))))){
cljs.core._write(writer,sep);

var G__31969_31977 = cljs.core.first(coll_31975__$1);
var G__31970_31978 = writer;
var G__31971_31979 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__31969_31977,G__31970_31978,G__31971_31979) : print_one.call(null,G__31969_31977,G__31970_31978,G__31971_31979));

var G__31980 = cljs.core.next(coll_31975__$1);
var G__31981 = (n_31976 - (1));
coll_31975__$1 = G__31980;
n_31976 = G__31981;
continue;
} else {
if((cljs.core.seq(coll_31975__$1)) && ((n_31976 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_31965;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__31986 = cljs.core.seq(ss);
var chunk__31987 = null;
var count__31988 = (0);
var i__31989 = (0);
while(true){
if((i__31989 < count__31988)){
var s = chunk__31987.cljs$core$IIndexed$_nth$arity$2(null,i__31989);
cljs.core._write(writer,s);

var G__31990 = seq__31986;
var G__31991 = chunk__31987;
var G__31992 = count__31988;
var G__31993 = (i__31989 + (1));
seq__31986 = G__31990;
chunk__31987 = G__31991;
count__31988 = G__31992;
i__31989 = G__31993;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31986);
if(temp__4406__auto__){
var seq__31986__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31986__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__31986__$1);
var G__31994 = cljs.core.chunk_rest(seq__31986__$1);
var G__31995 = c__15231__auto__;
var G__31996 = cljs.core.count(c__15231__auto__);
var G__31997 = (0);
seq__31986 = G__31994;
chunk__31987 = G__31995;
count__31988 = G__31996;
i__31989 = G__31997;
continue;
} else {
var s = cljs.core.first(seq__31986__$1);
cljs.core._write(writer,s);

var G__31998 = cljs.core.next(seq__31986__$1);
var G__31999 = null;
var G__32000 = (0);
var G__32001 = (0);
seq__31986 = G__31998;
chunk__31987 = G__31999;
count__31988 = G__32000;
i__31989 = G__32001;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__32002__i = 0, G__32002__a = new Array(arguments.length -  1);
while (G__32002__i < G__32002__a.length) {G__32002__a[G__32002__i] = arguments[G__32002__i + 1]; ++G__32002__i;}
  ss = new cljs.core.IndexedSeq(G__32002__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__32003){
var writer = cljs.core.first(arglist__32003);
var ss = cljs.core.rest(arglist__32003);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj32005 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj32005;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__32008 = "[\\\\\"\b\f\n\r\t]";
var G__32009 = "g";
return RegExp(G__32008,G__32009);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__14432__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__14432__auto__)){
var and__14432__auto____$1 = (function (){var G__32023 = obj;
if(G__32023){
var bit__15125__auto__ = (G__32023.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__15125__auto__) || (G__32023.cljs$core$IMeta$)){
return true;
} else {
if((!G__32023.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32023);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32023);
}
})();
if(and__14432__auto____$1){
return cljs.core.meta(obj);
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__32024 = obj;
if(G__32024){
var bit__15118__auto__ = (G__32024.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__15118__auto__) || (G__32024.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__32025 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__32026 = pr_writer;
var G__32027 = writer;
var G__32028 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__32025,G__32026,G__32027,G__32028) : cljs.core.print_map.call(null,G__32025,G__32026,G__32027,G__32028));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__32029 = obj;
return goog.isString(G__32029);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__32031 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__32031;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__32030 = obj;
if(G__32030){
var bit__15125__auto__ = (G__32030.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__15125__auto__) || (G__32030.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__32030.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__32030);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__32030);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__32036 = cljs.core.seq(cljs.core.next(objs));
var chunk__32037 = null;
var count__32038 = (0);
var i__32039 = (0);
while(true){
if((i__32039 < count__32038)){
var obj = chunk__32037.cljs$core$IIndexed$_nth$arity$2(null,i__32039);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__32040 = seq__32036;
var G__32041 = chunk__32037;
var G__32042 = count__32038;
var G__32043 = (i__32039 + (1));
seq__32036 = G__32040;
chunk__32037 = G__32041;
count__32038 = G__32042;
i__32039 = G__32043;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__32036);
if(temp__4406__auto__){
var seq__32036__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__32036__$1)){
var c__15231__auto__ = cljs.core.chunk_first(seq__32036__$1);
var G__32044 = cljs.core.chunk_rest(seq__32036__$1);
var G__32045 = c__15231__auto__;
var G__32046 = cljs.core.count(c__15231__auto__);
var G__32047 = (0);
seq__32036 = G__32044;
chunk__32037 = G__32045;
count__32038 = G__32046;
i__32039 = G__32047;
continue;
} else {
var obj = cljs.core.first(seq__32036__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__32048 = cljs.core.next(seq__32036__$1);
var G__32049 = null;
var G__32050 = (0);
var G__32051 = (0);
seq__32036 = G__32048;
chunk__32037 = G__32049;
count__32038 = G__32050;
i__32039 = G__32051;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32052__i = 0, G__32052__a = new Array(arguments.length -  0);
while (G__32052__i < G__32052__a.length) {G__32052__a[G__32052__i] = arguments[G__32052__i + 0]; ++G__32052__i;}
  objs = new cljs.core.IndexedSeq(G__32052__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__32053){
var objs = cljs.core.seq(arglist__32053);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32054__i = 0, G__32054__a = new Array(arguments.length -  0);
while (G__32054__i < G__32054__a.length) {G__32054__a[G__32054__i] = arguments[G__32054__i + 0]; ++G__32054__i;}
  objs = new cljs.core.IndexedSeq(G__32054__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__32055){
var objs = cljs.core.seq(arglist__32055);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32056__i = 0, G__32056__a = new Array(arguments.length -  0);
while (G__32056__i < G__32056__a.length) {G__32056__a[G__32056__i] = arguments[G__32056__i + 0]; ++G__32056__i;}
  objs = new cljs.core.IndexedSeq(G__32056__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__32057){
var objs = cljs.core.seq(arglist__32057);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32058__i = 0, G__32058__a = new Array(arguments.length -  0);
while (G__32058__i < G__32058__a.length) {G__32058__a[G__32058__i] = arguments[G__32058__i + 0]; ++G__32058__i;}
  objs = new cljs.core.IndexedSeq(G__32058__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__32059){
var objs = cljs.core.seq(arglist__32059);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32060__i = 0, G__32060__a = new Array(arguments.length -  0);
while (G__32060__i < G__32060__a.length) {G__32060__a[G__32060__i] = arguments[G__32060__i + 0]; ++G__32060__i;}
  objs = new cljs.core.IndexedSeq(G__32060__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__32061){
var objs = cljs.core.seq(arglist__32061);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32062__i = 0, G__32062__a = new Array(arguments.length -  0);
while (G__32062__i < G__32062__a.length) {G__32062__a[G__32062__i] = arguments[G__32062__i + 0]; ++G__32062__i;}
  objs = new cljs.core.IndexedSeq(G__32062__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__32063){
var objs = cljs.core.seq(arglist__32063);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32064__i = 0, G__32064__a = new Array(arguments.length -  0);
while (G__32064__i < G__32064__a.length) {G__32064__a[G__32064__i] = arguments[G__32064__i + 0]; ++G__32064__i;}
  objs = new cljs.core.IndexedSeq(G__32064__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__32065){
var objs = cljs.core.seq(arglist__32065);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32066__i = 0, G__32066__a = new Array(arguments.length -  0);
while (G__32066__i < G__32066__a.length) {G__32066__a[G__32066__i] = arguments[G__32066__i + 0]; ++G__32066__i;}
  objs = new cljs.core.IndexedSeq(G__32066__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__32067){
var objs = cljs.core.seq(arglist__32067);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__32074_32080 = cljs.core.key(e);
var G__32075_32081 = w;
var G__32076_32082 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__32074_32080,G__32075_32081,G__32076_32082) : print_one.call(null,G__32074_32080,G__32075_32081,G__32076_32082));

cljs.core._write(w," ");

var G__32077 = cljs.core.val(e);
var G__32078 = w;
var G__32079 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__32077,G__32078,G__32079) : print_one.call(null,G__32077,G__32078,G__32079));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__32083__i = 0, G__32083__a = new Array(arguments.length -  2);
while (G__32083__i < G__32083__a.length) {G__32083__a[G__32083__i] = arguments[G__32083__i + 2]; ++G__32083__i;}
  args = new cljs.core.IndexedSeq(G__32083__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__32084){
var iref = cljs.core.first(arglist__32084);
arglist__32084 = cljs.core.next(arglist__32084);
var f = cljs.core.first(arglist__32084);
var args = cljs.core.rest(arglist__32084);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__32087 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__32087) : cljs.core.atom.call(null,G__32087));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__32089 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32089) : cljs.core.deref.call(null,G__32089));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__32090_SHARP_,p2__32091_SHARP_){
var ret = (function (){var G__32094 = p1__32090_SHARP_;
var G__32095 = p2__32091_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32094,G__32095) : rf.call(null,G__32094,G__32095));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__32098 = null;
var G__32098__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32098__1 = (function (result){
var G__32097 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32097) : rf.call(null,G__32097));
});
var G__32098__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__32098 = function(result,input){
switch(arguments.length){
case 0:
return G__32098__0.call(this);
case 1:
return G__32098__1.call(this,result);
case 2:
return G__32098__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32098.cljs$core$IFn$_invoke$arity$0 = G__32098__0;
G__32098.cljs$core$IFn$_invoke$arity$1 = G__32098__1;
G__32098.cljs$core$IFn$_invoke$arity$2 = G__32098__2;
return G__32098;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__32107 = null;
var G__32107__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32107__1 = (function (result){
var G__32103 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32103) : rf.call(null,G__32103));
});
var G__32107__2 = (function (result,input){
var prior = (function (){var G__32104 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32104) : cljs.core.deref.call(null,G__32104));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__32105 = result;
var G__32106 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32105,G__32106) : rf.call(null,G__32105,G__32106));
}
});
G__32107 = function(result,input){
switch(arguments.length){
case 0:
return G__32107__0.call(this);
case 1:
return G__32107__1.call(this,result);
case 2:
return G__32107__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32107.cljs$core$IFn$_invoke$arity$0 = G__32107__0;
G__32107.cljs$core$IFn$_invoke$arity$1 = G__32107__1;
G__32107.cljs$core$IFn$_invoke$arity$2 = G__32107__2;
return G__32107;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15422__auto__ = this;
return cljs.core.es6_iterator(this__15422__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__32109_SHARP_,p2__32108_SHARP_){
var G__32111 = p2__32108_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__32111) : proc.call(null,G__32111));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj32113 = {};
return obj32113;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._clj__GT_js[(function (){var G__32117 = x__15088__auto__;
return goog.typeOf(G__32117);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._key__GT_js[(function (){var G__32121 = x__15088__auto__;
return goog.typeOf(G__32121);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__32124 = k;
if(G__32124){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto__ = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return G__32124.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__32124.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32124);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32124);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__32125 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__32125) : cljs.core.clj__GT_js.call(null,G__32125));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__32141 = x;
if(G__32141){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto__ = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return G__32141.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__32141.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32141);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32141);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj32143 = {};
return obj32143;
})();
var seq__32144_32154 = cljs.core.seq(x);
var chunk__32145_32155 = null;
var count__32146_32156 = (0);
var i__32147_32157 = (0);
while(true){
if((i__32147_32157 < count__32146_32156)){
var vec__32148_32158 = chunk__32145_32155.cljs$core$IIndexed$_nth$arity$2(null,i__32147_32157);
var k_32159 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32148_32158,(0),null);
var v_32160 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32148_32158,(1),null);
(m[cljs.core.key__GT_js(k_32159)] = clj__GT_js(v_32160));

var G__32161 = seq__32144_32154;
var G__32162 = chunk__32145_32155;
var G__32163 = count__32146_32156;
var G__32164 = (i__32147_32157 + (1));
seq__32144_32154 = G__32161;
chunk__32145_32155 = G__32162;
count__32146_32156 = G__32163;
i__32147_32157 = G__32164;
continue;
} else {
var temp__4406__auto___32165 = cljs.core.seq(seq__32144_32154);
if(temp__4406__auto___32165){
var seq__32144_32166__$1 = temp__4406__auto___32165;
if(cljs.core.chunked_seq_QMARK_(seq__32144_32166__$1)){
var c__15231__auto___32167 = cljs.core.chunk_first(seq__32144_32166__$1);
var G__32168 = cljs.core.chunk_rest(seq__32144_32166__$1);
var G__32169 = c__15231__auto___32167;
var G__32170 = cljs.core.count(c__15231__auto___32167);
var G__32171 = (0);
seq__32144_32154 = G__32168;
chunk__32145_32155 = G__32169;
count__32146_32156 = G__32170;
i__32147_32157 = G__32171;
continue;
} else {
var vec__32149_32172 = cljs.core.first(seq__32144_32166__$1);
var k_32173 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32149_32172,(0),null);
var v_32174 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32149_32172,(1),null);
(m[cljs.core.key__GT_js(k_32173)] = clj__GT_js(v_32174));

var G__32175 = cljs.core.next(seq__32144_32166__$1);
var G__32176 = null;
var G__32177 = (0);
var G__32178 = (0);
seq__32144_32154 = G__32175;
chunk__32145_32155 = G__32176;
count__32146_32156 = G__32177;
i__32147_32157 = G__32178;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__32150_32179 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__32151_32180 = null;
var count__32152_32181 = (0);
var i__32153_32182 = (0);
while(true){
if((i__32153_32182 < count__32152_32181)){
var x_32183__$1 = chunk__32151_32180.cljs$core$IIndexed$_nth$arity$2(null,i__32153_32182);
arr.push(x_32183__$1);

var G__32184 = seq__32150_32179;
var G__32185 = chunk__32151_32180;
var G__32186 = count__32152_32181;
var G__32187 = (i__32153_32182 + (1));
seq__32150_32179 = G__32184;
chunk__32151_32180 = G__32185;
count__32152_32181 = G__32186;
i__32153_32182 = G__32187;
continue;
} else {
var temp__4406__auto___32188 = cljs.core.seq(seq__32150_32179);
if(temp__4406__auto___32188){
var seq__32150_32189__$1 = temp__4406__auto___32188;
if(cljs.core.chunked_seq_QMARK_(seq__32150_32189__$1)){
var c__15231__auto___32190 = cljs.core.chunk_first(seq__32150_32189__$1);
var G__32191 = cljs.core.chunk_rest(seq__32150_32189__$1);
var G__32192 = c__15231__auto___32190;
var G__32193 = cljs.core.count(c__15231__auto___32190);
var G__32194 = (0);
seq__32150_32179 = G__32191;
chunk__32151_32180 = G__32192;
count__32152_32181 = G__32193;
i__32153_32182 = G__32194;
continue;
} else {
var x_32195__$1 = cljs.core.first(seq__32150_32189__$1);
arr.push(x_32195__$1);

var G__32196 = cljs.core.next(seq__32150_32189__$1);
var G__32197 = null;
var G__32198 = (0);
var G__32199 = (0);
seq__32150_32179 = G__32196;
chunk__32151_32180 = G__32197;
count__32152_32181 = G__32198;
i__32153_32182 = G__32199;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj32201 = {};
return obj32201;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__14432__auto__ = x;
if(and__14432__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__14432__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__15088__auto__ = (((x == null))?null:x);
return (function (){var or__14444__auto__ = (cljs.core._js__GT_clj[(function (){var G__32205 = x__15088__auto__;
return goog.typeOf(G__32205);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__32262__delegate = function (x,opts){
var map__32235 = opts;
var map__32235__$1 = ((cljs.core.seq_QMARK_(map__32235))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32235):map__32235);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32235__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__32235,map__32235__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__32251 = x__$1;
if(G__32251){
var bit__15125__auto__ = null;
if(cljs.core.truth_((function (){var or__14444__auto__ = bit__15125__auto__;
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return G__32251.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__32251.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__32251);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__32251);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__15200__auto__ = ((function (map__32235,map__32235__$1,keywordize_keys,keyfn){
return (function iter__32252(s__32253){
return (new cljs.core.LazySeq(null,((function (map__32235,map__32235__$1,keywordize_keys,keyfn){
return (function (){
var s__32253__$1 = s__32253;
while(true){
var temp__4406__auto__ = cljs.core.seq(s__32253__$1);
if(temp__4406__auto__){
var s__32253__$2 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s__32253__$2)){
var c__15198__auto__ = cljs.core.chunk_first(s__32253__$2);
var size__15199__auto__ = cljs.core.count(c__15198__auto__);
var b__32255 = cljs.core.chunk_buffer(size__15199__auto__);
if((function (){var i__32254 = (0);
while(true){
if((i__32254 < size__15199__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__15198__auto__,i__32254);
cljs.core.chunk_append(b__32255,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__32260 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32260) : keyfn.call(null,G__32260));
})(),thisfn((x__$1[k]))], null));

var G__32263 = (i__32254 + (1));
i__32254 = G__32263;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__32255),iter__32252(cljs.core.chunk_rest(s__32253__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__32255),null);
}
} else {
var k = cljs.core.first(s__32253__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__32261 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32261) : keyfn.call(null,G__32261));
})(),thisfn((x__$1[k]))], null),iter__32252(cljs.core.rest(s__32253__$2)));
}
} else {
return null;
}
break;
}
});})(map__32235,map__32235__$1,keywordize_keys,keyfn))
,null,null));
});})(map__32235,map__32235__$1,keywordize_keys,keyfn))
;
return iter__15200__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__32235,map__32235__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__32262 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__32264__i = 0, G__32264__a = new Array(arguments.length -  1);
while (G__32264__i < G__32264__a.length) {G__32264__a[G__32264__i] = arguments[G__32264__i + 1]; ++G__32264__i;}
  opts = new cljs.core.IndexedSeq(G__32264__a,0);
} 
return G__32262__delegate.call(this,x,opts);};
G__32262.cljs$lang$maxFixedArity = 1;
G__32262.cljs$lang$applyTo = (function (arglist__32265){
var x = cljs.core.first(arglist__32265);
var opts = cljs.core.rest(arglist__32265);
return G__32262__delegate(x,opts);
});
G__32262.cljs$core$IFn$_invoke$arity$variadic = G__32262__delegate;
return G__32262;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__32266 = null;
if (arguments.length > 1) {
var G__32267__i = 0, G__32267__a = new Array(arguments.length -  1);
while (G__32267__i < G__32267__a.length) {G__32267__a[G__32267__i] = arguments[G__32267__i + 1]; ++G__32267__i;}
G__32266 = new cljs.core.IndexedSeq(G__32267__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__32266);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__32270 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__32270) : cljs.core.atom.call(null,G__32270));
})();
return ((function (mem){
return (function() { 
var G__32272__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__32271 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32271) : cljs.core.deref.call(null,G__32271));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__32272 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32273__i = 0, G__32273__a = new Array(arguments.length -  0);
while (G__32273__i < G__32273__a.length) {G__32273__a[G__32273__i] = arguments[G__32273__i + 0]; ++G__32273__i;}
  args = new cljs.core.IndexedSeq(G__32273__a,0);
} 
return G__32272__delegate.call(this,args);};
G__32272.cljs$lang$maxFixedArity = 0;
G__32272.cljs$lang$applyTo = (function (arglist__32274){
var args = cljs.core.seq(arglist__32274);
return G__32272__delegate(args);
});
G__32272.cljs$core$IFn$_invoke$arity$variadic = G__32272__delegate;
return G__32272;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__32276 = ret;
f = G__32276;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__32277__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__32277 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__32278__i = 0, G__32278__a = new Array(arguments.length -  1);
while (G__32278__i < G__32278__a.length) {G__32278__a[G__32278__i] = arguments[G__32278__i + 1]; ++G__32278__i;}
  args = new cljs.core.IndexedSeq(G__32278__a,0);
} 
return G__32277__delegate.call(this,f,args);};
G__32277.cljs$lang$maxFixedArity = 1;
G__32277.cljs$lang$applyTo = (function (arglist__32279){
var f = cljs.core.first(arglist__32279);
var args = cljs.core.rest(arglist__32279);
return G__32277__delegate(f,args);
});
G__32277.cljs$core$IFn$_invoke$arity$variadic = G__32277__delegate;
return G__32277;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__32280 = null;
if (arguments.length > 1) {
var G__32281__i = 0, G__32281__a = new Array(arguments.length -  1);
while (G__32281__i < G__32281__a.length) {G__32281__a[G__32281__i] = arguments[G__32281__i + 1]; ++G__32281__i;}
G__32280 = new cljs.core.IndexedSeq(G__32281__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__32280);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__32284 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__32284) : Math.floor.call(null,G__32284));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__32286 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32286) : f.call(null,G__32286));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__32288 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__32288) : cljs.core.atom.call(null,G__32288));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__32289__i = 0, G__32289__a = new Array(arguments.length -  1);
while (G__32289__i < G__32289__a.length) {G__32289__a[G__32289__i] = arguments[G__32289__i + 1]; ++G__32289__i;}
  args = new cljs.core.IndexedSeq(G__32289__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__32290){
var f = cljs.core.first(arglist__32290);
var args = cljs.core.rest(arglist__32290);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__32355 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32355) : cljs.core.deref.call(null,G__32355));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__14444__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
var and__14432__auto__ = cljs.core.vector_QMARK_(parent);
if(and__14432__auto__){
var and__14432__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__14432__auto____$1){
var and__14432__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__14432__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__32380 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__32378 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__32378) : child.call(null,G__32378));
})(),(function (){var G__32379 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__32379) : parent.call(null,G__32379));
})());
var G__32381 = (i + (1));
ret = G__32380;
i = G__32381;
continue;
}
break;
}
} else {
return and__14432__auto____$2;
}
} else {
return and__14432__auto____$1;
}
} else {
return and__14432__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__32385 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32385) : cljs.core.deref.call(null,G__32385));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__32389 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32389) : cljs.core.deref.call(null,G__32389));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__32393 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32393) : cljs.core.deref.call(null,G__32393));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__32402 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__32402) : targets.call(null,G__32402));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__32403 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__32403) : sources.call(null,G__32403));
})()));
});})(tp,td,ta))
;
var or__14444__auto__ = ((cljs.core.contains_QMARK_((function (){var G__32407 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__32407) : tp.call(null,G__32407));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__32408 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__32408) : ta.call(null,G__32408));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__32409 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__32409) : ta.call(null,G__32409));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__32416 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__32416) : parentMap.call(null,G__32416));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__32417 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__32417) : parentMap.call(null,G__32417));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__32410_SHARP_){
return cljs.core.cons(cljs.core.first(p1__32410_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__32410_SHARP_),cljs.core.second(p1__32410_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__32418 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__32418) : parentMap.call(null,G__32418));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__32411_SHARP_,p2__32412_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__32411_SHARP_,p2__32412_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__32421 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32421) : cljs.core.deref.call(null,G__32421));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__32422 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32422) : cljs.core.deref.call(null,G__32422));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__32438 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32438) : cljs.core.deref.call(null,G__32438));
})().call(null,x);
var or__14444__auto__ = (cljs.core.truth_((function (){var and__14432__auto__ = xprefs;
if(cljs.core.truth_(and__14432__auto__)){
var G__32440 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__32440) : xprefs.call(null,G__32440));
} else {
return and__14432__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__32441 = cljs.core.rest(ps);
ps = G__32441;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__14444__auto____$1)){
return or__14444__auto____$1;
} else {
var or__14444__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__32442 = cljs.core.rest(ps);
ps = G__32442;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__14444__auto____$2)){
return or__14444__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__14444__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__14444__auto__)){
return or__14444__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__32456){
var vec__32457 = p__32456;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32457,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32457,(1),null);
var e = vec__32457;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__32458 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32458) : cljs.core.deref.call(null,G__32458));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__14444__auto__ = (be == null);
if(or__14444__auto__){
return or__14444__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__32459 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32459) : cljs.core.deref.call(null,G__32459));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__32460 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32460) : cljs.core.deref.call(null,G__32460));
})(),(function (){var G__32461 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32461) : cljs.core.deref.call(null,G__32461));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj32463 = {};
return obj32463;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._reset[(function (){var G__32467 = x__15088__auto__;
return goog.typeOf(G__32467);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._reset["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._add_method[(function (){var G__32471 = x__15088__auto__;
return goog.typeOf(G__32471);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._add_method["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._remove_method[(function (){var G__32475 = x__15088__auto__;
return goog.typeOf(G__32475);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._remove_method["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._prefer_method[(function (){var G__32479 = x__15088__auto__;
return goog.typeOf(G__32479);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._get_method[(function (){var G__32483 = x__15088__auto__;
return goog.typeOf(G__32483);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._get_method["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._methods[(function (){var G__32487 = x__15088__auto__;
return goog.typeOf(G__32487);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._methods["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__14432__auto__ = mf;
if(and__14432__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__14432__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__15088__auto__ = (((mf == null))?null:mf);
return (function (){var or__14444__auto__ = (cljs.core._prefers[(function (){var G__32491 = x__15088__auto__;
return goog.typeOf(G__32491);
})()]);
if(or__14444__auto__){
return or__14444__auto__;
} else {
var or__14444__auto____$1 = (cljs.core._prefers["_"]);
if(or__14444__auto____$1){
return or__14444__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__32493 = this$__$1;
return goog.getUid(G__32493);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__32494 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32494) : cljs.core.deref.call(null,G__32494));
})(),(function (){var G__32495 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32495) : cljs.core.deref.call(null,G__32495));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4404__auto__ = (function (){var G__32496 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32496) : cljs.core.deref.call(null,G__32496));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4404__auto__)){
var target_fn = temp__4404__auto__;
return target_fn;
} else {
var temp__4404__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4404__auto____$1)){
var target_fn = temp__4404__auto____$1;
return target_fn;
} else {
return (function (){var G__32497 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32497) : cljs.core.deref.call(null,G__32497));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__32498 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32498) : cljs.core.deref.call(null,G__32498));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__32499 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32499) : cljs.core.deref.call(null,G__32499));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__33340 = null;
var G__33340__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__33340__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32500 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__32500) : self__.dispatch_fn.call(null,G__32500));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32501 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__32501) : target_fn.call(null,G__32501));
});
var G__33340__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32502 = a;
var G__32503 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__32502,G__32503) : self__.dispatch_fn.call(null,G__32502,G__32503));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32504 = a;
var G__32505 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__32504,G__32505) : target_fn.call(null,G__32504,G__32505));
});
var G__33340__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32506 = a;
var G__32507 = b;
var G__32508 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__32506,G__32507,G__32508) : self__.dispatch_fn.call(null,G__32506,G__32507,G__32508));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32509 = a;
var G__32510 = b;
var G__32511 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__32509,G__32510,G__32511) : target_fn.call(null,G__32509,G__32510,G__32511));
});
var G__33340__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32512 = a;
var G__32513 = b;
var G__32514 = c;
var G__32515 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__32512,G__32513,G__32514,G__32515) : self__.dispatch_fn.call(null,G__32512,G__32513,G__32514,G__32515));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32516 = a;
var G__32517 = b;
var G__32518 = c;
var G__32519 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__32516,G__32517,G__32518,G__32519) : target_fn.call(null,G__32516,G__32517,G__32518,G__32519));
});
var G__33340__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32520 = a;
var G__32521 = b;
var G__32522 = c;
var G__32523 = d;
var G__32524 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__32520,G__32521,G__32522,G__32523,G__32524) : self__.dispatch_fn.call(null,G__32520,G__32521,G__32522,G__32523,G__32524));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32525 = a;
var G__32526 = b;
var G__32527 = c;
var G__32528 = d;
var G__32529 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__32525,G__32526,G__32527,G__32528,G__32529) : target_fn.call(null,G__32525,G__32526,G__32527,G__32528,G__32529));
});
var G__33340__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32530 = a;
var G__32531 = b;
var G__32532 = c;
var G__32533 = d;
var G__32534 = e;
var G__32535 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__32530,G__32531,G__32532,G__32533,G__32534,G__32535) : self__.dispatch_fn.call(null,G__32530,G__32531,G__32532,G__32533,G__32534,G__32535));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32536 = a;
var G__32537 = b;
var G__32538 = c;
var G__32539 = d;
var G__32540 = e;
var G__32541 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__32536,G__32537,G__32538,G__32539,G__32540,G__32541) : target_fn.call(null,G__32536,G__32537,G__32538,G__32539,G__32540,G__32541));
});
var G__33340__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32542 = a;
var G__32543 = b;
var G__32544 = c;
var G__32545 = d;
var G__32546 = e;
var G__32547 = f;
var G__32548 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__32542,G__32543,G__32544,G__32545,G__32546,G__32547,G__32548) : self__.dispatch_fn.call(null,G__32542,G__32543,G__32544,G__32545,G__32546,G__32547,G__32548));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32549 = a;
var G__32550 = b;
var G__32551 = c;
var G__32552 = d;
var G__32553 = e;
var G__32554 = f;
var G__32555 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__32549,G__32550,G__32551,G__32552,G__32553,G__32554,G__32555) : target_fn.call(null,G__32549,G__32550,G__32551,G__32552,G__32553,G__32554,G__32555));
});
var G__33340__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32556 = a;
var G__32557 = b;
var G__32558 = c;
var G__32559 = d;
var G__32560 = e;
var G__32561 = f;
var G__32562 = g;
var G__32563 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__32556,G__32557,G__32558,G__32559,G__32560,G__32561,G__32562,G__32563) : self__.dispatch_fn.call(null,G__32556,G__32557,G__32558,G__32559,G__32560,G__32561,G__32562,G__32563));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32564 = a;
var G__32565 = b;
var G__32566 = c;
var G__32567 = d;
var G__32568 = e;
var G__32569 = f;
var G__32570 = g;
var G__32571 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__32564,G__32565,G__32566,G__32567,G__32568,G__32569,G__32570,G__32571) : target_fn.call(null,G__32564,G__32565,G__32566,G__32567,G__32568,G__32569,G__32570,G__32571));
});
var G__33340__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32572 = a;
var G__32573 = b;
var G__32574 = c;
var G__32575 = d;
var G__32576 = e;
var G__32577 = f;
var G__32578 = g;
var G__32579 = h;
var G__32580 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__32572,G__32573,G__32574,G__32575,G__32576,G__32577,G__32578,G__32579,G__32580) : self__.dispatch_fn.call(null,G__32572,G__32573,G__32574,G__32575,G__32576,G__32577,G__32578,G__32579,G__32580));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32581 = a;
var G__32582 = b;
var G__32583 = c;
var G__32584 = d;
var G__32585 = e;
var G__32586 = f;
var G__32587 = g;
var G__32588 = h;
var G__32589 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__32581,G__32582,G__32583,G__32584,G__32585,G__32586,G__32587,G__32588,G__32589) : target_fn.call(null,G__32581,G__32582,G__32583,G__32584,G__32585,G__32586,G__32587,G__32588,G__32589));
});
var G__33340__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32590 = a;
var G__32591 = b;
var G__32592 = c;
var G__32593 = d;
var G__32594 = e;
var G__32595 = f;
var G__32596 = g;
var G__32597 = h;
var G__32598 = i;
var G__32599 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__32590,G__32591,G__32592,G__32593,G__32594,G__32595,G__32596,G__32597,G__32598,G__32599) : self__.dispatch_fn.call(null,G__32590,G__32591,G__32592,G__32593,G__32594,G__32595,G__32596,G__32597,G__32598,G__32599));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32600 = a;
var G__32601 = b;
var G__32602 = c;
var G__32603 = d;
var G__32604 = e;
var G__32605 = f;
var G__32606 = g;
var G__32607 = h;
var G__32608 = i;
var G__32609 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__32600,G__32601,G__32602,G__32603,G__32604,G__32605,G__32606,G__32607,G__32608,G__32609) : target_fn.call(null,G__32600,G__32601,G__32602,G__32603,G__32604,G__32605,G__32606,G__32607,G__32608,G__32609));
});
var G__33340__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32610 = a;
var G__32611 = b;
var G__32612 = c;
var G__32613 = d;
var G__32614 = e;
var G__32615 = f;
var G__32616 = g;
var G__32617 = h;
var G__32618 = i;
var G__32619 = j;
var G__32620 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__32610,G__32611,G__32612,G__32613,G__32614,G__32615,G__32616,G__32617,G__32618,G__32619,G__32620) : self__.dispatch_fn.call(null,G__32610,G__32611,G__32612,G__32613,G__32614,G__32615,G__32616,G__32617,G__32618,G__32619,G__32620));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32621 = a;
var G__32622 = b;
var G__32623 = c;
var G__32624 = d;
var G__32625 = e;
var G__32626 = f;
var G__32627 = g;
var G__32628 = h;
var G__32629 = i;
var G__32630 = j;
var G__32631 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__32621,G__32622,G__32623,G__32624,G__32625,G__32626,G__32627,G__32628,G__32629,G__32630,G__32631) : target_fn.call(null,G__32621,G__32622,G__32623,G__32624,G__32625,G__32626,G__32627,G__32628,G__32629,G__32630,G__32631));
});
var G__33340__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32632 = a;
var G__32633 = b;
var G__32634 = c;
var G__32635 = d;
var G__32636 = e;
var G__32637 = f;
var G__32638 = g;
var G__32639 = h;
var G__32640 = i;
var G__32641 = j;
var G__32642 = k;
var G__32643 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__32632,G__32633,G__32634,G__32635,G__32636,G__32637,G__32638,G__32639,G__32640,G__32641,G__32642,G__32643) : self__.dispatch_fn.call(null,G__32632,G__32633,G__32634,G__32635,G__32636,G__32637,G__32638,G__32639,G__32640,G__32641,G__32642,G__32643));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32644 = a;
var G__32645 = b;
var G__32646 = c;
var G__32647 = d;
var G__32648 = e;
var G__32649 = f;
var G__32650 = g;
var G__32651 = h;
var G__32652 = i;
var G__32653 = j;
var G__32654 = k;
var G__32655 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__32644,G__32645,G__32646,G__32647,G__32648,G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655) : target_fn.call(null,G__32644,G__32645,G__32646,G__32647,G__32648,G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655));
});
var G__33340__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32656 = a;
var G__32657 = b;
var G__32658 = c;
var G__32659 = d;
var G__32660 = e;
var G__32661 = f;
var G__32662 = g;
var G__32663 = h;
var G__32664 = i;
var G__32665 = j;
var G__32666 = k;
var G__32667 = l;
var G__32668 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__32656,G__32657,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667,G__32668) : self__.dispatch_fn.call(null,G__32656,G__32657,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667,G__32668));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32669 = a;
var G__32670 = b;
var G__32671 = c;
var G__32672 = d;
var G__32673 = e;
var G__32674 = f;
var G__32675 = g;
var G__32676 = h;
var G__32677 = i;
var G__32678 = j;
var G__32679 = k;
var G__32680 = l;
var G__32681 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675,G__32676,G__32677,G__32678,G__32679,G__32680,G__32681) : target_fn.call(null,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675,G__32676,G__32677,G__32678,G__32679,G__32680,G__32681));
});
var G__33340__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32682 = a;
var G__32683 = b;
var G__32684 = c;
var G__32685 = d;
var G__32686 = e;
var G__32687 = f;
var G__32688 = g;
var G__32689 = h;
var G__32690 = i;
var G__32691 = j;
var G__32692 = k;
var G__32693 = l;
var G__32694 = m;
var G__32695 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__32682,G__32683,G__32684,G__32685,G__32686,G__32687,G__32688,G__32689,G__32690,G__32691,G__32692,G__32693,G__32694,G__32695) : self__.dispatch_fn.call(null,G__32682,G__32683,G__32684,G__32685,G__32686,G__32687,G__32688,G__32689,G__32690,G__32691,G__32692,G__32693,G__32694,G__32695));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32696 = a;
var G__32697 = b;
var G__32698 = c;
var G__32699 = d;
var G__32700 = e;
var G__32701 = f;
var G__32702 = g;
var G__32703 = h;
var G__32704 = i;
var G__32705 = j;
var G__32706 = k;
var G__32707 = l;
var G__32708 = m;
var G__32709 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__32696,G__32697,G__32698,G__32699,G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706,G__32707,G__32708,G__32709) : target_fn.call(null,G__32696,G__32697,G__32698,G__32699,G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706,G__32707,G__32708,G__32709));
});
var G__33340__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32710 = a;
var G__32711 = b;
var G__32712 = c;
var G__32713 = d;
var G__32714 = e;
var G__32715 = f;
var G__32716 = g;
var G__32717 = h;
var G__32718 = i;
var G__32719 = j;
var G__32720 = k;
var G__32721 = l;
var G__32722 = m;
var G__32723 = n;
var G__32724 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__32710,G__32711,G__32712,G__32713,G__32714,G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721,G__32722,G__32723,G__32724) : self__.dispatch_fn.call(null,G__32710,G__32711,G__32712,G__32713,G__32714,G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721,G__32722,G__32723,G__32724));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32725 = a;
var G__32726 = b;
var G__32727 = c;
var G__32728 = d;
var G__32729 = e;
var G__32730 = f;
var G__32731 = g;
var G__32732 = h;
var G__32733 = i;
var G__32734 = j;
var G__32735 = k;
var G__32736 = l;
var G__32737 = m;
var G__32738 = n;
var G__32739 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731,G__32732,G__32733,G__32734,G__32735,G__32736,G__32737,G__32738,G__32739) : target_fn.call(null,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731,G__32732,G__32733,G__32734,G__32735,G__32736,G__32737,G__32738,G__32739));
});
var G__33340__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32740 = a;
var G__32741 = b;
var G__32742 = c;
var G__32743 = d;
var G__32744 = e;
var G__32745 = f;
var G__32746 = g;
var G__32747 = h;
var G__32748 = i;
var G__32749 = j;
var G__32750 = k;
var G__32751 = l;
var G__32752 = m;
var G__32753 = n;
var G__32754 = o;
var G__32755 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747,G__32748,G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755) : self__.dispatch_fn.call(null,G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747,G__32748,G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32756 = a;
var G__32757 = b;
var G__32758 = c;
var G__32759 = d;
var G__32760 = e;
var G__32761 = f;
var G__32762 = g;
var G__32763 = h;
var G__32764 = i;
var G__32765 = j;
var G__32766 = k;
var G__32767 = l;
var G__32768 = m;
var G__32769 = n;
var G__32770 = o;
var G__32771 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__32756,G__32757,G__32758,G__32759,G__32760,G__32761,G__32762,G__32763,G__32764,G__32765,G__32766,G__32767,G__32768,G__32769,G__32770,G__32771) : target_fn.call(null,G__32756,G__32757,G__32758,G__32759,G__32760,G__32761,G__32762,G__32763,G__32764,G__32765,G__32766,G__32767,G__32768,G__32769,G__32770,G__32771));
});
var G__33340__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32772 = a;
var G__32773 = b;
var G__32774 = c;
var G__32775 = d;
var G__32776 = e;
var G__32777 = f;
var G__32778 = g;
var G__32779 = h;
var G__32780 = i;
var G__32781 = j;
var G__32782 = k;
var G__32783 = l;
var G__32784 = m;
var G__32785 = n;
var G__32786 = o;
var G__32787 = p;
var G__32788 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__32772,G__32773,G__32774,G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783,G__32784,G__32785,G__32786,G__32787,G__32788) : self__.dispatch_fn.call(null,G__32772,G__32773,G__32774,G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783,G__32784,G__32785,G__32786,G__32787,G__32788));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32789 = a;
var G__32790 = b;
var G__32791 = c;
var G__32792 = d;
var G__32793 = e;
var G__32794 = f;
var G__32795 = g;
var G__32796 = h;
var G__32797 = i;
var G__32798 = j;
var G__32799 = k;
var G__32800 = l;
var G__32801 = m;
var G__32802 = n;
var G__32803 = o;
var G__32804 = p;
var G__32805 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__32789,G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798,G__32799,G__32800,G__32801,G__32802,G__32803,G__32804,G__32805) : target_fn.call(null,G__32789,G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798,G__32799,G__32800,G__32801,G__32802,G__32803,G__32804,G__32805));
});
var G__33340__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32806 = a;
var G__32807 = b;
var G__32808 = c;
var G__32809 = d;
var G__32810 = e;
var G__32811 = f;
var G__32812 = g;
var G__32813 = h;
var G__32814 = i;
var G__32815 = j;
var G__32816 = k;
var G__32817 = l;
var G__32818 = m;
var G__32819 = n;
var G__32820 = o;
var G__32821 = p;
var G__32822 = q;
var G__32823 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821,G__32822,G__32823) : self__.dispatch_fn.call(null,G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821,G__32822,G__32823));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32824 = a;
var G__32825 = b;
var G__32826 = c;
var G__32827 = d;
var G__32828 = e;
var G__32829 = f;
var G__32830 = g;
var G__32831 = h;
var G__32832 = i;
var G__32833 = j;
var G__32834 = k;
var G__32835 = l;
var G__32836 = m;
var G__32837 = n;
var G__32838 = o;
var G__32839 = p;
var G__32840 = q;
var G__32841 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831,G__32832,G__32833,G__32834,G__32835,G__32836,G__32837,G__32838,G__32839,G__32840,G__32841) : target_fn.call(null,G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831,G__32832,G__32833,G__32834,G__32835,G__32836,G__32837,G__32838,G__32839,G__32840,G__32841));
});
var G__33340__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32842 = a;
var G__32843 = b;
var G__32844 = c;
var G__32845 = d;
var G__32846 = e;
var G__32847 = f;
var G__32848 = g;
var G__32849 = h;
var G__32850 = i;
var G__32851 = j;
var G__32852 = k;
var G__32853 = l;
var G__32854 = m;
var G__32855 = n;
var G__32856 = o;
var G__32857 = p;
var G__32858 = q;
var G__32859 = r;
var G__32860 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__32842,G__32843,G__32844,G__32845,G__32846,G__32847,G__32848,G__32849,G__32850,G__32851,G__32852,G__32853,G__32854,G__32855,G__32856,G__32857,G__32858,G__32859,G__32860) : self__.dispatch_fn.call(null,G__32842,G__32843,G__32844,G__32845,G__32846,G__32847,G__32848,G__32849,G__32850,G__32851,G__32852,G__32853,G__32854,G__32855,G__32856,G__32857,G__32858,G__32859,G__32860));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32861 = a;
var G__32862 = b;
var G__32863 = c;
var G__32864 = d;
var G__32865 = e;
var G__32866 = f;
var G__32867 = g;
var G__32868 = h;
var G__32869 = i;
var G__32870 = j;
var G__32871 = k;
var G__32872 = l;
var G__32873 = m;
var G__32874 = n;
var G__32875 = o;
var G__32876 = p;
var G__32877 = q;
var G__32878 = r;
var G__32879 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__32861,G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868,G__32869,G__32870,G__32871,G__32872,G__32873,G__32874,G__32875,G__32876,G__32877,G__32878,G__32879) : target_fn.call(null,G__32861,G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868,G__32869,G__32870,G__32871,G__32872,G__32873,G__32874,G__32875,G__32876,G__32877,G__32878,G__32879));
});
var G__33340__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32880 = a;
var G__32881 = b;
var G__32882 = c;
var G__32883 = d;
var G__32884 = e;
var G__32885 = f;
var G__32886 = g;
var G__32887 = h;
var G__32888 = i;
var G__32889 = j;
var G__32890 = k;
var G__32891 = l;
var G__32892 = m;
var G__32893 = n;
var G__32894 = o;
var G__32895 = p;
var G__32896 = q;
var G__32897 = r;
var G__32898 = s;
var G__32899 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888,G__32889,G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899) : self__.dispatch_fn.call(null,G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888,G__32889,G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32900 = a;
var G__32901 = b;
var G__32902 = c;
var G__32903 = d;
var G__32904 = e;
var G__32905 = f;
var G__32906 = g;
var G__32907 = h;
var G__32908 = i;
var G__32909 = j;
var G__32910 = k;
var G__32911 = l;
var G__32912 = m;
var G__32913 = n;
var G__32914 = o;
var G__32915 = p;
var G__32916 = q;
var G__32917 = r;
var G__32918 = s;
var G__32919 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906,G__32907,G__32908,G__32909,G__32910,G__32911,G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918,G__32919) : target_fn.call(null,G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906,G__32907,G__32908,G__32909,G__32910,G__32911,G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918,G__32919));
});
var G__33340__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__33340 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__33340__1.call(this,self__);
case 2:
return G__33340__2.call(this,self__,a);
case 3:
return G__33340__3.call(this,self__,a,b);
case 4:
return G__33340__4.call(this,self__,a,b,c);
case 5:
return G__33340__5.call(this,self__,a,b,c,d);
case 6:
return G__33340__6.call(this,self__,a,b,c,d,e);
case 7:
return G__33340__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__33340__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__33340__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__33340__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__33340__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__33340__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__33340__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__33340__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__33340__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__33340__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__33340__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__33340__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__33340__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__33340__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__33340__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__33340__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33340.cljs$core$IFn$_invoke$arity$1 = G__33340__1;
G__33340.cljs$core$IFn$_invoke$arity$2 = G__33340__2;
G__33340.cljs$core$IFn$_invoke$arity$3 = G__33340__3;
G__33340.cljs$core$IFn$_invoke$arity$4 = G__33340__4;
G__33340.cljs$core$IFn$_invoke$arity$5 = G__33340__5;
G__33340.cljs$core$IFn$_invoke$arity$6 = G__33340__6;
G__33340.cljs$core$IFn$_invoke$arity$7 = G__33340__7;
G__33340.cljs$core$IFn$_invoke$arity$8 = G__33340__8;
G__33340.cljs$core$IFn$_invoke$arity$9 = G__33340__9;
G__33340.cljs$core$IFn$_invoke$arity$10 = G__33340__10;
G__33340.cljs$core$IFn$_invoke$arity$11 = G__33340__11;
G__33340.cljs$core$IFn$_invoke$arity$12 = G__33340__12;
G__33340.cljs$core$IFn$_invoke$arity$13 = G__33340__13;
G__33340.cljs$core$IFn$_invoke$arity$14 = G__33340__14;
G__33340.cljs$core$IFn$_invoke$arity$15 = G__33340__15;
G__33340.cljs$core$IFn$_invoke$arity$16 = G__33340__16;
G__33340.cljs$core$IFn$_invoke$arity$17 = G__33340__17;
G__33340.cljs$core$IFn$_invoke$arity$18 = G__33340__18;
G__33340.cljs$core$IFn$_invoke$arity$19 = G__33340__19;
G__33340.cljs$core$IFn$_invoke$arity$20 = G__33340__20;
G__33340.cljs$core$IFn$_invoke$arity$21 = G__33340__21;
G__33340.cljs$core$IFn$_invoke$arity$22 = G__33340__22;
return G__33340;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args32492){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32492)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32920 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__32920) : self__.dispatch_fn.call(null,G__32920));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32921 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__32921) : target_fn.call(null,G__32921));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32922 = a;
var G__32923 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__32922,G__32923) : self__.dispatch_fn.call(null,G__32922,G__32923));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32924 = a;
var G__32925 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__32924,G__32925) : target_fn.call(null,G__32924,G__32925));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32926 = a;
var G__32927 = b;
var G__32928 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__32926,G__32927,G__32928) : self__.dispatch_fn.call(null,G__32926,G__32927,G__32928));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32929 = a;
var G__32930 = b;
var G__32931 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__32929,G__32930,G__32931) : target_fn.call(null,G__32929,G__32930,G__32931));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32932 = a;
var G__32933 = b;
var G__32934 = c;
var G__32935 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__32932,G__32933,G__32934,G__32935) : self__.dispatch_fn.call(null,G__32932,G__32933,G__32934,G__32935));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32936 = a;
var G__32937 = b;
var G__32938 = c;
var G__32939 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__32936,G__32937,G__32938,G__32939) : target_fn.call(null,G__32936,G__32937,G__32938,G__32939));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32940 = a;
var G__32941 = b;
var G__32942 = c;
var G__32943 = d;
var G__32944 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__32940,G__32941,G__32942,G__32943,G__32944) : self__.dispatch_fn.call(null,G__32940,G__32941,G__32942,G__32943,G__32944));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32945 = a;
var G__32946 = b;
var G__32947 = c;
var G__32948 = d;
var G__32949 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__32945,G__32946,G__32947,G__32948,G__32949) : target_fn.call(null,G__32945,G__32946,G__32947,G__32948,G__32949));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32950 = a;
var G__32951 = b;
var G__32952 = c;
var G__32953 = d;
var G__32954 = e;
var G__32955 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__32950,G__32951,G__32952,G__32953,G__32954,G__32955) : self__.dispatch_fn.call(null,G__32950,G__32951,G__32952,G__32953,G__32954,G__32955));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32956 = a;
var G__32957 = b;
var G__32958 = c;
var G__32959 = d;
var G__32960 = e;
var G__32961 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__32956,G__32957,G__32958,G__32959,G__32960,G__32961) : target_fn.call(null,G__32956,G__32957,G__32958,G__32959,G__32960,G__32961));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32962 = a;
var G__32963 = b;
var G__32964 = c;
var G__32965 = d;
var G__32966 = e;
var G__32967 = f;
var G__32968 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__32962,G__32963,G__32964,G__32965,G__32966,G__32967,G__32968) : self__.dispatch_fn.call(null,G__32962,G__32963,G__32964,G__32965,G__32966,G__32967,G__32968));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32969 = a;
var G__32970 = b;
var G__32971 = c;
var G__32972 = d;
var G__32973 = e;
var G__32974 = f;
var G__32975 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__32969,G__32970,G__32971,G__32972,G__32973,G__32974,G__32975) : target_fn.call(null,G__32969,G__32970,G__32971,G__32972,G__32973,G__32974,G__32975));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32976 = a;
var G__32977 = b;
var G__32978 = c;
var G__32979 = d;
var G__32980 = e;
var G__32981 = f;
var G__32982 = g;
var G__32983 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983) : self__.dispatch_fn.call(null,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32984 = a;
var G__32985 = b;
var G__32986 = c;
var G__32987 = d;
var G__32988 = e;
var G__32989 = f;
var G__32990 = g;
var G__32991 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__32984,G__32985,G__32986,G__32987,G__32988,G__32989,G__32990,G__32991) : target_fn.call(null,G__32984,G__32985,G__32986,G__32987,G__32988,G__32989,G__32990,G__32991));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32992 = a;
var G__32993 = b;
var G__32994 = c;
var G__32995 = d;
var G__32996 = e;
var G__32997 = f;
var G__32998 = g;
var G__32999 = h;
var G__33000 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__32992,G__32993,G__32994,G__32995,G__32996,G__32997,G__32998,G__32999,G__33000) : self__.dispatch_fn.call(null,G__32992,G__32993,G__32994,G__32995,G__32996,G__32997,G__32998,G__32999,G__33000));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33001 = a;
var G__33002 = b;
var G__33003 = c;
var G__33004 = d;
var G__33005 = e;
var G__33006 = f;
var G__33007 = g;
var G__33008 = h;
var G__33009 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__33001,G__33002,G__33003,G__33004,G__33005,G__33006,G__33007,G__33008,G__33009) : target_fn.call(null,G__33001,G__33002,G__33003,G__33004,G__33005,G__33006,G__33007,G__33008,G__33009));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33010 = a;
var G__33011 = b;
var G__33012 = c;
var G__33013 = d;
var G__33014 = e;
var G__33015 = f;
var G__33016 = g;
var G__33017 = h;
var G__33018 = i;
var G__33019 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__33010,G__33011,G__33012,G__33013,G__33014,G__33015,G__33016,G__33017,G__33018,G__33019) : self__.dispatch_fn.call(null,G__33010,G__33011,G__33012,G__33013,G__33014,G__33015,G__33016,G__33017,G__33018,G__33019));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33020 = a;
var G__33021 = b;
var G__33022 = c;
var G__33023 = d;
var G__33024 = e;
var G__33025 = f;
var G__33026 = g;
var G__33027 = h;
var G__33028 = i;
var G__33029 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__33020,G__33021,G__33022,G__33023,G__33024,G__33025,G__33026,G__33027,G__33028,G__33029) : target_fn.call(null,G__33020,G__33021,G__33022,G__33023,G__33024,G__33025,G__33026,G__33027,G__33028,G__33029));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33030 = a;
var G__33031 = b;
var G__33032 = c;
var G__33033 = d;
var G__33034 = e;
var G__33035 = f;
var G__33036 = g;
var G__33037 = h;
var G__33038 = i;
var G__33039 = j;
var G__33040 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__33030,G__33031,G__33032,G__33033,G__33034,G__33035,G__33036,G__33037,G__33038,G__33039,G__33040) : self__.dispatch_fn.call(null,G__33030,G__33031,G__33032,G__33033,G__33034,G__33035,G__33036,G__33037,G__33038,G__33039,G__33040));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33041 = a;
var G__33042 = b;
var G__33043 = c;
var G__33044 = d;
var G__33045 = e;
var G__33046 = f;
var G__33047 = g;
var G__33048 = h;
var G__33049 = i;
var G__33050 = j;
var G__33051 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__33041,G__33042,G__33043,G__33044,G__33045,G__33046,G__33047,G__33048,G__33049,G__33050,G__33051) : target_fn.call(null,G__33041,G__33042,G__33043,G__33044,G__33045,G__33046,G__33047,G__33048,G__33049,G__33050,G__33051));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33052 = a;
var G__33053 = b;
var G__33054 = c;
var G__33055 = d;
var G__33056 = e;
var G__33057 = f;
var G__33058 = g;
var G__33059 = h;
var G__33060 = i;
var G__33061 = j;
var G__33062 = k;
var G__33063 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__33052,G__33053,G__33054,G__33055,G__33056,G__33057,G__33058,G__33059,G__33060,G__33061,G__33062,G__33063) : self__.dispatch_fn.call(null,G__33052,G__33053,G__33054,G__33055,G__33056,G__33057,G__33058,G__33059,G__33060,G__33061,G__33062,G__33063));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33064 = a;
var G__33065 = b;
var G__33066 = c;
var G__33067 = d;
var G__33068 = e;
var G__33069 = f;
var G__33070 = g;
var G__33071 = h;
var G__33072 = i;
var G__33073 = j;
var G__33074 = k;
var G__33075 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__33064,G__33065,G__33066,G__33067,G__33068,G__33069,G__33070,G__33071,G__33072,G__33073,G__33074,G__33075) : target_fn.call(null,G__33064,G__33065,G__33066,G__33067,G__33068,G__33069,G__33070,G__33071,G__33072,G__33073,G__33074,G__33075));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33076 = a;
var G__33077 = b;
var G__33078 = c;
var G__33079 = d;
var G__33080 = e;
var G__33081 = f;
var G__33082 = g;
var G__33083 = h;
var G__33084 = i;
var G__33085 = j;
var G__33086 = k;
var G__33087 = l;
var G__33088 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__33076,G__33077,G__33078,G__33079,G__33080,G__33081,G__33082,G__33083,G__33084,G__33085,G__33086,G__33087,G__33088) : self__.dispatch_fn.call(null,G__33076,G__33077,G__33078,G__33079,G__33080,G__33081,G__33082,G__33083,G__33084,G__33085,G__33086,G__33087,G__33088));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33089 = a;
var G__33090 = b;
var G__33091 = c;
var G__33092 = d;
var G__33093 = e;
var G__33094 = f;
var G__33095 = g;
var G__33096 = h;
var G__33097 = i;
var G__33098 = j;
var G__33099 = k;
var G__33100 = l;
var G__33101 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__33089,G__33090,G__33091,G__33092,G__33093,G__33094,G__33095,G__33096,G__33097,G__33098,G__33099,G__33100,G__33101) : target_fn.call(null,G__33089,G__33090,G__33091,G__33092,G__33093,G__33094,G__33095,G__33096,G__33097,G__33098,G__33099,G__33100,G__33101));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33102 = a;
var G__33103 = b;
var G__33104 = c;
var G__33105 = d;
var G__33106 = e;
var G__33107 = f;
var G__33108 = g;
var G__33109 = h;
var G__33110 = i;
var G__33111 = j;
var G__33112 = k;
var G__33113 = l;
var G__33114 = m;
var G__33115 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__33102,G__33103,G__33104,G__33105,G__33106,G__33107,G__33108,G__33109,G__33110,G__33111,G__33112,G__33113,G__33114,G__33115) : self__.dispatch_fn.call(null,G__33102,G__33103,G__33104,G__33105,G__33106,G__33107,G__33108,G__33109,G__33110,G__33111,G__33112,G__33113,G__33114,G__33115));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33116 = a;
var G__33117 = b;
var G__33118 = c;
var G__33119 = d;
var G__33120 = e;
var G__33121 = f;
var G__33122 = g;
var G__33123 = h;
var G__33124 = i;
var G__33125 = j;
var G__33126 = k;
var G__33127 = l;
var G__33128 = m;
var G__33129 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__33116,G__33117,G__33118,G__33119,G__33120,G__33121,G__33122,G__33123,G__33124,G__33125,G__33126,G__33127,G__33128,G__33129) : target_fn.call(null,G__33116,G__33117,G__33118,G__33119,G__33120,G__33121,G__33122,G__33123,G__33124,G__33125,G__33126,G__33127,G__33128,G__33129));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33130 = a;
var G__33131 = b;
var G__33132 = c;
var G__33133 = d;
var G__33134 = e;
var G__33135 = f;
var G__33136 = g;
var G__33137 = h;
var G__33138 = i;
var G__33139 = j;
var G__33140 = k;
var G__33141 = l;
var G__33142 = m;
var G__33143 = n;
var G__33144 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__33130,G__33131,G__33132,G__33133,G__33134,G__33135,G__33136,G__33137,G__33138,G__33139,G__33140,G__33141,G__33142,G__33143,G__33144) : self__.dispatch_fn.call(null,G__33130,G__33131,G__33132,G__33133,G__33134,G__33135,G__33136,G__33137,G__33138,G__33139,G__33140,G__33141,G__33142,G__33143,G__33144));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33145 = a;
var G__33146 = b;
var G__33147 = c;
var G__33148 = d;
var G__33149 = e;
var G__33150 = f;
var G__33151 = g;
var G__33152 = h;
var G__33153 = i;
var G__33154 = j;
var G__33155 = k;
var G__33156 = l;
var G__33157 = m;
var G__33158 = n;
var G__33159 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__33145,G__33146,G__33147,G__33148,G__33149,G__33150,G__33151,G__33152,G__33153,G__33154,G__33155,G__33156,G__33157,G__33158,G__33159) : target_fn.call(null,G__33145,G__33146,G__33147,G__33148,G__33149,G__33150,G__33151,G__33152,G__33153,G__33154,G__33155,G__33156,G__33157,G__33158,G__33159));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33160 = a;
var G__33161 = b;
var G__33162 = c;
var G__33163 = d;
var G__33164 = e;
var G__33165 = f;
var G__33166 = g;
var G__33167 = h;
var G__33168 = i;
var G__33169 = j;
var G__33170 = k;
var G__33171 = l;
var G__33172 = m;
var G__33173 = n;
var G__33174 = o;
var G__33175 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__33160,G__33161,G__33162,G__33163,G__33164,G__33165,G__33166,G__33167,G__33168,G__33169,G__33170,G__33171,G__33172,G__33173,G__33174,G__33175) : self__.dispatch_fn.call(null,G__33160,G__33161,G__33162,G__33163,G__33164,G__33165,G__33166,G__33167,G__33168,G__33169,G__33170,G__33171,G__33172,G__33173,G__33174,G__33175));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33176 = a;
var G__33177 = b;
var G__33178 = c;
var G__33179 = d;
var G__33180 = e;
var G__33181 = f;
var G__33182 = g;
var G__33183 = h;
var G__33184 = i;
var G__33185 = j;
var G__33186 = k;
var G__33187 = l;
var G__33188 = m;
var G__33189 = n;
var G__33190 = o;
var G__33191 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__33176,G__33177,G__33178,G__33179,G__33180,G__33181,G__33182,G__33183,G__33184,G__33185,G__33186,G__33187,G__33188,G__33189,G__33190,G__33191) : target_fn.call(null,G__33176,G__33177,G__33178,G__33179,G__33180,G__33181,G__33182,G__33183,G__33184,G__33185,G__33186,G__33187,G__33188,G__33189,G__33190,G__33191));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33192 = a;
var G__33193 = b;
var G__33194 = c;
var G__33195 = d;
var G__33196 = e;
var G__33197 = f;
var G__33198 = g;
var G__33199 = h;
var G__33200 = i;
var G__33201 = j;
var G__33202 = k;
var G__33203 = l;
var G__33204 = m;
var G__33205 = n;
var G__33206 = o;
var G__33207 = p;
var G__33208 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__33192,G__33193,G__33194,G__33195,G__33196,G__33197,G__33198,G__33199,G__33200,G__33201,G__33202,G__33203,G__33204,G__33205,G__33206,G__33207,G__33208) : self__.dispatch_fn.call(null,G__33192,G__33193,G__33194,G__33195,G__33196,G__33197,G__33198,G__33199,G__33200,G__33201,G__33202,G__33203,G__33204,G__33205,G__33206,G__33207,G__33208));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33209 = a;
var G__33210 = b;
var G__33211 = c;
var G__33212 = d;
var G__33213 = e;
var G__33214 = f;
var G__33215 = g;
var G__33216 = h;
var G__33217 = i;
var G__33218 = j;
var G__33219 = k;
var G__33220 = l;
var G__33221 = m;
var G__33222 = n;
var G__33223 = o;
var G__33224 = p;
var G__33225 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__33209,G__33210,G__33211,G__33212,G__33213,G__33214,G__33215,G__33216,G__33217,G__33218,G__33219,G__33220,G__33221,G__33222,G__33223,G__33224,G__33225) : target_fn.call(null,G__33209,G__33210,G__33211,G__33212,G__33213,G__33214,G__33215,G__33216,G__33217,G__33218,G__33219,G__33220,G__33221,G__33222,G__33223,G__33224,G__33225));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33226 = a;
var G__33227 = b;
var G__33228 = c;
var G__33229 = d;
var G__33230 = e;
var G__33231 = f;
var G__33232 = g;
var G__33233 = h;
var G__33234 = i;
var G__33235 = j;
var G__33236 = k;
var G__33237 = l;
var G__33238 = m;
var G__33239 = n;
var G__33240 = o;
var G__33241 = p;
var G__33242 = q;
var G__33243 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__33226,G__33227,G__33228,G__33229,G__33230,G__33231,G__33232,G__33233,G__33234,G__33235,G__33236,G__33237,G__33238,G__33239,G__33240,G__33241,G__33242,G__33243) : self__.dispatch_fn.call(null,G__33226,G__33227,G__33228,G__33229,G__33230,G__33231,G__33232,G__33233,G__33234,G__33235,G__33236,G__33237,G__33238,G__33239,G__33240,G__33241,G__33242,G__33243));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33244 = a;
var G__33245 = b;
var G__33246 = c;
var G__33247 = d;
var G__33248 = e;
var G__33249 = f;
var G__33250 = g;
var G__33251 = h;
var G__33252 = i;
var G__33253 = j;
var G__33254 = k;
var G__33255 = l;
var G__33256 = m;
var G__33257 = n;
var G__33258 = o;
var G__33259 = p;
var G__33260 = q;
var G__33261 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__33244,G__33245,G__33246,G__33247,G__33248,G__33249,G__33250,G__33251,G__33252,G__33253,G__33254,G__33255,G__33256,G__33257,G__33258,G__33259,G__33260,G__33261) : target_fn.call(null,G__33244,G__33245,G__33246,G__33247,G__33248,G__33249,G__33250,G__33251,G__33252,G__33253,G__33254,G__33255,G__33256,G__33257,G__33258,G__33259,G__33260,G__33261));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33262 = a;
var G__33263 = b;
var G__33264 = c;
var G__33265 = d;
var G__33266 = e;
var G__33267 = f;
var G__33268 = g;
var G__33269 = h;
var G__33270 = i;
var G__33271 = j;
var G__33272 = k;
var G__33273 = l;
var G__33274 = m;
var G__33275 = n;
var G__33276 = o;
var G__33277 = p;
var G__33278 = q;
var G__33279 = r;
var G__33280 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__33262,G__33263,G__33264,G__33265,G__33266,G__33267,G__33268,G__33269,G__33270,G__33271,G__33272,G__33273,G__33274,G__33275,G__33276,G__33277,G__33278,G__33279,G__33280) : self__.dispatch_fn.call(null,G__33262,G__33263,G__33264,G__33265,G__33266,G__33267,G__33268,G__33269,G__33270,G__33271,G__33272,G__33273,G__33274,G__33275,G__33276,G__33277,G__33278,G__33279,G__33280));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33281 = a;
var G__33282 = b;
var G__33283 = c;
var G__33284 = d;
var G__33285 = e;
var G__33286 = f;
var G__33287 = g;
var G__33288 = h;
var G__33289 = i;
var G__33290 = j;
var G__33291 = k;
var G__33292 = l;
var G__33293 = m;
var G__33294 = n;
var G__33295 = o;
var G__33296 = p;
var G__33297 = q;
var G__33298 = r;
var G__33299 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__33281,G__33282,G__33283,G__33284,G__33285,G__33286,G__33287,G__33288,G__33289,G__33290,G__33291,G__33292,G__33293,G__33294,G__33295,G__33296,G__33297,G__33298,G__33299) : target_fn.call(null,G__33281,G__33282,G__33283,G__33284,G__33285,G__33286,G__33287,G__33288,G__33289,G__33290,G__33291,G__33292,G__33293,G__33294,G__33295,G__33296,G__33297,G__33298,G__33299));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33300 = a;
var G__33301 = b;
var G__33302 = c;
var G__33303 = d;
var G__33304 = e;
var G__33305 = f;
var G__33306 = g;
var G__33307 = h;
var G__33308 = i;
var G__33309 = j;
var G__33310 = k;
var G__33311 = l;
var G__33312 = m;
var G__33313 = n;
var G__33314 = o;
var G__33315 = p;
var G__33316 = q;
var G__33317 = r;
var G__33318 = s;
var G__33319 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__33300,G__33301,G__33302,G__33303,G__33304,G__33305,G__33306,G__33307,G__33308,G__33309,G__33310,G__33311,G__33312,G__33313,G__33314,G__33315,G__33316,G__33317,G__33318,G__33319) : self__.dispatch_fn.call(null,G__33300,G__33301,G__33302,G__33303,G__33304,G__33305,G__33306,G__33307,G__33308,G__33309,G__33310,G__33311,G__33312,G__33313,G__33314,G__33315,G__33316,G__33317,G__33318,G__33319));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33320 = a;
var G__33321 = b;
var G__33322 = c;
var G__33323 = d;
var G__33324 = e;
var G__33325 = f;
var G__33326 = g;
var G__33327 = h;
var G__33328 = i;
var G__33329 = j;
var G__33330 = k;
var G__33331 = l;
var G__33332 = m;
var G__33333 = n;
var G__33334 = o;
var G__33335 = p;
var G__33336 = q;
var G__33337 = r;
var G__33338 = s;
var G__33339 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__33320,G__33321,G__33322,G__33323,G__33324,G__33325,G__33326,G__33327,G__33328,G__33329,G__33330,G__33331,G__33332,G__33333,G__33334,G__33335,G__33336,G__33337,G__33338,G__33339) : target_fn.call(null,G__33320,G__33321,G__33322,G__33323,G__33324,G__33325,G__33326,G__33327,G__33328,G__33329,G__33330,G__33331,G__33332,G__33333,G__33334,G__33335,G__33336,G__33337,G__33338,G__33339));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__33341 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__33341);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__15031__auto__,writer__15032__auto__,opt__15033__auto__){
return cljs.core._write(writer__15032__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__33346 = msg;
return Error(G__33346);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__33351 = x;
var G__33352 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__33351,G__33352) : pred.call(null,G__33351,G__33352));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__33353 = y;
var G__33354 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__33353,G__33354) : pred.call(null,G__33353,G__33354));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map