;; Analyzed by ClojureScript 0.0-2816
{:defs {nose {:protocol-inline nil, :name shapes.core/nose, :variadic false, :file "src/shapes/core.cljs", :end-column 11, :method-params ([p__169741 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 242, :end-line 242, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-height head-width head-cx head-cy head-rx head-ry eye-cxa eye-cxb eye-cy eye-rx eye-ry pupil-cy pupil-r mouth-y horizontal-a horizontal-b vertical-a vertical-b], :as measures} dev?])), :test true}, y-on-ellipse {:protocol-inline nil, :name shapes.core/y-on-ellipse, :variadic false, :file "src/shapes/core.cljs", :end-column 19, :method-params ([x cx a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 4}), :line 37, :end-line 37, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x cx a b])), :test true}, ys-within-ellipse {:protocol-inline nil, :name shapes.core/ys-within-ellipse, :variadic false, :file "src/shapes/core.cljs", :end-column 24, :method-params ([x cx a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 4}), :line 43, :end-line 43, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x cx a b])), :test true}, eyes {:protocol-inline nil, :name shapes.core/eyes, :variadic false, :file "src/shapes/core.cljs", :end-column 11, :method-params ([p__169735 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 133, :end-line 133, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy head-width head-height head-rx head-ry], :as measures} dev?])), :test true}, sqrt {:protocol-inline nil, :name shapes.core/sqrt, :variadic false, :file "src/shapes/core.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, draw-mouth {:protocol-inline nil, :name shapes.core/draw-mouth, :variadic false, :file "src/shapes/core.cljs", :end-column 20, :method-params ([p__169750]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 414, :end-line 414, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy head-ry head-rx mouth-cx mouth-cy mouth-rx mouth-ry mouth-clip-x mouth-clip-y mouth-clip-width mouth-clip-height horizontal-c test-height below-c], :as measures}])), :test true}, x-on-ellipse {:protocol-inline nil, :name shapes.core/x-on-ellipse, :variadic false, :file "src/shapes/core.cljs", :end-column 19, :method-params ([y cy a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 4}), :line 26, :end-line 26, :max-fixed-arity 4, :fn-var true, :arglists (quote ([y cy a b])), :test true}, xy-on-circle {:protocol-inline nil, :name shapes.core/xy-on-circle, :variadic false, :file "src/shapes/core.cljs", :end-column 19, :method-params ([pupil-r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pupil-r])), :test true}, mouth {:protocol-inline nil, :name shapes.core/mouth, :variadic false, :file "src/shapes/core.cljs", :end-column 12, :method-params ([p__169747 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 350, :end-line 350, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-height head-width head-cx head-cy head-rx head-ry eye-cxa eye-cxb eye-cy eye-ry nose-cy horizontal-c a-to-b vertical-a], :as measures} dev?])), :test true}, -x-on-ellipse {:protocol-inline nil, :name shapes.core/-x-on-ellipse, :variadic false, :file "src/shapes/core.cljs", :end-column 20, :method-params ([y a b h k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 5}), :line 32, :end-line 32, :max-fixed-arity 5, :fn-var true, :arglists (quote ([y a b h k])), :test true}, draw-eyes {:protocol-inline nil, :name shapes.core/draw-eyes, :variadic false, :file "src/shapes/core.cljs", :end-column 19, :method-params ([p__169738]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry pupil-r pupil-cxa pupil-cxb pupil-cy highlight-cxa highlight-cxb highlight-cy highlight-r]}])), :test true}, head {:protocol-inline nil, :name shapes.core/head, :variadic false, :file "src/shapes/core.cljs", :end-column 11, :method-params ([p__169753 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 435, :end-line 435, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [cx cy width height]} dev?])), :test true}, draw-nose {:protocol-inline nil, :name shapes.core/draw-nose, :variadic false, :file "src/shapes/core.cljs", :end-column 19, :method-params ([p__169744]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 315, :end-line 315, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [nose-cx nose-cy nose-rx nose-ry nose-clip-xa nose-clip-xb nose-clip-yab nose-clip-xc nose-clip-yc nose-clip-width nose-clip-height nose-shadow-clip-y]}])), :test true}, abs {:protocol-inline nil, :name shapes.core/abs, :variadic false, :file "src/shapes/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, face {:protocol-inline nil, :name shapes.core/face, :variadic true, :file "src/shapes/core.cljs", :end-column 11, :method-params ([dev? p__169756]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic true, :max-fixed-arity 1}), :line 470, :end-line 470, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev? & {:keys [proportional?]}])), :test true}, basic-measurements {:protocol-inline nil, :name shapes.core/basic-measurements, :variadic false, :file "src/shapes/core.cljs", :end-column 25, :method-params ([dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 1}), :line 445, :end-line 445, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev?])), :test true}, square {:protocol-inline nil, :name shapes.core/square, :variadic false, :file "src/shapes/core.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 1}), :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, pupils {:protocol-inline nil, :name shapes.core/pupils, :variadic false, :file "src/shapes/core.cljs", :end-column 13, :method-params ([p__169732 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry eye-cy], :as measures} dev?])), :test true}, avg {:protocol-inline nil, :name shapes.core/avg, :variadic true, :file "src/shapes/core.cljs", :end-column 10, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic true, :max-fixed-arity 0}), :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& xs])), :test true}, draw-face {:protocol-inline nil, :name shapes.core/draw-face, :variadic false, :file "src/shapes/core.cljs", :end-column 19, :method-params ([p__169761]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 484, :end-line 484, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy head-rx head-ry head-width head-height], :as measures}])), :test true}}, :name shapes.core, :doc nil, :excludes #{}, :use-macros {sel1 dommy.core, html sablono.core, defcomponent om-tools.core, defhtml sablono.core}, :require-macros {dommy.core dommy.core, om-tools.core om-tools.core, html sablono.core, sablono.core sablono.core, om.core om.core, om om.core}, :uses nil, :requires {p shapes.proportional, shapes.proportional shapes.proportional, dommy.core dommy.core, om-tools.core om-tools.core, html sablono.core, sablono.core sablono.core, om.core om.core, om om.core}, :imports nil}