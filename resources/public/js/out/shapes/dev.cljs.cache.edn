;; Analyzed by ClojureScript 0.0-2816
{:defs {nose {:protocol-inline nil, :name shapes.dev/nose, :variadic false, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([p__146482 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 244, :end-line 244, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-height head-width head-cx head-cy head-rx head-ry eye-cxa eye-cxb eye-cy eye-rx eye-ry pupil-cy pupil-r mouth-y horizontal-a horizontal-b vertical-a vertical-b], :as measures} dev?])), :test true}, pause-mode {:protocol-inline nil, :name shapes.dev/pause-mode, :variadic false, :file "dev/shapes/dev.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 505, :end-line 505, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, section-controls {:protocol-inline nil, :name shapes.dev/section-controls, :variadic false, :file "dev/shapes/dev.cljs", :end-column 26, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 527, :end-line 527, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, y-on-ellipse {:protocol-inline nil, :name shapes.dev/y-on-ellipse, :variadic false, :file "dev/shapes/dev.cljs", :end-column 19, :method-params ([x cx a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 4}), :line 43, :end-line 43, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x cx a b])), :test true}, ys-within-ellipse {:protocol-inline nil, :name shapes.dev/ys-within-ellipse, :variadic false, :file "dev/shapes/dev.cljs", :end-column 24, :method-params ([x cx a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 4}), :line 49, :end-line 49, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x cx a b])), :test true}, eyes {:protocol-inline nil, :name shapes.dev/eyes, :variadic false, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([p__146476 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 139, :end-line 139, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy head-width head-height head-rx head-ry], :as measures} dev?])), :test true}, t146520 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/t146520, :file "dev/shapes/dev.cljs", :type true, :anonymous true, :column 1, :line 538, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, sqrt {:protocol-inline nil, :name shapes.dev/sqrt, :variadic false, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, draw-mouth {:protocol-inline nil, :name shapes.dev/draw-mouth, :variadic false, :file "dev/shapes/dev.cljs", :end-column 20, :method-params ([p__146491]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 392, :end-line 392, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy head-ry mouth-cx mouth-cy mouth-rx mouth-ry mouth-clip-x mouth-clip-y mouth-clip-width mouth-clip-height horizontal-c test-height below-c], :as measures}])), :test true}, x-on-ellipse {:protocol-inline nil, :name shapes.dev/x-on-ellipse, :variadic false, :file "dev/shapes/dev.cljs", :end-column 19, :method-params ([y cy a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 4}), :line 37, :end-line 37, :max-fixed-arity 4, :fn-var true, :arglists (quote ([y cy a b])), :test true}, xy-on-circle {:protocol-inline nil, :name shapes.dev/xy-on-circle, :variadic false, :file "dev/shapes/dev.cljs", :end-column 19, :method-params ([pupil-r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pupil-r])), :test true}, mouth {:protocol-inline nil, :name shapes.dev/mouth, :variadic false, :file "dev/shapes/dev.cljs", :end-column 12, :method-params ([p__146488 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 346, :end-line 346, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-height head-cx head-cy head-rx head-ry eye-cxa eye-cxb eye-cy eye-ry nose-cy horizontal-c], :as measures} dev?])), :test true}, bezier-nose-mouth-overlap {:file "dev/shapes/dev.cljs", :line 628, :column 1, :end-line 628, :end-column 35, :test true, :name shapes.dev/bezier-nose-mouth-overlap}, println {:protocol-inline nil, :name shapes.dev/println, :variadic true, :file "dev/shapes/dev.cljs", :end-column 14, :method-params ([content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 0}), :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& content])), :test true}, color-scale {:file "dev/shapes/dev.cljs", :line 12, :column 1, :end-line 12, :end-column 17, :test true, :name shapes.dev/color-scale}, ->t146520 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/->t146520, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([G__146518 owner input-schema146515 data output-checker146517 G__146519 validate__17001__auto__ output-schema146514 app input-checker146516 ufv__ meta146521]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag shapes.dev/t146520, :variadic false, :max-fixed-arity 12}), :line 538, :max-fixed-arity 12, :fn-var true, :arglists (quote ([G__146518 owner input-schema146515 data output-checker146517 G__146519 validate__17001__auto__ output-schema146514 app input-checker146516 ufv__ meta146521])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, draw-eyes {:protocol-inline nil, :name shapes.dev/draw-eyes, :variadic false, :file "dev/shapes/dev.cljs", :end-column 19, :method-params ([p__146479]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry pupil-r pupil-cxa pupil-cxb pupil-cy highlight-cxa highlight-cxb highlight-cy highlight-r]}])), :test true}, section-face {:protocol-inline nil, :name shapes.dev/section-face, :variadic false, :file "dev/shapes/dev.cljs", :end-column 22, :method-params ([p__146502]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 457, :end-line 457, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [horizontal-a horizontal-b horizontal-c vertical-a vertical-b head-cx head-cy head-rx head-ry]}])), :test true}, t146532 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/t146532, :file "dev/shapes/dev.cljs", :type true, :anonymous true, :column 1, :line 538, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, head {:protocol-inline nil, :name shapes.dev/head, :variadic false, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([p__146494 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 408, :end-line 408, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [cx cy width height]} dev?])), :test true}, app-state {:file "dev/shapes/dev.cljs", :line 473, :column 1, :end-line 473, :end-column 19, :test true, :name shapes.dev/app-state}, ->app {:protocol-inline nil, :name shapes.dev/->app, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([cursor__18789__auto__] [cursor__18789__auto__ m146513]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 538, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__18789__auto__] [cursor__18789__auto__ m146513])), :test true}, draw-nose {:protocol-inline nil, :name shapes.dev/draw-nose, :variadic false, :file "dev/shapes/dev.cljs", :end-column 19, :method-params ([p__146485]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 307, :end-line 307, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [nose-cx nose-cy nose-rx nose-ry nose-clip-xa nose-clip-xb nose-clip-yab nose-clip-xc nose-clip-yc nose-clip-width nose-clip-height]}])), :test true}, abs {:protocol-inline nil, :name shapes.dev/abs, :variadic false, :file "dev/shapes/dev.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, face {:protocol-inline nil, :name shapes.dev/face, :variadic true, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([dev? p__146497]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic true, :max-fixed-arity 1}), :line 443, :end-line 443, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev? & {:keys [proportional?]}])), :test true}, ->t146532 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/->t146532, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([G__146518 owner input-schema146515 data output-checker146517 G__146519 validate__17001__auto__ output-schema146514 app input-checker146516 ufv__ meta146533]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag shapes.dev/t146532, :variadic false, :max-fixed-arity 12}), :line 538, :max-fixed-arity 12, :fn-var true, :arglists (quote ([G__146518 owner input-schema146515 data output-checker146517 G__146519 validate__17001__auto__ output-schema146514 app input-checker146516 ufv__ meta146533])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, basic-measurements {:protocol-inline nil, :name shapes.dev/basic-measurements, :variadic false, :file "dev/shapes/dev.cljs", :end-column 25, :method-params ([dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 1}), :line 418, :end-line 418, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev?])), :test true}, app {:schema (schema.core/make-fn-schema output-schema146514 [input-schema146515]), :protocol-inline nil, :name shapes.dev/app, :variadic false, :file "dev/shapes/dev.cljs", :end-column 18, :method-params ([G__146518 G__146519]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag shapes.dev/t146532, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([data owner])), :line 538, :end-line 538, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :doc "Inputs: [data owner]", :test true}, square {:protocol-inline nil, :name shapes.dev/square, :variadic false, :file "dev/shapes/dev.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 1}), :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, dev-mode {:protocol-inline nil, :name shapes.dev/dev-mode, :variadic false, :file "dev/shapes/dev.cljs", :end-column 18, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 477, :end-line 477, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, pupils {:protocol-inline nil, :name shapes.dev/pupils, :variadic false, :file "dev/shapes/dev.cljs", :end-column 13, :method-params ([p__146473 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry eye-cy], :as measures} dev?])), :test true}, avg {:protocol-inline nil, :name shapes.dev/avg, :variadic true, :file "dev/shapes/dev.cljs", :end-column 10, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic true, :max-fixed-arity 0}), :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& xs])), :test true}}, :name shapes.dev, :doc nil, :excludes #{println}, :use-macros {sel1 dommy.core, html sablono.core, defcomponent om-tools.core, defhtml sablono.core}, :require-macros {dommy.core dommy.core, om-tools.core om-tools.core, html sablono.core, sablono.core sablono.core, om.core om.core, om om.core}, :uses nil, :requires {p shapes.proportional, weasel.repl weasel.repl, html sablono.core, om-tools.core om-tools.core, sablono.core sablono.core, figwheel.client figwheel.client, shapes.proportional shapes.proportional, om.core om.core, figwheel figwheel.client, dommy.core dommy.core, om om.core, repl weasel.repl}, :imports nil}