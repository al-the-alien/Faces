;; Analyzed by ClojureScript 0.0-3308
{:use-macros {sel1 dommy.core, html sablono.core, defcomponent om-tools.core, defhtml sablono.core}, :excludes #{println}, :name shapes.dev, :imports nil, :requires {main shapes.main, shapes.core shapes.core, p shapes.proportional, html sablono.core, om-tools.core om-tools.core, sablono.core sablono.core, shapes.main shapes.main, figwheel.client figwheel.client, shapes.proportional shapes.proportional, om.core om.core, figwheel figwheel.client, dommy.core dommy.core, om om.core, core shapes.core}, :uses nil, :defs {pause-mode {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 103, :column 10, :end-line 103, :end-column 20, :arglists (quote ([data]))}, :name shapes.dev/pause-mode, :variadic false, :file "dev/shapes/dev.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, section-controls {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 133, :column 10, :end-line 133, :end-column 26, :arglists (quote ([data]))}, :name shapes.dev/section-controls, :variadic false, :file "dev/shapes/dev.cljs", :end-column 26, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, dev-interface {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 160, :column 10, :end-line 160, :end-column 23, :arglists (quote ([data]))}, :name shapes.dev/dev-interface, :variadic false, :file "dev/shapes/dev.cljs", :end-column 23, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, development-measurements {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 18, :column 7, :end-line 18, :end-column 31, :arglists (quote ([avg?]))}, :name shapes.dev/development-measurements, :variadic false, :file "dev/shapes/dev.cljs", :end-column 31, :method-params ([avg?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([avg?]))}, draw-color-scale {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 144, :column 10, :end-line 144, :end-column 26, :arglists (quote ([color-scale]))}, :name shapes.dev/draw-color-scale, :variadic false, :file "dev/shapes/dev.cljs", :end-column 26, :method-params ([color-scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([color-scale]))}, avg-mode {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 67, :column 10, :end-line 67, :end-column 18, :arglists (quote ([data]))}, :name shapes.dev/avg-mode, :variadic false, :file "dev/shapes/dev.cljs", :end-column 18, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, println {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 13, :column 7, :end-line 13, :end-column 14, :arglists (quote ([& content])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(content)], :arglists ([& content]), :arglists-meta (nil)}}, :name shapes.dev/println, :variadic true, :file "dev/shapes/dev.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(content)], :arglists ([& content]), :arglists-meta (nil)}, :method-params [(content)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists ([& content])}, ->t27932 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([G__27927 owner data input-checker27925 G__27928 output-checker27926 input-schema27924 validate__18554__auto__ app ufv__ output-schema27923 meta27933])), :file nil}, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/->t27932, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([G__27927 owner data input-checker27925 G__27928 output-checker27926 input-schema27924 validate__18554__auto__ app ufv__ output-schema27923 meta27933]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 183, :max-fixed-arity 12, :fn-var true, :arglists (quote ([G__27927 owner data input-checker27925 G__27928 output-checker27926 input-schema27924 validate__18554__auto__ app ufv__ output-schema27923 meta27933])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, section-face {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 51, :column 10, :end-line 51, :end-column 22, :arglists (quote ([{:keys [horizontal-a horizontal-b horizontal-c vertical-a vertical-b head-cx head-cy head-rx head-ry]}]))}, :name shapes.dev/section-face, :variadic false, :file "dev/shapes/dev.cljs", :end-column 22, :method-params ([p__27894]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [horizontal-a horizontal-b horizontal-c vertical-a vertical-b head-cx head-cy head-rx head-ry]}]))}, ->t27929 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([G__27927 owner data input-checker27925 G__27928 output-checker27926 input-schema27924 validate__18554__auto__ app ufv__ output-schema27923 meta27930])), :file nil}, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/->t27929, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([G__27927 owner data input-checker27925 G__27928 output-checker27926 input-schema27924 validate__18554__auto__ app ufv__ output-schema27923 meta27930]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 183, :max-fixed-arity 12, :fn-var true, :arglists (quote ([G__27927 owner data input-checker27925 G__27928 output-checker27926 input-schema27924 validate__18554__auto__ app ufv__ output-schema27923 meta27930])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name shapes.dev/app-state, :file "dev/shapes/dev.cljs", :line 178, :column 1, :end-line 178, :end-column 19, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 178, :column 10, :end-line 178, :end-column 19}}, ->app {:protocol-inline nil, :meta {:arglists (quote ([cursor__23210__auto__] [cursor__23210__auto__ m27922])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([cursor__23210__auto__] [cursor__23210__auto__ m27922]), :arglists ([cursor__23210__auto__] [cursor__23210__auto__ m27922]), :arglists-meta (nil nil)}, :file nil}, :name shapes.dev/->app, :variadic false, :file "dev/shapes/dev.cljs", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([cursor__23210__auto__] [cursor__23210__auto__ m27922]), :arglists ([cursor__23210__auto__] [cursor__23210__auto__ m27922]), :arglists-meta (nil nil)}, :method-params ([cursor__23210__auto__] [cursor__23210__auto__ m27922]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :max-fixed-arity 2, :fn-var true, :arglists ([cursor__23210__auto__] [cursor__23210__auto__ m27922])}, face {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 37, :column 7, :end-line 37, :end-column 11, :arglists (quote ([avg? & {:keys [proportional?]}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(avg? {:keys [proportional?]})], :arglists ([avg? & {:keys [proportional?]}]), :arglists-meta (nil)}}, :name shapes.dev/face, :variadic true, :file "dev/shapes/dev.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(avg? {:keys [proportional?]})], :arglists ([avg? & {:keys [proportional?]}]), :arglists-meta (nil)}, :method-params [(avg? {:keys [proportional?]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists ([avg? & {:keys [proportional?]}])}, t27929 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/t27929, :file "dev/shapes/dev.cljs", :type true, :anonymous true, :column 1, :line 183, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app {:schema (schema.core/make-fn-schema output-schema27923 [input-schema27924]), :protocol-inline nil, :meta {:arglists (quote ([data owner])), :file "/Users/eliana/workspace/cljs/Portraits/dev/shapes/dev.cljs", :line 183, :column 15, :end-line 183, :end-column 18, :schema (schema.core/make-fn-schema output-schema27923 [input-schema27924]), :doc "Inputs: [data owner]", :raw-arglists (quote ([data owner]))}, :name shapes.dev/app, :variadic false, :file "dev/shapes/dev.cljs", :end-column 18, :method-params ([G__27927 G__27928]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([data owner])), :line 183, :end-line 183, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :doc "Inputs: [data owner]"}, t27932 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/t27932, :file "dev/shapes/dev.cljs", :type true, :anonymous true, :column 1, :line 183, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {om om.core, om.core om.core, html sablono.core, sablono.core sablono.core, om-tools.core om-tools.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:schema :proportional? :schema.core/error :head-ry :head-cx :measurements :paused? :sections? :vertical-a :value :horizontal-c :horizontal-a :width :type :head-cy :build-id :cx :cy :error :horizontal-b :target :vertical-b :avg? :head-rx :height}, :order [:cx :cy :width :height :proportional? :horizontal-a :horizontal-b :horizontal-c :vertical-a :vertical-b :head-cx :head-cy :head-rx :head-ry :paused? :avg? :measurements :sections? :type :schema :value :error :schema.core/error :build-id :target]}, :doc nil}