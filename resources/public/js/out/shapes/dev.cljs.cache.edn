;; Analyzed by ClojureScript 0.0-2816
{:defs {nose {:protocol-inline nil, :name shapes.dev/nose, :variadic false, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([p__60289 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy eye-cxa eye-cxb eye-cy], :as measures} dev?])), :test true}, pause-mode {:protocol-inline nil, :name shapes.dev/pause-mode, :variadic false, :file "dev/shapes/dev.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 307, :end-line 307, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, log {:file "dev/shapes/dev.cljs", :line 386, :column 1, :end-line 386, :end-column 9, :test true, :name shapes.dev/log}, ys-within-ellipse {:protocol-inline nil, :name shapes.dev/ys-within-ellipse, :variadic false, :file "dev/shapes/dev.cljs", :end-column 24, :method-params ([x a b h k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 5}), :line 30, :end-line 30, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x a b h k])), :test true}, eyes {:protocol-inline nil, :name shapes.dev/eyes, :variadic false, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([p__60283 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 128, :end-line 128, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy head-width head-height head-rx head-ry], :as measures} dev?])), :test true}, sqrt {:protocol-inline nil, :name shapes.dev/sqrt, :variadic false, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, t60319 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/t60319, :file "dev/shapes/dev.cljs", :type true, :anonymous true, :column 1, :line 336, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, xy-on-circle {:protocol-inline nil, :name shapes.dev/xy-on-circle, :variadic false, :file "dev/shapes/dev.cljs", :end-column 19, :method-params ([pupil-r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pupil-r])), :test true}, println {:protocol-inline nil, :name shapes.dev/println, :variadic true, :file "dev/shapes/dev.cljs", :end-column 14, :method-params ([content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 0}), :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& content])), :test true}, ->t60319 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/->t60319, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([owner data input-checker60311 validate__17001__auto__ G__60314 input-schema60310 G__60313 output-checker60312 output-schema60309 app ufv__ meta60320]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag shapes.dev/t60319, :variadic false, :max-fixed-arity 12}), :line 336, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner data input-checker60311 validate__17001__auto__ G__60314 input-schema60310 G__60313 output-checker60312 output-schema60309 app ufv__ meta60320])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, draw-eyes {:protocol-inline nil, :name shapes.dev/draw-eyes, :variadic false, :file "dev/shapes/dev.cljs", :end-column 19, :method-params ([p__60286]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 175, :end-line 175, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry pupil-r pupil-cxa pupil-cxb pupil-cy highlight-cxa highlight-cxb highlight-cy highlight-r]}])), :test true}, ->t60315 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/->t60315, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([owner data input-checker60311 validate__17001__auto__ G__60314 input-schema60310 G__60313 output-checker60312 output-schema60309 app ufv__ meta60316]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag shapes.dev/t60315, :variadic false, :max-fixed-arity 12}), :line 336, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner data input-checker60311 validate__17001__auto__ G__60314 input-schema60310 G__60313 output-checker60312 output-schema60309 app ufv__ meta60316])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, head {:protocol-inline nil, :name shapes.dev/head, :variadic false, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([p__60292 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 217, :end-line 217, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [cx cy width height]} dev?])), :test true}, app-state {:file "dev/shapes/dev.cljs", :line 267, :column 1, :end-line 267, :end-column 19, :test true, :name shapes.dev/app-state}, ->app {:protocol-inline nil, :name shapes.dev/->app, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([cursor__18789__auto__] [cursor__18789__auto__ m60308]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 336, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__18789__auto__] [cursor__18789__auto__ m60308])), :test true}, face {:protocol-inline nil, :name shapes.dev/face, :variadic true, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([dev? p__60295]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic true, :max-fixed-arity 1}), :line 254, :end-line 254, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev? & {:keys [proportional?]}])), :test true}, basic-measurements {:protocol-inline nil, :name shapes.dev/basic-measurements, :variadic false, :file "dev/shapes/dev.cljs", :end-column 25, :method-params ([dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 1}), :line 227, :end-line 227, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev?])), :test true}, app {:schema (schema.core/make-fn-schema output-schema60309 [input-schema60310]), :protocol-inline nil, :name shapes.dev/app, :variadic false, :file "dev/shapes/dev.cljs", :end-column 18, :method-params ([G__60313 G__60314]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag shapes.dev/t60319, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([data owner])), :line 336, :end-line 336, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :doc "Inputs: [data owner]", :test true}, square {:protocol-inline nil, :name shapes.dev/square, :variadic false, :file "dev/shapes/dev.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 1}), :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, dev-mode {:protocol-inline nil, :name shapes.dev/dev-mode, :variadic false, :file "dev/shapes/dev.cljs", :end-column 18, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, pupils {:protocol-inline nil, :name shapes.dev/pupils, :variadic false, :file "dev/shapes/dev.cljs", :end-column 13, :method-params ([p__60280 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry eye-cy], :as measures} dev?])), :test true}, t60315 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/t60315, :file "dev/shapes/dev.cljs", :type true, :anonymous true, :column 1, :line 336, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, avg {:protocol-inline nil, :name shapes.dev/avg, :variadic true, :file "dev/shapes/dev.cljs", :end-column 10, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic true, :max-fixed-arity 0}), :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& xs])), :test true}}, :name shapes.dev, :doc nil, :excludes #{println}, :use-macros {sel1 dommy.core, html sablono.core, defcomponent om-tools.core, defhtml sablono.core}, :require-macros {dommy.core dommy.core, om-tools.core om-tools.core, html sablono.core, sablono.core sablono.core, om.core om.core, om om.core}, :uses nil, :requires {p shapes.proportional, weasel.repl weasel.repl, html sablono.core, om-tools.core om-tools.core, sablono.core sablono.core, figwheel.client figwheel.client, shapes.proportional shapes.proportional, om.core om.core, figwheel figwheel.client, dommy.core dommy.core, om om.core, repl weasel.repl}, :imports nil}