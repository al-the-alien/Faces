;; Analyzed by ClojureScript 0.0-2816
{:defs {->t185608 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/->t185608, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([owner G__185606 data output-checker185605 output-schema185602 G__185607 validate__17001__auto__ input-checker185604 input-schema185603 app ufv__ meta185609]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag shapes.dev/t185608, :variadic false, :max-fixed-arity 12}), :line 171, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner G__185606 data output-checker185605 output-schema185602 G__185607 validate__17001__auto__ input-checker185604 input-schema185603 app ufv__ meta185609])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, pause-mode {:protocol-inline nil, :name shapes.dev/pause-mode, :variadic false, :file "dev/shapes/dev.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, section-controls {:protocol-inline nil, :name shapes.dev/section-controls, :variadic false, :file "dev/shapes/dev.cljs", :end-column 26, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, dev-interface {:protocol-inline nil, :name shapes.dev/dev-interface, :variadic false, :file "dev/shapes/dev.cljs", :end-column 23, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, ->t185611 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/->t185611, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([owner G__185606 data output-checker185605 output-schema185602 G__185607 validate__17001__auto__ input-checker185604 input-schema185603 app ufv__ meta185612]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag shapes.dev/t185611, :variadic false, :max-fixed-arity 12}), :line 171, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner G__185606 data output-checker185605 output-schema185602 G__185607 validate__17001__auto__ input-checker185604 input-schema185603 app ufv__ meta185612])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, development-measurements {:protocol-inline nil, :name shapes.dev/development-measurements, :variadic false, :file "dev/shapes/dev.cljs", :end-column 31, :method-params ([avg?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 1}), :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([avg?])), :test true}, draw-color-scale {:protocol-inline nil, :name shapes.dev/draw-color-scale, :variadic false, :file "dev/shapes/dev.cljs", :end-column 26, :method-params ([color-scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag array, :variadic false, :max-fixed-arity 1}), :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([color-scale])), :test true}, println {:protocol-inline nil, :name shapes.dev/println, :variadic true, :file "dev/shapes/dev.cljs", :end-column 14, :method-params ([content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 0}), :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& content])), :test true}, section-face {:protocol-inline nil, :name shapes.dev/section-face, :variadic false, :file "dev/shapes/dev.cljs", :end-column 22, :method-params ([p__185573]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [horizontal-a horizontal-b horizontal-c vertical-a vertical-b head-cx head-cy head-rx head-ry]}])), :test true}, app-state {:file "dev/shapes/dev.cljs", :line 166, :column 1, :end-line 166, :end-column 19, :test true, :name shapes.dev/app-state}, t185608 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/t185608, :file "dev/shapes/dev.cljs", :type true, :anonymous true, :column 1, :line 171, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->app {:protocol-inline nil, :name shapes.dev/->app, :variadic false, :file "dev/shapes/dev.cljs", :method-params ([cursor__18789__auto__] [cursor__18789__auto__ m185601]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 171, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__18789__auto__] [cursor__18789__auto__ m185601])), :test true}, face {:protocol-inline nil, :name shapes.dev/face, :variadic true, :file "dev/shapes/dev.cljs", :end-column 11, :method-params ([avg? p__185568]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic true, :max-fixed-arity 1}), :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([avg? & {:keys [proportional?]}])), :test true}, t185611 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name shapes.dev/t185611, :file "dev/shapes/dev.cljs", :type true, :anonymous true, :column 1, :line 171, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app {:schema (schema.core/make-fn-schema output-schema185602 [input-schema185603]), :protocol-inline nil, :name shapes.dev/app, :variadic false, :file "dev/shapes/dev.cljs", :end-column 18, :method-params ([G__185606 G__185607]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag shapes.dev/t185611, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([data owner])), :line 171, :end-line 171, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :doc "Inputs: [data owner]", :test true}, dev-mode {:protocol-inline nil, :name shapes.dev/dev-mode, :variadic false, :file "dev/shapes/dev.cljs", :end-column 18, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}}, :name shapes.dev, :doc nil, :excludes #{println}, :use-macros {sel1 dommy.core, html sablono.core, defcomponent om-tools.core, defhtml sablono.core}, :require-macros {dommy.core dommy.core, om-tools.core om-tools.core, html sablono.core, sablono.core sablono.core, om.core om.core, om om.core}, :uses nil, :requires {shapes.core shapes.core, p shapes.proportional, weasel.repl weasel.repl, html sablono.core, om-tools.core om-tools.core, sablono.core sablono.core, figwheel.client figwheel.client, shapes.proportional shapes.proportional, om.core om.core, figwheel figwheel.client, dommy.core dommy.core, om om.core, repl weasel.repl, core shapes.core}, :imports nil}