;; Analyzed by ClojureScript 0.0-2816
{:defs {nose {:protocol-inline nil, :name shapes.proportional/nose, :variadic false, :file "src/shapes/proportional.cljs", :end-column 11, :method-params ([p__37609 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 151, :end-line 151, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy eye-cxa eye-cxb eye-cy], :as measures} dev?])), :test true}, ys-within-ellipse {:protocol-inline nil, :name shapes.proportional/ys-within-ellipse, :variadic false, :file "src/shapes/proportional.cljs", :end-column 24, :method-params ([x a b h k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 5}), :line 23, :end-line 23, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x a b h k])), :test true}, eyes {:protocol-inline nil, :name shapes.proportional/eyes, :variadic false, :file "src/shapes/proportional.cljs", :end-column 11, :method-params ([p__37603 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy head-width head-height head-rx], :as measures} dev?])), :test true}, sqrt {:protocol-inline nil, :name shapes.proportional/sqrt, :variadic false, :file "src/shapes/proportional.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, println {:protocol-inline nil, :name shapes.proportional/println, :variadic true, :file "src/shapes/proportional.cljs", :end-column 14, :method-params ([content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 0}), :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& content])), :test true}, draw-eyes {:protocol-inline nil, :name shapes.proportional/draw-eyes, :variadic false, :file "src/shapes/proportional.cljs", :end-column 19, :method-params ([p__37606]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry pupil-r pupil-cxa pupil-cxb pupil-cy highlight-cxa highlight-cxb highlight-cy highlight-r]}])), :test true}, head {:protocol-inline nil, :name shapes.proportional/head, :variadic false, :file "src/shapes/proportional.cljs", :end-column 11, :method-params ([p__37612 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 158, :end-line 158, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [cx cy width height]} dev?])), :test true}, app-state {:file "src/shapes/proportional.cljs", :line 32, :column 1, :end-line 32, :end-column 19, :test true, :name shapes.proportional/app-state}, basic-measurements {:protocol-inline nil, :name shapes.proportional/basic-measurements, :variadic false, :file "src/shapes/proportional.cljs", :end-column 25, :method-params ([dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 1}), :line 168, :end-line 168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev?])), :test true}, square {:protocol-inline nil, :name shapes.proportional/square, :variadic false, :file "src/shapes/proportional.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 1}), :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, pupils {:protocol-inline nil, :name shapes.proportional/pupils, :variadic false, :file "src/shapes/proportional.cljs", :end-column 13, :method-params ([p__37600 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 2}), :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry eye-cy]} dev?])), :test true}}, :name shapes.proportional, :doc nil, :excludes #{println}, :use-macros {sel1 dommy.core, html sablono.core, defcomponent om-tools.core, defhtml sablono.core}, :require-macros {dommy.core dommy.core, om-tools.core om-tools.core, html sablono.core, sablono.core sablono.core, om.core om.core, om om.core}, :uses nil, :requires {dommy.core dommy.core, om-tools.core om-tools.core, html sablono.core, sablono.core sablono.core, om.core om.core, om om.core}, :imports nil}