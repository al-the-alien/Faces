;; Analyzed by ClojureScript 0.0-3308
{:use-macros {sel1 dommy.core, html sablono.core, defcomponent om-tools.core, defhtml sablono.core}, :excludes #{println}, :name shapes.proportional, :imports nil, :requires {om om.core, om.core om.core, html sablono.core, sablono.core sablono.core, om-tools.core om-tools.core, dommy.core dommy.core}, :uses nil, :defs {nose {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 152, :column 7, :end-line 152, :end-column 11, :arglists (quote ([{:keys [head-cx head-cy eye-cxa eye-cxb eye-cy], :as measures} dev?]))}, :name shapes.proportional/nose, :variadic false, :file "src/shapes/proportional.cljs", :end-column 11, :method-params ([p__23275 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy eye-cxa eye-cxb eye-cy], :as measures} dev?]))}, ys-within-ellipse {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 23, :column 7, :end-line 23, :end-column 24, :arglists (quote ([x a b h k]))}, :name shapes.proportional/ys-within-ellipse, :variadic false, :file "src/shapes/proportional.cljs", :end-column 24, :method-params ([x a b h k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x a b h k]))}, eyes {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 89, :column 7, :end-line 89, :end-column 11, :arglists (quote ([{:keys [head-cx head-cy head-width head-height head-rx], :as measures} dev?]))}, :name shapes.proportional/eyes, :variadic false, :file "src/shapes/proportional.cljs", :end-column 11, :method-params ([p__23269 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [head-cx head-cy head-width head-height head-rx], :as measures} dev?]))}, sqrt {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 18, :column 7, :end-line 18, :end-column 11, :arglists (quote ([x]))}, :name shapes.proportional/sqrt, :variadic false, :file "src/shapes/proportional.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, println {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 9, :column 7, :end-line 9, :end-column 14, :arglists (quote ([& content])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(content)], :arglists ([& content]), :arglists-meta (nil)}}, :name shapes.proportional/println, :variadic true, :file "src/shapes/proportional.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(content)], :arglists ([& content]), :arglists-meta (nil)}, :method-params [(content)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists ([& content])}, draw-eyes {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 126, :column 10, :end-line 126, :end-column 19, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry pupil-r pupil-cxa pupil-cxb pupil-cy highlight-cxa highlight-cxb highlight-cy highlight-r]}]))}, :name shapes.proportional/draw-eyes, :variadic false, :file "src/shapes/proportional.cljs", :end-column 19, :method-params ([p__23272]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry pupil-r pupil-cxa pupil-cxb pupil-cy highlight-cxa highlight-cxb highlight-cy highlight-r]}]))}, head {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 159, :column 7, :end-line 159, :end-column 11, :arglists (quote ([{:keys [cx cy width height]} dev?]))}, :name shapes.proportional/head, :variadic false, :file "src/shapes/proportional.cljs", :end-column 11, :method-params ([p__23278 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [cx cy width height]} dev?]))}, app-state {:name shapes.proportional/app-state, :file "src/shapes/proportional.cljs", :line 32, :column 1, :end-line 32, :end-column 19, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 32, :column 10, :end-line 32, :end-column 19}}, basic-measurements {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 169, :column 7, :end-line 169, :end-column 25, :arglists (quote ([dev?]))}, :name shapes.proportional/basic-measurements, :variadic false, :file "src/shapes/proportional.cljs", :end-column 25, :method-params ([dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev?]))}, square {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 14, :column 7, :end-line 14, :end-column 13, :arglists (quote ([x]))}, :name shapes.proportional/square, :variadic false, :file "src/shapes/proportional.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, pupils {:protocol-inline nil, :meta {:file "/Users/eliana/workspace/cljs/Portraits/src/shapes/proportional.cljs", :line 36, :column 7, :end-line 36, :end-column 13, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry eye-cy]} dev?]))}, :name shapes.proportional/pupils, :variadic false, :file "src/shapes/proportional.cljs", :end-column 13, :method-params ([p__23266 dev?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [eye-cxa eye-cxb eye-cy eye-rx eye-ry eye-cy]} dev?]))}}, :require-macros {om om.core, om.core om.core, html sablono.core, sablono.core sablono.core, om-tools.core om-tools.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:min :highlight-cxb :rx :eye-cxb :head-ry :eye-cy :pupil-r :head-cx :pupil-cy :highlight-cxa :width :highlight-r :head-cy :head-height :eye-cxa :eye-rx :pupil-cxb :max :cx :cy :pupil-cxa :highlight-cy :head-width :ry :head-rx :height :eye-ry :text}, :order [:min :max :text :eye-cxa :eye-cxb :eye-cy :eye-rx :eye-ry :cx :cy :rx :ry :pupil-r :pupil-cxa :pupil-cxb :pupil-cy :highlight-r :highlight-cxa :highlight-cxb :highlight-cy :head-cx :head-cy :head-width :head-height :head-rx :width :height :head-ry]}, :doc nil}