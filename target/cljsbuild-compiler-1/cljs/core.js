// Compiled by ClojureScript 0.0-2816 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__20003__delegate = function (args){
return console.log.apply(console,(function (){var G__20002 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__20002) : cljs.core.into_array.call(null,G__20002));
})());
};
var G__20003 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20004__i = 0, G__20004__a = new Array(arguments.length -  0);
while (G__20004__i < G__20004__a.length) {G__20004__a[G__20004__i] = arguments[G__20004__i + 0]; ++G__20004__i;}
  args = new cljs.core.IndexedSeq(G__20004__a,0);
} 
return G__20003__delegate.call(this,args);};
G__20003.cljs$lang$maxFixedArity = 0;
G__20003.cljs$lang$applyTo = (function (arglist__20005){
var args = cljs.core.seq(arglist__20005);
return G__20003__delegate(args);
});
G__20003.cljs$core$IFn$_invoke$arity$variadic = G__20003__delegate;
return G__20003;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__20007 = x;
return goog.isString(G__20007);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__20009 = x__$1;
return goog.typeOf(G__20009);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__5878__auto__ = ty;
if(cljs.core.truth_(and__5878__auto__)){
return ty.cljs$lang$type;
} else {
return and__5878__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__20011 = obj;
return goog.typeOf(G__20011);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4404__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4404__auto__)){
var s = temp__4404__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__20013 = Symbol;
return goog.typeOf(G__20013);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__6777__auto___20015 = len;
var i_20016 = (0);
while(true){
if((i_20016 < n__6777__auto___20015)){
(new_arr[i_20016] = (arr[i_20016]));

var G__20017 = (i_20016 + (1));
i_20016 = G__20017;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__20018 = (i + (1));
i = G__20018;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__20027__delegate = function (array,i,idxs){
var G__20024 = aget;
var G__20025 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__20026 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__20024,G__20025,G__20026) : cljs.core.apply.call(null,G__20024,G__20025,G__20026));
};
var G__20027 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__20028__i = 0, G__20028__a = new Array(arguments.length -  2);
while (G__20028__i < G__20028__a.length) {G__20028__a[G__20028__i] = arguments[G__20028__i + 2]; ++G__20028__i;}
  idxs = new cljs.core.IndexedSeq(G__20028__a,0);
} 
return G__20027__delegate.call(this,array,i,idxs);};
G__20027.cljs$lang$maxFixedArity = 2;
G__20027.cljs$lang$applyTo = (function (arglist__20029){
var array = cljs.core.first(arglist__20029);
arglist__20029 = cljs.core.next(arglist__20029);
var i = cljs.core.first(arglist__20029);
var idxs = cljs.core.rest(arglist__20029);
return G__20027__delegate(array,i,idxs);
});
G__20027.cljs$core$IFn$_invoke$arity$variadic = G__20027__delegate;
return G__20027;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__20030 = null;
if (arguments.length > 2) {
var G__20031__i = 0, G__20031__a = new Array(arguments.length -  2);
while (G__20031__i < G__20031__a.length) {G__20031__a[G__20031__i] = arguments[G__20031__i + 2]; ++G__20031__i;}
G__20030 = new cljs.core.IndexedSeq(G__20031__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__20030);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__20040__delegate = function (array,idx,idx2,idxv){
var G__20036 = aset;
var G__20037 = (array[idx]);
var G__20038 = idx2;
var G__20039 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__20036,G__20037,G__20038,G__20039) : cljs.core.apply.call(null,G__20036,G__20037,G__20038,G__20039));
};
var G__20040 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__20041__i = 0, G__20041__a = new Array(arguments.length -  3);
while (G__20041__i < G__20041__a.length) {G__20041__a[G__20041__i] = arguments[G__20041__i + 3]; ++G__20041__i;}
  idxv = new cljs.core.IndexedSeq(G__20041__a,0);
} 
return G__20040__delegate.call(this,array,idx,idx2,idxv);};
G__20040.cljs$lang$maxFixedArity = 3;
G__20040.cljs$lang$applyTo = (function (arglist__20042){
var array = cljs.core.first(arglist__20042);
arglist__20042 = cljs.core.next(arglist__20042);
var idx = cljs.core.first(arglist__20042);
arglist__20042 = cljs.core.next(arglist__20042);
var idx2 = cljs.core.first(arglist__20042);
var idxv = cljs.core.rest(arglist__20042);
return G__20040__delegate(array,idx,idx2,idxv);
});
G__20040.cljs$core$IFn$_invoke$arity$variadic = G__20040__delegate;
return G__20040;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__20043 = null;
if (arguments.length > 3) {
var G__20044__i = 0, G__20044__a = new Array(arguments.length -  3);
while (G__20044__i < G__20044__a.length) {G__20044__a[G__20044__i] = arguments[G__20044__i + 3]; ++G__20044__i;}
G__20043 = new cljs.core.IndexedSeq(G__20044__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__20043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__20050 = (function (a,x){
a.push(x);

return a;
});
var G__20051 = [];
var G__20052 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20050,G__20051,G__20052) : cljs.core.reduce.call(null,G__20050,G__20051,G__20052));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__20053__i = 0, G__20053__a = new Array(arguments.length -  2);
while (G__20053__i < G__20053__a.length) {G__20053__a[G__20053__i] = arguments[G__20053__i + 2]; ++G__20053__i;}
  args = new cljs.core.IndexedSeq(G__20053__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__20054){
var obj = cljs.core.first(arglist__20054);
arglist__20054 = cljs.core.next(arglist__20054);
var s = cljs.core.first(arglist__20054);
var args = cljs.core.rest(arglist__20054);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj20056 = {};
return obj20056;
})();


cljs.core.IFn = (function (){var obj20058 = {};
return obj20058;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20104 = x__6534__auto__;
return goog.typeOf(G__20104);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20106 = x__6534__auto__;
return goog.typeOf(G__20106);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20108 = x__6534__auto__;
return goog.typeOf(G__20108);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20110 = x__6534__auto__;
return goog.typeOf(G__20110);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20112 = x__6534__auto__;
return goog.typeOf(G__20112);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20114 = x__6534__auto__;
return goog.typeOf(G__20114);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20116 = x__6534__auto__;
return goog.typeOf(G__20116);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20118 = x__6534__auto__;
return goog.typeOf(G__20118);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20120 = x__6534__auto__;
return goog.typeOf(G__20120);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20122 = x__6534__auto__;
return goog.typeOf(G__20122);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20124 = x__6534__auto__;
return goog.typeOf(G__20124);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20126 = x__6534__auto__;
return goog.typeOf(G__20126);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20128 = x__6534__auto__;
return goog.typeOf(G__20128);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20130 = x__6534__auto__;
return goog.typeOf(G__20130);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20132 = x__6534__auto__;
return goog.typeOf(G__20132);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20134 = x__6534__auto__;
return goog.typeOf(G__20134);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20136 = x__6534__auto__;
return goog.typeOf(G__20136);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20138 = x__6534__auto__;
return goog.typeOf(G__20138);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20140 = x__6534__auto__;
return goog.typeOf(G__20140);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20142 = x__6534__auto__;
return goog.typeOf(G__20142);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20144 = x__6534__auto__;
return goog.typeOf(G__20144);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._invoke[(function (){var G__20146 = x__6534__auto__;
return goog.typeOf(G__20146);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._invoke["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj20148 = {};
return obj20148;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__5878__auto__ = value;
if(and__5878__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__5878__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__6534__auto__ = (((value == null))?null:value);
return (function (){var or__5890__auto__ = (cljs.core._clone[(function (){var G__20152 = x__6534__auto__;
return goog.typeOf(G__20152);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._clone["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj20154 = {};
return obj20154;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._count[(function (){var G__20158 = x__6534__auto__;
return goog.typeOf(G__20158);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._count["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj20160 = {};
return obj20160;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._empty[(function (){var G__20164 = x__6534__auto__;
return goog.typeOf(G__20164);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._empty["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj20166 = {};
return obj20166;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._conj[(function (){var G__20170 = x__6534__auto__;
return goog.typeOf(G__20170);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._conj["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj20172 = {};
return obj20172;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._nth[(function (){var G__20178 = x__6534__auto__;
return goog.typeOf(G__20178);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._nth["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._nth[(function (){var G__20180 = x__6534__auto__;
return goog.typeOf(G__20180);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._nth["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj20182 = {};
return obj20182;
})();


cljs.core.ISeq = (function (){var obj20184 = {};
return obj20184;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._first[(function (){var G__20188 = x__6534__auto__;
return goog.typeOf(G__20188);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._first["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._rest[(function (){var G__20192 = x__6534__auto__;
return goog.typeOf(G__20192);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._rest["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj20194 = {};
return obj20194;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._next[(function (){var G__20198 = x__6534__auto__;
return goog.typeOf(G__20198);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._next["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj20200 = {};
return obj20200;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._lookup[(function (){var G__20206 = x__6534__auto__;
return goog.typeOf(G__20206);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._lookup["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._lookup[(function (){var G__20208 = x__6534__auto__;
return goog.typeOf(G__20208);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._lookup["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj20210 = {};
return obj20210;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__20214 = x__6534__auto__;
return goog.typeOf(G__20214);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._assoc[(function (){var G__20218 = x__6534__auto__;
return goog.typeOf(G__20218);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._assoc["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj20220 = {};
return obj20220;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._dissoc[(function (){var G__20224 = x__6534__auto__;
return goog.typeOf(G__20224);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._dissoc["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj20226 = {};
return obj20226;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._key[(function (){var G__20230 = x__6534__auto__;
return goog.typeOf(G__20230);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._key["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._val[(function (){var G__20234 = x__6534__auto__;
return goog.typeOf(G__20234);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._val["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj20236 = {};
return obj20236;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._disjoin[(function (){var G__20240 = x__6534__auto__;
return goog.typeOf(G__20240);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._disjoin["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj20242 = {};
return obj20242;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._peek[(function (){var G__20246 = x__6534__auto__;
return goog.typeOf(G__20246);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._peek["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._pop[(function (){var G__20250 = x__6534__auto__;
return goog.typeOf(G__20250);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._pop["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj20252 = {};
return obj20252;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._assoc_n[(function (){var G__20256 = x__6534__auto__;
return goog.typeOf(G__20256);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj20258 = {};
return obj20258;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._deref[(function (){var G__20262 = x__6534__auto__;
return goog.typeOf(G__20262);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._deref["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj20264 = {};
return obj20264;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._deref_with_timeout[(function (){var G__20268 = x__6534__auto__;
return goog.typeOf(G__20268);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj20270 = {};
return obj20270;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._meta[(function (){var G__20274 = x__6534__auto__;
return goog.typeOf(G__20274);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._meta["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj20276 = {};
return obj20276;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._with_meta[(function (){var G__20280 = x__6534__auto__;
return goog.typeOf(G__20280);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._with_meta["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj20282 = {};
return obj20282;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._reduce[(function (){var G__20288 = x__6534__auto__;
return goog.typeOf(G__20288);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._reduce["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._reduce[(function (){var G__20290 = x__6534__auto__;
return goog.typeOf(G__20290);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._reduce["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj20292 = {};
return obj20292;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._kv_reduce[(function (){var G__20296 = x__6534__auto__;
return goog.typeOf(G__20296);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj20298 = {};
return obj20298;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._equiv[(function (){var G__20302 = x__6534__auto__;
return goog.typeOf(G__20302);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._equiv["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj20304 = {};
return obj20304;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._hash[(function (){var G__20308 = x__6534__auto__;
return goog.typeOf(G__20308);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._hash["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj20310 = {};
return obj20310;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._seq[(function (){var G__20314 = x__6534__auto__;
return goog.typeOf(G__20314);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._seq["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj20316 = {};
return obj20316;
})();


cljs.core.IList = (function (){var obj20318 = {};
return obj20318;
})();


cljs.core.IRecord = (function (){var obj20320 = {};
return obj20320;
})();


cljs.core.IReversible = (function (){var obj20322 = {};
return obj20322;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._rseq[(function (){var G__20326 = x__6534__auto__;
return goog.typeOf(G__20326);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._rseq["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj20328 = {};
return obj20328;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._sorted_seq[(function (){var G__20332 = x__6534__auto__;
return goog.typeOf(G__20332);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._sorted_seq_from[(function (){var G__20336 = x__6534__auto__;
return goog.typeOf(G__20336);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._entry_key[(function (){var G__20340 = x__6534__auto__;
return goog.typeOf(G__20340);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._entry_key["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._comparator[(function (){var G__20344 = x__6534__auto__;
return goog.typeOf(G__20344);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._comparator["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj20346 = {};
return obj20346;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__5878__auto__ = writer;
if(and__5878__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__5878__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__6534__auto__ = (((writer == null))?null:writer);
return (function (){var or__5890__auto__ = (cljs.core._write[(function (){var G__20350 = x__6534__auto__;
return goog.typeOf(G__20350);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._write["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__5878__auto__ = writer;
if(and__5878__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__5878__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__6534__auto__ = (((writer == null))?null:writer);
return (function (){var or__5890__auto__ = (cljs.core._flush[(function (){var G__20354 = x__6534__auto__;
return goog.typeOf(G__20354);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._flush["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj20356 = {};
return obj20356;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._pr_writer[(function (){var G__20360 = x__6534__auto__;
return goog.typeOf(G__20360);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj20362 = {};
return obj20362;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__5878__auto__ = d;
if(and__5878__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__5878__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__6534__auto__ = (((d == null))?null:d);
return (function (){var or__5890__auto__ = (cljs.core._realized_QMARK_[(function (){var G__20366 = x__6534__auto__;
return goog.typeOf(G__20366);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj20368 = {};
return obj20368;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._notify_watches[(function (){var G__20372 = x__6534__auto__;
return goog.typeOf(G__20372);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._add_watch[(function (){var G__20376 = x__6534__auto__;
return goog.typeOf(G__20376);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._add_watch["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__5878__auto__ = this$;
if(and__5878__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__5878__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__6534__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5890__auto__ = (cljs.core._remove_watch[(function (){var G__20380 = x__6534__auto__;
return goog.typeOf(G__20380);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj20382 = {};
return obj20382;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._as_transient[(function (){var G__20386 = x__6534__auto__;
return goog.typeOf(G__20386);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._as_transient["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj20388 = {};
return obj20388;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__5878__auto__ = tcoll;
if(and__5878__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__5878__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__6534__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5890__auto__ = (cljs.core._conj_BANG_[(function (){var G__20392 = x__6534__auto__;
return goog.typeOf(G__20392);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__5878__auto__ = tcoll;
if(and__5878__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__5878__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__6534__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5890__auto__ = (cljs.core._persistent_BANG_[(function (){var G__20396 = x__6534__auto__;
return goog.typeOf(G__20396);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj20398 = {};
return obj20398;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__5878__auto__ = tcoll;
if(and__5878__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__5878__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__6534__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5890__auto__ = (cljs.core._assoc_BANG_[(function (){var G__20402 = x__6534__auto__;
return goog.typeOf(G__20402);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj20404 = {};
return obj20404;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__5878__auto__ = tcoll;
if(and__5878__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__5878__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__6534__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5890__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__20408 = x__6534__auto__;
return goog.typeOf(G__20408);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj20410 = {};
return obj20410;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__5878__auto__ = tcoll;
if(and__5878__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__5878__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__6534__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5890__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__20414 = x__6534__auto__;
return goog.typeOf(G__20414);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__5878__auto__ = tcoll;
if(and__5878__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__5878__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__6534__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5890__auto__ = (cljs.core._pop_BANG_[(function (){var G__20418 = x__6534__auto__;
return goog.typeOf(G__20418);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj20420 = {};
return obj20420;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__5878__auto__ = tcoll;
if(and__5878__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__5878__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__6534__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5890__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__20424 = x__6534__auto__;
return goog.typeOf(G__20424);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj20426 = {};
return obj20426;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__5878__auto__ = x;
if(and__5878__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__5878__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__6534__auto__ = (((x == null))?null:x);
return (function (){var or__5890__auto__ = (cljs.core._compare[(function (){var G__20430 = x__6534__auto__;
return goog.typeOf(G__20430);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._compare["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj20432 = {};
return obj20432;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._drop_first[(function (){var G__20436 = x__6534__auto__;
return goog.typeOf(G__20436);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._drop_first["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj20438 = {};
return obj20438;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._chunked_first[(function (){var G__20442 = x__6534__auto__;
return goog.typeOf(G__20442);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._chunked_rest[(function (){var G__20446 = x__6534__auto__;
return goog.typeOf(G__20446);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj20448 = {};
return obj20448;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._chunked_next[(function (){var G__20452 = x__6534__auto__;
return goog.typeOf(G__20452);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj20454 = {};
return obj20454;
})();

cljs.core._name = (function _name(x){
if((function (){var and__5878__auto__ = x;
if(and__5878__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__5878__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__6534__auto__ = (((x == null))?null:x);
return (function (){var or__5890__auto__ = (cljs.core._name[(function (){var G__20458 = x__6534__auto__;
return goog.typeOf(G__20458);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._name["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__5878__auto__ = x;
if(and__5878__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__5878__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__6534__auto__ = (((x == null))?null:x);
return (function (){var or__5890__auto__ = (cljs.core._namespace[(function (){var G__20462 = x__6534__auto__;
return goog.typeOf(G__20462);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._namespace["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj20464 = {};
return obj20464;
})();


cljs.core.IReset = (function (){var obj20466 = {};
return obj20466;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._reset_BANG_[(function (){var G__20470 = x__6534__auto__;
return goog.typeOf(G__20470);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj20472 = {};
return obj20472;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._swap_BANG_[(function (){var G__20482 = x__6534__auto__;
return goog.typeOf(G__20482);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._swap_BANG_[(function (){var G__20484 = x__6534__auto__;
return goog.typeOf(G__20484);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._swap_BANG_[(function (){var G__20486 = x__6534__auto__;
return goog.typeOf(G__20486);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._swap_BANG_[(function (){var G__20488 = x__6534__auto__;
return goog.typeOf(G__20488);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj20490 = {};
return obj20490;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__5878__auto__ = o;
if(and__5878__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__5878__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__6534__auto__ = (((o == null))?null:o);
return (function (){var or__5890__auto__ = (cljs.core._vreset_BANG_[(function (){var G__20494 = x__6534__auto__;
return goog.typeOf(G__20494);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj20496 = {};
return obj20496;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__5878__auto__ = coll;
if(and__5878__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__5878__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__6534__auto__ = (((coll == null))?null:coll);
return (function (){var or__5890__auto__ = (cljs.core._iterator[(function (){var G__20500 = x__6534__auto__;
return goog.typeOf(G__20500);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._iterator["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__20503 = (4294967295);
var G__20504 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20503,G__20504) : Math.imul.call(null,G__20503,G__20504));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__20507 = a;
var G__20508 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20507,G__20508) : Math.imul.call(null,G__20507,G__20508));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__20509 = (i + (2));
var G__20510 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__20509;
h1 = G__20510;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj20512 = {};
return obj20512;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__20513 = (i + (1));
var G__20514 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__20513;
hash = G__20514;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj20518 = {};
return obj20518;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__20521 = o;
if(G__20521){
var bit__6564__auto__ = (G__20521.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__6564__auto__) || (G__20521.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__20522 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20522) : Math.floor.call(null,G__20522));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__5878__auto__ = cljs.core.not(a.ns);
if(and__5878__auto__){
return b.ns;
} else {
return and__5878__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__20529 = a.ns;
var G__20530 = b.ns;
return goog.array.defaultCompare(G__20529,G__20530);
})();
if(((0) === nsc)){
var G__20531 = a.name;
var G__20532 = b.name;
return goog.array.defaultCompare(G__20531,G__20532);
} else {
return nsc;
}
}
} else {
var G__20533 = a.name;
var G__20534 = b.name;
return goog.array.defaultCompare(G__20533,G__20534);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__6311__auto__ = self__._hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__20536 = null;
var G__20536__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__20536__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__20536 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__20536__2.call(this,self__,coll);
case 3:
return G__20536__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20536.cljs$core$IFn$_invoke$arity$2 = G__20536__2;
G__20536.cljs$core$IFn$_invoke$arity$3 = G__20536__3;
return G__20536;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args20535){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20535)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__20584 = null;
var G__20584__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__20584__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__20584__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__20584__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__20584__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__20584__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__20584__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__20584__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__20584__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__20584__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__20584__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__20584__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__20584__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__20584__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__20584__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__20584__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__20584__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__20584__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__20584__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__20584__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__20584__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__20584__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20540 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20541 = a;
var G__20542 = b;
var G__20543 = c;
var G__20544 = d;
var G__20545 = e;
var G__20546 = f;
var G__20547 = g;
var G__20548 = h;
var G__20549 = i;
var G__20550 = j;
var G__20551 = k;
var G__20552 = l;
var G__20553 = m;
var G__20554 = n;
var G__20555 = o;
var G__20556 = p;
var G__20557 = q;
var G__20558 = r;
var G__20559 = s;
var G__20560 = t;
var G__20561 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20540,G__20541,G__20542,G__20543,G__20544,G__20545,G__20546,G__20547,G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559,G__20560,G__20561) : cljs.core.apply.call(null,G__20540,G__20541,G__20542,G__20543,G__20544,G__20545,G__20546,G__20547,G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559,G__20560,G__20561));
});
G__20584 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20584__1.call(this,self__);
case 2:
return G__20584__2.call(this,self__,a);
case 3:
return G__20584__3.call(this,self__,a,b);
case 4:
return G__20584__4.call(this,self__,a,b,c);
case 5:
return G__20584__5.call(this,self__,a,b,c,d);
case 6:
return G__20584__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20584__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20584__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20584__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20584__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20584__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20584__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20584__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20584__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20584__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20584__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20584__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20584__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20584__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20584__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20584__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20584__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20584.cljs$core$IFn$_invoke$arity$1 = G__20584__1;
G__20584.cljs$core$IFn$_invoke$arity$2 = G__20584__2;
G__20584.cljs$core$IFn$_invoke$arity$3 = G__20584__3;
G__20584.cljs$core$IFn$_invoke$arity$4 = G__20584__4;
G__20584.cljs$core$IFn$_invoke$arity$5 = G__20584__5;
G__20584.cljs$core$IFn$_invoke$arity$6 = G__20584__6;
G__20584.cljs$core$IFn$_invoke$arity$7 = G__20584__7;
G__20584.cljs$core$IFn$_invoke$arity$8 = G__20584__8;
G__20584.cljs$core$IFn$_invoke$arity$9 = G__20584__9;
G__20584.cljs$core$IFn$_invoke$arity$10 = G__20584__10;
G__20584.cljs$core$IFn$_invoke$arity$11 = G__20584__11;
G__20584.cljs$core$IFn$_invoke$arity$12 = G__20584__12;
G__20584.cljs$core$IFn$_invoke$arity$13 = G__20584__13;
G__20584.cljs$core$IFn$_invoke$arity$14 = G__20584__14;
G__20584.cljs$core$IFn$_invoke$arity$15 = G__20584__15;
G__20584.cljs$core$IFn$_invoke$arity$16 = G__20584__16;
G__20584.cljs$core$IFn$_invoke$arity$17 = G__20584__17;
G__20584.cljs$core$IFn$_invoke$arity$18 = G__20584__18;
G__20584.cljs$core$IFn$_invoke$arity$19 = G__20584__19;
G__20584.cljs$core$IFn$_invoke$arity$20 = G__20584__20;
G__20584.cljs$core$IFn$_invoke$arity$21 = G__20584__21;
G__20584.cljs$core$IFn$_invoke$arity$22 = G__20584__22;
return G__20584;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args20539){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20539)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__20562 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20563 = a;
var G__20564 = b;
var G__20565 = c;
var G__20566 = d;
var G__20567 = e;
var G__20568 = f;
var G__20569 = g;
var G__20570 = h;
var G__20571 = i;
var G__20572 = j;
var G__20573 = k;
var G__20574 = l;
var G__20575 = m;
var G__20576 = n;
var G__20577 = o;
var G__20578 = p;
var G__20579 = q;
var G__20580 = r;
var G__20581 = s;
var G__20582 = t;
var G__20583 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578,G__20579,G__20580,G__20581,G__20582,G__20583) : cljs.core.apply.call(null,G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578,G__20579,G__20580,G__20581,G__20582,G__20583));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__20586 = x;
if(G__20586){
var bit__6571__auto__ = null;
if(cljs.core.truth_((function (){var or__5890__auto__ = bit__6571__auto__;
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return G__20586.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__20586.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20586);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20586);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__20588 = value;
if(G__20588){
var bit__6571__auto__ = (G__20588.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__6571__auto__) || (G__20588.cljs$core$ICloneable$)){
return true;
} else {
if((!G__20588.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20588);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20588);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20590 = coll;
if(G__20590){
var bit__6564__auto__ = (G__20590.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__6564__auto__) || (G__20590.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20592 = coll;
if(G__20592){
var bit__6564__auto__ = (G__20592.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6564__auto__) || (G__20592.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__20594 = coll;
if(G__20594){
var bit__6564__auto__ = (G__20594.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6564__auto__) || (G__20594.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20596 = coll;
if(G__20596){
var bit__6564__auto__ = (G__20596.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6564__auto__) || (G__20596.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__20601__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__20602 = y;
var G__20603 = cljs.core.first(more);
var G__20604 = cljs.core.next(more);
x = G__20602;
y = G__20603;
more = G__20604;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20601 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20605__i = 0, G__20605__a = new Array(arguments.length -  2);
while (G__20605__i < G__20605__a.length) {G__20605__a[G__20605__i] = arguments[G__20605__i + 2]; ++G__20605__i;}
  more = new cljs.core.IndexedSeq(G__20605__a,0);
} 
return G__20601__delegate.call(this,x,y,more);};
G__20601.cljs$lang$maxFixedArity = 2;
G__20601.cljs$lang$applyTo = (function (arglist__20606){
var x = cljs.core.first(arglist__20606);
arglist__20606 = cljs.core.next(arglist__20606);
var y = cljs.core.first(arglist__20606);
var more = cljs.core.rest(arglist__20606);
return G__20601__delegate(x,y,more);
});
G__20601.cljs$core$IFn$_invoke$arity$variadic = G__20601__delegate;
return G__20601;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__20607 = null;
if (arguments.length > 2) {
var G__20608__i = 0, G__20608__a = new Array(arguments.length -  2);
while (G__20608__i < G__20608__a.length) {G__20608__a[G__20608__i] = arguments[G__20608__i + 2]; ++G__20608__i;}
G__20607 = new cljs.core.IndexedSeq(G__20608__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__20609 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__20609) : cljs.core.es6_iterator_seq.call(null,G__20609));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20610 = (n + (1));
var G__20611 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20612 = cljs.core.next(coll__$1);
n = G__20610;
hash_code = G__20611;
coll__$1 = G__20612;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20613 = (n + (1));
var G__20614 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20615 = cljs.core.next(coll__$1);
n = G__20613;
hash_code = G__20614;
coll__$1 = G__20615;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__20616 = o;
return goog.getUid(G__20616);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__20618 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20618) : cljs.core.deref.call(null,G__20618));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20625 = val;
var G__20626 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20625,G__20626) : f.call(null,G__20625,G__20626));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20631 = nval;
var G__20632 = (n + (1));
val = G__20631;
n = G__20632;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20627 = val__$1;
var G__20628 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20627,G__20628) : f.call(null,G__20627,G__20628));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20633 = nval;
var G__20634 = (n + (1));
val__$1 = G__20633;
n = G__20634;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20629 = val__$1;
var G__20630 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20629,G__20630) : f.call(null,G__20629,G__20630));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20635 = nval;
var G__20636 = (n + (1));
val__$1 = G__20635;
n = G__20636;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20643 = val;
var G__20644 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20643,G__20644) : f.call(null,G__20643,G__20644));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20649 = nval;
var G__20650 = (n + (1));
val = G__20649;
n = G__20650;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20645 = val__$1;
var G__20646 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20645,G__20646) : f.call(null,G__20645,G__20646));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20651 = nval;
var G__20652 = (n + (1));
val__$1 = G__20651;
n = G__20652;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20647 = val__$1;
var G__20648 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20647,G__20648) : f.call(null,G__20647,G__20648));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20653 = nval;
var G__20654 = (n + (1));
val__$1 = G__20653;
n = G__20654;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__20656 = x;
if(G__20656){
var bit__6571__auto__ = (G__20656.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__6571__auto__) || (G__20656.cljs$core$ICounted$)){
return true;
} else {
if((!G__20656.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20656);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20656);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__20658 = x;
if(G__20658){
var bit__6571__auto__ = (G__20658.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6571__auto__) || (G__20658.cljs$core$IIndexed$)){
return true;
} else {
if((!G__20658.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20658);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20658);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20659 = coll__$1;
var G__20660 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20659,G__20660) : cljs.core.equiv_sequential.call(null,G__20659,G__20660));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20661 = o;
var G__20662 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20661,G__20662) : cljs.core.cons.call(null,G__20661,G__20662));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20665 = coll__$1;
var G__20666 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20665,G__20666) : cljs.core.equiv_sequential.call(null,G__20665,G__20666));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__20667 = cljs.core.List.EMPTY;
var G__20668 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__20667,G__20668) : cljs.core.with_meta.call(null,G__20667,G__20668));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__20669 = f;
var G__20670 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__20669,G__20670) : cljs.core.seq_reduce.call(null,G__20669,G__20670));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__20671 = f;
var G__20672 = start;
var G__20673 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__20671,G__20672,G__20673) : cljs.core.seq_reduce.call(null,G__20671,G__20672,G__20673));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20674 = o;
var G__20675 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20674,G__20675) : cljs.core.cons.call(null,G__20674,G__20675));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__20676 = sn;
s = G__20676;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__20681__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__20682 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__20683 = cljs.core.first(xs);
var G__20684 = cljs.core.next(xs);
coll = G__20682;
x = G__20683;
xs = G__20684;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__20681 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__20685__i = 0, G__20685__a = new Array(arguments.length -  2);
while (G__20685__i < G__20685__a.length) {G__20685__a[G__20685__i] = arguments[G__20685__i + 2]; ++G__20685__i;}
  xs = new cljs.core.IndexedSeq(G__20685__a,0);
} 
return G__20681__delegate.call(this,coll,x,xs);};
G__20681.cljs$lang$maxFixedArity = 2;
G__20681.cljs$lang$applyTo = (function (arglist__20686){
var coll = cljs.core.first(arglist__20686);
arglist__20686 = cljs.core.next(arglist__20686);
var x = cljs.core.first(arglist__20686);
var xs = cljs.core.rest(arglist__20686);
return G__20681__delegate(coll,x,xs);
});
G__20681.cljs$core$IFn$_invoke$arity$variadic = G__20681__delegate;
return G__20681;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__20687 = null;
if (arguments.length > 2) {
var G__20688__i = 0, G__20688__a = new Array(arguments.length -  2);
while (G__20688__i < G__20688__a.length) {G__20688__a[G__20688__i] = arguments[G__20688__i + 2]; ++G__20688__i;}
G__20687 = new cljs.core.IndexedSeq(G__20688__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__20687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__20689 = cljs.core.next(s);
var G__20690 = (acc + (1));
s = G__20689;
acc = G__20690;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__20692 = coll;
if(G__20692){
var bit__6564__auto__ = (G__20692.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__6564__auto__) || (G__20692.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__20693 = cljs.core.next(coll);
var G__20694 = (n - (1));
coll = G__20693;
n = G__20694;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__20695 = cljs.core.next(coll);
var G__20696 = (n - (1));
var G__20697 = not_found;
coll = G__20695;
n = G__20696;
not_found = G__20697;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__20702 = coll;
if(G__20702){
var bit__6564__auto__ = (G__20702.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6564__auto__) || (G__20702.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20703 = coll;
if(G__20703){
var bit__6571__auto__ = (G__20703.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6571__auto__) || (G__20703.cljs$core$ISeq$)){
return true;
} else {
if((!G__20703.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20703);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20703);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__20704 = coll;
if(G__20704){
var bit__6564__auto__ = (G__20704.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6564__auto__) || (G__20704.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20705 = coll;
if(G__20705){
var bit__6571__auto__ = (G__20705.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6571__auto__) || (G__20705.cljs$core$ISeq$)){
return true;
} else {
if((!G__20705.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20705);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20705);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__20706 = (n__$1 - (1));
var G__20707 = cljs.core.rest(xs);
n__$1 = G__20706;
xs = G__20707;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__20710 = o;
if(G__20710){
var bit__6564__auto__ = (G__20710.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6564__auto__) || (G__20710.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__20711 = o;
if(G__20711){
var bit__6564__auto__ = (G__20711.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6564__auto__) || (G__20711.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__20715__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__20716 = ret;
var G__20717 = cljs.core.first(kvs);
var G__20718 = cljs.core.second(kvs);
var G__20719 = cljs.core.nnext(kvs);
coll = G__20716;
k = G__20717;
v = G__20718;
kvs = G__20719;
continue;
} else {
return ret;
}
break;
}
};
var G__20715 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__20720__i = 0, G__20720__a = new Array(arguments.length -  3);
while (G__20720__i < G__20720__a.length) {G__20720__a[G__20720__i] = arguments[G__20720__i + 3]; ++G__20720__i;}
  kvs = new cljs.core.IndexedSeq(G__20720__a,0);
} 
return G__20715__delegate.call(this,coll,k,v,kvs);};
G__20715.cljs$lang$maxFixedArity = 3;
G__20715.cljs$lang$applyTo = (function (arglist__20721){
var coll = cljs.core.first(arglist__20721);
arglist__20721 = cljs.core.next(arglist__20721);
var k = cljs.core.first(arglist__20721);
arglist__20721 = cljs.core.next(arglist__20721);
var v = cljs.core.first(arglist__20721);
var kvs = cljs.core.rest(arglist__20721);
return G__20715__delegate(coll,k,v,kvs);
});
G__20715.cljs$core$IFn$_invoke$arity$variadic = G__20715__delegate;
return G__20715;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__20722 = null;
if (arguments.length > 3) {
var G__20723__i = 0, G__20723__a = new Array(arguments.length -  3);
while (G__20723__i < G__20723__a.length) {G__20723__a[G__20723__i] = arguments[G__20723__i + 3]; ++G__20723__i;}
G__20722 = new cljs.core.IndexedSeq(G__20723__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__20722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__20726__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__20727 = ret;
var G__20728 = cljs.core.first(ks);
var G__20729 = cljs.core.next(ks);
coll = G__20727;
k = G__20728;
ks = G__20729;
continue;
} else {
return ret;
}
}
break;
}
};
var G__20726 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20730__i = 0, G__20730__a = new Array(arguments.length -  2);
while (G__20730__i < G__20730__a.length) {G__20730__a[G__20730__i] = arguments[G__20730__i + 2]; ++G__20730__i;}
  ks = new cljs.core.IndexedSeq(G__20730__a,0);
} 
return G__20726__delegate.call(this,coll,k,ks);};
G__20726.cljs$lang$maxFixedArity = 2;
G__20726.cljs$lang$applyTo = (function (arglist__20731){
var coll = cljs.core.first(arglist__20731);
arglist__20731 = cljs.core.next(arglist__20731);
var k = cljs.core.first(arglist__20731);
var ks = cljs.core.rest(arglist__20731);
return G__20726__delegate(coll,k,ks);
});
G__20726.cljs$core$IFn$_invoke$arity$variadic = G__20726__delegate;
return G__20726;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__20732 = null;
if (arguments.length > 2) {
var G__20733__i = 0, G__20733__a = new Array(arguments.length -  2);
while (G__20733__i < G__20733__a.length) {G__20733__a[G__20733__i] = arguments[G__20733__i + 2]; ++G__20733__i;}
G__20732 = new cljs.core.IndexedSeq(G__20733__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__20732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__5890__auto__ = (function (){var G__20738 = f;
return goog.isFunction(G__20738);
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var G__20739 = f;
if(G__20739){
var bit__6571__auto__ = null;
if(cljs.core.truth_((function (){var or__5890__auto____$1 = bit__6571__auto__;
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
return G__20739.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__20739.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__20739);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__20739);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__21205 = null;
var G__21205__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__21205__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20741 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__20741) : self__.afn.call(null,G__20741));
});
var G__21205__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20742 = a;
var G__20743 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__20742,G__20743) : self__.afn.call(null,G__20742,G__20743));
});
var G__21205__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20744 = a;
var G__20745 = b;
var G__20746 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__20744,G__20745,G__20746) : self__.afn.call(null,G__20744,G__20745,G__20746));
});
var G__21205__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20747 = a;
var G__20748 = b;
var G__20749 = c;
var G__20750 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__20747,G__20748,G__20749,G__20750) : self__.afn.call(null,G__20747,G__20748,G__20749,G__20750));
});
var G__21205__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20751 = a;
var G__20752 = b;
var G__20753 = c;
var G__20754 = d;
var G__20755 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__20751,G__20752,G__20753,G__20754,G__20755) : self__.afn.call(null,G__20751,G__20752,G__20753,G__20754,G__20755));
});
var G__21205__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20756 = a;
var G__20757 = b;
var G__20758 = c;
var G__20759 = d;
var G__20760 = e;
var G__20761 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__20756,G__20757,G__20758,G__20759,G__20760,G__20761) : self__.afn.call(null,G__20756,G__20757,G__20758,G__20759,G__20760,G__20761));
});
var G__21205__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20762 = a;
var G__20763 = b;
var G__20764 = c;
var G__20765 = d;
var G__20766 = e;
var G__20767 = f;
var G__20768 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__20762,G__20763,G__20764,G__20765,G__20766,G__20767,G__20768) : self__.afn.call(null,G__20762,G__20763,G__20764,G__20765,G__20766,G__20767,G__20768));
});
var G__21205__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20769 = a;
var G__20770 = b;
var G__20771 = c;
var G__20772 = d;
var G__20773 = e;
var G__20774 = f;
var G__20775 = g;
var G__20776 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__20769,G__20770,G__20771,G__20772,G__20773,G__20774,G__20775,G__20776) : self__.afn.call(null,G__20769,G__20770,G__20771,G__20772,G__20773,G__20774,G__20775,G__20776));
});
var G__21205__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20777 = a;
var G__20778 = b;
var G__20779 = c;
var G__20780 = d;
var G__20781 = e;
var G__20782 = f;
var G__20783 = g;
var G__20784 = h;
var G__20785 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__20777,G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784,G__20785) : self__.afn.call(null,G__20777,G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784,G__20785));
});
var G__21205__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20786 = a;
var G__20787 = b;
var G__20788 = c;
var G__20789 = d;
var G__20790 = e;
var G__20791 = f;
var G__20792 = g;
var G__20793 = h;
var G__20794 = i;
var G__20795 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__20786,G__20787,G__20788,G__20789,G__20790,G__20791,G__20792,G__20793,G__20794,G__20795) : self__.afn.call(null,G__20786,G__20787,G__20788,G__20789,G__20790,G__20791,G__20792,G__20793,G__20794,G__20795));
});
var G__21205__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20796 = a;
var G__20797 = b;
var G__20798 = c;
var G__20799 = d;
var G__20800 = e;
var G__20801 = f;
var G__20802 = g;
var G__20803 = h;
var G__20804 = i;
var G__20805 = j;
var G__20806 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__20796,G__20797,G__20798,G__20799,G__20800,G__20801,G__20802,G__20803,G__20804,G__20805,G__20806) : self__.afn.call(null,G__20796,G__20797,G__20798,G__20799,G__20800,G__20801,G__20802,G__20803,G__20804,G__20805,G__20806));
});
var G__21205__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20807 = a;
var G__20808 = b;
var G__20809 = c;
var G__20810 = d;
var G__20811 = e;
var G__20812 = f;
var G__20813 = g;
var G__20814 = h;
var G__20815 = i;
var G__20816 = j;
var G__20817 = k;
var G__20818 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__20807,G__20808,G__20809,G__20810,G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818) : self__.afn.call(null,G__20807,G__20808,G__20809,G__20810,G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818));
});
var G__21205__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20819 = a;
var G__20820 = b;
var G__20821 = c;
var G__20822 = d;
var G__20823 = e;
var G__20824 = f;
var G__20825 = g;
var G__20826 = h;
var G__20827 = i;
var G__20828 = j;
var G__20829 = k;
var G__20830 = l;
var G__20831 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826,G__20827,G__20828,G__20829,G__20830,G__20831) : self__.afn.call(null,G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826,G__20827,G__20828,G__20829,G__20830,G__20831));
});
var G__21205__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20832 = a;
var G__20833 = b;
var G__20834 = c;
var G__20835 = d;
var G__20836 = e;
var G__20837 = f;
var G__20838 = g;
var G__20839 = h;
var G__20840 = i;
var G__20841 = j;
var G__20842 = k;
var G__20843 = l;
var G__20844 = m;
var G__20845 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__20832,G__20833,G__20834,G__20835,G__20836,G__20837,G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844,G__20845) : self__.afn.call(null,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837,G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844,G__20845));
});
var G__21205__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20846 = a;
var G__20847 = b;
var G__20848 = c;
var G__20849 = d;
var G__20850 = e;
var G__20851 = f;
var G__20852 = g;
var G__20853 = h;
var G__20854 = i;
var G__20855 = j;
var G__20856 = k;
var G__20857 = l;
var G__20858 = m;
var G__20859 = n;
var G__20860 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__20846,G__20847,G__20848,G__20849,G__20850,G__20851,G__20852,G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860) : self__.afn.call(null,G__20846,G__20847,G__20848,G__20849,G__20850,G__20851,G__20852,G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860));
});
var G__21205__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20861 = a;
var G__20862 = b;
var G__20863 = c;
var G__20864 = d;
var G__20865 = e;
var G__20866 = f;
var G__20867 = g;
var G__20868 = h;
var G__20869 = i;
var G__20870 = j;
var G__20871 = k;
var G__20872 = l;
var G__20873 = m;
var G__20874 = n;
var G__20875 = o;
var G__20876 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868,G__20869,G__20870,G__20871,G__20872,G__20873,G__20874,G__20875,G__20876) : self__.afn.call(null,G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868,G__20869,G__20870,G__20871,G__20872,G__20873,G__20874,G__20875,G__20876));
});
var G__21205__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20877 = a;
var G__20878 = b;
var G__20879 = c;
var G__20880 = d;
var G__20881 = e;
var G__20882 = f;
var G__20883 = g;
var G__20884 = h;
var G__20885 = i;
var G__20886 = j;
var G__20887 = k;
var G__20888 = l;
var G__20889 = m;
var G__20890 = n;
var G__20891 = o;
var G__20892 = p;
var G__20893 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__20877,G__20878,G__20879,G__20880,G__20881,G__20882,G__20883,G__20884,G__20885,G__20886,G__20887,G__20888,G__20889,G__20890,G__20891,G__20892,G__20893) : self__.afn.call(null,G__20877,G__20878,G__20879,G__20880,G__20881,G__20882,G__20883,G__20884,G__20885,G__20886,G__20887,G__20888,G__20889,G__20890,G__20891,G__20892,G__20893));
});
var G__21205__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20894 = a;
var G__20895 = b;
var G__20896 = c;
var G__20897 = d;
var G__20898 = e;
var G__20899 = f;
var G__20900 = g;
var G__20901 = h;
var G__20902 = i;
var G__20903 = j;
var G__20904 = k;
var G__20905 = l;
var G__20906 = m;
var G__20907 = n;
var G__20908 = o;
var G__20909 = p;
var G__20910 = q;
var G__20911 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901,G__20902,G__20903,G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911) : self__.afn.call(null,G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901,G__20902,G__20903,G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911));
});
var G__21205__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20912 = a;
var G__20913 = b;
var G__20914 = c;
var G__20915 = d;
var G__20916 = e;
var G__20917 = f;
var G__20918 = g;
var G__20919 = h;
var G__20920 = i;
var G__20921 = j;
var G__20922 = k;
var G__20923 = l;
var G__20924 = m;
var G__20925 = n;
var G__20926 = o;
var G__20927 = p;
var G__20928 = q;
var G__20929 = r;
var G__20930 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918,G__20919,G__20920,G__20921,G__20922,G__20923,G__20924,G__20925,G__20926,G__20927,G__20928,G__20929,G__20930) : self__.afn.call(null,G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918,G__20919,G__20920,G__20921,G__20922,G__20923,G__20924,G__20925,G__20926,G__20927,G__20928,G__20929,G__20930));
});
var G__21205__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20931 = a;
var G__20932 = b;
var G__20933 = c;
var G__20934 = d;
var G__20935 = e;
var G__20936 = f;
var G__20937 = g;
var G__20938 = h;
var G__20939 = i;
var G__20940 = j;
var G__20941 = k;
var G__20942 = l;
var G__20943 = m;
var G__20944 = n;
var G__20945 = o;
var G__20946 = p;
var G__20947 = q;
var G__20948 = r;
var G__20949 = s;
var G__20950 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__20931,G__20932,G__20933,G__20934,G__20935,G__20936,G__20937,G__20938,G__20939,G__20940,G__20941,G__20942,G__20943,G__20944,G__20945,G__20946,G__20947,G__20948,G__20949,G__20950) : self__.afn.call(null,G__20931,G__20932,G__20933,G__20934,G__20935,G__20936,G__20937,G__20938,G__20939,G__20940,G__20941,G__20942,G__20943,G__20944,G__20945,G__20946,G__20947,G__20948,G__20949,G__20950));
});
var G__21205__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20951 = self__.afn;
var G__20952 = a;
var G__20953 = b;
var G__20954 = c;
var G__20955 = d;
var G__20956 = e;
var G__20957 = f;
var G__20958 = g;
var G__20959 = h;
var G__20960 = i;
var G__20961 = j;
var G__20962 = k;
var G__20963 = l;
var G__20964 = m;
var G__20965 = n;
var G__20966 = o;
var G__20967 = p;
var G__20968 = q;
var G__20969 = r;
var G__20970 = s;
var G__20971 = t;
var G__20972 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20951,G__20952,G__20953,G__20954,G__20955,G__20956,G__20957,G__20958,G__20959,G__20960,G__20961,G__20962,G__20963,G__20964,G__20965,G__20966,G__20967,G__20968,G__20969,G__20970,G__20971,G__20972) : cljs.core.apply.call(null,G__20951,G__20952,G__20953,G__20954,G__20955,G__20956,G__20957,G__20958,G__20959,G__20960,G__20961,G__20962,G__20963,G__20964,G__20965,G__20966,G__20967,G__20968,G__20969,G__20970,G__20971,G__20972));
});
G__21205 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__21205__1.call(this,self__);
case 2:
return G__21205__2.call(this,self__,a);
case 3:
return G__21205__3.call(this,self__,a,b);
case 4:
return G__21205__4.call(this,self__,a,b,c);
case 5:
return G__21205__5.call(this,self__,a,b,c,d);
case 6:
return G__21205__6.call(this,self__,a,b,c,d,e);
case 7:
return G__21205__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__21205__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__21205__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__21205__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__21205__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__21205__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__21205__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__21205__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__21205__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__21205__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__21205__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__21205__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__21205__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__21205__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__21205__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__21205__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21205.cljs$core$IFn$_invoke$arity$1 = G__21205__1;
G__21205.cljs$core$IFn$_invoke$arity$2 = G__21205__2;
G__21205.cljs$core$IFn$_invoke$arity$3 = G__21205__3;
G__21205.cljs$core$IFn$_invoke$arity$4 = G__21205__4;
G__21205.cljs$core$IFn$_invoke$arity$5 = G__21205__5;
G__21205.cljs$core$IFn$_invoke$arity$6 = G__21205__6;
G__21205.cljs$core$IFn$_invoke$arity$7 = G__21205__7;
G__21205.cljs$core$IFn$_invoke$arity$8 = G__21205__8;
G__21205.cljs$core$IFn$_invoke$arity$9 = G__21205__9;
G__21205.cljs$core$IFn$_invoke$arity$10 = G__21205__10;
G__21205.cljs$core$IFn$_invoke$arity$11 = G__21205__11;
G__21205.cljs$core$IFn$_invoke$arity$12 = G__21205__12;
G__21205.cljs$core$IFn$_invoke$arity$13 = G__21205__13;
G__21205.cljs$core$IFn$_invoke$arity$14 = G__21205__14;
G__21205.cljs$core$IFn$_invoke$arity$15 = G__21205__15;
G__21205.cljs$core$IFn$_invoke$arity$16 = G__21205__16;
G__21205.cljs$core$IFn$_invoke$arity$17 = G__21205__17;
G__21205.cljs$core$IFn$_invoke$arity$18 = G__21205__18;
G__21205.cljs$core$IFn$_invoke$arity$19 = G__21205__19;
G__21205.cljs$core$IFn$_invoke$arity$20 = G__21205__20;
G__21205.cljs$core$IFn$_invoke$arity$21 = G__21205__21;
G__21205.cljs$core$IFn$_invoke$arity$22 = G__21205__22;
return G__21205;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args20740){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20740)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__20973 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__20973) : self__.afn.call(null,G__20973));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__20974 = a;
var G__20975 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__20974,G__20975) : self__.afn.call(null,G__20974,G__20975));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__20976 = a;
var G__20977 = b;
var G__20978 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__20976,G__20977,G__20978) : self__.afn.call(null,G__20976,G__20977,G__20978));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__20979 = a;
var G__20980 = b;
var G__20981 = c;
var G__20982 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__20979,G__20980,G__20981,G__20982) : self__.afn.call(null,G__20979,G__20980,G__20981,G__20982));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__20983 = a;
var G__20984 = b;
var G__20985 = c;
var G__20986 = d;
var G__20987 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__20983,G__20984,G__20985,G__20986,G__20987) : self__.afn.call(null,G__20983,G__20984,G__20985,G__20986,G__20987));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__20988 = a;
var G__20989 = b;
var G__20990 = c;
var G__20991 = d;
var G__20992 = e;
var G__20993 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__20988,G__20989,G__20990,G__20991,G__20992,G__20993) : self__.afn.call(null,G__20988,G__20989,G__20990,G__20991,G__20992,G__20993));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__20994 = a;
var G__20995 = b;
var G__20996 = c;
var G__20997 = d;
var G__20998 = e;
var G__20999 = f;
var G__21000 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__20994,G__20995,G__20996,G__20997,G__20998,G__20999,G__21000) : self__.afn.call(null,G__20994,G__20995,G__20996,G__20997,G__20998,G__20999,G__21000));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__21001 = a;
var G__21002 = b;
var G__21003 = c;
var G__21004 = d;
var G__21005 = e;
var G__21006 = f;
var G__21007 = g;
var G__21008 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21001,G__21002,G__21003,G__21004,G__21005,G__21006,G__21007,G__21008) : self__.afn.call(null,G__21001,G__21002,G__21003,G__21004,G__21005,G__21006,G__21007,G__21008));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__21009 = a;
var G__21010 = b;
var G__21011 = c;
var G__21012 = d;
var G__21013 = e;
var G__21014 = f;
var G__21015 = g;
var G__21016 = h;
var G__21017 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21009,G__21010,G__21011,G__21012,G__21013,G__21014,G__21015,G__21016,G__21017) : self__.afn.call(null,G__21009,G__21010,G__21011,G__21012,G__21013,G__21014,G__21015,G__21016,G__21017));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__21018 = a;
var G__21019 = b;
var G__21020 = c;
var G__21021 = d;
var G__21022 = e;
var G__21023 = f;
var G__21024 = g;
var G__21025 = h;
var G__21026 = i;
var G__21027 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21018,G__21019,G__21020,G__21021,G__21022,G__21023,G__21024,G__21025,G__21026,G__21027) : self__.afn.call(null,G__21018,G__21019,G__21020,G__21021,G__21022,G__21023,G__21024,G__21025,G__21026,G__21027));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__21028 = a;
var G__21029 = b;
var G__21030 = c;
var G__21031 = d;
var G__21032 = e;
var G__21033 = f;
var G__21034 = g;
var G__21035 = h;
var G__21036 = i;
var G__21037 = j;
var G__21038 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21028,G__21029,G__21030,G__21031,G__21032,G__21033,G__21034,G__21035,G__21036,G__21037,G__21038) : self__.afn.call(null,G__21028,G__21029,G__21030,G__21031,G__21032,G__21033,G__21034,G__21035,G__21036,G__21037,G__21038));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__21039 = a;
var G__21040 = b;
var G__21041 = c;
var G__21042 = d;
var G__21043 = e;
var G__21044 = f;
var G__21045 = g;
var G__21046 = h;
var G__21047 = i;
var G__21048 = j;
var G__21049 = k;
var G__21050 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21039,G__21040,G__21041,G__21042,G__21043,G__21044,G__21045,G__21046,G__21047,G__21048,G__21049,G__21050) : self__.afn.call(null,G__21039,G__21040,G__21041,G__21042,G__21043,G__21044,G__21045,G__21046,G__21047,G__21048,G__21049,G__21050));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__21051 = a;
var G__21052 = b;
var G__21053 = c;
var G__21054 = d;
var G__21055 = e;
var G__21056 = f;
var G__21057 = g;
var G__21058 = h;
var G__21059 = i;
var G__21060 = j;
var G__21061 = k;
var G__21062 = l;
var G__21063 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21051,G__21052,G__21053,G__21054,G__21055,G__21056,G__21057,G__21058,G__21059,G__21060,G__21061,G__21062,G__21063) : self__.afn.call(null,G__21051,G__21052,G__21053,G__21054,G__21055,G__21056,G__21057,G__21058,G__21059,G__21060,G__21061,G__21062,G__21063));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__21064 = a;
var G__21065 = b;
var G__21066 = c;
var G__21067 = d;
var G__21068 = e;
var G__21069 = f;
var G__21070 = g;
var G__21071 = h;
var G__21072 = i;
var G__21073 = j;
var G__21074 = k;
var G__21075 = l;
var G__21076 = m;
var G__21077 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21064,G__21065,G__21066,G__21067,G__21068,G__21069,G__21070,G__21071,G__21072,G__21073,G__21074,G__21075,G__21076,G__21077) : self__.afn.call(null,G__21064,G__21065,G__21066,G__21067,G__21068,G__21069,G__21070,G__21071,G__21072,G__21073,G__21074,G__21075,G__21076,G__21077));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__21078 = a;
var G__21079 = b;
var G__21080 = c;
var G__21081 = d;
var G__21082 = e;
var G__21083 = f;
var G__21084 = g;
var G__21085 = h;
var G__21086 = i;
var G__21087 = j;
var G__21088 = k;
var G__21089 = l;
var G__21090 = m;
var G__21091 = n;
var G__21092 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21078,G__21079,G__21080,G__21081,G__21082,G__21083,G__21084,G__21085,G__21086,G__21087,G__21088,G__21089,G__21090,G__21091,G__21092) : self__.afn.call(null,G__21078,G__21079,G__21080,G__21081,G__21082,G__21083,G__21084,G__21085,G__21086,G__21087,G__21088,G__21089,G__21090,G__21091,G__21092));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__21093 = a;
var G__21094 = b;
var G__21095 = c;
var G__21096 = d;
var G__21097 = e;
var G__21098 = f;
var G__21099 = g;
var G__21100 = h;
var G__21101 = i;
var G__21102 = j;
var G__21103 = k;
var G__21104 = l;
var G__21105 = m;
var G__21106 = n;
var G__21107 = o;
var G__21108 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21093,G__21094,G__21095,G__21096,G__21097,G__21098,G__21099,G__21100,G__21101,G__21102,G__21103,G__21104,G__21105,G__21106,G__21107,G__21108) : self__.afn.call(null,G__21093,G__21094,G__21095,G__21096,G__21097,G__21098,G__21099,G__21100,G__21101,G__21102,G__21103,G__21104,G__21105,G__21106,G__21107,G__21108));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__21109 = a;
var G__21110 = b;
var G__21111 = c;
var G__21112 = d;
var G__21113 = e;
var G__21114 = f;
var G__21115 = g;
var G__21116 = h;
var G__21117 = i;
var G__21118 = j;
var G__21119 = k;
var G__21120 = l;
var G__21121 = m;
var G__21122 = n;
var G__21123 = o;
var G__21124 = p;
var G__21125 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21109,G__21110,G__21111,G__21112,G__21113,G__21114,G__21115,G__21116,G__21117,G__21118,G__21119,G__21120,G__21121,G__21122,G__21123,G__21124,G__21125) : self__.afn.call(null,G__21109,G__21110,G__21111,G__21112,G__21113,G__21114,G__21115,G__21116,G__21117,G__21118,G__21119,G__21120,G__21121,G__21122,G__21123,G__21124,G__21125));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__21126 = a;
var G__21127 = b;
var G__21128 = c;
var G__21129 = d;
var G__21130 = e;
var G__21131 = f;
var G__21132 = g;
var G__21133 = h;
var G__21134 = i;
var G__21135 = j;
var G__21136 = k;
var G__21137 = l;
var G__21138 = m;
var G__21139 = n;
var G__21140 = o;
var G__21141 = p;
var G__21142 = q;
var G__21143 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__21126,G__21127,G__21128,G__21129,G__21130,G__21131,G__21132,G__21133,G__21134,G__21135,G__21136,G__21137,G__21138,G__21139,G__21140,G__21141,G__21142,G__21143) : self__.afn.call(null,G__21126,G__21127,G__21128,G__21129,G__21130,G__21131,G__21132,G__21133,G__21134,G__21135,G__21136,G__21137,G__21138,G__21139,G__21140,G__21141,G__21142,G__21143));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__21144 = a;
var G__21145 = b;
var G__21146 = c;
var G__21147 = d;
var G__21148 = e;
var G__21149 = f;
var G__21150 = g;
var G__21151 = h;
var G__21152 = i;
var G__21153 = j;
var G__21154 = k;
var G__21155 = l;
var G__21156 = m;
var G__21157 = n;
var G__21158 = o;
var G__21159 = p;
var G__21160 = q;
var G__21161 = r;
var G__21162 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__21144,G__21145,G__21146,G__21147,G__21148,G__21149,G__21150,G__21151,G__21152,G__21153,G__21154,G__21155,G__21156,G__21157,G__21158,G__21159,G__21160,G__21161,G__21162) : self__.afn.call(null,G__21144,G__21145,G__21146,G__21147,G__21148,G__21149,G__21150,G__21151,G__21152,G__21153,G__21154,G__21155,G__21156,G__21157,G__21158,G__21159,G__21160,G__21161,G__21162));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__21163 = a;
var G__21164 = b;
var G__21165 = c;
var G__21166 = d;
var G__21167 = e;
var G__21168 = f;
var G__21169 = g;
var G__21170 = h;
var G__21171 = i;
var G__21172 = j;
var G__21173 = k;
var G__21174 = l;
var G__21175 = m;
var G__21176 = n;
var G__21177 = o;
var G__21178 = p;
var G__21179 = q;
var G__21180 = r;
var G__21181 = s;
var G__21182 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__21163,G__21164,G__21165,G__21166,G__21167,G__21168,G__21169,G__21170,G__21171,G__21172,G__21173,G__21174,G__21175,G__21176,G__21177,G__21178,G__21179,G__21180,G__21181,G__21182) : self__.afn.call(null,G__21163,G__21164,G__21165,G__21166,G__21167,G__21168,G__21169,G__21170,G__21171,G__21172,G__21173,G__21174,G__21175,G__21176,G__21177,G__21178,G__21179,G__21180,G__21181,G__21182));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__21183 = self__.afn;
var G__21184 = a;
var G__21185 = b;
var G__21186 = c;
var G__21187 = d;
var G__21188 = e;
var G__21189 = f;
var G__21190 = g;
var G__21191 = h;
var G__21192 = i;
var G__21193 = j;
var G__21194 = k;
var G__21195 = l;
var G__21196 = m;
var G__21197 = n;
var G__21198 = o;
var G__21199 = p;
var G__21200 = q;
var G__21201 = r;
var G__21202 = s;
var G__21203 = t;
var G__21204 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21183,G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190,G__21191,G__21192,G__21193,G__21194,G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201,G__21202,G__21203,G__21204) : cljs.core.apply.call(null,G__21183,G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190,G__21191,G__21192,G__21193,G__21194,G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201,G__21202,G__21203,G__21204));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__21209 = o;
if(G__21209){
var bit__6571__auto__ = (G__21209.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__6571__auto__) || (G__21209.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__21209.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__21209);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__21209);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__5878__auto__ = !((o == null));
if(and__5878__auto__){
var G__21213 = o;
if(G__21213){
var bit__6571__auto__ = (G__21213.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__6571__auto__) || (G__21213.cljs$core$IMeta$)){
return true;
} else {
if((!G__21213.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__21213);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__21213);
}
} else {
return and__5878__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__21216__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__21217 = ret;
var G__21218 = cljs.core.first(ks);
var G__21219 = cljs.core.next(ks);
coll = G__21217;
k = G__21218;
ks = G__21219;
continue;
} else {
return ret;
}
}
break;
}
};
var G__21216 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21220__i = 0, G__21220__a = new Array(arguments.length -  2);
while (G__21220__i < G__21220__a.length) {G__21220__a[G__21220__i] = arguments[G__21220__i + 2]; ++G__21220__i;}
  ks = new cljs.core.IndexedSeq(G__21220__a,0);
} 
return G__21216__delegate.call(this,coll,k,ks);};
G__21216.cljs$lang$maxFixedArity = 2;
G__21216.cljs$lang$applyTo = (function (arglist__21221){
var coll = cljs.core.first(arglist__21221);
arglist__21221 = cljs.core.next(arglist__21221);
var k = cljs.core.first(arglist__21221);
var ks = cljs.core.rest(arglist__21221);
return G__21216__delegate(coll,k,ks);
});
G__21216.cljs$core$IFn$_invoke$arity$variadic = G__21216__delegate;
return G__21216;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__21222 = null;
if (arguments.length > 2) {
var G__21223__i = 0, G__21223__a = new Array(arguments.length -  2);
while (G__21223__i < G__21223__a.length) {G__21223__a[G__21223__i] = arguments[G__21223__i + 2]; ++G__21223__i;}
G__21222 = new cljs.core.IndexedSeq(G__21223__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__21222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21225 = x;
if(G__21225){
var bit__6571__auto__ = (G__21225.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__6571__auto__) || (G__21225.cljs$core$ICollection$)){
return true;
} else {
if((!G__21225.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__21225);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__21225);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21227 = x;
if(G__21227){
var bit__6571__auto__ = (G__21227.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__6571__auto__) || (G__21227.cljs$core$ISet$)){
return true;
} else {
if((!G__21227.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__21227);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__21227);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__21229 = x;
if(G__21229){
var bit__6571__auto__ = (G__21229.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__6571__auto__) || (G__21229.cljs$core$IAssociative$)){
return true;
} else {
if((!G__21229.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__21229);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__21229);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__21231 = x;
if(G__21231){
var bit__6571__auto__ = (G__21231.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__6571__auto__) || (G__21231.cljs$core$ISequential$)){
return true;
} else {
if((!G__21231.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__21231);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__21231);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__21233 = x;
if(G__21233){
var bit__6571__auto__ = (G__21233.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__6571__auto__) || (G__21233.cljs$core$ISorted$)){
return true;
} else {
if((!G__21233.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__21233);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__21233);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__21235 = x;
if(G__21235){
var bit__6571__auto__ = (G__21235.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6571__auto__) || (G__21235.cljs$core$IReduce$)){
return true;
} else {
if((!G__21235.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__21235);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__21235);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21237 = x;
if(G__21237){
var bit__6571__auto__ = (G__21237.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__6571__auto__) || (G__21237.cljs$core$IMap$)){
return true;
} else {
if((!G__21237.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__21237);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__21237);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__21239 = x;
if(G__21239){
var bit__6571__auto__ = (G__21239.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__6571__auto__) || (G__21239.cljs$core$IVector$)){
return true;
} else {
if((!G__21239.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__21239);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__21239);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__21241 = x;
if(G__21241){
var bit__6564__auto__ = (G__21241.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__6564__auto__) || (G__21241.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj21247 = {};
return obj21247;
});
var js_obj__1 = (function() { 
var G__21250__delegate = function (keyvals){
var G__21248 = goog.object.create;
var G__21249 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__21248,G__21249) : cljs.core.apply.call(null,G__21248,G__21249));
};
var G__21250 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21251__i = 0, G__21251__a = new Array(arguments.length -  0);
while (G__21251__i < G__21251__a.length) {G__21251__a[G__21251__i] = arguments[G__21251__i + 0]; ++G__21251__i;}
  keyvals = new cljs.core.IndexedSeq(G__21251__a,0);
} 
return G__21250__delegate.call(this,keyvals);};
G__21250.cljs$lang$maxFixedArity = 0;
G__21250.cljs$lang$applyTo = (function (arglist__21252){
var keyvals = cljs.core.seq(arglist__21252);
return G__21250__delegate(keyvals);
});
G__21250.cljs$core$IFn$_invoke$arity$variadic = G__21250__delegate;
return G__21250;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__21253 = null;
if (arguments.length > 0) {
var G__21254__i = 0, G__21254__a = new Array(arguments.length -  0);
while (G__21254__i < G__21254__a.length) {G__21254__a[G__21254__i] = arguments[G__21254__i + 0]; ++G__21254__i;}
G__21253 = new cljs.core.IndexedSeq(G__21254__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__21253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__21257_21259 = obj;
var G__21258_21260 = ((function (G__21257_21259,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__21257_21259,keys))
;
goog.object.forEach(G__21257_21259,G__21258_21260);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__21261 = (i__$1 + (1));
var G__21262 = (j__$1 + (1));
var G__21263 = (len__$1 - (1));
i__$1 = G__21261;
j__$1 = G__21262;
len__$1 = G__21263;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__21264 = (i__$1 - (1));
var G__21265 = (j__$1 - (1));
var G__21266 = (len__$1 - (1));
i__$1 = G__21264;
j__$1 = G__21265;
len__$1 = G__21266;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj21268 = {};
return obj21268;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__21270 = s;
if(G__21270){
var bit__6571__auto__ = (G__21270.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6571__auto__) || (G__21270.cljs$core$ISeq$)){
return true;
} else {
if((!G__21270.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21270);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21270);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__21272 = s;
if(G__21272){
var bit__6571__auto__ = (G__21272.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__6571__auto__) || (G__21272.cljs$core$ISeqable$)){
return true;
} else {
if((!G__21272.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__21272);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__21272);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__5890__auto__ = cljs.core.fn_QMARK_(f);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var G__21276 = f;
if(G__21276){
var bit__6571__auto__ = (G__21276.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__6571__auto__) || (G__21276.cljs$core$IFn$)){
return true;
} else {
if((!G__21276.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__21276);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__21276);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__21289 = n;
return isNaN(G__21289);
})())) && (!((n === Infinity))) && (((function (){var G__21290 = n;
return parseFloat(G__21290);
})() === (function (){var G__21291 = n;
var G__21292 = (10);
return parseInt(G__21291,G__21292);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__21293__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__21294 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__21295 = etc;
s = G__21294;
xs = G__21295;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__21293 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21296__i = 0, G__21296__a = new Array(arguments.length -  2);
while (G__21296__i < G__21296__a.length) {G__21296__a[G__21296__i] = arguments[G__21296__i + 2]; ++G__21296__i;}
  more = new cljs.core.IndexedSeq(G__21296__a,0);
} 
return G__21293__delegate.call(this,x,y,more);};
G__21293.cljs$lang$maxFixedArity = 2;
G__21293.cljs$lang$applyTo = (function (arglist__21297){
var x = cljs.core.first(arglist__21297);
arglist__21297 = cljs.core.next(arglist__21297);
var y = cljs.core.first(arglist__21297);
var more = cljs.core.rest(arglist__21297);
return G__21293__delegate(x,y,more);
});
G__21293.cljs$core$IFn$_invoke$arity$variadic = G__21293__delegate;
return G__21293;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__21298 = null;
if (arguments.length > 2) {
var G__21299__i = 0, G__21299__a = new Array(arguments.length -  2);
while (G__21299__i < G__21299__a.length) {G__21299__a[G__21299__i] = arguments[G__21299__i + 2]; ++G__21299__i;}
G__21298 = new cljs.core.IndexedSeq(G__21299__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__21303 = x;
if(G__21303){
var bit__6564__auto__ = (G__21303.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__6564__auto__) || (G__21303.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__21304 = x;
var G__21305 = y;
return goog.array.defaultCompare(G__21304,G__21305);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__21310 = xs;
var G__21311 = ys;
var G__21312 = len;
var G__21313 = (n + (1));
xs = G__21310;
ys = G__21311;
len = G__21312;
n = G__21313;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__21318 = x;
var G__21319 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21318,G__21319) : f.call(null,G__21318,G__21319));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__21320 = y;
var G__21321 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21320,G__21321) : f.call(null,G__21320,G__21321));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__21327 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__21327) : cljs.core.to_array.call(null,G__21327));
})();
var G__21328_21330 = a;
var G__21329_21331 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__21328_21330,G__21329_21331);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__21337 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21337) : keyfn.call(null,G__21337));
})(),(function (){var G__21338 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21338) : keyfn.call(null,G__21338));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var G__21344 = f;
var G__21345 = cljs.core.first(s);
var G__21346 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__21344,G__21345,G__21346) : cljs.core.reduce.call(null,G__21344,G__21345,G__21346));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__21347 = val__$1;
var G__21348 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21347,G__21348) : f.call(null,G__21347,G__21348));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21349 = nval;
var G__21350 = cljs.core.next(coll__$1);
val__$1 = G__21349;
coll__$1 = G__21350;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__21354 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__21354) : cljs.core.to_array.call(null,G__21354));
})();
var G__21355_21357 = a;
goog.array.shuffle(G__21355_21357);

var G__21356 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__21356) : cljs.core.vec.call(null,G__21356));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__21360 = coll;
if(G__21360){
var bit__6564__auto__ = (G__21360.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6564__auto__) || (G__21360.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__21361 = coll;
if(G__21361){
var bit__6564__auto__ = (G__21361.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6564__auto__) || (G__21361.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__21370 = null;
var G__21370__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__21370__1 = (function (x){
var G__21367 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__21367) : cf.call(null,G__21367));
});
var G__21370__2 = (function (x,y){
var G__21368 = x;
var G__21369 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21368,G__21369) : f.call(null,G__21368,G__21369));
});
G__21370 = function(x,y){
switch(arguments.length){
case 0:
return G__21370__0.call(this);
case 1:
return G__21370__1.call(this,x);
case 2:
return G__21370__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21370.cljs$core$IFn$_invoke$arity$0 = G__21370__0;
G__21370.cljs$core$IFn$_invoke$arity$1 = G__21370__1;
G__21370.cljs$core$IFn$_invoke$arity$2 = G__21370__2;
return G__21370;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__21377 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21377) : xform.call(null,G__21377));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__21378 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__21378) : f__$1.call(null,G__21378));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__21379__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__21379 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21380__i = 0, G__21380__a = new Array(arguments.length -  2);
while (G__21380__i < G__21380__a.length) {G__21380__a[G__21380__i] = arguments[G__21380__i + 2]; ++G__21380__i;}
  more = new cljs.core.IndexedSeq(G__21380__a,0);
} 
return G__21379__delegate.call(this,x,y,more);};
G__21379.cljs$lang$maxFixedArity = 2;
G__21379.cljs$lang$applyTo = (function (arglist__21381){
var x = cljs.core.first(arglist__21381);
arglist__21381 = cljs.core.next(arglist__21381);
var y = cljs.core.first(arglist__21381);
var more = cljs.core.rest(arglist__21381);
return G__21379__delegate(x,y,more);
});
G__21379.cljs$core$IFn$_invoke$arity$variadic = G__21379__delegate;
return G__21379;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__21382 = null;
if (arguments.length > 2) {
var G__21383__i = 0, G__21383__a = new Array(arguments.length -  2);
while (G__21383__i < G__21383__a.length) {G__21383__a[G__21383__i] = arguments[G__21383__i + 2]; ++G__21383__i;}
G__21382 = new cljs.core.IndexedSeq(G__21383__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21382);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__21384__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__21384 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21385__i = 0, G__21385__a = new Array(arguments.length -  2);
while (G__21385__i < G__21385__a.length) {G__21385__a[G__21385__i] = arguments[G__21385__i + 2]; ++G__21385__i;}
  more = new cljs.core.IndexedSeq(G__21385__a,0);
} 
return G__21384__delegate.call(this,x,y,more);};
G__21384.cljs$lang$maxFixedArity = 2;
G__21384.cljs$lang$applyTo = (function (arglist__21386){
var x = cljs.core.first(arglist__21386);
arglist__21386 = cljs.core.next(arglist__21386);
var y = cljs.core.first(arglist__21386);
var more = cljs.core.rest(arglist__21386);
return G__21384__delegate(x,y,more);
});
G__21384.cljs$core$IFn$_invoke$arity$variadic = G__21384__delegate;
return G__21384;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__21387 = null;
if (arguments.length > 2) {
var G__21388__i = 0, G__21388__a = new Array(arguments.length -  2);
while (G__21388__i < G__21388__a.length) {G__21388__a[G__21388__i] = arguments[G__21388__i + 2]; ++G__21388__i;}
G__21387 = new cljs.core.IndexedSeq(G__21388__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21387);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__21389__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__21389 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21390__i = 0, G__21390__a = new Array(arguments.length -  2);
while (G__21390__i < G__21390__a.length) {G__21390__a[G__21390__i] = arguments[G__21390__i + 2]; ++G__21390__i;}
  more = new cljs.core.IndexedSeq(G__21390__a,0);
} 
return G__21389__delegate.call(this,x,y,more);};
G__21389.cljs$lang$maxFixedArity = 2;
G__21389.cljs$lang$applyTo = (function (arglist__21391){
var x = cljs.core.first(arglist__21391);
arglist__21391 = cljs.core.next(arglist__21391);
var y = cljs.core.first(arglist__21391);
var more = cljs.core.rest(arglist__21391);
return G__21389__delegate(x,y,more);
});
G__21389.cljs$core$IFn$_invoke$arity$variadic = G__21389__delegate;
return G__21389;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__21392 = null;
if (arguments.length > 2) {
var G__21393__i = 0, G__21393__a = new Array(arguments.length -  2);
while (G__21393__i < G__21393__a.length) {G__21393__a[G__21393__i] = arguments[G__21393__i + 2]; ++G__21393__i;}
G__21392 = new cljs.core.IndexedSeq(G__21393__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__21398__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__21398 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21399__i = 0, G__21399__a = new Array(arguments.length -  2);
while (G__21399__i < G__21399__a.length) {G__21399__a[G__21399__i] = arguments[G__21399__i + 2]; ++G__21399__i;}
  more = new cljs.core.IndexedSeq(G__21399__a,0);
} 
return G__21398__delegate.call(this,x,y,more);};
G__21398.cljs$lang$maxFixedArity = 2;
G__21398.cljs$lang$applyTo = (function (arglist__21400){
var x = cljs.core.first(arglist__21400);
arglist__21400 = cljs.core.next(arglist__21400);
var y = cljs.core.first(arglist__21400);
var more = cljs.core.rest(arglist__21400);
return G__21398__delegate(x,y,more);
});
G__21398.cljs$core$IFn$_invoke$arity$variadic = G__21398__delegate;
return G__21398;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__21401 = null;
if (arguments.length > 2) {
var G__21402__i = 0, G__21402__a = new Array(arguments.length -  2);
while (G__21402__i < G__21402__a.length) {G__21402__a[G__21402__i] = arguments[G__21402__i + 2]; ++G__21402__i;}
G__21401 = new cljs.core.IndexedSeq(G__21402__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__21403__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__21404 = y;
var G__21405 = cljs.core.first(more);
var G__21406 = cljs.core.next(more);
x = G__21404;
y = G__21405;
more = G__21406;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21403 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21407__i = 0, G__21407__a = new Array(arguments.length -  2);
while (G__21407__i < G__21407__a.length) {G__21407__a[G__21407__i] = arguments[G__21407__i + 2]; ++G__21407__i;}
  more = new cljs.core.IndexedSeq(G__21407__a,0);
} 
return G__21403__delegate.call(this,x,y,more);};
G__21403.cljs$lang$maxFixedArity = 2;
G__21403.cljs$lang$applyTo = (function (arglist__21408){
var x = cljs.core.first(arglist__21408);
arglist__21408 = cljs.core.next(arglist__21408);
var y = cljs.core.first(arglist__21408);
var more = cljs.core.rest(arglist__21408);
return G__21403__delegate(x,y,more);
});
G__21403.cljs$core$IFn$_invoke$arity$variadic = G__21403__delegate;
return G__21403;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__21409 = null;
if (arguments.length > 2) {
var G__21410__i = 0, G__21410__a = new Array(arguments.length -  2);
while (G__21410__i < G__21410__a.length) {G__21410__a[G__21410__i] = arguments[G__21410__i + 2]; ++G__21410__i;}
G__21409 = new cljs.core.IndexedSeq(G__21410__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__21411__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__21412 = y;
var G__21413 = cljs.core.first(more);
var G__21414 = cljs.core.next(more);
x = G__21412;
y = G__21413;
more = G__21414;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21411 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21415__i = 0, G__21415__a = new Array(arguments.length -  2);
while (G__21415__i < G__21415__a.length) {G__21415__a[G__21415__i] = arguments[G__21415__i + 2]; ++G__21415__i;}
  more = new cljs.core.IndexedSeq(G__21415__a,0);
} 
return G__21411__delegate.call(this,x,y,more);};
G__21411.cljs$lang$maxFixedArity = 2;
G__21411.cljs$lang$applyTo = (function (arglist__21416){
var x = cljs.core.first(arglist__21416);
arglist__21416 = cljs.core.next(arglist__21416);
var y = cljs.core.first(arglist__21416);
var more = cljs.core.rest(arglist__21416);
return G__21411__delegate(x,y,more);
});
G__21411.cljs$core$IFn$_invoke$arity$variadic = G__21411__delegate;
return G__21411;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__21417 = null;
if (arguments.length > 2) {
var G__21418__i = 0, G__21418__a = new Array(arguments.length -  2);
while (G__21418__i < G__21418__a.length) {G__21418__a[G__21418__i] = arguments[G__21418__i + 2]; ++G__21418__i;}
G__21417 = new cljs.core.IndexedSeq(G__21418__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__21419__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__21420 = y;
var G__21421 = cljs.core.first(more);
var G__21422 = cljs.core.next(more);
x = G__21420;
y = G__21421;
more = G__21422;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21419 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21423__i = 0, G__21423__a = new Array(arguments.length -  2);
while (G__21423__i < G__21423__a.length) {G__21423__a[G__21423__i] = arguments[G__21423__i + 2]; ++G__21423__i;}
  more = new cljs.core.IndexedSeq(G__21423__a,0);
} 
return G__21419__delegate.call(this,x,y,more);};
G__21419.cljs$lang$maxFixedArity = 2;
G__21419.cljs$lang$applyTo = (function (arglist__21424){
var x = cljs.core.first(arglist__21424);
arglist__21424 = cljs.core.next(arglist__21424);
var y = cljs.core.first(arglist__21424);
var more = cljs.core.rest(arglist__21424);
return G__21419__delegate(x,y,more);
});
G__21419.cljs$core$IFn$_invoke$arity$variadic = G__21419__delegate;
return G__21419;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__21425 = null;
if (arguments.length > 2) {
var G__21426__i = 0, G__21426__a = new Array(arguments.length -  2);
while (G__21426__i < G__21426__a.length) {G__21426__a[G__21426__i] = arguments[G__21426__i + 2]; ++G__21426__i;}
G__21425 = new cljs.core.IndexedSeq(G__21426__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21425);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__21427__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__21428 = y;
var G__21429 = cljs.core.first(more);
var G__21430 = cljs.core.next(more);
x = G__21428;
y = G__21429;
more = G__21430;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21427 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21431__i = 0, G__21431__a = new Array(arguments.length -  2);
while (G__21431__i < G__21431__a.length) {G__21431__a[G__21431__i] = arguments[G__21431__i + 2]; ++G__21431__i;}
  more = new cljs.core.IndexedSeq(G__21431__a,0);
} 
return G__21427__delegate.call(this,x,y,more);};
G__21427.cljs$lang$maxFixedArity = 2;
G__21427.cljs$lang$applyTo = (function (arglist__21432){
var x = cljs.core.first(arglist__21432);
arglist__21432 = cljs.core.next(arglist__21432);
var y = cljs.core.first(arglist__21432);
var more = cljs.core.rest(arglist__21432);
return G__21427__delegate(x,y,more);
});
G__21427.cljs$core$IFn$_invoke$arity$variadic = G__21427__delegate;
return G__21427;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__21433 = null;
if (arguments.length > 2) {
var G__21434__i = 0, G__21434__a = new Array(arguments.length -  2);
while (G__21434__i < G__21434__a.length) {G__21434__a[G__21434__i] = arguments[G__21434__i + 2]; ++G__21434__i;}
G__21433 = new cljs.core.IndexedSeq(G__21434__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21433);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__6207__auto__ = x;
var y__6208__auto__ = y;
return ((x__6207__auto__ > y__6208__auto__) ? x__6207__auto__ : y__6208__auto__);
});
var max__3 = (function() { 
var G__21435__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__6207__auto__ = x;
var y__6208__auto__ = y;
return ((x__6207__auto__ > y__6208__auto__) ? x__6207__auto__ : y__6208__auto__);
})(),more);
};
var G__21435 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21436__i = 0, G__21436__a = new Array(arguments.length -  2);
while (G__21436__i < G__21436__a.length) {G__21436__a[G__21436__i] = arguments[G__21436__i + 2]; ++G__21436__i;}
  more = new cljs.core.IndexedSeq(G__21436__a,0);
} 
return G__21435__delegate.call(this,x,y,more);};
G__21435.cljs$lang$maxFixedArity = 2;
G__21435.cljs$lang$applyTo = (function (arglist__21437){
var x = cljs.core.first(arglist__21437);
arglist__21437 = cljs.core.next(arglist__21437);
var y = cljs.core.first(arglist__21437);
var more = cljs.core.rest(arglist__21437);
return G__21435__delegate(x,y,more);
});
G__21435.cljs$core$IFn$_invoke$arity$variadic = G__21435__delegate;
return G__21435;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__21438 = null;
if (arguments.length > 2) {
var G__21439__i = 0, G__21439__a = new Array(arguments.length -  2);
while (G__21439__i < G__21439__a.length) {G__21439__a[G__21439__i] = arguments[G__21439__i + 2]; ++G__21439__i;}
G__21438 = new cljs.core.IndexedSeq(G__21439__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__6214__auto__ = x;
var y__6215__auto__ = y;
return ((x__6214__auto__ < y__6215__auto__) ? x__6214__auto__ : y__6215__auto__);
});
var min__3 = (function() { 
var G__21440__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__6214__auto__ = x;
var y__6215__auto__ = y;
return ((x__6214__auto__ < y__6215__auto__) ? x__6214__auto__ : y__6215__auto__);
})(),more);
};
var G__21440 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21441__i = 0, G__21441__a = new Array(arguments.length -  2);
while (G__21441__i < G__21441__a.length) {G__21441__a[G__21441__i] = arguments[G__21441__i + 2]; ++G__21441__i;}
  more = new cljs.core.IndexedSeq(G__21441__a,0);
} 
return G__21440__delegate.call(this,x,y,more);};
G__21440.cljs$lang$maxFixedArity = 2;
G__21440.cljs$lang$applyTo = (function (arglist__21442){
var x = cljs.core.first(arglist__21442);
arglist__21442 = cljs.core.next(arglist__21442);
var y = cljs.core.first(arglist__21442);
var more = cljs.core.rest(arglist__21442);
return G__21440__delegate(x,y,more);
});
G__21440.cljs$core$IFn$_invoke$arity$variadic = G__21440__delegate;
return G__21440;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__21443 = null;
if (arguments.length > 2) {
var G__21444__i = 0, G__21444__a = new Array(arguments.length -  2);
while (G__21444__i < G__21444__a.length) {G__21444__a[G__21444__i] = arguments[G__21444__i + 2]; ++G__21444__i;}
G__21443 = new cljs.core.IndexedSeq(G__21444__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__21445__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__21445 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21446__i = 0, G__21446__a = new Array(arguments.length -  2);
while (G__21446__i < G__21446__a.length) {G__21446__a[G__21446__i] = arguments[G__21446__i + 2]; ++G__21446__i;}
  more = new cljs.core.IndexedSeq(G__21446__a,0);
} 
return G__21445__delegate.call(this,x,y,more);};
G__21445.cljs$lang$maxFixedArity = 2;
G__21445.cljs$lang$applyTo = (function (arglist__21447){
var x = cljs.core.first(arglist__21447);
arglist__21447 = cljs.core.next(arglist__21447);
var y = cljs.core.first(arglist__21447);
var more = cljs.core.rest(arglist__21447);
return G__21445__delegate(x,y,more);
});
G__21445.cljs$core$IFn$_invoke$arity$variadic = G__21445__delegate;
return G__21445;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__21448 = null;
if (arguments.length > 2) {
var G__21449__i = 0, G__21449__a = new Array(arguments.length -  2);
while (G__21449__i < G__21449__a.length) {G__21449__a[G__21449__i] = arguments[G__21449__i + 2]; ++G__21449__i;}
G__21448 = new cljs.core.IndexedSeq(G__21449__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__21450__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__21450 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21451__i = 0, G__21451__a = new Array(arguments.length -  2);
while (G__21451__i < G__21451__a.length) {G__21451__a[G__21451__i] = arguments[G__21451__i + 2]; ++G__21451__i;}
  more = new cljs.core.IndexedSeq(G__21451__a,0);
} 
return G__21450__delegate.call(this,x,y,more);};
G__21450.cljs$lang$maxFixedArity = 2;
G__21450.cljs$lang$applyTo = (function (arglist__21452){
var x = cljs.core.first(arglist__21452);
arglist__21452 = cljs.core.next(arglist__21452);
var y = cljs.core.first(arglist__21452);
var more = cljs.core.rest(arglist__21452);
return G__21450__delegate(x,y,more);
});
G__21450.cljs$core$IFn$_invoke$arity$variadic = G__21450__delegate;
return G__21450;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__21453 = null;
if (arguments.length > 2) {
var G__21454__i = 0, G__21454__a = new Array(arguments.length -  2);
while (G__21454__i < G__21454__a.length) {G__21454__a[G__21454__i] = arguments[G__21454__i + 2]; ++G__21454__i;}
G__21453 = new cljs.core.IndexedSeq(G__21454__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__21459__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__21459 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21460__i = 0, G__21460__a = new Array(arguments.length -  2);
while (G__21460__i < G__21460__a.length) {G__21460__a[G__21460__i] = arguments[G__21460__i + 2]; ++G__21460__i;}
  more = new cljs.core.IndexedSeq(G__21460__a,0);
} 
return G__21459__delegate.call(this,x,y,more);};
G__21459.cljs$lang$maxFixedArity = 2;
G__21459.cljs$lang$applyTo = (function (arglist__21461){
var x = cljs.core.first(arglist__21461);
arglist__21461 = cljs.core.next(arglist__21461);
var y = cljs.core.first(arglist__21461);
var more = cljs.core.rest(arglist__21461);
return G__21459__delegate(x,y,more);
});
G__21459.cljs$core$IFn$_invoke$arity$variadic = G__21459__delegate;
return G__21459;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__21462 = null;
if (arguments.length > 2) {
var G__21463__i = 0, G__21463__a = new Array(arguments.length -  2);
while (G__21463__i < G__21463__a.length) {G__21463__a[G__21463__i] = arguments[G__21463__i + 2]; ++G__21463__i;}
G__21462 = new cljs.core.IndexedSeq(G__21463__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__21464__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__21464 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21465__i = 0, G__21465__a = new Array(arguments.length -  2);
while (G__21465__i < G__21465__a.length) {G__21465__a[G__21465__i] = arguments[G__21465__i + 2]; ++G__21465__i;}
  more = new cljs.core.IndexedSeq(G__21465__a,0);
} 
return G__21464__delegate.call(this,x,y,more);};
G__21464.cljs$lang$maxFixedArity = 2;
G__21464.cljs$lang$applyTo = (function (arglist__21466){
var x = cljs.core.first(arglist__21466);
arglist__21466 = cljs.core.next(arglist__21466);
var y = cljs.core.first(arglist__21466);
var more = cljs.core.rest(arglist__21466);
return G__21464__delegate(x,y,more);
});
G__21464.cljs$core$IFn$_invoke$arity$variadic = G__21464__delegate;
return G__21464;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__21467 = null;
if (arguments.length > 2) {
var G__21468__i = 0, G__21468__a = new Array(arguments.length -  2);
while (G__21468__i < G__21468__a.length) {G__21468__a[G__21468__i] = arguments[G__21468__i + 2]; ++G__21468__i;}
G__21467 = new cljs.core.IndexedSeq(G__21468__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21467);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__21469__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__21469 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21470__i = 0, G__21470__a = new Array(arguments.length -  2);
while (G__21470__i < G__21470__a.length) {G__21470__a[G__21470__i] = arguments[G__21470__i + 2]; ++G__21470__i;}
  more = new cljs.core.IndexedSeq(G__21470__a,0);
} 
return G__21469__delegate.call(this,x,y,more);};
G__21469.cljs$lang$maxFixedArity = 2;
G__21469.cljs$lang$applyTo = (function (arglist__21471){
var x = cljs.core.first(arglist__21471);
arglist__21471 = cljs.core.next(arglist__21471);
var y = cljs.core.first(arglist__21471);
var more = cljs.core.rest(arglist__21471);
return G__21469__delegate(x,y,more);
});
G__21469.cljs$core$IFn$_invoke$arity$variadic = G__21469__delegate;
return G__21469;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__21472 = null;
if (arguments.length > 2) {
var G__21473__i = 0, G__21473__a = new Array(arguments.length -  2);
while (G__21473__i < G__21473__a.length) {G__21473__a[G__21473__i] = arguments[G__21473__i + 2]; ++G__21473__i;}
G__21472 = new cljs.core.IndexedSeq(G__21473__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21472);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__21476 = x;
var G__21477 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__21476,G__21477) : cljs.core.mod.call(null,G__21476,G__21477));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__21478__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__21478 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21479__i = 0, G__21479__a = new Array(arguments.length -  2);
while (G__21479__i < G__21479__a.length) {G__21479__a[G__21479__i] = arguments[G__21479__i + 2]; ++G__21479__i;}
  more = new cljs.core.IndexedSeq(G__21479__a,0);
} 
return G__21478__delegate.call(this,x,y,more);};
G__21478.cljs$lang$maxFixedArity = 2;
G__21478.cljs$lang$applyTo = (function (arglist__21480){
var x = cljs.core.first(arglist__21480);
arglist__21480 = cljs.core.next(arglist__21480);
var y = cljs.core.first(arglist__21480);
var more = cljs.core.rest(arglist__21480);
return G__21478__delegate(x,y,more);
});
G__21478.cljs$core$IFn$_invoke$arity$variadic = G__21478__delegate;
return G__21478;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__21481 = null;
if (arguments.length > 2) {
var G__21482__i = 0, G__21482__a = new Array(arguments.length -  2);
while (G__21482__i < G__21482__a.length) {G__21482__a[G__21482__i] = arguments[G__21482__i + 2]; ++G__21482__i;}
G__21481 = new cljs.core.IndexedSeq(G__21482__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__21483__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__21483 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21484__i = 0, G__21484__a = new Array(arguments.length -  2);
while (G__21484__i < G__21484__a.length) {G__21484__a[G__21484__i] = arguments[G__21484__i + 2]; ++G__21484__i;}
  more = new cljs.core.IndexedSeq(G__21484__a,0);
} 
return G__21483__delegate.call(this,x,y,more);};
G__21483.cljs$lang$maxFixedArity = 2;
G__21483.cljs$lang$applyTo = (function (arglist__21485){
var x = cljs.core.first(arglist__21485);
arglist__21485 = cljs.core.next(arglist__21485);
var y = cljs.core.first(arglist__21485);
var more = cljs.core.rest(arglist__21485);
return G__21483__delegate(x,y,more);
});
G__21483.cljs$core$IFn$_invoke$arity$variadic = G__21483__delegate;
return G__21483;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__21486 = null;
if (arguments.length > 2) {
var G__21487__i = 0, G__21487__a = new Array(arguments.length -  2);
while (G__21487__i < G__21487__a.length) {G__21487__a[G__21487__i] = arguments[G__21487__i + 2]; ++G__21487__i;}
G__21486 = new cljs.core.IndexedSeq(G__21487__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__21490 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21490) : Math.floor.call(null,G__21490));
} else {
var G__21491 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__21491) : Math.ceil.call(null,G__21491));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__21492__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__21492 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21493__i = 0, G__21493__a = new Array(arguments.length -  2);
while (G__21493__i < G__21493__a.length) {G__21493__a[G__21493__i] = arguments[G__21493__i + 2]; ++G__21493__i;}
  more = new cljs.core.IndexedSeq(G__21493__a,0);
} 
return G__21492__delegate.call(this,x,y,more);};
G__21492.cljs$lang$maxFixedArity = 2;
G__21492.cljs$lang$applyTo = (function (arglist__21494){
var x = cljs.core.first(arglist__21494);
arglist__21494 = cljs.core.next(arglist__21494);
var y = cljs.core.first(arglist__21494);
var more = cljs.core.rest(arglist__21494);
return G__21492__delegate(x,y,more);
});
G__21492.cljs$core$IFn$_invoke$arity$variadic = G__21492__delegate;
return G__21492;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__21495 = null;
if (arguments.length > 2) {
var G__21496__i = 0, G__21496__a = new Array(arguments.length -  2);
while (G__21496__i < G__21496__a.length) {G__21496__a[G__21496__i] = arguments[G__21496__i + 2]; ++G__21496__i;}
G__21495 = new cljs.core.IndexedSeq(G__21496__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21495);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__21497__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__21497 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21498__i = 0, G__21498__a = new Array(arguments.length -  2);
while (G__21498__i < G__21498__a.length) {G__21498__a[G__21498__i] = arguments[G__21498__i + 2]; ++G__21498__i;}
  more = new cljs.core.IndexedSeq(G__21498__a,0);
} 
return G__21497__delegate.call(this,x,y,more);};
G__21497.cljs$lang$maxFixedArity = 2;
G__21497.cljs$lang$applyTo = (function (arglist__21499){
var x = cljs.core.first(arglist__21499);
arglist__21499 = cljs.core.next(arglist__21499);
var y = cljs.core.first(arglist__21499);
var more = cljs.core.rest(arglist__21499);
return G__21497__delegate(x,y,more);
});
G__21497.cljs$core$IFn$_invoke$arity$variadic = G__21497__delegate;
return G__21497;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__21500 = null;
if (arguments.length > 2) {
var G__21501__i = 0, G__21501__a = new Array(arguments.length -  2);
while (G__21501__i < G__21501__a.length) {G__21501__a[G__21501__i] = arguments[G__21501__i + 2]; ++G__21501__i;}
G__21500 = new cljs.core.IndexedSeq(G__21501__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__21502__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__21502 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21503__i = 0, G__21503__a = new Array(arguments.length -  2);
while (G__21503__i < G__21503__a.length) {G__21503__a[G__21503__i] = arguments[G__21503__i + 2]; ++G__21503__i;}
  more = new cljs.core.IndexedSeq(G__21503__a,0);
} 
return G__21502__delegate.call(this,x,y,more);};
G__21502.cljs$lang$maxFixedArity = 2;
G__21502.cljs$lang$applyTo = (function (arglist__21504){
var x = cljs.core.first(arglist__21504);
arglist__21504 = cljs.core.next(arglist__21504);
var y = cljs.core.first(arglist__21504);
var more = cljs.core.rest(arglist__21504);
return G__21502__delegate(x,y,more);
});
G__21502.cljs$core$IFn$_invoke$arity$variadic = G__21502__delegate;
return G__21502;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__21505 = null;
if (arguments.length > 2) {
var G__21506__i = 0, G__21506__a = new Array(arguments.length -  2);
while (G__21506__i < G__21506__a.length) {G__21506__a[G__21506__i] = arguments[G__21506__i + 2]; ++G__21506__i;}
G__21505 = new cljs.core.IndexedSeq(G__21506__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__21507__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__21507 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21508__i = 0, G__21508__a = new Array(arguments.length -  2);
while (G__21508__i < G__21508__a.length) {G__21508__a[G__21508__i] = arguments[G__21508__i + 2]; ++G__21508__i;}
  more = new cljs.core.IndexedSeq(G__21508__a,0);
} 
return G__21507__delegate.call(this,x,y,more);};
G__21507.cljs$lang$maxFixedArity = 2;
G__21507.cljs$lang$applyTo = (function (arglist__21509){
var x = cljs.core.first(arglist__21509);
arglist__21509 = cljs.core.next(arglist__21509);
var y = cljs.core.first(arglist__21509);
var more = cljs.core.rest(arglist__21509);
return G__21507__delegate(x,y,more);
});
G__21507.cljs$core$IFn$_invoke$arity$variadic = G__21507__delegate;
return G__21507;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__21510 = null;
if (arguments.length > 2) {
var G__21511__i = 0, G__21511__a = new Array(arguments.length -  2);
while (G__21511__i < G__21511__a.length) {G__21511__a[G__21511__i] = arguments[G__21511__i + 2]; ++G__21511__i;}
G__21510 = new cljs.core.IndexedSeq(G__21511__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21510);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__21516__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__21517 = y;
var G__21518 = cljs.core.first(more);
var G__21519 = cljs.core.next(more);
x = G__21517;
y = G__21518;
more = G__21519;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21516 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21520__i = 0, G__21520__a = new Array(arguments.length -  2);
while (G__21520__i < G__21520__a.length) {G__21520__a[G__21520__i] = arguments[G__21520__i + 2]; ++G__21520__i;}
  more = new cljs.core.IndexedSeq(G__21520__a,0);
} 
return G__21516__delegate.call(this,x,y,more);};
G__21516.cljs$lang$maxFixedArity = 2;
G__21516.cljs$lang$applyTo = (function (arglist__21521){
var x = cljs.core.first(arglist__21521);
arglist__21521 = cljs.core.next(arglist__21521);
var y = cljs.core.first(arglist__21521);
var more = cljs.core.rest(arglist__21521);
return G__21516__delegate(x,y,more);
});
G__21516.cljs$core$IFn$_invoke$arity$variadic = G__21516__delegate;
return G__21516;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__21522 = null;
if (arguments.length > 2) {
var G__21523__i = 0, G__21523__a = new Array(arguments.length -  2);
while (G__21523__i < G__21523__a.length) {G__21523__a[G__21523__i] = arguments[G__21523__i + 2]; ++G__21523__i;}
G__21522 = new cljs.core.IndexedSeq(G__21523__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21522);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__21524 = (n__$1 - (1));
var G__21525 = cljs.core.next(xs);
n__$1 = G__21524;
xs = G__21525;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__21529 = x;
return goog.string.buildString(G__21529);
}
});
var str__2 = (function() { 
var G__21530__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__21531 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__21532 = cljs.core.next(more);
sb = G__21531;
more = G__21532;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__21530 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__21533__i = 0, G__21533__a = new Array(arguments.length -  1);
while (G__21533__i < G__21533__a.length) {G__21533__a[G__21533__i] = arguments[G__21533__i + 1]; ++G__21533__i;}
  ys = new cljs.core.IndexedSeq(G__21533__a,0);
} 
return G__21530__delegate.call(this,x,ys);};
G__21530.cljs$lang$maxFixedArity = 1;
G__21530.cljs$lang$applyTo = (function (arglist__21534){
var x = cljs.core.first(arglist__21534);
var ys = cljs.core.rest(arglist__21534);
return G__21530__delegate(x,ys);
});
G__21530.cljs$core$IFn$_invoke$arity$variadic = G__21530__delegate;
return G__21530;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__21535 = null;
if (arguments.length > 1) {
var G__21536__i = 0, G__21536__a = new Array(arguments.length -  1);
while (G__21536__i < G__21536__a.length) {G__21536__a[G__21536__i] = arguments[G__21536__i + 1]; ++G__21536__i;}
G__21535 = new cljs.core.IndexedSeq(G__21536__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__21537 = cljs.core.next(xs);
var G__21538 = cljs.core.next(ys);
xs = G__21537;
ys = G__21538;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__21539 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__21540 = cljs.core.next(s);
res = G__21539;
s = G__21540;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__21545 = ((h + (cljs.core.hash((function (){var G__21543 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21543) : cljs.core.key.call(null,G__21543));
})()) ^ cljs.core.hash((function (){var G__21544 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21544) : cljs.core.val.call(null,G__21544));
})()))) % (4503599627370496));
var G__21546 = cljs.core.next(s);
h = G__21545;
s = G__21546;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__21547 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__21548 = cljs.core.next(s__$1);
h = G__21547;
s__$1 = G__21548;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__21559_21569 = cljs.core.seq(fn_map);
var chunk__21560_21570 = null;
var count__21561_21571 = (0);
var i__21562_21572 = (0);
while(true){
if((i__21562_21572 < count__21561_21571)){
var vec__21563_21573 = chunk__21560_21570.cljs$core$IIndexed$_nth$arity$2(null,i__21562_21572);
var key_name_21574 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21563_21573,(0),null);
var f_21575 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21563_21573,(1),null);
var str_name_21576 = (function (){var G__21564 = key_name_21574;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21564) : cljs.core.name.call(null,G__21564));
})();
(obj[str_name_21576] = f_21575);

var G__21577 = seq__21559_21569;
var G__21578 = chunk__21560_21570;
var G__21579 = count__21561_21571;
var G__21580 = (i__21562_21572 + (1));
seq__21559_21569 = G__21577;
chunk__21560_21570 = G__21578;
count__21561_21571 = G__21579;
i__21562_21572 = G__21580;
continue;
} else {
var temp__4406__auto___21581 = cljs.core.seq(seq__21559_21569);
if(temp__4406__auto___21581){
var seq__21559_21582__$1 = temp__4406__auto___21581;
if(cljs.core.chunked_seq_QMARK_(seq__21559_21582__$1)){
var c__6677__auto___21583 = (function (){var G__21565 = seq__21559_21582__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__21565) : cljs.core.chunk_first.call(null,G__21565));
})();
var G__21584 = (function (){var G__21566 = seq__21559_21582__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__21566) : cljs.core.chunk_rest.call(null,G__21566));
})();
var G__21585 = c__6677__auto___21583;
var G__21586 = cljs.core.count(c__6677__auto___21583);
var G__21587 = (0);
seq__21559_21569 = G__21584;
chunk__21560_21570 = G__21585;
count__21561_21571 = G__21586;
i__21562_21572 = G__21587;
continue;
} else {
var vec__21567_21588 = cljs.core.first(seq__21559_21582__$1);
var key_name_21589 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21567_21588,(0),null);
var f_21590 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21567_21588,(1),null);
var str_name_21591 = (function (){var G__21568 = key_name_21589;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21568) : cljs.core.name.call(null,G__21568));
})();
(obj[str_name_21591] = f_21590);

var G__21592 = cljs.core.next(seq__21559_21582__$1);
var G__21593 = null;
var G__21594 = (0);
var G__21595 = (0);
seq__21559_21569 = G__21592;
chunk__21560_21570 = G__21593;
count__21561_21571 = G__21594;
i__21562_21572 = G__21595;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__21597 = coll;
if(G__21597){
var bit__6571__auto__ = (G__21597.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__6571__auto__) || (G__21597.cljs$core$IReversible$)){
return true;
} else {
if((!G__21597.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21597);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21597);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__21598 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__21598;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__21599 = (i - (1));
var G__21600 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__21599;
r = G__21600;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__21601__i = 0, G__21601__a = new Array(arguments.length -  0);
while (G__21601__i < G__21601__a.length) {G__21601__a[G__21601__i] = arguments[G__21601__i + 0]; ++G__21601__i;}
  xs = new cljs.core.IndexedSeq(G__21601__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__21602){
var xs = cljs.core.seq(arglist__21602);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__5890__auto__ = (coll == null);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var G__21606 = coll;
if(G__21606){
var bit__6564__auto__ = (G__21606.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6564__auto__) || (G__21606.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__21608 = x;
if(G__21608){
var bit__6571__auto__ = (G__21608.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__6571__auto__) || (G__21608.cljs$core$IList$)){
return true;
} else {
if((!G__21608.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21608);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21608);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__5878__auto__ = cljs.core.not(a.ns);
if(and__5878__auto__){
return b.ns;
} else {
return and__5878__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__21615 = a.ns;
var G__21616 = b.ns;
return goog.array.defaultCompare(G__21615,G__21616);
})();
if(((0) === nsc)){
var G__21617 = a.name;
var G__21618 = b.name;
return goog.array.defaultCompare(G__21617,G__21618);
} else {
return nsc;
}
}
} else {
var G__21619 = a.name;
var G__21620 = b.name;
return goog.array.defaultCompare(G__21619,G__21620);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__6311__auto__ = self__._hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__21622 = null;
var G__21622__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__21622__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__21622 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__21622__2.call(this,self__,coll);
case 3:
return G__21622__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21622.cljs$core$IFn$_invoke$arity$2 = G__21622__2;
G__21622.cljs$core$IFn$_invoke$arity$3 = G__21622__3;
return G__21622;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args21621){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21621)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__21624 = x;
if(G__21624){
var bit__6564__auto__ = (G__21624.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__6564__auto__) || (G__21624.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__21626 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21626) : cljs.core.name.call(null,G__21626));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__21627 = ls.sval();
ls = G__21627;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__21629 = s;
if(G__21629){
var bit__6564__auto__ = (G__21629.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__6564__auto__) || (G__21629.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__21630 = cljs.core.next(s__$1);
s__$1 = G__21630;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_21631 = (0);
var xs_21632 = cljs.core.seq(coll);
while(true){
if(xs_21632){
(ret[i_21631] = cljs.core.to_array(cljs.core.first(xs_21632)));

var G__21633 = (i_21631 + (1));
var G__21634 = cljs.core.next(xs_21632);
i_21631 = G__21633;
xs_21632 = G__21634;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21637 = (i + (1));
var G__21638 = cljs.core.next(s__$1);
i = G__21637;
s__$1 = G__21638;
continue;
} else {
return a;
}
break;
}
} else {
var n__6777__auto___21639 = size;
var i_21640 = (0);
while(true){
if((i_21640 < n__6777__auto___21639)){
(a[i_21640] = init_val_or_seq);

var G__21641 = (i_21640 + (1));
i_21640 = G__21641;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21644 = (i + (1));
var G__21645 = cljs.core.next(s__$1);
i = G__21644;
s__$1 = G__21645;
continue;
} else {
return a;
}
break;
}
} else {
var n__6777__auto___21646 = size;
var i_21647 = (0);
while(true){
if((i_21647 < n__6777__auto___21646)){
(a[i_21647] = init_val_or_seq);

var G__21648 = (i_21647 + (1));
i_21647 = G__21648;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21651 = (i + (1));
var G__21652 = cljs.core.next(s__$1);
i = G__21651;
s__$1 = G__21652;
continue;
} else {
return a;
}
break;
}
} else {
var n__6777__auto___21653 = size;
var i_21654 = (0);
while(true){
if((i_21654 < n__6777__auto___21653)){
(a[i_21654] = init_val_or_seq);

var G__21655 = (i_21654 + (1));
i_21654 = G__21655;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21658 = (i + (1));
var G__21659 = cljs.core.next(s__$1);
i = G__21658;
s__$1 = G__21659;
continue;
} else {
return a;
}
break;
}
} else {
var n__6777__auto___21660 = size;
var i_21661 = (0);
while(true){
if((i_21661 < n__6777__auto___21660)){
(a[i_21661] = init_val_or_seq);

var G__21662 = (i_21661 + (1));
i_21661 = G__21662;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__21663 = cljs.core.next(s__$1);
var G__21664 = (i - (1));
var G__21665 = (sum + (1));
s__$1 = G__21663;
i = G__21664;
sum = G__21665;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__21685__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__21685 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__21686__i = 0, G__21686__a = new Array(arguments.length -  2);
while (G__21686__i < G__21686__a.length) {G__21686__a[G__21686__i] = arguments[G__21686__i + 2]; ++G__21686__i;}
  zs = new cljs.core.IndexedSeq(G__21686__a,0);
} 
return G__21685__delegate.call(this,x,y,zs);};
G__21685.cljs$lang$maxFixedArity = 2;
G__21685.cljs$lang$applyTo = (function (arglist__21687){
var x = cljs.core.first(arglist__21687);
arglist__21687 = cljs.core.next(arglist__21687);
var y = cljs.core.first(arglist__21687);
var zs = cljs.core.rest(arglist__21687);
return G__21685__delegate(x,y,zs);
});
G__21685.cljs$core$IFn$_invoke$arity$variadic = G__21685__delegate;
return G__21685;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__21688 = null;
if (arguments.length > 2) {
var G__21689__i = 0, G__21689__a = new Array(arguments.length -  2);
while (G__21689__i < G__21689__a.length) {G__21689__a[G__21689__i] = arguments[G__21689__i + 2]; ++G__21689__i;}
G__21688 = new cljs.core.IndexedSeq(G__21689__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21688);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__21690__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__21690 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__21691__i = 0, G__21691__a = new Array(arguments.length -  4);
while (G__21691__i < G__21691__a.length) {G__21691__a[G__21691__i] = arguments[G__21691__i + 4]; ++G__21691__i;}
  more = new cljs.core.IndexedSeq(G__21691__a,0);
} 
return G__21690__delegate.call(this,a,b,c,d,more);};
G__21690.cljs$lang$maxFixedArity = 4;
G__21690.cljs$lang$applyTo = (function (arglist__21692){
var a = cljs.core.first(arglist__21692);
arglist__21692 = cljs.core.next(arglist__21692);
var b = cljs.core.first(arglist__21692);
arglist__21692 = cljs.core.next(arglist__21692);
var c = cljs.core.first(arglist__21692);
arglist__21692 = cljs.core.next(arglist__21692);
var d = cljs.core.first(arglist__21692);
var more = cljs.core.rest(arglist__21692);
return G__21690__delegate(a,b,c,d,more);
});
G__21690.cljs$core$IFn$_invoke$arity$variadic = G__21690__delegate;
return G__21690;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__21693 = null;
if (arguments.length > 4) {
var G__21694__i = 0, G__21694__a = new Array(arguments.length -  4);
while (G__21694__i < G__21694__a.length) {G__21694__a[G__21694__i] = arguments[G__21694__i + 4]; ++G__21694__i;}
G__21693 = new cljs.core.IndexedSeq(G__21694__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__21693);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__21695__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__21696 = ntcoll;
var G__21697 = cljs.core.first(vals);
var G__21698 = cljs.core.next(vals);
tcoll = G__21696;
val = G__21697;
vals = G__21698;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21695 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__21699__i = 0, G__21699__a = new Array(arguments.length -  2);
while (G__21699__i < G__21699__a.length) {G__21699__a[G__21699__i] = arguments[G__21699__i + 2]; ++G__21699__i;}
  vals = new cljs.core.IndexedSeq(G__21699__a,0);
} 
return G__21695__delegate.call(this,tcoll,val,vals);};
G__21695.cljs$lang$maxFixedArity = 2;
G__21695.cljs$lang$applyTo = (function (arglist__21700){
var tcoll = cljs.core.first(arglist__21700);
arglist__21700 = cljs.core.next(arglist__21700);
var val = cljs.core.first(arglist__21700);
var vals = cljs.core.rest(arglist__21700);
return G__21695__delegate(tcoll,val,vals);
});
G__21695.cljs$core$IFn$_invoke$arity$variadic = G__21695__delegate;
return G__21695;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__21701 = null;
if (arguments.length > 2) {
var G__21702__i = 0, G__21702__a = new Array(arguments.length -  2);
while (G__21702__i < G__21702__a.length) {G__21702__a[G__21702__i] = arguments[G__21702__i + 2]; ++G__21702__i;}
G__21701 = new cljs.core.IndexedSeq(G__21702__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__21701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__21703__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__21704 = ntcoll;
var G__21705 = cljs.core.first(kvs);
var G__21706 = cljs.core.second(kvs);
var G__21707 = cljs.core.nnext(kvs);
tcoll = G__21704;
key = G__21705;
val = G__21706;
kvs = G__21707;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21703 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21708__i = 0, G__21708__a = new Array(arguments.length -  3);
while (G__21708__i < G__21708__a.length) {G__21708__a[G__21708__i] = arguments[G__21708__i + 3]; ++G__21708__i;}
  kvs = new cljs.core.IndexedSeq(G__21708__a,0);
} 
return G__21703__delegate.call(this,tcoll,key,val,kvs);};
G__21703.cljs$lang$maxFixedArity = 3;
G__21703.cljs$lang$applyTo = (function (arglist__21709){
var tcoll = cljs.core.first(arglist__21709);
arglist__21709 = cljs.core.next(arglist__21709);
var key = cljs.core.first(arglist__21709);
arglist__21709 = cljs.core.next(arglist__21709);
var val = cljs.core.first(arglist__21709);
var kvs = cljs.core.rest(arglist__21709);
return G__21703__delegate(tcoll,key,val,kvs);
});
G__21703.cljs$core$IFn$_invoke$arity$variadic = G__21703__delegate;
return G__21703;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__21710 = null;
if (arguments.length > 3) {
var G__21711__i = 0, G__21711__a = new Array(arguments.length -  3);
while (G__21711__i < G__21711__a.length) {G__21711__a[G__21711__i] = arguments[G__21711__i + 3]; ++G__21711__i;}
G__21710 = new cljs.core.IndexedSeq(G__21711__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__21710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__21712__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__21713 = ntcoll;
var G__21714 = cljs.core.first(ks);
var G__21715 = cljs.core.next(ks);
tcoll = G__21713;
key = G__21714;
ks = G__21715;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21712 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21716__i = 0, G__21716__a = new Array(arguments.length -  2);
while (G__21716__i < G__21716__a.length) {G__21716__a[G__21716__i] = arguments[G__21716__i + 2]; ++G__21716__i;}
  ks = new cljs.core.IndexedSeq(G__21716__a,0);
} 
return G__21712__delegate.call(this,tcoll,key,ks);};
G__21712.cljs$lang$maxFixedArity = 2;
G__21712.cljs$lang$applyTo = (function (arglist__21717){
var tcoll = cljs.core.first(arglist__21717);
arglist__21717 = cljs.core.next(arglist__21717);
var key = cljs.core.first(arglist__21717);
var ks = cljs.core.rest(arglist__21717);
return G__21712__delegate(tcoll,key,ks);
});
G__21712.cljs$core$IFn$_invoke$arity$variadic = G__21712__delegate;
return G__21712;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__21718 = null;
if (arguments.length > 2) {
var G__21719__i = 0, G__21719__a = new Array(arguments.length -  2);
while (G__21719__i < G__21719__a.length) {G__21719__a[G__21719__i] = arguments[G__21719__i + 2]; ++G__21719__i;}
G__21718 = new cljs.core.IndexedSeq(G__21719__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__21718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__21720__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__21721 = ntcoll;
var G__21722 = cljs.core.first(vals);
var G__21723 = cljs.core.next(vals);
tcoll = G__21721;
val = G__21722;
vals = G__21723;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21720 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__21724__i = 0, G__21724__a = new Array(arguments.length -  2);
while (G__21724__i < G__21724__a.length) {G__21724__a[G__21724__i] = arguments[G__21724__i + 2]; ++G__21724__i;}
  vals = new cljs.core.IndexedSeq(G__21724__a,0);
} 
return G__21720__delegate.call(this,tcoll,val,vals);};
G__21720.cljs$lang$maxFixedArity = 2;
G__21720.cljs$lang$applyTo = (function (arglist__21725){
var tcoll = cljs.core.first(arglist__21725);
arglist__21725 = cljs.core.next(arglist__21725);
var val = cljs.core.first(arglist__21725);
var vals = cljs.core.rest(arglist__21725);
return G__21720__delegate(tcoll,val,vals);
});
G__21720.cljs$core$IFn$_invoke$arity$variadic = G__21720__delegate;
return G__21720;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__21726 = null;
if (arguments.length > 2) {
var G__21727__i = 0, G__21727__a = new Array(arguments.length -  2);
while (G__21727__i < G__21727__a.length) {G__21727__a[G__21727__i] = arguments[G__21727__i + 2]; ++G__21727__i;}
G__21726 = new cljs.core.IndexedSeq(G__21727__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__21726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a6821 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a6821);
} else {
var G__21938 = a6821;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21938) : f.call(null,G__21938));
}
} else {
var b6822 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a6821,b6822);
} else {
var G__21939 = a6821;
var G__21940 = b6822;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21939,G__21940) : f.call(null,G__21939,G__21940));
}
} else {
var c6823 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a6821,b6822,c6823);
} else {
var G__21941 = a6821;
var G__21942 = b6822;
var G__21943 = c6823;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21941,G__21942,G__21943) : f.call(null,G__21941,G__21942,G__21943));
}
} else {
var d6824 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a6821,b6822,c6823,d6824);
} else {
var G__21944 = a6821;
var G__21945 = b6822;
var G__21946 = c6823;
var G__21947 = d6824;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21944,G__21945,G__21946,G__21947) : f.call(null,G__21944,G__21945,G__21946,G__21947));
}
} else {
var e6825 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a6821,b6822,c6823,d6824,e6825);
} else {
var G__21948 = a6821;
var G__21949 = b6822;
var G__21950 = c6823;
var G__21951 = d6824;
var G__21952 = e6825;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21948,G__21949,G__21950,G__21951,G__21952) : f.call(null,G__21948,G__21949,G__21950,G__21951,G__21952));
}
} else {
var f6826 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a6821,b6822,c6823,d6824,e6825,f6826);
} else {
var G__21953 = a6821;
var G__21954 = b6822;
var G__21955 = c6823;
var G__21956 = d6824;
var G__21957 = e6825;
var G__21958 = f6826;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__21953,G__21954,G__21955,G__21956,G__21957,G__21958) : f.call(null,G__21953,G__21954,G__21955,G__21956,G__21957,G__21958));
}
} else {
var g6827 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a6821,b6822,c6823,d6824,e6825,f6826,g6827);
} else {
var G__21959 = a6821;
var G__21960 = b6822;
var G__21961 = c6823;
var G__21962 = d6824;
var G__21963 = e6825;
var G__21964 = f6826;
var G__21965 = g6827;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__21959,G__21960,G__21961,G__21962,G__21963,G__21964,G__21965) : f.call(null,G__21959,G__21960,G__21961,G__21962,G__21963,G__21964,G__21965));
}
} else {
var h6828 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828);
} else {
var G__21966 = a6821;
var G__21967 = b6822;
var G__21968 = c6823;
var G__21969 = d6824;
var G__21970 = e6825;
var G__21971 = f6826;
var G__21972 = g6827;
var G__21973 = h6828;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__21966,G__21967,G__21968,G__21969,G__21970,G__21971,G__21972,G__21973) : f.call(null,G__21966,G__21967,G__21968,G__21969,G__21970,G__21971,G__21972,G__21973));
}
} else {
var i6829 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829);
} else {
var G__21974 = a6821;
var G__21975 = b6822;
var G__21976 = c6823;
var G__21977 = d6824;
var G__21978 = e6825;
var G__21979 = f6826;
var G__21980 = g6827;
var G__21981 = h6828;
var G__21982 = i6829;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__21974,G__21975,G__21976,G__21977,G__21978,G__21979,G__21980,G__21981,G__21982) : f.call(null,G__21974,G__21975,G__21976,G__21977,G__21978,G__21979,G__21980,G__21981,G__21982));
}
} else {
var j6830 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830);
} else {
var G__21983 = a6821;
var G__21984 = b6822;
var G__21985 = c6823;
var G__21986 = d6824;
var G__21987 = e6825;
var G__21988 = f6826;
var G__21989 = g6827;
var G__21990 = h6828;
var G__21991 = i6829;
var G__21992 = j6830;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__21983,G__21984,G__21985,G__21986,G__21987,G__21988,G__21989,G__21990,G__21991,G__21992) : f.call(null,G__21983,G__21984,G__21985,G__21986,G__21987,G__21988,G__21989,G__21990,G__21991,G__21992));
}
} else {
var k6831 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831);
} else {
var G__21993 = a6821;
var G__21994 = b6822;
var G__21995 = c6823;
var G__21996 = d6824;
var G__21997 = e6825;
var G__21998 = f6826;
var G__21999 = g6827;
var G__22000 = h6828;
var G__22001 = i6829;
var G__22002 = j6830;
var G__22003 = k6831;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__21993,G__21994,G__21995,G__21996,G__21997,G__21998,G__21999,G__22000,G__22001,G__22002,G__22003) : f.call(null,G__21993,G__21994,G__21995,G__21996,G__21997,G__21998,G__21999,G__22000,G__22001,G__22002,G__22003));
}
} else {
var l6832 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831,l6832);
} else {
var G__22004 = a6821;
var G__22005 = b6822;
var G__22006 = c6823;
var G__22007 = d6824;
var G__22008 = e6825;
var G__22009 = f6826;
var G__22010 = g6827;
var G__22011 = h6828;
var G__22012 = i6829;
var G__22013 = j6830;
var G__22014 = k6831;
var G__22015 = l6832;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__22004,G__22005,G__22006,G__22007,G__22008,G__22009,G__22010,G__22011,G__22012,G__22013,G__22014,G__22015) : f.call(null,G__22004,G__22005,G__22006,G__22007,G__22008,G__22009,G__22010,G__22011,G__22012,G__22013,G__22014,G__22015));
}
} else {
var m6833 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831,l6832,m6833);
} else {
var G__22016 = a6821;
var G__22017 = b6822;
var G__22018 = c6823;
var G__22019 = d6824;
var G__22020 = e6825;
var G__22021 = f6826;
var G__22022 = g6827;
var G__22023 = h6828;
var G__22024 = i6829;
var G__22025 = j6830;
var G__22026 = k6831;
var G__22027 = l6832;
var G__22028 = m6833;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__22016,G__22017,G__22018,G__22019,G__22020,G__22021,G__22022,G__22023,G__22024,G__22025,G__22026,G__22027,G__22028) : f.call(null,G__22016,G__22017,G__22018,G__22019,G__22020,G__22021,G__22022,G__22023,G__22024,G__22025,G__22026,G__22027,G__22028));
}
} else {
var n6834 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831,l6832,m6833,n6834);
} else {
var G__22029 = a6821;
var G__22030 = b6822;
var G__22031 = c6823;
var G__22032 = d6824;
var G__22033 = e6825;
var G__22034 = f6826;
var G__22035 = g6827;
var G__22036 = h6828;
var G__22037 = i6829;
var G__22038 = j6830;
var G__22039 = k6831;
var G__22040 = l6832;
var G__22041 = m6833;
var G__22042 = n6834;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__22029,G__22030,G__22031,G__22032,G__22033,G__22034,G__22035,G__22036,G__22037,G__22038,G__22039,G__22040,G__22041,G__22042) : f.call(null,G__22029,G__22030,G__22031,G__22032,G__22033,G__22034,G__22035,G__22036,G__22037,G__22038,G__22039,G__22040,G__22041,G__22042));
}
} else {
var o6835 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831,l6832,m6833,n6834,o6835);
} else {
var G__22043 = a6821;
var G__22044 = b6822;
var G__22045 = c6823;
var G__22046 = d6824;
var G__22047 = e6825;
var G__22048 = f6826;
var G__22049 = g6827;
var G__22050 = h6828;
var G__22051 = i6829;
var G__22052 = j6830;
var G__22053 = k6831;
var G__22054 = l6832;
var G__22055 = m6833;
var G__22056 = n6834;
var G__22057 = o6835;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__22043,G__22044,G__22045,G__22046,G__22047,G__22048,G__22049,G__22050,G__22051,G__22052,G__22053,G__22054,G__22055,G__22056,G__22057) : f.call(null,G__22043,G__22044,G__22045,G__22046,G__22047,G__22048,G__22049,G__22050,G__22051,G__22052,G__22053,G__22054,G__22055,G__22056,G__22057));
}
} else {
var p6836 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831,l6832,m6833,n6834,o6835,p6836);
} else {
var G__22058 = a6821;
var G__22059 = b6822;
var G__22060 = c6823;
var G__22061 = d6824;
var G__22062 = e6825;
var G__22063 = f6826;
var G__22064 = g6827;
var G__22065 = h6828;
var G__22066 = i6829;
var G__22067 = j6830;
var G__22068 = k6831;
var G__22069 = l6832;
var G__22070 = m6833;
var G__22071 = n6834;
var G__22072 = o6835;
var G__22073 = p6836;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__22058,G__22059,G__22060,G__22061,G__22062,G__22063,G__22064,G__22065,G__22066,G__22067,G__22068,G__22069,G__22070,G__22071,G__22072,G__22073) : f.call(null,G__22058,G__22059,G__22060,G__22061,G__22062,G__22063,G__22064,G__22065,G__22066,G__22067,G__22068,G__22069,G__22070,G__22071,G__22072,G__22073));
}
} else {
var q6837 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831,l6832,m6833,n6834,o6835,p6836,q6837);
} else {
var G__22074 = a6821;
var G__22075 = b6822;
var G__22076 = c6823;
var G__22077 = d6824;
var G__22078 = e6825;
var G__22079 = f6826;
var G__22080 = g6827;
var G__22081 = h6828;
var G__22082 = i6829;
var G__22083 = j6830;
var G__22084 = k6831;
var G__22085 = l6832;
var G__22086 = m6833;
var G__22087 = n6834;
var G__22088 = o6835;
var G__22089 = p6836;
var G__22090 = q6837;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__22074,G__22075,G__22076,G__22077,G__22078,G__22079,G__22080,G__22081,G__22082,G__22083,G__22084,G__22085,G__22086,G__22087,G__22088,G__22089,G__22090) : f.call(null,G__22074,G__22075,G__22076,G__22077,G__22078,G__22079,G__22080,G__22081,G__22082,G__22083,G__22084,G__22085,G__22086,G__22087,G__22088,G__22089,G__22090));
}
} else {
var r6838 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831,l6832,m6833,n6834,o6835,p6836,q6837,r6838);
} else {
var G__22091 = a6821;
var G__22092 = b6822;
var G__22093 = c6823;
var G__22094 = d6824;
var G__22095 = e6825;
var G__22096 = f6826;
var G__22097 = g6827;
var G__22098 = h6828;
var G__22099 = i6829;
var G__22100 = j6830;
var G__22101 = k6831;
var G__22102 = l6832;
var G__22103 = m6833;
var G__22104 = n6834;
var G__22105 = o6835;
var G__22106 = p6836;
var G__22107 = q6837;
var G__22108 = r6838;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__22091,G__22092,G__22093,G__22094,G__22095,G__22096,G__22097,G__22098,G__22099,G__22100,G__22101,G__22102,G__22103,G__22104,G__22105,G__22106,G__22107,G__22108) : f.call(null,G__22091,G__22092,G__22093,G__22094,G__22095,G__22096,G__22097,G__22098,G__22099,G__22100,G__22101,G__22102,G__22103,G__22104,G__22105,G__22106,G__22107,G__22108));
}
} else {
var s6839 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831,l6832,m6833,n6834,o6835,p6836,q6837,r6838,s6839);
} else {
var G__22109 = a6821;
var G__22110 = b6822;
var G__22111 = c6823;
var G__22112 = d6824;
var G__22113 = e6825;
var G__22114 = f6826;
var G__22115 = g6827;
var G__22116 = h6828;
var G__22117 = i6829;
var G__22118 = j6830;
var G__22119 = k6831;
var G__22120 = l6832;
var G__22121 = m6833;
var G__22122 = n6834;
var G__22123 = o6835;
var G__22124 = p6836;
var G__22125 = q6837;
var G__22126 = r6838;
var G__22127 = s6839;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__22109,G__22110,G__22111,G__22112,G__22113,G__22114,G__22115,G__22116,G__22117,G__22118,G__22119,G__22120,G__22121,G__22122,G__22123,G__22124,G__22125,G__22126,G__22127) : f.call(null,G__22109,G__22110,G__22111,G__22112,G__22113,G__22114,G__22115,G__22116,G__22117,G__22118,G__22119,G__22120,G__22121,G__22122,G__22123,G__22124,G__22125,G__22126,G__22127));
}
} else {
var t6840 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a6821,b6822,c6823,d6824,e6825,f6826,g6827,h6828,i6829,j6830,k6831,l6832,m6833,n6834,o6835,p6836,q6837,r6838,s6839,t6840);
} else {
var G__22128 = a6821;
var G__22129 = b6822;
var G__22130 = c6823;
var G__22131 = d6824;
var G__22132 = e6825;
var G__22133 = f6826;
var G__22134 = g6827;
var G__22135 = h6828;
var G__22136 = i6829;
var G__22137 = j6830;
var G__22138 = k6831;
var G__22139 = l6832;
var G__22140 = m6833;
var G__22141 = n6834;
var G__22142 = o6835;
var G__22143 = p6836;
var G__22144 = q6837;
var G__22145 = r6838;
var G__22146 = s6839;
var G__22147 = t6840;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__22128,G__22129,G__22130,G__22131,G__22132,G__22133,G__22134,G__22135,G__22136,G__22137,G__22138,G__22139,G__22140,G__22141,G__22142,G__22143,G__22144,G__22145,G__22146,G__22147) : f.call(null,G__22128,G__22129,G__22130,G__22131,G__22132,G__22133,G__22134,G__22135,G__22136,G__22137,G__22138,G__22139,G__22140,G__22141,G__22142,G__22143,G__22144,G__22145,G__22146,G__22147));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__22148__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__22148 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__22149__i = 0, G__22149__a = new Array(arguments.length -  5);
while (G__22149__i < G__22149__a.length) {G__22149__a[G__22149__i] = arguments[G__22149__i + 5]; ++G__22149__i;}
  args = new cljs.core.IndexedSeq(G__22149__a,0);
} 
return G__22148__delegate.call(this,f,a,b,c,d,args);};
G__22148.cljs$lang$maxFixedArity = 5;
G__22148.cljs$lang$applyTo = (function (arglist__22150){
var f = cljs.core.first(arglist__22150);
arglist__22150 = cljs.core.next(arglist__22150);
var a = cljs.core.first(arglist__22150);
arglist__22150 = cljs.core.next(arglist__22150);
var b = cljs.core.first(arglist__22150);
arglist__22150 = cljs.core.next(arglist__22150);
var c = cljs.core.first(arglist__22150);
arglist__22150 = cljs.core.next(arglist__22150);
var d = cljs.core.first(arglist__22150);
var args = cljs.core.rest(arglist__22150);
return G__22148__delegate(f,a,b,c,d,args);
});
G__22148.cljs$core$IFn$_invoke$arity$variadic = G__22148__delegate;
return G__22148;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__22151 = null;
if (arguments.length > 5) {
var G__22152__i = 0, G__22152__a = new Array(arguments.length -  5);
while (G__22152__i < G__22152__a.length) {G__22152__a[G__22152__i] = arguments[G__22152__i + 5]; ++G__22152__i;}
G__22151 = new cljs.core.IndexedSeq(G__22152__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__22151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__22168 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22168) : f.call(null,G__22168));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__22169 = cljs.core.meta(obj);
var G__22170 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22169,G__22170) : f.call(null,G__22169,G__22170));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__22171 = cljs.core.meta(obj);
var G__22172 = a;
var G__22173 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22171,G__22172,G__22173) : f.call(null,G__22171,G__22172,G__22173));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__22174 = cljs.core.meta(obj);
var G__22175 = a;
var G__22176 = b;
var G__22177 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22174,G__22175,G__22176,G__22177) : f.call(null,G__22174,G__22175,G__22176,G__22177));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__22178 = cljs.core.meta(obj);
var G__22179 = a;
var G__22180 = b;
var G__22181 = c;
var G__22182 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22178,G__22179,G__22180,G__22181,G__22182) : f.call(null,G__22178,G__22179,G__22180,G__22181,G__22182));
})());
});
var vary_meta__7 = (function() { 
var G__22183__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__22183 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__22184__i = 0, G__22184__a = new Array(arguments.length -  6);
while (G__22184__i < G__22184__a.length) {G__22184__a[G__22184__i] = arguments[G__22184__i + 6]; ++G__22184__i;}
  args = new cljs.core.IndexedSeq(G__22184__a,0);
} 
return G__22183__delegate.call(this,obj,f,a,b,c,d,args);};
G__22183.cljs$lang$maxFixedArity = 6;
G__22183.cljs$lang$applyTo = (function (arglist__22185){
var obj = cljs.core.first(arglist__22185);
arglist__22185 = cljs.core.next(arglist__22185);
var f = cljs.core.first(arglist__22185);
arglist__22185 = cljs.core.next(arglist__22185);
var a = cljs.core.first(arglist__22185);
arglist__22185 = cljs.core.next(arglist__22185);
var b = cljs.core.first(arglist__22185);
arglist__22185 = cljs.core.next(arglist__22185);
var c = cljs.core.first(arglist__22185);
arglist__22185 = cljs.core.next(arglist__22185);
var d = cljs.core.first(arglist__22185);
var args = cljs.core.rest(arglist__22185);
return G__22183__delegate(obj,f,a,b,c,d,args);
});
G__22183.cljs$core$IFn$_invoke$arity$variadic = G__22183__delegate;
return G__22183;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__22186 = null;
if (arguments.length > 6) {
var G__22187__i = 0, G__22187__a = new Array(arguments.length -  6);
while (G__22187__i < G__22187__a.length) {G__22187__a[G__22187__i] = arguments[G__22187__i + 6]; ++G__22187__i;}
G__22186 = new cljs.core.IndexedSeq(G__22187__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__22186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__22188__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__22188 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22189__i = 0, G__22189__a = new Array(arguments.length -  2);
while (G__22189__i < G__22189__a.length) {G__22189__a[G__22189__i] = arguments[G__22189__i + 2]; ++G__22189__i;}
  more = new cljs.core.IndexedSeq(G__22189__a,0);
} 
return G__22188__delegate.call(this,x,y,more);};
G__22188.cljs$lang$maxFixedArity = 2;
G__22188.cljs$lang$applyTo = (function (arglist__22190){
var x = cljs.core.first(arglist__22190);
arglist__22190 = cljs.core.next(arglist__22190);
var y = cljs.core.first(arglist__22190);
var more = cljs.core.rest(arglist__22190);
return G__22188__delegate(x,y,more);
});
G__22188.cljs$core$IFn$_invoke$arity$variadic = G__22188__delegate;
return G__22188;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__22191 = null;
if (arguments.length > 2) {
var G__22192__i = 0, G__22192__a = new Array(arguments.length -  2);
while (G__22192__i < G__22192__a.length) {G__22192__a[G__22192__i] = arguments[G__22192__i + 2]; ++G__22192__i;}
G__22191 = new cljs.core.IndexedSeq(G__22192__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t22196 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t22196 = (function (nil_iter,meta22197){
this.nil_iter = nil_iter;
this.meta22197 = meta22197;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t22196.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t22196.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t22196.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t22196.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_22198){
var self__ = this;
var _22198__$1 = this;
return self__.meta22197;
});

cljs.core.t22196.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_22198,meta22197__$1){
var self__ = this;
var _22198__$1 = this;
return (new cljs.core.t22196(self__.nil_iter,meta22197__$1));
});

cljs.core.t22196.cljs$lang$type = true;

cljs.core.t22196.cljs$lang$ctorStr = "cljs.core/t22196";

cljs.core.t22196.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/t22196");
});

cljs.core.__GT_t22196 = (function __GT_t22196(nil_iter__$1,meta22197){
return (new cljs.core.t22196(nil_iter__$1,meta22197));
});

}

return (new cljs.core.t22196(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__5878__auto__ = !((lt.stepper == null));
if(and__5878__auto__){
return self__.iter.hasNext();
} else {
return and__5878__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__22199 = lt;
var G__22200 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__22199,G__22200) : self__.xform.call(null,G__22199,G__22200));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__22201 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__22201) : self__.xform.call(null,G__22201));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__22203 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22203) : xform.call(null,G__22203));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__22205 = cljs.core.next(iters__$1);
iters__$1 = G__22205;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__6777__auto___22206 = self__.iters.length;
var i_22207 = (0);
while(true){
if((i_22207 < n__6777__auto___22206)){
(self__.nexts[i_22207] = (self__.iters[i_22207]).next());

var G__22208 = (i_22207 + (1));
i_22207 = G__22208;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__5878__auto__ = !((lt.stepper == null));
if(and__5878__auto__){
return this$.hasNext();
} else {
return and__5878__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__22204 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__22204) : self__.xform.call(null,G__22204));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__22213 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22213) : xform.call(null,G__22213));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__22214_22218 = cljs.core.seq(colls);
var chunk__22215_22219 = null;
var count__22216_22220 = (0);
var i__22217_22221 = (0);
while(true){
if((i__22217_22221 < count__22216_22220)){
var coll_22222 = chunk__22215_22219.cljs$core$IIndexed$_nth$arity$2(null,i__22217_22221);
iters.push(cljs.core.iter(coll_22222));

var G__22223 = seq__22214_22218;
var G__22224 = chunk__22215_22219;
var G__22225 = count__22216_22220;
var G__22226 = (i__22217_22221 + (1));
seq__22214_22218 = G__22223;
chunk__22215_22219 = G__22224;
count__22216_22220 = G__22225;
i__22217_22221 = G__22226;
continue;
} else {
var temp__4406__auto___22227 = cljs.core.seq(seq__22214_22218);
if(temp__4406__auto___22227){
var seq__22214_22228__$1 = temp__4406__auto___22227;
if(cljs.core.chunked_seq_QMARK_(seq__22214_22228__$1)){
var c__6677__auto___22229 = cljs.core.chunk_first(seq__22214_22228__$1);
var G__22230 = cljs.core.chunk_rest(seq__22214_22228__$1);
var G__22231 = c__6677__auto___22229;
var G__22232 = cljs.core.count(c__6677__auto___22229);
var G__22233 = (0);
seq__22214_22218 = G__22230;
chunk__22215_22219 = G__22231;
count__22216_22220 = G__22232;
i__22217_22221 = G__22233;
continue;
} else {
var coll_22234 = cljs.core.first(seq__22214_22228__$1);
iters.push(cljs.core.iter(coll_22234));

var G__22235 = cljs.core.next(seq__22214_22228__$1);
var G__22236 = null;
var G__22237 = (0);
var G__22238 = (0);
seq__22214_22218 = G__22235;
chunk__22215_22219 = G__22236;
count__22216_22220 = G__22237;
i__22217_22221 = G__22238;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__5890__auto__ = cljs.core.seq(coll);
if(or__5890__auto__){
return or__5890__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__22239__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__22239 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__22240__i = 0, G__22240__a = new Array(arguments.length -  2);
while (G__22240__i < G__22240__a.length) {G__22240__a[G__22240__i] = arguments[G__22240__i + 2]; ++G__22240__i;}
  colls = new cljs.core.IndexedSeq(G__22240__a,0);
} 
return G__22239__delegate.call(this,xform,coll,colls);};
G__22239.cljs$lang$maxFixedArity = 2;
G__22239.cljs$lang$applyTo = (function (arglist__22241){
var xform = cljs.core.first(arglist__22241);
arglist__22241 = cljs.core.next(arglist__22241);
var coll = cljs.core.first(arglist__22241);
var colls = cljs.core.rest(arglist__22241);
return G__22239__delegate(xform,coll,colls);
});
G__22239.cljs$core$IFn$_invoke$arity$variadic = G__22239__delegate;
return G__22239;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__22242 = null;
if (arguments.length > 2) {
var G__22243__i = 0, G__22243__a = new Array(arguments.length -  2);
while (G__22243__i < G__22243__a.length) {G__22243__a[G__22243__i] = arguments[G__22243__i + 2]; ++G__22243__i;}
G__22242 = new cljs.core.IndexedSeq(G__22243__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__22242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__22245 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22245) : pred.call(null,G__22245));
})())){
var G__22246 = pred;
var G__22247 = cljs.core.next(coll);
pred = G__22246;
coll = G__22247;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__5890__auto__ = (function (){var G__22251 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22251) : pred.call(null,G__22251));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var G__22252 = pred;
var G__22253 = cljs.core.next(coll);
pred = G__22252;
coll = G__22253;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__22260 = null;
var G__22260__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__22260__1 = (function (x){
return cljs.core.not((function (){var G__22257 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22257) : f.call(null,G__22257));
})());
});
var G__22260__2 = (function (x,y){
return cljs.core.not((function (){var G__22258 = x;
var G__22259 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22258,G__22259) : f.call(null,G__22258,G__22259));
})());
});
var G__22260__3 = (function() { 
var G__22261__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__22261 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__22262__i = 0, G__22262__a = new Array(arguments.length -  2);
while (G__22262__i < G__22262__a.length) {G__22262__a[G__22262__i] = arguments[G__22262__i + 2]; ++G__22262__i;}
  zs = new cljs.core.IndexedSeq(G__22262__a,0);
} 
return G__22261__delegate.call(this,x,y,zs);};
G__22261.cljs$lang$maxFixedArity = 2;
G__22261.cljs$lang$applyTo = (function (arglist__22263){
var x = cljs.core.first(arglist__22263);
arglist__22263 = cljs.core.next(arglist__22263);
var y = cljs.core.first(arglist__22263);
var zs = cljs.core.rest(arglist__22263);
return G__22261__delegate(x,y,zs);
});
G__22261.cljs$core$IFn$_invoke$arity$variadic = G__22261__delegate;
return G__22261;
})()
;
G__22260 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__22260__0.call(this);
case 1:
return G__22260__1.call(this,x);
case 2:
return G__22260__2.call(this,x,y);
default:
var G__22264 = null;
if (arguments.length > 2) {
var G__22265__i = 0, G__22265__a = new Array(arguments.length -  2);
while (G__22265__i < G__22265__a.length) {G__22265__a[G__22265__i] = arguments[G__22265__i + 2]; ++G__22265__i;}
G__22264 = new cljs.core.IndexedSeq(G__22265__a,0);
}
return G__22260__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22260.cljs$lang$maxFixedArity = 2;
G__22260.cljs$lang$applyTo = G__22260__3.cljs$lang$applyTo;
G__22260.cljs$core$IFn$_invoke$arity$0 = G__22260__0;
G__22260.cljs$core$IFn$_invoke$arity$1 = G__22260__1;
G__22260.cljs$core$IFn$_invoke$arity$2 = G__22260__2;
G__22260.cljs$core$IFn$_invoke$arity$variadic = G__22260__3.cljs$core$IFn$_invoke$arity$variadic;
return G__22260;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__22266__delegate = function (args){
return x;
};
var G__22266 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22267__i = 0, G__22267__a = new Array(arguments.length -  0);
while (G__22267__i < G__22267__a.length) {G__22267__a[G__22267__i] = arguments[G__22267__i + 0]; ++G__22267__i;}
  args = new cljs.core.IndexedSeq(G__22267__a,0);
} 
return G__22266__delegate.call(this,args);};
G__22266.cljs$lang$maxFixedArity = 0;
G__22266.cljs$lang$applyTo = (function (arglist__22268){
var args = cljs.core.seq(arglist__22268);
return G__22266__delegate(args);
});
G__22266.cljs$core$IFn$_invoke$arity$variadic = G__22266__delegate;
return G__22266;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__22323 = null;
var G__22323__0 = (function (){
var G__22296 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22296) : f.call(null,G__22296));
});
var G__22323__1 = (function (x){
var G__22297 = (function (){var G__22298 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22298) : g.call(null,G__22298));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22297) : f.call(null,G__22297));
});
var G__22323__2 = (function (x,y){
var G__22299 = (function (){var G__22300 = x;
var G__22301 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22300,G__22301) : g.call(null,G__22300,G__22301));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22299) : f.call(null,G__22299));
});
var G__22323__3 = (function (x,y,z){
var G__22302 = (function (){var G__22303 = x;
var G__22304 = y;
var G__22305 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22303,G__22304,G__22305) : g.call(null,G__22303,G__22304,G__22305));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22302) : f.call(null,G__22302));
});
var G__22323__4 = (function() { 
var G__22324__delegate = function (x,y,z,args){
var G__22306 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22306) : f.call(null,G__22306));
};
var G__22324 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22325__i = 0, G__22325__a = new Array(arguments.length -  3);
while (G__22325__i < G__22325__a.length) {G__22325__a[G__22325__i] = arguments[G__22325__i + 3]; ++G__22325__i;}
  args = new cljs.core.IndexedSeq(G__22325__a,0);
} 
return G__22324__delegate.call(this,x,y,z,args);};
G__22324.cljs$lang$maxFixedArity = 3;
G__22324.cljs$lang$applyTo = (function (arglist__22326){
var x = cljs.core.first(arglist__22326);
arglist__22326 = cljs.core.next(arglist__22326);
var y = cljs.core.first(arglist__22326);
arglist__22326 = cljs.core.next(arglist__22326);
var z = cljs.core.first(arglist__22326);
var args = cljs.core.rest(arglist__22326);
return G__22324__delegate(x,y,z,args);
});
G__22324.cljs$core$IFn$_invoke$arity$variadic = G__22324__delegate;
return G__22324;
})()
;
G__22323 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22323__0.call(this);
case 1:
return G__22323__1.call(this,x);
case 2:
return G__22323__2.call(this,x,y);
case 3:
return G__22323__3.call(this,x,y,z);
default:
var G__22327 = null;
if (arguments.length > 3) {
var G__22328__i = 0, G__22328__a = new Array(arguments.length -  3);
while (G__22328__i < G__22328__a.length) {G__22328__a[G__22328__i] = arguments[G__22328__i + 3]; ++G__22328__i;}
G__22327 = new cljs.core.IndexedSeq(G__22328__a,0);
}
return G__22323__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22323.cljs$lang$maxFixedArity = 3;
G__22323.cljs$lang$applyTo = G__22323__4.cljs$lang$applyTo;
G__22323.cljs$core$IFn$_invoke$arity$0 = G__22323__0;
G__22323.cljs$core$IFn$_invoke$arity$1 = G__22323__1;
G__22323.cljs$core$IFn$_invoke$arity$2 = G__22323__2;
G__22323.cljs$core$IFn$_invoke$arity$3 = G__22323__3;
G__22323.cljs$core$IFn$_invoke$arity$variadic = G__22323__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22323;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__22329 = null;
var G__22329__0 = (function (){
var G__22307 = (function (){var G__22308 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22308) : g.call(null,G__22308));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22307) : f.call(null,G__22307));
});
var G__22329__1 = (function (x){
var G__22309 = (function (){var G__22310 = (function (){var G__22311 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22311) : h.call(null,G__22311));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22310) : g.call(null,G__22310));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22309) : f.call(null,G__22309));
});
var G__22329__2 = (function (x,y){
var G__22312 = (function (){var G__22313 = (function (){var G__22314 = x;
var G__22315 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22314,G__22315) : h.call(null,G__22314,G__22315));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22313) : g.call(null,G__22313));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22312) : f.call(null,G__22312));
});
var G__22329__3 = (function (x,y,z){
var G__22316 = (function (){var G__22317 = (function (){var G__22318 = x;
var G__22319 = y;
var G__22320 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22318,G__22319,G__22320) : h.call(null,G__22318,G__22319,G__22320));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22317) : g.call(null,G__22317));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22316) : f.call(null,G__22316));
});
var G__22329__4 = (function() { 
var G__22330__delegate = function (x,y,z,args){
var G__22321 = (function (){var G__22322 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22322) : g.call(null,G__22322));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22321) : f.call(null,G__22321));
};
var G__22330 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22331__i = 0, G__22331__a = new Array(arguments.length -  3);
while (G__22331__i < G__22331__a.length) {G__22331__a[G__22331__i] = arguments[G__22331__i + 3]; ++G__22331__i;}
  args = new cljs.core.IndexedSeq(G__22331__a,0);
} 
return G__22330__delegate.call(this,x,y,z,args);};
G__22330.cljs$lang$maxFixedArity = 3;
G__22330.cljs$lang$applyTo = (function (arglist__22332){
var x = cljs.core.first(arglist__22332);
arglist__22332 = cljs.core.next(arglist__22332);
var y = cljs.core.first(arglist__22332);
arglist__22332 = cljs.core.next(arglist__22332);
var z = cljs.core.first(arglist__22332);
var args = cljs.core.rest(arglist__22332);
return G__22330__delegate(x,y,z,args);
});
G__22330.cljs$core$IFn$_invoke$arity$variadic = G__22330__delegate;
return G__22330;
})()
;
G__22329 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22329__0.call(this);
case 1:
return G__22329__1.call(this,x);
case 2:
return G__22329__2.call(this,x,y);
case 3:
return G__22329__3.call(this,x,y,z);
default:
var G__22333 = null;
if (arguments.length > 3) {
var G__22334__i = 0, G__22334__a = new Array(arguments.length -  3);
while (G__22334__i < G__22334__a.length) {G__22334__a[G__22334__i] = arguments[G__22334__i + 3]; ++G__22334__i;}
G__22333 = new cljs.core.IndexedSeq(G__22334__a,0);
}
return G__22329__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22329.cljs$lang$maxFixedArity = 3;
G__22329.cljs$lang$applyTo = G__22329__4.cljs$lang$applyTo;
G__22329.cljs$core$IFn$_invoke$arity$0 = G__22329__0;
G__22329.cljs$core$IFn$_invoke$arity$1 = G__22329__1;
G__22329.cljs$core$IFn$_invoke$arity$2 = G__22329__2;
G__22329.cljs$core$IFn$_invoke$arity$3 = G__22329__3;
G__22329.cljs$core$IFn$_invoke$arity$variadic = G__22329__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22329;
})()
});
var comp__4 = (function() { 
var G__22335__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__22336__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__22337 = cljs.core.first(fs__$2).call(null,ret);
var G__22338 = cljs.core.next(fs__$2);
ret = G__22337;
fs__$2 = G__22338;
continue;
} else {
return ret;
}
break;
}
};
var G__22336 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22339__i = 0, G__22339__a = new Array(arguments.length -  0);
while (G__22339__i < G__22339__a.length) {G__22339__a[G__22339__i] = arguments[G__22339__i + 0]; ++G__22339__i;}
  args = new cljs.core.IndexedSeq(G__22339__a,0);
} 
return G__22336__delegate.call(this,args);};
G__22336.cljs$lang$maxFixedArity = 0;
G__22336.cljs$lang$applyTo = (function (arglist__22340){
var args = cljs.core.seq(arglist__22340);
return G__22336__delegate(args);
});
G__22336.cljs$core$IFn$_invoke$arity$variadic = G__22336__delegate;
return G__22336;
})()
;
;})(fs__$1))
};
var G__22335 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22341__i = 0, G__22341__a = new Array(arguments.length -  3);
while (G__22341__i < G__22341__a.length) {G__22341__a[G__22341__i] = arguments[G__22341__i + 3]; ++G__22341__i;}
  fs = new cljs.core.IndexedSeq(G__22341__a,0);
} 
return G__22335__delegate.call(this,f1,f2,f3,fs);};
G__22335.cljs$lang$maxFixedArity = 3;
G__22335.cljs$lang$applyTo = (function (arglist__22342){
var f1 = cljs.core.first(arglist__22342);
arglist__22342 = cljs.core.next(arglist__22342);
var f2 = cljs.core.first(arglist__22342);
arglist__22342 = cljs.core.next(arglist__22342);
var f3 = cljs.core.first(arglist__22342);
var fs = cljs.core.rest(arglist__22342);
return G__22335__delegate(f1,f2,f3,fs);
});
G__22335.cljs$core$IFn$_invoke$arity$variadic = G__22335__delegate;
return G__22335;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__22343 = null;
if (arguments.length > 3) {
var G__22344__i = 0, G__22344__a = new Array(arguments.length -  3);
while (G__22344__i < G__22344__a.length) {G__22344__a[G__22344__i] = arguments[G__22344__i + 3]; ++G__22344__i;}
G__22343 = new cljs.core.IndexedSeq(G__22344__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__22343);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__22429 = null;
var G__22429__0 = (function (){
var G__22387 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22387) : f.call(null,G__22387));
});
var G__22429__1 = (function (x){
var G__22388 = arg1;
var G__22389 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22388,G__22389) : f.call(null,G__22388,G__22389));
});
var G__22429__2 = (function (x,y){
var G__22390 = arg1;
var G__22391 = x;
var G__22392 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22390,G__22391,G__22392) : f.call(null,G__22390,G__22391,G__22392));
});
var G__22429__3 = (function (x,y,z){
var G__22393 = arg1;
var G__22394 = x;
var G__22395 = y;
var G__22396 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22393,G__22394,G__22395,G__22396) : f.call(null,G__22393,G__22394,G__22395,G__22396));
});
var G__22429__4 = (function() { 
var G__22430__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__22430 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22431__i = 0, G__22431__a = new Array(arguments.length -  3);
while (G__22431__i < G__22431__a.length) {G__22431__a[G__22431__i] = arguments[G__22431__i + 3]; ++G__22431__i;}
  args = new cljs.core.IndexedSeq(G__22431__a,0);
} 
return G__22430__delegate.call(this,x,y,z,args);};
G__22430.cljs$lang$maxFixedArity = 3;
G__22430.cljs$lang$applyTo = (function (arglist__22432){
var x = cljs.core.first(arglist__22432);
arglist__22432 = cljs.core.next(arglist__22432);
var y = cljs.core.first(arglist__22432);
arglist__22432 = cljs.core.next(arglist__22432);
var z = cljs.core.first(arglist__22432);
var args = cljs.core.rest(arglist__22432);
return G__22430__delegate(x,y,z,args);
});
G__22430.cljs$core$IFn$_invoke$arity$variadic = G__22430__delegate;
return G__22430;
})()
;
G__22429 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22429__0.call(this);
case 1:
return G__22429__1.call(this,x);
case 2:
return G__22429__2.call(this,x,y);
case 3:
return G__22429__3.call(this,x,y,z);
default:
var G__22433 = null;
if (arguments.length > 3) {
var G__22434__i = 0, G__22434__a = new Array(arguments.length -  3);
while (G__22434__i < G__22434__a.length) {G__22434__a[G__22434__i] = arguments[G__22434__i + 3]; ++G__22434__i;}
G__22433 = new cljs.core.IndexedSeq(G__22434__a,0);
}
return G__22429__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22433);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22429.cljs$lang$maxFixedArity = 3;
G__22429.cljs$lang$applyTo = G__22429__4.cljs$lang$applyTo;
G__22429.cljs$core$IFn$_invoke$arity$0 = G__22429__0;
G__22429.cljs$core$IFn$_invoke$arity$1 = G__22429__1;
G__22429.cljs$core$IFn$_invoke$arity$2 = G__22429__2;
G__22429.cljs$core$IFn$_invoke$arity$3 = G__22429__3;
G__22429.cljs$core$IFn$_invoke$arity$variadic = G__22429__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22429;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__22435 = null;
var G__22435__0 = (function (){
var G__22397 = arg1;
var G__22398 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22397,G__22398) : f.call(null,G__22397,G__22398));
});
var G__22435__1 = (function (x){
var G__22399 = arg1;
var G__22400 = arg2;
var G__22401 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22399,G__22400,G__22401) : f.call(null,G__22399,G__22400,G__22401));
});
var G__22435__2 = (function (x,y){
var G__22402 = arg1;
var G__22403 = arg2;
var G__22404 = x;
var G__22405 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22402,G__22403,G__22404,G__22405) : f.call(null,G__22402,G__22403,G__22404,G__22405));
});
var G__22435__3 = (function (x,y,z){
var G__22406 = arg1;
var G__22407 = arg2;
var G__22408 = x;
var G__22409 = y;
var G__22410 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22406,G__22407,G__22408,G__22409,G__22410) : f.call(null,G__22406,G__22407,G__22408,G__22409,G__22410));
});
var G__22435__4 = (function() { 
var G__22436__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__22436 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22437__i = 0, G__22437__a = new Array(arguments.length -  3);
while (G__22437__i < G__22437__a.length) {G__22437__a[G__22437__i] = arguments[G__22437__i + 3]; ++G__22437__i;}
  args = new cljs.core.IndexedSeq(G__22437__a,0);
} 
return G__22436__delegate.call(this,x,y,z,args);};
G__22436.cljs$lang$maxFixedArity = 3;
G__22436.cljs$lang$applyTo = (function (arglist__22438){
var x = cljs.core.first(arglist__22438);
arglist__22438 = cljs.core.next(arglist__22438);
var y = cljs.core.first(arglist__22438);
arglist__22438 = cljs.core.next(arglist__22438);
var z = cljs.core.first(arglist__22438);
var args = cljs.core.rest(arglist__22438);
return G__22436__delegate(x,y,z,args);
});
G__22436.cljs$core$IFn$_invoke$arity$variadic = G__22436__delegate;
return G__22436;
})()
;
G__22435 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22435__0.call(this);
case 1:
return G__22435__1.call(this,x);
case 2:
return G__22435__2.call(this,x,y);
case 3:
return G__22435__3.call(this,x,y,z);
default:
var G__22439 = null;
if (arguments.length > 3) {
var G__22440__i = 0, G__22440__a = new Array(arguments.length -  3);
while (G__22440__i < G__22440__a.length) {G__22440__a[G__22440__i] = arguments[G__22440__i + 3]; ++G__22440__i;}
G__22439 = new cljs.core.IndexedSeq(G__22440__a,0);
}
return G__22435__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22435.cljs$lang$maxFixedArity = 3;
G__22435.cljs$lang$applyTo = G__22435__4.cljs$lang$applyTo;
G__22435.cljs$core$IFn$_invoke$arity$0 = G__22435__0;
G__22435.cljs$core$IFn$_invoke$arity$1 = G__22435__1;
G__22435.cljs$core$IFn$_invoke$arity$2 = G__22435__2;
G__22435.cljs$core$IFn$_invoke$arity$3 = G__22435__3;
G__22435.cljs$core$IFn$_invoke$arity$variadic = G__22435__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22435;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__22441 = null;
var G__22441__0 = (function (){
var G__22411 = arg1;
var G__22412 = arg2;
var G__22413 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22411,G__22412,G__22413) : f.call(null,G__22411,G__22412,G__22413));
});
var G__22441__1 = (function (x){
var G__22414 = arg1;
var G__22415 = arg2;
var G__22416 = arg3;
var G__22417 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22414,G__22415,G__22416,G__22417) : f.call(null,G__22414,G__22415,G__22416,G__22417));
});
var G__22441__2 = (function (x,y){
var G__22418 = arg1;
var G__22419 = arg2;
var G__22420 = arg3;
var G__22421 = x;
var G__22422 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22418,G__22419,G__22420,G__22421,G__22422) : f.call(null,G__22418,G__22419,G__22420,G__22421,G__22422));
});
var G__22441__3 = (function (x,y,z){
var G__22423 = arg1;
var G__22424 = arg2;
var G__22425 = arg3;
var G__22426 = x;
var G__22427 = y;
var G__22428 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__22423,G__22424,G__22425,G__22426,G__22427,G__22428) : f.call(null,G__22423,G__22424,G__22425,G__22426,G__22427,G__22428));
});
var G__22441__4 = (function() { 
var G__22442__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__22442 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22443__i = 0, G__22443__a = new Array(arguments.length -  3);
while (G__22443__i < G__22443__a.length) {G__22443__a[G__22443__i] = arguments[G__22443__i + 3]; ++G__22443__i;}
  args = new cljs.core.IndexedSeq(G__22443__a,0);
} 
return G__22442__delegate.call(this,x,y,z,args);};
G__22442.cljs$lang$maxFixedArity = 3;
G__22442.cljs$lang$applyTo = (function (arglist__22444){
var x = cljs.core.first(arglist__22444);
arglist__22444 = cljs.core.next(arglist__22444);
var y = cljs.core.first(arglist__22444);
arglist__22444 = cljs.core.next(arglist__22444);
var z = cljs.core.first(arglist__22444);
var args = cljs.core.rest(arglist__22444);
return G__22442__delegate(x,y,z,args);
});
G__22442.cljs$core$IFn$_invoke$arity$variadic = G__22442__delegate;
return G__22442;
})()
;
G__22441 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22441__0.call(this);
case 1:
return G__22441__1.call(this,x);
case 2:
return G__22441__2.call(this,x,y);
case 3:
return G__22441__3.call(this,x,y,z);
default:
var G__22445 = null;
if (arguments.length > 3) {
var G__22446__i = 0, G__22446__a = new Array(arguments.length -  3);
while (G__22446__i < G__22446__a.length) {G__22446__a[G__22446__i] = arguments[G__22446__i + 3]; ++G__22446__i;}
G__22445 = new cljs.core.IndexedSeq(G__22446__a,0);
}
return G__22441__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22441.cljs$lang$maxFixedArity = 3;
G__22441.cljs$lang$applyTo = G__22441__4.cljs$lang$applyTo;
G__22441.cljs$core$IFn$_invoke$arity$0 = G__22441__0;
G__22441.cljs$core$IFn$_invoke$arity$1 = G__22441__1;
G__22441.cljs$core$IFn$_invoke$arity$2 = G__22441__2;
G__22441.cljs$core$IFn$_invoke$arity$3 = G__22441__3;
G__22441.cljs$core$IFn$_invoke$arity$variadic = G__22441__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22441;
})()
});
var partial__5 = (function() { 
var G__22447__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__22448__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__22448 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22449__i = 0, G__22449__a = new Array(arguments.length -  0);
while (G__22449__i < G__22449__a.length) {G__22449__a[G__22449__i] = arguments[G__22449__i + 0]; ++G__22449__i;}
  args = new cljs.core.IndexedSeq(G__22449__a,0);
} 
return G__22448__delegate.call(this,args);};
G__22448.cljs$lang$maxFixedArity = 0;
G__22448.cljs$lang$applyTo = (function (arglist__22450){
var args = cljs.core.seq(arglist__22450);
return G__22448__delegate(args);
});
G__22448.cljs$core$IFn$_invoke$arity$variadic = G__22448__delegate;
return G__22448;
})()
;
};
var G__22447 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__22451__i = 0, G__22451__a = new Array(arguments.length -  4);
while (G__22451__i < G__22451__a.length) {G__22451__a[G__22451__i] = arguments[G__22451__i + 4]; ++G__22451__i;}
  more = new cljs.core.IndexedSeq(G__22451__a,0);
} 
return G__22447__delegate.call(this,f,arg1,arg2,arg3,more);};
G__22447.cljs$lang$maxFixedArity = 4;
G__22447.cljs$lang$applyTo = (function (arglist__22452){
var f = cljs.core.first(arglist__22452);
arglist__22452 = cljs.core.next(arglist__22452);
var arg1 = cljs.core.first(arglist__22452);
arglist__22452 = cljs.core.next(arglist__22452);
var arg2 = cljs.core.first(arglist__22452);
arglist__22452 = cljs.core.next(arglist__22452);
var arg3 = cljs.core.first(arglist__22452);
var more = cljs.core.rest(arglist__22452);
return G__22447__delegate(f,arg1,arg2,arg3,more);
});
G__22447.cljs$core$IFn$_invoke$arity$variadic = G__22447__delegate;
return G__22447;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__22453 = null;
if (arguments.length > 4) {
var G__22454__i = 0, G__22454__a = new Array(arguments.length -  4);
while (G__22454__i < G__22454__a.length) {G__22454__a[G__22454__i] = arguments[G__22454__i + 4]; ++G__22454__i;}
G__22453 = new cljs.core.IndexedSeq(G__22454__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__22453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__22487 = null;
var G__22487__1 = (function (a){
var G__22471 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22471) : f.call(null,G__22471));
});
var G__22487__2 = (function (a,b){
var G__22472 = (((a == null))?x:a);
var G__22473 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22472,G__22473) : f.call(null,G__22472,G__22473));
});
var G__22487__3 = (function (a,b,c){
var G__22474 = (((a == null))?x:a);
var G__22475 = b;
var G__22476 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22474,G__22475,G__22476) : f.call(null,G__22474,G__22475,G__22476));
});
var G__22487__4 = (function() { 
var G__22488__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__22488 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22489__i = 0, G__22489__a = new Array(arguments.length -  3);
while (G__22489__i < G__22489__a.length) {G__22489__a[G__22489__i] = arguments[G__22489__i + 3]; ++G__22489__i;}
  ds = new cljs.core.IndexedSeq(G__22489__a,0);
} 
return G__22488__delegate.call(this,a,b,c,ds);};
G__22488.cljs$lang$maxFixedArity = 3;
G__22488.cljs$lang$applyTo = (function (arglist__22490){
var a = cljs.core.first(arglist__22490);
arglist__22490 = cljs.core.next(arglist__22490);
var b = cljs.core.first(arglist__22490);
arglist__22490 = cljs.core.next(arglist__22490);
var c = cljs.core.first(arglist__22490);
var ds = cljs.core.rest(arglist__22490);
return G__22488__delegate(a,b,c,ds);
});
G__22488.cljs$core$IFn$_invoke$arity$variadic = G__22488__delegate;
return G__22488;
})()
;
G__22487 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__22487__1.call(this,a);
case 2:
return G__22487__2.call(this,a,b);
case 3:
return G__22487__3.call(this,a,b,c);
default:
var G__22491 = null;
if (arguments.length > 3) {
var G__22492__i = 0, G__22492__a = new Array(arguments.length -  3);
while (G__22492__i < G__22492__a.length) {G__22492__a[G__22492__i] = arguments[G__22492__i + 3]; ++G__22492__i;}
G__22491 = new cljs.core.IndexedSeq(G__22492__a,0);
}
return G__22487__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22491);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22487.cljs$lang$maxFixedArity = 3;
G__22487.cljs$lang$applyTo = G__22487__4.cljs$lang$applyTo;
G__22487.cljs$core$IFn$_invoke$arity$1 = G__22487__1;
G__22487.cljs$core$IFn$_invoke$arity$2 = G__22487__2;
G__22487.cljs$core$IFn$_invoke$arity$3 = G__22487__3;
G__22487.cljs$core$IFn$_invoke$arity$variadic = G__22487__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22487;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__22493 = null;
var G__22493__2 = (function (a,b){
var G__22477 = (((a == null))?x:a);
var G__22478 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22477,G__22478) : f.call(null,G__22477,G__22478));
});
var G__22493__3 = (function (a,b,c){
var G__22479 = (((a == null))?x:a);
var G__22480 = (((b == null))?y:b);
var G__22481 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22479,G__22480,G__22481) : f.call(null,G__22479,G__22480,G__22481));
});
var G__22493__4 = (function() { 
var G__22494__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__22494 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22495__i = 0, G__22495__a = new Array(arguments.length -  3);
while (G__22495__i < G__22495__a.length) {G__22495__a[G__22495__i] = arguments[G__22495__i + 3]; ++G__22495__i;}
  ds = new cljs.core.IndexedSeq(G__22495__a,0);
} 
return G__22494__delegate.call(this,a,b,c,ds);};
G__22494.cljs$lang$maxFixedArity = 3;
G__22494.cljs$lang$applyTo = (function (arglist__22496){
var a = cljs.core.first(arglist__22496);
arglist__22496 = cljs.core.next(arglist__22496);
var b = cljs.core.first(arglist__22496);
arglist__22496 = cljs.core.next(arglist__22496);
var c = cljs.core.first(arglist__22496);
var ds = cljs.core.rest(arglist__22496);
return G__22494__delegate(a,b,c,ds);
});
G__22494.cljs$core$IFn$_invoke$arity$variadic = G__22494__delegate;
return G__22494;
})()
;
G__22493 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__22493__2.call(this,a,b);
case 3:
return G__22493__3.call(this,a,b,c);
default:
var G__22497 = null;
if (arguments.length > 3) {
var G__22498__i = 0, G__22498__a = new Array(arguments.length -  3);
while (G__22498__i < G__22498__a.length) {G__22498__a[G__22498__i] = arguments[G__22498__i + 3]; ++G__22498__i;}
G__22497 = new cljs.core.IndexedSeq(G__22498__a,0);
}
return G__22493__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22493.cljs$lang$maxFixedArity = 3;
G__22493.cljs$lang$applyTo = G__22493__4.cljs$lang$applyTo;
G__22493.cljs$core$IFn$_invoke$arity$2 = G__22493__2;
G__22493.cljs$core$IFn$_invoke$arity$3 = G__22493__3;
G__22493.cljs$core$IFn$_invoke$arity$variadic = G__22493__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22493;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__22499 = null;
var G__22499__2 = (function (a,b){
var G__22482 = (((a == null))?x:a);
var G__22483 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22482,G__22483) : f.call(null,G__22482,G__22483));
});
var G__22499__3 = (function (a,b,c){
var G__22484 = (((a == null))?x:a);
var G__22485 = (((b == null))?y:b);
var G__22486 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22484,G__22485,G__22486) : f.call(null,G__22484,G__22485,G__22486));
});
var G__22499__4 = (function() { 
var G__22500__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__22500 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22501__i = 0, G__22501__a = new Array(arguments.length -  3);
while (G__22501__i < G__22501__a.length) {G__22501__a[G__22501__i] = arguments[G__22501__i + 3]; ++G__22501__i;}
  ds = new cljs.core.IndexedSeq(G__22501__a,0);
} 
return G__22500__delegate.call(this,a,b,c,ds);};
G__22500.cljs$lang$maxFixedArity = 3;
G__22500.cljs$lang$applyTo = (function (arglist__22502){
var a = cljs.core.first(arglist__22502);
arglist__22502 = cljs.core.next(arglist__22502);
var b = cljs.core.first(arglist__22502);
arglist__22502 = cljs.core.next(arglist__22502);
var c = cljs.core.first(arglist__22502);
var ds = cljs.core.rest(arglist__22502);
return G__22500__delegate(a,b,c,ds);
});
G__22500.cljs$core$IFn$_invoke$arity$variadic = G__22500__delegate;
return G__22500;
})()
;
G__22499 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__22499__2.call(this,a,b);
case 3:
return G__22499__3.call(this,a,b,c);
default:
var G__22503 = null;
if (arguments.length > 3) {
var G__22504__i = 0, G__22504__a = new Array(arguments.length -  3);
while (G__22504__i < G__22504__a.length) {G__22504__a[G__22504__i] = arguments[G__22504__i + 3]; ++G__22504__i;}
G__22503 = new cljs.core.IndexedSeq(G__22504__a,0);
}
return G__22499__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22499.cljs$lang$maxFixedArity = 3;
G__22499.cljs$lang$applyTo = G__22499__4.cljs$lang$applyTo;
G__22499.cljs$core$IFn$_invoke$arity$2 = G__22499__2;
G__22499.cljs$core$IFn$_invoke$arity$3 = G__22499__3;
G__22499.cljs$core$IFn$_invoke$arity$variadic = G__22499__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22499;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__22535 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__22535) : cljs.core.volatile_BANG_.call(null,G__22535));
})();
return ((function (i){
return (function() {
var G__22565 = null;
var G__22565__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22565__1 = (function (result){
var G__22536 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22536) : rf.call(null,G__22536));
});
var G__22565__2 = (function (result,input){
var G__22537 = result;
var G__22538 = (function (){var G__22539 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__22540 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22539,G__22540) : f.call(null,G__22539,G__22540));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22537,G__22538) : rf.call(null,G__22537,G__22538));
});
G__22565 = function(result,input){
switch(arguments.length){
case 0:
return G__22565__0.call(this);
case 1:
return G__22565__1.call(this,result);
case 2:
return G__22565__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22565.cljs$core$IFn$_invoke$arity$0 = G__22565__0;
G__22565.cljs$core$IFn$_invoke$arity$1 = G__22565__1;
G__22565.cljs$core$IFn$_invoke$arity$2 = G__22565__2;
return G__22565;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6777__auto___22566 = size;
var i_22567 = (0);
while(true){
if((i_22567 < n__6777__auto___22566)){
cljs.core.chunk_append(b,(function (){var G__22561 = (idx + i_22567);
var G__22562 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22567);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22561,G__22562) : f.call(null,G__22561,G__22562));
})());

var G__22568 = (i_22567 + (1));
i_22567 = G__22568;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__22563 = idx;
var G__22564 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22563,G__22564) : f.call(null,G__22563,G__22564));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__22587 = null;
var G__22587__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22587__1 = (function (result){
var G__22581 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22581) : rf.call(null,G__22581));
});
var G__22587__2 = (function (result,input){
var v = (function (){var G__22582 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22582) : f.call(null,G__22582));
})();
if((v == null)){
return result;
} else {
var G__22583 = result;
var G__22584 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22583,G__22584) : rf.call(null,G__22583,G__22584));
}
});
G__22587 = function(result,input){
switch(arguments.length){
case 0:
return G__22587__0.call(this);
case 1:
return G__22587__1.call(this,result);
case 2:
return G__22587__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22587.cljs$core$IFn$_invoke$arity$0 = G__22587__0;
G__22587.cljs$core$IFn$_invoke$arity$1 = G__22587__1;
G__22587.cljs$core$IFn$_invoke$arity$2 = G__22587__2;
return G__22587;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6777__auto___22588 = size;
var i_22589 = (0);
while(true){
if((i_22589 < n__6777__auto___22588)){
var x_22590 = (function (){var G__22585 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22589);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22585) : f.call(null,G__22585));
})();
if((x_22590 == null)){
} else {
cljs.core.chunk_append(b,x_22590);
}

var G__22591 = (i_22589 + (1));
i_22589 = G__22591;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__22586 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22586) : f.call(null,G__22586));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__22592 = this$__$1;
return goog.getUid(G__22592);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__22593 = cljs.core.seq(self__.watches);
var chunk__22594 = null;
var count__22595 = (0);
var i__22596 = (0);
while(true){
if((i__22596 < count__22595)){
var vec__22597 = chunk__22594.cljs$core$IIndexed$_nth$arity$2(null,i__22596);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22597,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22597,(1),null);
var G__22598_22607 = key;
var G__22599_22608 = this$__$1;
var G__22600_22609 = oldval;
var G__22601_22610 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22598_22607,G__22599_22608,G__22600_22609,G__22601_22610) : f.call(null,G__22598_22607,G__22599_22608,G__22600_22609,G__22601_22610));

var G__22611 = seq__22593;
var G__22612 = chunk__22594;
var G__22613 = count__22595;
var G__22614 = (i__22596 + (1));
seq__22593 = G__22611;
chunk__22594 = G__22612;
count__22595 = G__22613;
i__22596 = G__22614;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__22593);
if(temp__4406__auto__){
var seq__22593__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22593__$1)){
var c__6677__auto__ = cljs.core.chunk_first(seq__22593__$1);
var G__22615 = cljs.core.chunk_rest(seq__22593__$1);
var G__22616 = c__6677__auto__;
var G__22617 = cljs.core.count(c__6677__auto__);
var G__22618 = (0);
seq__22593 = G__22615;
chunk__22594 = G__22616;
count__22595 = G__22617;
i__22596 = G__22618;
continue;
} else {
var vec__22602 = cljs.core.first(seq__22593__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22602,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22602,(1),null);
var G__22603_22619 = key;
var G__22604_22620 = this$__$1;
var G__22605_22621 = oldval;
var G__22606_22622 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22603_22619,G__22604_22620,G__22605_22621,G__22606_22622) : f.call(null,G__22603_22619,G__22604_22620,G__22605_22621,G__22606_22622));

var G__22623 = cljs.core.next(seq__22593__$1);
var G__22624 = null;
var G__22625 = (0);
var G__22626 = (0);
seq__22593 = G__22623;
chunk__22594 = G__22624;
count__22595 = G__22625;
i__22596 = G__22626;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__22630__delegate = function (x,p__22627){
var map__22629 = p__22627;
var map__22629__$1 = ((cljs.core.seq_QMARK_(map__22629))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22629):map__22629);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22629__$1,cljs.core.constant$keyword$8);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22629__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__22630 = function (x,var_args){
var p__22627 = null;
if (arguments.length > 1) {
var G__22631__i = 0, G__22631__a = new Array(arguments.length -  1);
while (G__22631__i < G__22631__a.length) {G__22631__a[G__22631__i] = arguments[G__22631__i + 1]; ++G__22631__i;}
  p__22627 = new cljs.core.IndexedSeq(G__22631__a,0);
} 
return G__22630__delegate.call(this,x,p__22627);};
G__22630.cljs$lang$maxFixedArity = 1;
G__22630.cljs$lang$applyTo = (function (arglist__22632){
var x = cljs.core.first(arglist__22632);
var p__22627 = cljs.core.rest(arglist__22632);
return G__22630__delegate(x,p__22627);
});
G__22630.cljs$core$IFn$_invoke$arity$variadic = G__22630__delegate;
return G__22630;
})()
;
atom = function(x,var_args){
var p__22627 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__22633 = null;
if (arguments.length > 1) {
var G__22634__i = 0, G__22634__a = new Array(arguments.length -  1);
while (G__22634__i < G__22634__a.length) {G__22634__a[G__22634__i] = arguments[G__22634__i + 1]; ++G__22634__i;}
G__22633 = new cljs.core.IndexedSeq(G__22634__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22633);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__22637 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__22637) : validate.call(null,G__22637));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__22638 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22638) : cljs.core.pr_str.call(null,G__22638));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22645 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22645) : f.call(null,G__22645));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22646 = a.state;
var G__22647 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22646,G__22647) : f.call(null,G__22646,G__22647));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22648 = a.state;
var G__22649 = x;
var G__22650 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22648,G__22649,G__22650) : f.call(null,G__22648,G__22649,G__22650));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__22651__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__22651 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__22652__i = 0, G__22652__a = new Array(arguments.length -  4);
while (G__22652__i < G__22652__a.length) {G__22652__a[G__22652__i] = arguments[G__22652__i + 4]; ++G__22652__i;}
  more = new cljs.core.IndexedSeq(G__22652__a,0);
} 
return G__22651__delegate.call(this,a,f,x,y,more);};
G__22651.cljs$lang$maxFixedArity = 4;
G__22651.cljs$lang$applyTo = (function (arglist__22653){
var a = cljs.core.first(arglist__22653);
arglist__22653 = cljs.core.next(arglist__22653);
var f = cljs.core.first(arglist__22653);
arglist__22653 = cljs.core.next(arglist__22653);
var x = cljs.core.first(arglist__22653);
arglist__22653 = cljs.core.next(arglist__22653);
var y = cljs.core.first(arglist__22653);
var more = cljs.core.rest(arglist__22653);
return G__22651__delegate(a,f,x,y,more);
});
G__22651.cljs$core$IFn$_invoke$arity$variadic = G__22651__delegate;
return G__22651;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__22654 = null;
if (arguments.length > 4) {
var G__22655__i = 0, G__22655__a = new Array(arguments.length -  4);
while (G__22655__i < G__22655__a.length) {G__22655__a[G__22655__i] = arguments[G__22655__i + 4]; ++G__22655__i;}
G__22654 = new cljs.core.IndexedSeq(G__22655__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__22654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22722 = null;
var G__22722__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22722__1 = (function (result){
var G__22689 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22689) : rf.call(null,G__22689));
});
var G__22722__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__22690 = i;
var G__22691 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22690,G__22691) : f.call(null,G__22690,G__22691));
})();
if((v == null)){
return result;
} else {
var G__22692 = result;
var G__22693 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22692,G__22693) : rf.call(null,G__22692,G__22693));
}
});
G__22722 = function(result,input){
switch(arguments.length){
case 0:
return G__22722__0.call(this);
case 1:
return G__22722__1.call(this,result);
case 2:
return G__22722__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22722.cljs$core$IFn$_invoke$arity$0 = G__22722__0;
G__22722.cljs$core$IFn$_invoke$arity$1 = G__22722__1;
G__22722.cljs$core$IFn$_invoke$arity$2 = G__22722__2;
return G__22722;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6777__auto___22723 = size;
var i_22724 = (0);
while(true){
if((i_22724 < n__6777__auto___22723)){
var x_22725 = (function (){var G__22718 = (idx + i_22724);
var G__22719 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22724);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22718,G__22719) : f.call(null,G__22718,G__22719));
})();
if((x_22725 == null)){
} else {
cljs.core.chunk_append(b,x_22725);
}

var G__22726 = (i_22724 + (1));
i_22724 = G__22726;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__22720 = idx;
var G__22721 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22720,G__22721) : f.call(null,G__22720,G__22721));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__22940 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22940) : p.call(null,G__22940));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__5878__auto__ = (function (){var G__22942 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22942) : p.call(null,G__22942));
})();
if(cljs.core.truth_(and__5878__auto__)){
var G__22943 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22943) : p.call(null,G__22943));
} else {
return and__5878__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__5878__auto__ = (function (){var G__22945 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22945) : p.call(null,G__22945));
})();
if(cljs.core.truth_(and__5878__auto__)){
var and__5878__auto____$1 = (function (){var G__22947 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22947) : p.call(null,G__22947));
})();
if(cljs.core.truth_(and__5878__auto____$1)){
var G__22948 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22948) : p.call(null,G__22948));
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__23117__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__23117 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23118__i = 0, G__23118__a = new Array(arguments.length -  3);
while (G__23118__i < G__23118__a.length) {G__23118__a[G__23118__i] = arguments[G__23118__i + 3]; ++G__23118__i;}
  args = new cljs.core.IndexedSeq(G__23118__a,0);
} 
return G__23117__delegate.call(this,x,y,z,args);};
G__23117.cljs$lang$maxFixedArity = 3;
G__23117.cljs$lang$applyTo = (function (arglist__23119){
var x = cljs.core.first(arglist__23119);
arglist__23119 = cljs.core.next(arglist__23119);
var y = cljs.core.first(arglist__23119);
arglist__23119 = cljs.core.next(arglist__23119);
var z = cljs.core.first(arglist__23119);
var args = cljs.core.rest(arglist__23119);
return G__23117__delegate(x,y,z,args);
});
G__23117.cljs$core$IFn$_invoke$arity$variadic = G__23117__delegate;
return G__23117;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__23120 = null;
if (arguments.length > 3) {
var G__23121__i = 0, G__23121__a = new Array(arguments.length -  3);
while (G__23121__i < G__23121__a.length) {G__23121__a[G__23121__i] = arguments[G__23121__i + 3]; ++G__23121__i;}
G__23120 = new cljs.core.IndexedSeq(G__23121__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__5878__auto__ = (function (){var G__22980 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22980) : p1.call(null,G__22980));
})();
if(cljs.core.truth_(and__5878__auto__)){
var G__22981 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22981) : p2.call(null,G__22981));
} else {
return and__5878__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__5878__auto__ = (function (){var G__22983 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22983) : p1.call(null,G__22983));
})();
if(cljs.core.truth_(and__5878__auto__)){
var and__5878__auto____$1 = (function (){var G__22985 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22985) : p1.call(null,G__22985));
})();
if(cljs.core.truth_(and__5878__auto____$1)){
var and__5878__auto____$2 = (function (){var G__22987 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22987) : p2.call(null,G__22987));
})();
if(cljs.core.truth_(and__5878__auto____$2)){
var G__22988 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22988) : p2.call(null,G__22988));
} else {
return and__5878__auto____$2;
}
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__5878__auto__ = (function (){var G__22990 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22990) : p1.call(null,G__22990));
})();
if(cljs.core.truth_(and__5878__auto__)){
var and__5878__auto____$1 = (function (){var G__22992 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22992) : p1.call(null,G__22992));
})();
if(cljs.core.truth_(and__5878__auto____$1)){
var and__5878__auto____$2 = (function (){var G__22994 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22994) : p1.call(null,G__22994));
})();
if(cljs.core.truth_(and__5878__auto____$2)){
var and__5878__auto____$3 = (function (){var G__22996 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22996) : p2.call(null,G__22996));
})();
if(cljs.core.truth_(and__5878__auto____$3)){
var and__5878__auto____$4 = (function (){var G__22998 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22998) : p2.call(null,G__22998));
})();
if(cljs.core.truth_(and__5878__auto____$4)){
var G__22999 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22999) : p2.call(null,G__22999));
} else {
return and__5878__auto____$4;
}
} else {
return and__5878__auto____$3;
}
} else {
return and__5878__auto____$2;
}
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__23122__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__22727_SHARP_){
var and__5878__auto__ = (function (){var G__23004 = p1__22727_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23004) : p1.call(null,G__23004));
})();
if(cljs.core.truth_(and__5878__auto__)){
var G__23005 = p1__22727_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23005) : p2.call(null,G__23005));
} else {
return and__5878__auto__;
}
}),args)));
};
var G__23122 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23123__i = 0, G__23123__a = new Array(arguments.length -  3);
while (G__23123__i < G__23123__a.length) {G__23123__a[G__23123__i] = arguments[G__23123__i + 3]; ++G__23123__i;}
  args = new cljs.core.IndexedSeq(G__23123__a,0);
} 
return G__23122__delegate.call(this,x,y,z,args);};
G__23122.cljs$lang$maxFixedArity = 3;
G__23122.cljs$lang$applyTo = (function (arglist__23124){
var x = cljs.core.first(arglist__23124);
arglist__23124 = cljs.core.next(arglist__23124);
var y = cljs.core.first(arglist__23124);
arglist__23124 = cljs.core.next(arglist__23124);
var z = cljs.core.first(arglist__23124);
var args = cljs.core.rest(arglist__23124);
return G__23122__delegate(x,y,z,args);
});
G__23122.cljs$core$IFn$_invoke$arity$variadic = G__23122__delegate;
return G__23122;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__23125 = null;
if (arguments.length > 3) {
var G__23126__i = 0, G__23126__a = new Array(arguments.length -  3);
while (G__23126__i < G__23126__a.length) {G__23126__a[G__23126__i] = arguments[G__23126__i + 3]; ++G__23126__i;}
G__23125 = new cljs.core.IndexedSeq(G__23126__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23125);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__5878__auto__ = (function (){var G__23051 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23051) : p1.call(null,G__23051));
})();
if(cljs.core.truth_(and__5878__auto__)){
var and__5878__auto____$1 = (function (){var G__23053 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23053) : p2.call(null,G__23053));
})();
if(cljs.core.truth_(and__5878__auto____$1)){
var G__23054 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23054) : p3.call(null,G__23054));
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__5878__auto__ = (function (){var G__23056 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23056) : p1.call(null,G__23056));
})();
if(cljs.core.truth_(and__5878__auto__)){
var and__5878__auto____$1 = (function (){var G__23058 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23058) : p2.call(null,G__23058));
})();
if(cljs.core.truth_(and__5878__auto____$1)){
var and__5878__auto____$2 = (function (){var G__23060 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23060) : p3.call(null,G__23060));
})();
if(cljs.core.truth_(and__5878__auto____$2)){
var and__5878__auto____$3 = (function (){var G__23062 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23062) : p1.call(null,G__23062));
})();
if(cljs.core.truth_(and__5878__auto____$3)){
var and__5878__auto____$4 = (function (){var G__23064 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23064) : p2.call(null,G__23064));
})();
if(cljs.core.truth_(and__5878__auto____$4)){
var G__23065 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23065) : p3.call(null,G__23065));
} else {
return and__5878__auto____$4;
}
} else {
return and__5878__auto____$3;
}
} else {
return and__5878__auto____$2;
}
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__5878__auto__ = (function (){var G__23067 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23067) : p1.call(null,G__23067));
})();
if(cljs.core.truth_(and__5878__auto__)){
var and__5878__auto____$1 = (function (){var G__23069 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23069) : p2.call(null,G__23069));
})();
if(cljs.core.truth_(and__5878__auto____$1)){
var and__5878__auto____$2 = (function (){var G__23071 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23071) : p3.call(null,G__23071));
})();
if(cljs.core.truth_(and__5878__auto____$2)){
var and__5878__auto____$3 = (function (){var G__23073 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23073) : p1.call(null,G__23073));
})();
if(cljs.core.truth_(and__5878__auto____$3)){
var and__5878__auto____$4 = (function (){var G__23075 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23075) : p2.call(null,G__23075));
})();
if(cljs.core.truth_(and__5878__auto____$4)){
var and__5878__auto____$5 = (function (){var G__23077 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23077) : p3.call(null,G__23077));
})();
if(cljs.core.truth_(and__5878__auto____$5)){
var and__5878__auto____$6 = (function (){var G__23079 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23079) : p1.call(null,G__23079));
})();
if(cljs.core.truth_(and__5878__auto____$6)){
var and__5878__auto____$7 = (function (){var G__23081 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23081) : p2.call(null,G__23081));
})();
if(cljs.core.truth_(and__5878__auto____$7)){
var G__23082 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23082) : p3.call(null,G__23082));
} else {
return and__5878__auto____$7;
}
} else {
return and__5878__auto____$6;
}
} else {
return and__5878__auto____$5;
}
} else {
return and__5878__auto____$4;
}
} else {
return and__5878__auto____$3;
}
} else {
return and__5878__auto____$2;
}
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__23127__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__22728_SHARP_){
var and__5878__auto__ = (function (){var G__23089 = p1__22728_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23089) : p1.call(null,G__23089));
})();
if(cljs.core.truth_(and__5878__auto__)){
var and__5878__auto____$1 = (function (){var G__23091 = p1__22728_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23091) : p2.call(null,G__23091));
})();
if(cljs.core.truth_(and__5878__auto____$1)){
var G__23092 = p1__22728_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23092) : p3.call(null,G__23092));
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
}),args)));
};
var G__23127 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23128__i = 0, G__23128__a = new Array(arguments.length -  3);
while (G__23128__i < G__23128__a.length) {G__23128__a[G__23128__i] = arguments[G__23128__i + 3]; ++G__23128__i;}
  args = new cljs.core.IndexedSeq(G__23128__a,0);
} 
return G__23127__delegate.call(this,x,y,z,args);};
G__23127.cljs$lang$maxFixedArity = 3;
G__23127.cljs$lang$applyTo = (function (arglist__23129){
var x = cljs.core.first(arglist__23129);
arglist__23129 = cljs.core.next(arglist__23129);
var y = cljs.core.first(arglist__23129);
arglist__23129 = cljs.core.next(arglist__23129);
var z = cljs.core.first(arglist__23129);
var args = cljs.core.rest(arglist__23129);
return G__23127__delegate(x,y,z,args);
});
G__23127.cljs$core$IFn$_invoke$arity$variadic = G__23127__delegate;
return G__23127;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__23130 = null;
if (arguments.length > 3) {
var G__23131__i = 0, G__23131__a = new Array(arguments.length -  3);
while (G__23131__i < G__23131__a.length) {G__23131__a[G__23131__i] = arguments[G__23131__i + 3]; ++G__23131__i;}
G__23130 = new cljs.core.IndexedSeq(G__23131__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23130);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__23132__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22729_SHARP_){
var G__23108 = x;
return (p1__22729_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22729_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23108) : p1__22729_SHARP_.call(null,G__23108));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22730_SHARP_){
var and__5878__auto__ = (function (){var G__23110 = x;
return (p1__22730_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22730_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23110) : p1__22730_SHARP_.call(null,G__23110));
})();
if(cljs.core.truth_(and__5878__auto__)){
var G__23111 = y;
return (p1__22730_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22730_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23111) : p1__22730_SHARP_.call(null,G__23111));
} else {
return and__5878__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22731_SHARP_){
var and__5878__auto__ = (function (){var G__23113 = x;
return (p1__22731_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22731_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23113) : p1__22731_SHARP_.call(null,G__23113));
})();
if(cljs.core.truth_(and__5878__auto__)){
var and__5878__auto____$1 = (function (){var G__23115 = y;
return (p1__22731_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22731_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23115) : p1__22731_SHARP_.call(null,G__23115));
})();
if(cljs.core.truth_(and__5878__auto____$1)){
var G__23116 = z;
return (p1__22731_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22731_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23116) : p1__22731_SHARP_.call(null,G__23116));
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__23133__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22732_SHARP_){
return cljs.core.every_QMARK_(p1__22732_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__23133 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23134__i = 0, G__23134__a = new Array(arguments.length -  3);
while (G__23134__i < G__23134__a.length) {G__23134__a[G__23134__i] = arguments[G__23134__i + 3]; ++G__23134__i;}
  args = new cljs.core.IndexedSeq(G__23134__a,0);
} 
return G__23133__delegate.call(this,x,y,z,args);};
G__23133.cljs$lang$maxFixedArity = 3;
G__23133.cljs$lang$applyTo = (function (arglist__23135){
var x = cljs.core.first(arglist__23135);
arglist__23135 = cljs.core.next(arglist__23135);
var y = cljs.core.first(arglist__23135);
arglist__23135 = cljs.core.next(arglist__23135);
var z = cljs.core.first(arglist__23135);
var args = cljs.core.rest(arglist__23135);
return G__23133__delegate(x,y,z,args);
});
G__23133.cljs$core$IFn$_invoke$arity$variadic = G__23133__delegate;
return G__23133;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__23136 = null;
if (arguments.length > 3) {
var G__23137__i = 0, G__23137__a = new Array(arguments.length -  3);
while (G__23137__i < G__23137__a.length) {G__23137__a[G__23137__i] = arguments[G__23137__i + 3]; ++G__23137__i;}
G__23136 = new cljs.core.IndexedSeq(G__23137__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23136);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__23132 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23138__i = 0, G__23138__a = new Array(arguments.length -  3);
while (G__23138__i < G__23138__a.length) {G__23138__a[G__23138__i] = arguments[G__23138__i + 3]; ++G__23138__i;}
  ps = new cljs.core.IndexedSeq(G__23138__a,0);
} 
return G__23132__delegate.call(this,p1,p2,p3,ps);};
G__23132.cljs$lang$maxFixedArity = 3;
G__23132.cljs$lang$applyTo = (function (arglist__23139){
var p1 = cljs.core.first(arglist__23139);
arglist__23139 = cljs.core.next(arglist__23139);
var p2 = cljs.core.first(arglist__23139);
arglist__23139 = cljs.core.next(arglist__23139);
var p3 = cljs.core.first(arglist__23139);
var ps = cljs.core.rest(arglist__23139);
return G__23132__delegate(p1,p2,p3,ps);
});
G__23132.cljs$core$IFn$_invoke$arity$variadic = G__23132__delegate;
return G__23132;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__23140 = null;
if (arguments.length > 3) {
var G__23141__i = 0, G__23141__a = new Array(arguments.length -  3);
while (G__23141__i < G__23141__a.length) {G__23141__a[G__23141__i] = arguments[G__23141__i + 3]; ++G__23141__i;}
G__23140 = new cljs.core.IndexedSeq(G__23141__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23140);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__23347 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23347) : p.call(null,G__23347));
});
var sp1__2 = (function (x,y){
var or__5890__auto__ = (function (){var G__23349 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23349) : p.call(null,G__23349));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var G__23350 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23350) : p.call(null,G__23350));
}
});
var sp1__3 = (function (x,y,z){
var or__5890__auto__ = (function (){var G__23352 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23352) : p.call(null,G__23352));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (function (){var G__23354 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23354) : p.call(null,G__23354));
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var G__23355 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23355) : p.call(null,G__23355));
}
}
});
var sp1__4 = (function() { 
var G__23516__delegate = function (x,y,z,args){
var or__5890__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__23516 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23517__i = 0, G__23517__a = new Array(arguments.length -  3);
while (G__23517__i < G__23517__a.length) {G__23517__a[G__23517__i] = arguments[G__23517__i + 3]; ++G__23517__i;}
  args = new cljs.core.IndexedSeq(G__23517__a,0);
} 
return G__23516__delegate.call(this,x,y,z,args);};
G__23516.cljs$lang$maxFixedArity = 3;
G__23516.cljs$lang$applyTo = (function (arglist__23518){
var x = cljs.core.first(arglist__23518);
arglist__23518 = cljs.core.next(arglist__23518);
var y = cljs.core.first(arglist__23518);
arglist__23518 = cljs.core.next(arglist__23518);
var z = cljs.core.first(arglist__23518);
var args = cljs.core.rest(arglist__23518);
return G__23516__delegate(x,y,z,args);
});
G__23516.cljs$core$IFn$_invoke$arity$variadic = G__23516__delegate;
return G__23516;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__23519 = null;
if (arguments.length > 3) {
var G__23520__i = 0, G__23520__a = new Array(arguments.length -  3);
while (G__23520__i < G__23520__a.length) {G__23520__a[G__23520__i] = arguments[G__23520__i + 3]; ++G__23520__i;}
G__23519 = new cljs.core.IndexedSeq(G__23520__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__5890__auto__ = (function (){var G__23387 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23387) : p1.call(null,G__23387));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var G__23388 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23388) : p2.call(null,G__23388));
}
});
var sp2__2 = (function (x,y){
var or__5890__auto__ = (function (){var G__23390 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23390) : p1.call(null,G__23390));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (function (){var G__23392 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23392) : p1.call(null,G__23392));
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var or__5890__auto____$2 = (function (){var G__23394 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23394) : p2.call(null,G__23394));
})();
if(cljs.core.truth_(or__5890__auto____$2)){
return or__5890__auto____$2;
} else {
var G__23395 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23395) : p2.call(null,G__23395));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__5890__auto__ = (function (){var G__23397 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23397) : p1.call(null,G__23397));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (function (){var G__23399 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23399) : p1.call(null,G__23399));
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var or__5890__auto____$2 = (function (){var G__23401 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23401) : p1.call(null,G__23401));
})();
if(cljs.core.truth_(or__5890__auto____$2)){
return or__5890__auto____$2;
} else {
var or__5890__auto____$3 = (function (){var G__23403 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23403) : p2.call(null,G__23403));
})();
if(cljs.core.truth_(or__5890__auto____$3)){
return or__5890__auto____$3;
} else {
var or__5890__auto____$4 = (function (){var G__23405 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23405) : p2.call(null,G__23405));
})();
if(cljs.core.truth_(or__5890__auto____$4)){
return or__5890__auto____$4;
} else {
var G__23406 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23406) : p2.call(null,G__23406));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__23521__delegate = function (x,y,z,args){
var or__5890__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return cljs.core.some(((function (or__5890__auto__){
return (function (p1__23142_SHARP_){
var or__5890__auto____$1 = (function (){var G__23408 = p1__23142_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23408) : p1.call(null,G__23408));
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var G__23409 = p1__23142_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23409) : p2.call(null,G__23409));
}
});})(or__5890__auto__))
,args);
}
};
var G__23521 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23522__i = 0, G__23522__a = new Array(arguments.length -  3);
while (G__23522__i < G__23522__a.length) {G__23522__a[G__23522__i] = arguments[G__23522__i + 3]; ++G__23522__i;}
  args = new cljs.core.IndexedSeq(G__23522__a,0);
} 
return G__23521__delegate.call(this,x,y,z,args);};
G__23521.cljs$lang$maxFixedArity = 3;
G__23521.cljs$lang$applyTo = (function (arglist__23523){
var x = cljs.core.first(arglist__23523);
arglist__23523 = cljs.core.next(arglist__23523);
var y = cljs.core.first(arglist__23523);
arglist__23523 = cljs.core.next(arglist__23523);
var z = cljs.core.first(arglist__23523);
var args = cljs.core.rest(arglist__23523);
return G__23521__delegate(x,y,z,args);
});
G__23521.cljs$core$IFn$_invoke$arity$variadic = G__23521__delegate;
return G__23521;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__23524 = null;
if (arguments.length > 3) {
var G__23525__i = 0, G__23525__a = new Array(arguments.length -  3);
while (G__23525__i < G__23525__a.length) {G__23525__a[G__23525__i] = arguments[G__23525__i + 3]; ++G__23525__i;}
G__23524 = new cljs.core.IndexedSeq(G__23525__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__5890__auto__ = (function (){var G__23455 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23455) : p1.call(null,G__23455));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (function (){var G__23457 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23457) : p2.call(null,G__23457));
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var G__23458 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23458) : p3.call(null,G__23458));
}
}
});
var sp3__2 = (function (x,y){
var or__5890__auto__ = (function (){var G__23460 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23460) : p1.call(null,G__23460));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (function (){var G__23462 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23462) : p2.call(null,G__23462));
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var or__5890__auto____$2 = (function (){var G__23464 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23464) : p3.call(null,G__23464));
})();
if(cljs.core.truth_(or__5890__auto____$2)){
return or__5890__auto____$2;
} else {
var or__5890__auto____$3 = (function (){var G__23466 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23466) : p1.call(null,G__23466));
})();
if(cljs.core.truth_(or__5890__auto____$3)){
return or__5890__auto____$3;
} else {
var or__5890__auto____$4 = (function (){var G__23468 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23468) : p2.call(null,G__23468));
})();
if(cljs.core.truth_(or__5890__auto____$4)){
return or__5890__auto____$4;
} else {
var G__23469 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23469) : p3.call(null,G__23469));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__5890__auto__ = (function (){var G__23471 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23471) : p1.call(null,G__23471));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (function (){var G__23473 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23473) : p2.call(null,G__23473));
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var or__5890__auto____$2 = (function (){var G__23475 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23475) : p3.call(null,G__23475));
})();
if(cljs.core.truth_(or__5890__auto____$2)){
return or__5890__auto____$2;
} else {
var or__5890__auto____$3 = (function (){var G__23477 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23477) : p1.call(null,G__23477));
})();
if(cljs.core.truth_(or__5890__auto____$3)){
return or__5890__auto____$3;
} else {
var or__5890__auto____$4 = (function (){var G__23479 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23479) : p2.call(null,G__23479));
})();
if(cljs.core.truth_(or__5890__auto____$4)){
return or__5890__auto____$4;
} else {
var or__5890__auto____$5 = (function (){var G__23481 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23481) : p3.call(null,G__23481));
})();
if(cljs.core.truth_(or__5890__auto____$5)){
return or__5890__auto____$5;
} else {
var or__5890__auto____$6 = (function (){var G__23483 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23483) : p1.call(null,G__23483));
})();
if(cljs.core.truth_(or__5890__auto____$6)){
return or__5890__auto____$6;
} else {
var or__5890__auto____$7 = (function (){var G__23485 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23485) : p2.call(null,G__23485));
})();
if(cljs.core.truth_(or__5890__auto____$7)){
return or__5890__auto____$7;
} else {
var G__23486 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23486) : p3.call(null,G__23486));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__23526__delegate = function (x,y,z,args){
var or__5890__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return cljs.core.some(((function (or__5890__auto__){
return (function (p1__23143_SHARP_){
var or__5890__auto____$1 = (function (){var G__23488 = p1__23143_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23488) : p1.call(null,G__23488));
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var or__5890__auto____$2 = (function (){var G__23490 = p1__23143_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23490) : p2.call(null,G__23490));
})();
if(cljs.core.truth_(or__5890__auto____$2)){
return or__5890__auto____$2;
} else {
var G__23491 = p1__23143_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23491) : p3.call(null,G__23491));
}
}
});})(or__5890__auto__))
,args);
}
};
var G__23526 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23527__i = 0, G__23527__a = new Array(arguments.length -  3);
while (G__23527__i < G__23527__a.length) {G__23527__a[G__23527__i] = arguments[G__23527__i + 3]; ++G__23527__i;}
  args = new cljs.core.IndexedSeq(G__23527__a,0);
} 
return G__23526__delegate.call(this,x,y,z,args);};
G__23526.cljs$lang$maxFixedArity = 3;
G__23526.cljs$lang$applyTo = (function (arglist__23528){
var x = cljs.core.first(arglist__23528);
arglist__23528 = cljs.core.next(arglist__23528);
var y = cljs.core.first(arglist__23528);
arglist__23528 = cljs.core.next(arglist__23528);
var z = cljs.core.first(arglist__23528);
var args = cljs.core.rest(arglist__23528);
return G__23526__delegate(x,y,z,args);
});
G__23526.cljs$core$IFn$_invoke$arity$variadic = G__23526__delegate;
return G__23526;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__23529 = null;
if (arguments.length > 3) {
var G__23530__i = 0, G__23530__a = new Array(arguments.length -  3);
while (G__23530__i < G__23530__a.length) {G__23530__a[G__23530__i] = arguments[G__23530__i + 3]; ++G__23530__i;}
G__23529 = new cljs.core.IndexedSeq(G__23530__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__23531__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__23144_SHARP_){
var G__23507 = x;
return (p1__23144_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23144_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23507) : p1__23144_SHARP_.call(null,G__23507));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__23145_SHARP_){
var or__5890__auto__ = (function (){var G__23509 = x;
return (p1__23145_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23145_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23509) : p1__23145_SHARP_.call(null,G__23509));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var G__23510 = y;
return (p1__23145_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23145_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23510) : p1__23145_SHARP_.call(null,G__23510));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__23146_SHARP_){
var or__5890__auto__ = (function (){var G__23512 = x;
return (p1__23146_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23146_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23512) : p1__23146_SHARP_.call(null,G__23512));
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (function (){var G__23514 = y;
return (p1__23146_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23146_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23514) : p1__23146_SHARP_.call(null,G__23514));
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var G__23515 = z;
return (p1__23146_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23146_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23515) : p1__23146_SHARP_.call(null,G__23515));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__23532__delegate = function (x,y,z,args){
var or__5890__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return cljs.core.some(((function (or__5890__auto__,ps__$1){
return (function (p1__23147_SHARP_){
return cljs.core.some(p1__23147_SHARP_,args);
});})(or__5890__auto__,ps__$1))
,ps__$1);
}
};
var G__23532 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23533__i = 0, G__23533__a = new Array(arguments.length -  3);
while (G__23533__i < G__23533__a.length) {G__23533__a[G__23533__i] = arguments[G__23533__i + 3]; ++G__23533__i;}
  args = new cljs.core.IndexedSeq(G__23533__a,0);
} 
return G__23532__delegate.call(this,x,y,z,args);};
G__23532.cljs$lang$maxFixedArity = 3;
G__23532.cljs$lang$applyTo = (function (arglist__23534){
var x = cljs.core.first(arglist__23534);
arglist__23534 = cljs.core.next(arglist__23534);
var y = cljs.core.first(arglist__23534);
arglist__23534 = cljs.core.next(arglist__23534);
var z = cljs.core.first(arglist__23534);
var args = cljs.core.rest(arglist__23534);
return G__23532__delegate(x,y,z,args);
});
G__23532.cljs$core$IFn$_invoke$arity$variadic = G__23532__delegate;
return G__23532;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__23535 = null;
if (arguments.length > 3) {
var G__23536__i = 0, G__23536__a = new Array(arguments.length -  3);
while (G__23536__i < G__23536__a.length) {G__23536__a[G__23536__i] = arguments[G__23536__i + 3]; ++G__23536__i;}
G__23535 = new cljs.core.IndexedSeq(G__23536__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__23531 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23537__i = 0, G__23537__a = new Array(arguments.length -  3);
while (G__23537__i < G__23537__a.length) {G__23537__a[G__23537__i] = arguments[G__23537__i + 3]; ++G__23537__i;}
  ps = new cljs.core.IndexedSeq(G__23537__a,0);
} 
return G__23531__delegate.call(this,p1,p2,p3,ps);};
G__23531.cljs$lang$maxFixedArity = 3;
G__23531.cljs$lang$applyTo = (function (arglist__23538){
var p1 = cljs.core.first(arglist__23538);
arglist__23538 = cljs.core.next(arglist__23538);
var p2 = cljs.core.first(arglist__23538);
arglist__23538 = cljs.core.next(arglist__23538);
var p3 = cljs.core.first(arglist__23538);
var ps = cljs.core.rest(arglist__23538);
return G__23531__delegate(p1,p2,p3,ps);
});
G__23531.cljs$core$IFn$_invoke$arity$variadic = G__23531__delegate;
return G__23531;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__23539 = null;
if (arguments.length > 3) {
var G__23540__i = 0, G__23540__a = new Array(arguments.length -  3);
while (G__23540__i < G__23540__a.length) {G__23540__a[G__23540__i] = arguments[G__23540__i + 3]; ++G__23540__i;}
G__23539 = new cljs.core.IndexedSeq(G__23540__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__23595 = null;
var G__23595__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23595__1 = (function (result){
var G__23581 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23581) : rf.call(null,G__23581));
});
var G__23595__2 = (function (result,input){
var G__23582 = result;
var G__23583 = (function (){var G__23584 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23584) : f.call(null,G__23584));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23582,G__23583) : rf.call(null,G__23582,G__23583));
});
var G__23595__3 = (function() { 
var G__23596__delegate = function (result,input,inputs){
var G__23585 = result;
var G__23586 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23585,G__23586) : rf.call(null,G__23585,G__23586));
};
var G__23596 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__23597__i = 0, G__23597__a = new Array(arguments.length -  2);
while (G__23597__i < G__23597__a.length) {G__23597__a[G__23597__i] = arguments[G__23597__i + 2]; ++G__23597__i;}
  inputs = new cljs.core.IndexedSeq(G__23597__a,0);
} 
return G__23596__delegate.call(this,result,input,inputs);};
G__23596.cljs$lang$maxFixedArity = 2;
G__23596.cljs$lang$applyTo = (function (arglist__23598){
var result = cljs.core.first(arglist__23598);
arglist__23598 = cljs.core.next(arglist__23598);
var input = cljs.core.first(arglist__23598);
var inputs = cljs.core.rest(arglist__23598);
return G__23596__delegate(result,input,inputs);
});
G__23596.cljs$core$IFn$_invoke$arity$variadic = G__23596__delegate;
return G__23596;
})()
;
G__23595 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__23595__0.call(this);
case 1:
return G__23595__1.call(this,result);
case 2:
return G__23595__2.call(this,result,input);
default:
var G__23599 = null;
if (arguments.length > 2) {
var G__23600__i = 0, G__23600__a = new Array(arguments.length -  2);
while (G__23600__i < G__23600__a.length) {G__23600__a[G__23600__i] = arguments[G__23600__i + 2]; ++G__23600__i;}
G__23599 = new cljs.core.IndexedSeq(G__23600__a,0);
}
return G__23595__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__23599);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23595.cljs$lang$maxFixedArity = 2;
G__23595.cljs$lang$applyTo = G__23595__3.cljs$lang$applyTo;
G__23595.cljs$core$IFn$_invoke$arity$0 = G__23595__0;
G__23595.cljs$core$IFn$_invoke$arity$1 = G__23595__1;
G__23595.cljs$core$IFn$_invoke$arity$2 = G__23595__2;
G__23595.cljs$core$IFn$_invoke$arity$variadic = G__23595__3.cljs$core$IFn$_invoke$arity$variadic;
return G__23595;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6777__auto___23601 = size;
var i_23602 = (0);
while(true){
if((i_23602 < n__6777__auto___23601)){
cljs.core.chunk_append(b,(function (){var G__23587 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23602);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23587) : f.call(null,G__23587));
})());

var G__23603 = (i_23602 + (1));
i_23602 = G__23603;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__23588 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23588) : f.call(null,G__23588));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__23589 = cljs.core.first(s1);
var G__23590 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23589,G__23590) : f.call(null,G__23589,G__23590));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__23591 = cljs.core.first(s1);
var G__23592 = cljs.core.first(s2);
var G__23593 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23591,G__23592,G__23593) : f.call(null,G__23591,G__23592,G__23593));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__23604__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__23541_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__23541_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__23604 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__23605__i = 0, G__23605__a = new Array(arguments.length -  4);
while (G__23605__i < G__23605__a.length) {G__23605__a[G__23605__i] = arguments[G__23605__i + 4]; ++G__23605__i;}
  colls = new cljs.core.IndexedSeq(G__23605__a,0);
} 
return G__23604__delegate.call(this,f,c1,c2,c3,colls);};
G__23604.cljs$lang$maxFixedArity = 4;
G__23604.cljs$lang$applyTo = (function (arglist__23606){
var f = cljs.core.first(arglist__23606);
arglist__23606 = cljs.core.next(arglist__23606);
var c1 = cljs.core.first(arglist__23606);
arglist__23606 = cljs.core.next(arglist__23606);
var c2 = cljs.core.first(arglist__23606);
arglist__23606 = cljs.core.next(arglist__23606);
var c3 = cljs.core.first(arglist__23606);
var colls = cljs.core.rest(arglist__23606);
return G__23604__delegate(f,c1,c2,c3,colls);
});
G__23604.cljs$core$IFn$_invoke$arity$variadic = G__23604__delegate;
return G__23604;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__23607 = null;
if (arguments.length > 4) {
var G__23608__i = 0, G__23608__a = new Array(arguments.length -  4);
while (G__23608__i < G__23608__a.length) {G__23608__a[G__23608__i] = arguments[G__23608__i + 4]; ++G__23608__i;}
G__23607 = new cljs.core.IndexedSeq(G__23608__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__23607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23617 = null;
var G__23617__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23617__1 = (function (result){
var G__23614 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23614) : rf.call(null,G__23614));
});
var G__23617__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__23615 = result;
var G__23616 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23615,G__23616) : rf.call(null,G__23615,G__23616));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__23617 = function(result,input){
switch(arguments.length){
case 0:
return G__23617__0.call(this);
case 1:
return G__23617__1.call(this,result);
case 2:
return G__23617__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23617.cljs$core$IFn$_invoke$arity$0 = G__23617__0;
G__23617.cljs$core$IFn$_invoke$arity$1 = G__23617__1;
G__23617.cljs$core$IFn$_invoke$arity$2 = G__23617__2;
return G__23617;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23624 = null;
var G__23624__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23624__1 = (function (result){
var G__23621 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23621) : rf.call(null,G__23621));
});
var G__23624__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__23622 = result;
var G__23623 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23622,G__23623) : rf.call(null,G__23622,G__23623));
}
});
G__23624 = function(result,input){
switch(arguments.length){
case 0:
return G__23624__0.call(this);
case 1:
return G__23624__1.call(this,result);
case 2:
return G__23624__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23624.cljs$core$IFn$_invoke$arity$0 = G__23624__0;
G__23624.cljs$core$IFn$_invoke$arity$1 = G__23624__1;
G__23624.cljs$core$IFn$_invoke$arity$2 = G__23624__2;
return G__23624;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__23625 = (n__$1 - (1));
var G__23626 = cljs.core.rest(s);
n__$1 = G__23625;
coll__$1 = G__23626;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__23629 = cljs.core.next(s);
var G__23630 = cljs.core.next(lead);
s = G__23629;
lead = G__23630;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__23643 = null;
var G__23643__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23643__1 = (function (result){
var G__23637 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23637) : rf.call(null,G__23637));
});
var G__23643__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__5878__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__5878__auto__)){
var G__23638 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23638) : pred.call(null,G__23638));
} else {
return and__5878__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__23639 = result;
var G__23640 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23639,G__23640) : rf.call(null,G__23639,G__23640));
}
});
G__23643 = function(result,input){
switch(arguments.length){
case 0:
return G__23643__0.call(this);
case 1:
return G__23643__1.call(this,result);
case 2:
return G__23643__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23643.cljs$core$IFn$_invoke$arity$0 = G__23643__0;
G__23643.cljs$core$IFn$_invoke$arity$1 = G__23643__1;
G__23643.cljs$core$IFn$_invoke$arity$2 = G__23643__2;
return G__23643;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__5878__auto__ = s;
if(and__5878__auto__){
var G__23642 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__23642) : pred__$1.call(null,G__23642));
} else {
return and__5878__auto__;
}
})())){
var G__23644 = pred__$1;
var G__23645 = cljs.core.rest(s);
pred__$1 = G__23644;
coll__$1 = G__23645;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__23654 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23654) : f.call(null,G__23654));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__23657__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__23657 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__23658__i = 0, G__23658__a = new Array(arguments.length -  2);
while (G__23658__i < G__23658__a.length) {G__23658__a[G__23658__i] = arguments[G__23658__i + 2]; ++G__23658__i;}
  colls = new cljs.core.IndexedSeq(G__23658__a,0);
} 
return G__23657__delegate.call(this,c1,c2,colls);};
G__23657.cljs$lang$maxFixedArity = 2;
G__23657.cljs$lang$applyTo = (function (arglist__23659){
var c1 = cljs.core.first(arglist__23659);
arglist__23659 = cljs.core.next(arglist__23659);
var c2 = cljs.core.first(arglist__23659);
var colls = cljs.core.rest(arglist__23659);
return G__23657__delegate(c1,c2,colls);
});
G__23657.cljs$core$IFn$_invoke$arity$variadic = G__23657__delegate;
return G__23657;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__23660 = null;
if (arguments.length > 2) {
var G__23661__i = 0, G__23661__a = new Array(arguments.length -  2);
while (G__23661__i < G__23661__a.length) {G__23661__a[G__23661__i] = arguments[G__23661__i + 2]; ++G__23661__i;}
G__23660 = new cljs.core.IndexedSeq(G__23661__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__23660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__23676 = null;
var G__23676__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23676__1 = (function (result){
var G__23669 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23669) : rf.call(null,G__23669));
});
var G__23676__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__23670 = result;
var G__23671 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23670,G__23671) : rf.call(null,G__23670,G__23671));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__23672 = sepr;
var G__23673 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23672,G__23673) : rf.call(null,G__23672,G__23673));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__23674 = result;
var G__23675 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23674,G__23675) : rf.call(null,G__23674,G__23675));
}
});
G__23676 = function(result,input){
switch(arguments.length){
case 0:
return G__23676__0.call(this);
case 1:
return G__23676__1.call(this,result);
case 2:
return G__23676__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23676.cljs$core$IFn$_invoke$arity$0 = G__23676__0;
G__23676.cljs$core$IFn$_invoke$arity$1 = G__23676__1;
G__23676.cljs$core$IFn$_invoke$arity$2 = G__23676__2;
return G__23676;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var coll__$1 = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__23685__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__23685 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__23686__i = 0, G__23686__a = new Array(arguments.length -  1);
while (G__23686__i < G__23686__a.length) {G__23686__a[G__23686__i] = arguments[G__23686__i + 1]; ++G__23686__i;}
  colls = new cljs.core.IndexedSeq(G__23686__a,0);
} 
return G__23685__delegate.call(this,f,colls);};
G__23685.cljs$lang$maxFixedArity = 1;
G__23685.cljs$lang$applyTo = (function (arglist__23687){
var f = cljs.core.first(arglist__23687);
var colls = cljs.core.rest(arglist__23687);
return G__23685__delegate(f,colls);
});
G__23685.cljs$core$IFn$_invoke$arity$variadic = G__23685__delegate;
return G__23685;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__23688 = null;
if (arguments.length > 1) {
var G__23689__i = 0, G__23689__a = new Array(arguments.length -  1);
while (G__23689__i < G__23689__a.length) {G__23689__a[G__23689__i] = arguments[G__23689__i + 1]; ++G__23689__i;}
G__23688 = new cljs.core.IndexedSeq(G__23689__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23688);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__23708 = null;
var G__23708__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23708__1 = (function (result){
var G__23702 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23702) : rf.call(null,G__23702));
});
var G__23708__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__23703 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23703) : pred.call(null,G__23703));
})())){
var G__23704 = result;
var G__23705 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23704,G__23705) : rf.call(null,G__23704,G__23705));
} else {
return result;
}
});
G__23708 = function(result,input){
switch(arguments.length){
case 0:
return G__23708__0.call(this);
case 1:
return G__23708__1.call(this,result);
case 2:
return G__23708__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23708.cljs$core$IFn$_invoke$arity$0 = G__23708__0;
G__23708.cljs$core$IFn$_invoke$arity$1 = G__23708__1;
G__23708.cljs$core$IFn$_invoke$arity$2 = G__23708__2;
return G__23708;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6777__auto___23709 = size;
var i_23710 = (0);
while(true){
if((i_23710 < n__6777__auto___23709)){
if(cljs.core.truth_((function (){var G__23706 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23710);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23706) : pred.call(null,G__23706));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23710));
} else {
}

var G__23711 = (i_23710 + (1));
i_23710 = G__23711;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__23707 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23707) : pred.call(null,G__23707));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__23718 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__23718) : branch_QMARK_.call(null,G__23718));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__23719 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__23719) : children.call(null,G__23719));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__23720_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__23720_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__23723 = to;
if(G__23723){
var bit__6564__auto__ = (G__23723.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__6564__auto__) || (G__23723.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__23724 = to;
if(G__23724){
var bit__6564__auto__ = (G__23724.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__6564__auto__) || (G__23724.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__23726 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23726) : f.call(null,G__23726));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__23727__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__23727 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__23728__i = 0, G__23728__a = new Array(arguments.length -  4);
while (G__23728__i < G__23728__a.length) {G__23728__a[G__23728__i] = arguments[G__23728__i + 4]; ++G__23728__i;}
  colls = new cljs.core.IndexedSeq(G__23728__a,0);
} 
return G__23727__delegate.call(this,f,c1,c2,c3,colls);};
G__23727.cljs$lang$maxFixedArity = 4;
G__23727.cljs$lang$applyTo = (function (arglist__23729){
var f = cljs.core.first(arglist__23729);
arglist__23729 = cljs.core.next(arglist__23729);
var c1 = cljs.core.first(arglist__23729);
arglist__23729 = cljs.core.next(arglist__23729);
var c2 = cljs.core.first(arglist__23729);
arglist__23729 = cljs.core.next(arglist__23729);
var c3 = cljs.core.first(arglist__23729);
var colls = cljs.core.rest(arglist__23729);
return G__23727__delegate(f,c1,c2,c3,colls);
});
G__23727.cljs$core$IFn$_invoke$arity$variadic = G__23727__delegate;
return G__23727;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__23730 = null;
if (arguments.length > 4) {
var G__23731__i = 0, G__23731__a = new Array(arguments.length -  4);
while (G__23731__i < G__23731__a.length) {G__23731__a[G__23731__i] = arguments[G__23731__i + 4]; ++G__23731__i;}
G__23730 = new cljs.core.IndexedSeq(G__23731__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__23730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__23733 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23733) : pred.call(null,G__23733));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__23748 = m__$1;
if(G__23748){
var bit__6571__auto__ = (G__23748.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6571__auto__) || (G__23748.cljs$core$ILookup$)){
return true;
} else {
if((!G__23748.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__23748);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__23748);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__23749 = sentinel;
var G__23750 = m__$2;
var G__23751 = cljs.core.next(ks__$1);
sentinel = G__23749;
m__$1 = G__23750;
ks__$1 = G__23751;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__23752,v){
var vec__23757 = p__23752;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23757,(0),null);
var ks = cljs.core.nthnext(vec__23757,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__23758,f){
var vec__23796 = p__23758;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23796,(0),null);
var ks = cljs.core.nthnext(vec__23796,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23797 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23797) : f.call(null,G__23797));
})());
}
});
var update_in__4 = (function (m,p__23759,f,a){
var vec__23798 = p__23759;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23798,(0),null);
var ks = cljs.core.nthnext(vec__23798,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23799 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23800 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23799,G__23800) : f.call(null,G__23799,G__23800));
})());
}
});
var update_in__5 = (function (m,p__23760,f,a,b){
var vec__23801 = p__23760;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23801,(0),null);
var ks = cljs.core.nthnext(vec__23801,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23802 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23803 = a;
var G__23804 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23802,G__23803,G__23804) : f.call(null,G__23802,G__23803,G__23804));
})());
}
});
var update_in__6 = (function (m,p__23761,f,a,b,c){
var vec__23805 = p__23761;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23805,(0),null);
var ks = cljs.core.nthnext(vec__23805,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23806 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23807 = a;
var G__23808 = b;
var G__23809 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23806,G__23807,G__23808,G__23809) : f.call(null,G__23806,G__23807,G__23808,G__23809));
})());
}
});
var update_in__7 = (function() { 
var G__23811__delegate = function (m,p__23762,f,a,b,c,args){
var vec__23810 = p__23762;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23810,(0),null);
var ks = cljs.core.nthnext(vec__23810,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__23811 = function (m,p__23762,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__23812__i = 0, G__23812__a = new Array(arguments.length -  6);
while (G__23812__i < G__23812__a.length) {G__23812__a[G__23812__i] = arguments[G__23812__i + 6]; ++G__23812__i;}
  args = new cljs.core.IndexedSeq(G__23812__a,0);
} 
return G__23811__delegate.call(this,m,p__23762,f,a,b,c,args);};
G__23811.cljs$lang$maxFixedArity = 6;
G__23811.cljs$lang$applyTo = (function (arglist__23813){
var m = cljs.core.first(arglist__23813);
arglist__23813 = cljs.core.next(arglist__23813);
var p__23762 = cljs.core.first(arglist__23813);
arglist__23813 = cljs.core.next(arglist__23813);
var f = cljs.core.first(arglist__23813);
arglist__23813 = cljs.core.next(arglist__23813);
var a = cljs.core.first(arglist__23813);
arglist__23813 = cljs.core.next(arglist__23813);
var b = cljs.core.first(arglist__23813);
arglist__23813 = cljs.core.next(arglist__23813);
var c = cljs.core.first(arglist__23813);
var args = cljs.core.rest(arglist__23813);
return G__23811__delegate(m,p__23762,f,a,b,c,args);
});
G__23811.cljs$core$IFn$_invoke$arity$variadic = G__23811__delegate;
return G__23811;
})()
;
update_in = function(m,p__23762,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__23762,f);
case 4:
return update_in__4.call(this,m,p__23762,f,a);
case 5:
return update_in__5.call(this,m,p__23762,f,a,b);
case 6:
return update_in__6.call(this,m,p__23762,f,a,b,c);
default:
var G__23814 = null;
if (arguments.length > 6) {
var G__23815__i = 0, G__23815__a = new Array(arguments.length -  6);
while (G__23815__i < G__23815__a.length) {G__23815__a[G__23815__i] = arguments[G__23815__i + 6]; ++G__23815__i;}
G__23814 = new cljs.core.IndexedSeq(G__23815__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__23762,f,a,b,c, G__23814);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23826 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23826) : f.call(null,G__23826));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23827 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23828 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23827,G__23828) : f.call(null,G__23827,G__23828));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23829 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23830 = x;
var G__23831 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23829,G__23830,G__23831) : f.call(null,G__23829,G__23830,G__23831));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23832 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23833 = x;
var G__23834 = y;
var G__23835 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23832,G__23833,G__23834,G__23835) : f.call(null,G__23832,G__23833,G__23834,G__23835));
})());
});
var update__7 = (function() { 
var G__23836__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__23836 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__23837__i = 0, G__23837__a = new Array(arguments.length -  6);
while (G__23837__i < G__23837__a.length) {G__23837__a[G__23837__i] = arguments[G__23837__i + 6]; ++G__23837__i;}
  more = new cljs.core.IndexedSeq(G__23837__a,0);
} 
return G__23836__delegate.call(this,m,k,f,x,y,z,more);};
G__23836.cljs$lang$maxFixedArity = 6;
G__23836.cljs$lang$applyTo = (function (arglist__23838){
var m = cljs.core.first(arglist__23838);
arglist__23838 = cljs.core.next(arglist__23838);
var k = cljs.core.first(arglist__23838);
arglist__23838 = cljs.core.next(arglist__23838);
var f = cljs.core.first(arglist__23838);
arglist__23838 = cljs.core.next(arglist__23838);
var x = cljs.core.first(arglist__23838);
arglist__23838 = cljs.core.next(arglist__23838);
var y = cljs.core.first(arglist__23838);
arglist__23838 = cljs.core.next(arglist__23838);
var z = cljs.core.first(arglist__23838);
var more = cljs.core.rest(arglist__23838);
return G__23836__delegate(m,k,f,x,y,z,more);
});
G__23836.cljs$core$IFn$_invoke$arity$variadic = G__23836__delegate;
return G__23836;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__23839 = null;
if (arguments.length > 6) {
var G__23840__i = 0, G__23840__a = new Array(arguments.length -  6);
while (G__23840__i < G__23840__a.length) {G__23840__a[G__23840__i] = arguments[G__23840__i + 6]; ++G__23840__i;}
G__23839 = new cljs.core.IndexedSeq(G__23840__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__23839);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__23841 = (ll - (5));
var G__23842 = r;
ll = G__23841;
ret = G__23842;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23847 = cljs.core.pv_aget(node,(0));
var G__23848 = (level - (5));
node = G__23847;
level = G__23848;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23849 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__23850 = (level - (5));
node = G__23849;
level = G__23850;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23860 = init__$2;
var G__23861 = (j + i);
var G__23862 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23860,G__23861,G__23862) : f.call(null,G__23860,G__23861,G__23862));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23873 = (j + (1));
var G__23874 = init__$3;
j = G__23873;
init__$2 = G__23874;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23863 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23863) : cljs.core.deref.call(null,G__23863));
} else {
var G__23875 = (i + len);
var G__23876 = init__$2;
i = G__23875;
init__$1 = G__23876;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__23864 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__23864) : cljs.core.tv_editable_root.call(null,G__23864));
})(),(function (){var G__23865 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__23865) : cljs.core.tv_editable_tail.call(null,G__23865));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23866 = init__$2;
var G__23867 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23866,G__23867) : f.call(null,G__23866,G__23867));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23877 = (j + (1));
var G__23878 = init__$3;
j = G__23877;
init__$2 = G__23878;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23868 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23868) : cljs.core.deref.call(null,G__23868));
} else {
var G__23879 = (i + len);
var G__23880 = init__$2;
i = G__23879;
init__$1 = G__23880;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__23869 = coll__$1;
var G__23870 = cljs.core.first_array_for_longvec(coll__$1);
var G__23871 = (0);
var G__23872 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23869,G__23870,G__23871,G__23872) : cljs.core.chunked_seq.call(null,G__23869,G__23870,G__23871,G__23872));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__6777__auto___23881 = len;
var i_23882 = (0);
while(true){
if((i_23882 < n__6777__auto___23881)){
(new_tail[i_23882] = (self__.tail[i_23882]));

var G__23883 = (i_23882 + (1));
i_23882 = G__23883;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__23884 = null;
var G__23884__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23884__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23884 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23884__2.call(this,self__,k);
case 3:
return G__23884__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23884.cljs$core$IFn$_invoke$arity$2 = G__23884__2;
G__23884.cljs$core$IFn$_invoke$arity$3 = G__23884__3;
return G__23884;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args23859){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23859)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__23885 = (i + (1));
var G__23886 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__23885;
out = G__23886;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23887__i = 0, G__23887__a = new Array(arguments.length -  0);
while (G__23887__i < G__23887__a.length) {G__23887__a[G__23887__i] = arguments[G__23887__i + 0]; ++G__23887__i;}
  args = new cljs.core.IndexedSeq(G__23887__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__23888){
var args = cljs.core.seq(arglist__23888);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23889 = self__.vec;
var G__23890 = self__.node;
var G__23891 = self__.i;
var G__23892 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23889,G__23890,G__23891,G__23892) : cljs.core.chunked_seq.call(null,G__23889,G__23890,G__23891,G__23892));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__23893 = self__.vec;
var G__23894 = (self__.i + self__.off);
var G__23895 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23893,G__23894,G__23895) : cljs.core.subvec.call(null,G__23893,G__23894,G__23895));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__23896 = self__.vec;
var G__23897 = (self__.i + self__.off);
var G__23898 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23896,G__23897,G__23898) : cljs.core.subvec.call(null,G__23896,G__23897,G__23898));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23899 = self__.vec;
var G__23900 = self__.node;
var G__23901 = self__.i;
var G__23902 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23899,G__23900,G__23901,G__23902) : cljs.core.chunked_seq.call(null,G__23899,G__23900,G__23901,G__23902));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23903 = self__.vec;
var G__23904 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23905 = end;
var G__23906 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23903,G__23904,G__23905,G__23906) : cljs.core.chunked_seq.call(null,G__23903,G__23904,G__23905,G__23906));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__23907 = self__.vec;
var G__23908 = self__.node;
var G__23909 = self__.i;
var G__23910 = self__.off;
var G__23911 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__23907,G__23908,G__23909,G__23910,G__23911) : cljs.core.chunked_seq.call(null,G__23907,G__23908,G__23909,G__23910,G__23911));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23912 = self__.vec;
var G__23913 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23914 = end;
var G__23915 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23912,G__23913,G__23914,G__23915) : cljs.core.chunked_seq.call(null,G__23912,G__23913,G__23914,G__23915));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__23917 = self__.meta;
var G__23918 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__23919 = self__.start;
var G__23920 = (function (){var x__6207__auto__ = self__.end;
var y__6208__auto__ = (v_pos + (1));
return ((x__6207__auto__ > y__6208__auto__) ? x__6207__auto__ : y__6208__auto__);
})();
var G__23921 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23917,G__23918,G__23919,G__23920,G__23921) : cljs.core.build_subvec.call(null,G__23917,G__23918,G__23919,G__23920,G__23921));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__23922 = self__.meta;
var G__23923 = self__.v;
var G__23924 = self__.start;
var G__23925 = (self__.end - (1));
var G__23926 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23922,G__23923,G__23924,G__23925,G__23926) : cljs.core.build_subvec.call(null,G__23922,G__23923,G__23924,G__23925,G__23926));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__23928 = meta__$1;
var G__23929 = self__.v;
var G__23930 = self__.start;
var G__23931 = self__.end;
var G__23932 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23928,G__23929,G__23930,G__23931,G__23932) : cljs.core.build_subvec.call(null,G__23928,G__23929,G__23930,G__23931,G__23932));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23933 = self__.meta;
var G__23934 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__23935 = self__.start;
var G__23936 = (self__.end + (1));
var G__23937 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23933,G__23934,G__23935,G__23936,G__23937) : cljs.core.build_subvec.call(null,G__23933,G__23934,G__23935,G__23936,G__23937));
});

cljs.core.Subvec.prototype.call = (function() {
var G__23938 = null;
var G__23938__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23938__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23938 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23938__2.call(this,self__,k);
case 3:
return G__23938__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23938.cljs$core$IFn$_invoke$arity$2 = G__23938__2;
G__23938.cljs$core$IFn$_invoke$arity$3 = G__23938__3;
return G__23938;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args23916){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23916)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__23939 = meta;
var G__23940 = v.v;
var G__23941 = (v.start + start);
var G__23942 = (v.start + end);
var G__23943 = __hash;
meta = G__23939;
v = G__23940;
start = G__23941;
end = G__23942;
__hash = G__23943;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj23950 = {};
return obj23950;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__23958 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__23959 = (level - (5));
node = G__23958;
level = G__23959;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__23963 = null;
var G__23963__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23963__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23963 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23963__2.call(this,self__,k);
case 3:
return G__23963__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23963.cljs$core$IFn$_invoke$arity$2 = G__23963__2;
G__23963.cljs$core$IFn$_invoke$arity$3 = G__23963__3;
return G__23963;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args23960){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23960)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__5890__auto__ = self__.front;
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5890__auto__ = self__.rear;
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__23964 = (i + incr);
i = G__23964;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__23965 = (i + (1));
var G__23966 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__23965;
out = G__23966;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj23970 = {};
return obj23970;
})();
var l = ks.length;
var i_23971 = (0);
while(true){
if((i_23971 < l)){
var k_23972 = (ks[i_23971]);
(new_obj[k_23972] = (obj[k_23972]));

var G__23973 = (i_23971 + (1));
i_23971 = G__23973;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__5878__auto__ = (function (){var G__23977 = k;
return goog.isString(G__23977);
})();
if(cljs.core.truth_(and__5878__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__5878__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__23978 = init__$1;
var G__23979 = k;
var G__23980 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23978,G__23979,G__23980) : f.call(null,G__23978,G__23979,G__23980));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23981 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23981) : cljs.core.deref.call(null,G__23981));
} else {
var G__23987 = cljs.core.rest(keys__$1);
var G__23988 = init__$2;
keys__$1 = G__23987;
init__$1 = G__23988;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__5878__auto__ = (function (){var G__23983 = k;
return goog.isString(G__23983);
})();
if(cljs.core.truth_(and__5878__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__5878__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__23984 = k;
return goog.isString(G__23984);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__5878__auto__ = (function (){var G__23986 = k;
return goog.isString(G__23986);
})();
if(cljs.core.truth_(and__5878__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__5878__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__23974_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__23974_SHARP_,(self__.strobj[p1__23974_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__23989 = null;
var G__23989__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23989__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23989 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23989__2.call(this,self__,k);
case 3:
return G__23989__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23989.cljs$core$IFn$_invoke$arity$2 = G__23989__2;
G__23989.cljs$core$IFn$_invoke$arity$3 = G__23989__3;
return G__23989;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args23975){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23975)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj23991 = {};
return obj23991;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__23992 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23992,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23992,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__23993 = (i + (2));
i = G__23993;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__23994 = (i + (2));
i = G__23994;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__23995 = (i + (2));
i = G__23995;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__23996 = (i + (2));
i = G__23996;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__23997 = (i + (2));
i = G__23997;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__5890__auto__ = (function (){var G__24001 = k;
return goog.isString(G__24001);
})();
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_24002 = (0);
while(true){
if((i_24002 < l)){
(narr[i_24002] = (arr[i_24002]));

var G__24003 = (i_24002 + (1));
i_24002 = G__24003;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24005 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24005) : cljs.core.keys.call(null,G__24005));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24006 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24006) : cljs.core.vals.call(null,G__24006));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24007 = cljs.core.seq(coll);
var chunk__24008 = null;
var count__24009 = (0);
var i__24010 = (0);
while(true){
if((i__24010 < count__24009)){
var vec__24011 = chunk__24008.cljs$core$IIndexed$_nth$arity$2(null,i__24010);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24011,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24011,(1),null);
var G__24012_24025 = v;
var G__24013_24026 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24012_24025,G__24013_24026) : f.call(null,G__24012_24025,G__24013_24026));

var G__24027 = seq__24007;
var G__24028 = chunk__24008;
var G__24029 = count__24009;
var G__24030 = (i__24010 + (1));
seq__24007 = G__24027;
chunk__24008 = G__24028;
count__24009 = G__24029;
i__24010 = G__24030;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__24007);
if(temp__4406__auto__){
var seq__24007__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24007__$1)){
var c__6677__auto__ = cljs.core.chunk_first(seq__24007__$1);
var G__24031 = cljs.core.chunk_rest(seq__24007__$1);
var G__24032 = c__6677__auto__;
var G__24033 = cljs.core.count(c__6677__auto__);
var G__24034 = (0);
seq__24007 = G__24031;
chunk__24008 = G__24032;
count__24009 = G__24033;
i__24010 = G__24034;
continue;
} else {
var vec__24014 = cljs.core.first(seq__24007__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24014,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24014,(1),null);
var G__24015_24035 = v;
var G__24016_24036 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24015_24035,G__24016_24036) : f.call(null,G__24015_24035,G__24016_24036));

var G__24037 = cljs.core.next(seq__24007__$1);
var G__24038 = null;
var G__24039 = (0);
var G__24040 = (0);
seq__24007 = G__24037;
chunk__24008 = G__24038;
count__24009 = G__24039;
i__24010 = G__24040;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__24017 = init__$1;
var G__24018 = (self__.arr[i]);
var G__24019 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24017,G__24018,G__24019) : f.call(null,G__24017,G__24018,G__24019));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24020 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24020) : cljs.core.deref.call(null,G__24020));
} else {
var G__24041 = (i + (2));
var G__24042 = init__$2;
i = G__24041;
init__$1 = G__24042;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__24021 = other;
if(G__24021){
var bit__6564__auto__ = (G__24021.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__6564__auto__) || (G__24021.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__24043 = (i + (2));
i = G__24043;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj24023 = {};
return obj24023;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__24044 = (s + (2));
var G__24045 = d;
s = G__24044;
d = G__24045;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__24046 = (s + (2));
var G__24047 = (d + (2));
s = G__24046;
d = G__24047;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__24024 = cljs.core.aclone(self__.arr);
(G__24024[(idx + (1))] = v);

return G__24024;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24048 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24049 = cljs.core.next(es);
ret = G__24048;
es = G__24049;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__24050 = null;
var G__24050__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24050__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24050 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24050__2.call(this,self__,k);
case 3:
return G__24050__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24050.cljs$core$IFn$_invoke$arity$2 = G__24050__2;
G__24050.cljs$core$IFn$_invoke$arity$3 = G__24050__3;
return G__24050;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args24004){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24004)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__24051 = (i + (2));
var G__24052 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__24051;
ret = G__24052;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__24053_24061 = self__.arr;
G__24053_24061.pop();

G__24053_24061.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__24054 = self__.len;
var G__24055 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__24054,G__24055) : cljs.core.array__GT_transient_hash_map.call(null,G__24054,G__24055));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__24056 = o;
if(G__24056){
var bit__6571__auto__ = (G__24056.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__6571__auto__) || (G__24056.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__24056.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24056);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24056);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__24057 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24057) : cljs.core.key.call(null,G__24057));
})(),(function (){var G__24058 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24058) : cljs.core.val.call(null,G__24058));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__24062 = cljs.core.next(es);
var G__24063 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__24059 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24059) : cljs.core.key.call(null,G__24059));
})(),(function (){var G__24060 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24060) : cljs.core.val.call(null,G__24060));
})());
es = G__24062;
tcoll__$2 = G__24063;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__24064 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__24065 = (i + (2));
out = G__24064;
i = G__24065;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__24068 = cljs.core.aclone(arr);
(G__24068[i] = a);

return G__24068;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__24069 = cljs.core.aclone(arr);
(G__24069[i] = a);

(G__24069[j] = b);

return G__24069;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__24074 = init__$1;
var G__24075 = k;
var G__24076 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24074,G__24075,G__24076) : f.call(null,G__24074,G__24075,G__24076));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24077 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24077) : cljs.core.deref.call(null,G__24077));
} else {
var G__24078 = (i + (2));
var G__24079 = init__$2;
i = G__24078;
init__$1 = G__24079;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24080 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24080) : cljs.core.create_inode_seq.call(null,G__24080));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24094 = (0);
var j_24095 = (0);
while(true){
if((i_24094 < (32))){
if((((self__.bitmap >>> i_24094) & (1)) === (0))){
var G__24096 = (i_24094 + (1));
var G__24097 = j_24095;
i_24094 = G__24096;
j_24095 = G__24097;
continue;
} else {
(nodes[i_24094] = ((!(((self__.arr[j_24095]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_24095])),(self__.arr[j_24095]),(self__.arr[(j_24095 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24095 + (1))])));

var G__24098 = (i_24094 + (1));
var G__24099 = (j_24095 + (2));
i_24094 = G__24098;
j_24095 = G__24099;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24081 = edit__$1;
var G__24082 = (shift + (5));
var G__24083 = key_or_nil;
var G__24084 = val_or_node;
var G__24085 = hash;
var G__24086 = key;
var G__24087 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087) : cljs.core.create_node.call(null,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24100 = (0);
var j_24101 = (0);
while(true){
if((i_24100 < (32))){
if((((self__.bitmap >>> i_24100) & (1)) === (0))){
var G__24102 = (i_24100 + (1));
var G__24103 = j_24101;
i_24100 = G__24102;
j_24101 = G__24103;
continue;
} else {
(nodes[i_24100] = ((!(((self__.arr[j_24101]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_24101])),(self__.arr[j_24101]),(self__.arr[(j_24101 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24101 + (1))])));

var G__24104 = (i_24100 + (1));
var G__24105 = (j_24101 + (2));
i_24100 = G__24104;
j_24101 = G__24105;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24088 = (shift + (5));
var G__24089 = key_or_nil;
var G__24090 = val_or_node;
var G__24091 = hash;
var G__24092 = key;
var G__24093 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__24088,G__24089,G__24090,G__24091,G__24092,G__24093) : cljs.core.create_node.call(null,G__24088,G__24089,G__24090,G__24091,G__24092,G__24093));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__24106 = (i + (1));
var G__24107 = (j + (2));
var G__24108 = (bitmap | ((1) << i));
i = G__24106;
j = G__24107;
bitmap = G__24108;
continue;
} else {
var G__24109 = (i + (1));
var G__24110 = j;
var G__24111 = bitmap;
i = G__24109;
j = G__24110;
bitmap = G__24111;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24112 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__24112) : cljs.core.create_array_node_seq.call(null,G__24112));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24113 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24113) : cljs.core.deref.call(null,G__24113));
} else {
var G__24114 = (i + (1));
var G__24115 = init__$2;
i = G__24114;
init__$1 = G__24115;
continue;
}
} else {
var G__24116 = (i + (1));
var G__24117 = init__$1;
i = G__24116;
init__$1 = G__24117;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__24118 = (i + (2));
i = G__24118;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24119 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24119) : cljs.core.create_inode_seq.call(null,G__24119));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__24120 = self__.nodes;
var G__24121 = (self__.i + (2));
var G__24122 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24120,G__24121,G__24122) : cljs.core.create_inode_seq.call(null,G__24120,G__24121,G__24122));
} else {
var G__24123 = self__.nodes;
var G__24124 = self__.i;
var G__24125 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24123,G__24124,G__24125) : cljs.core.create_inode_seq.call(null,G__24123,G__24124,G__24125));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4404__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4404__auto__)){
var node = temp__4404__auto__;
var temp__4404__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var node_seq = temp__4404__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__24129 = (j + (2));
j = G__24129;
continue;
}
} else {
var G__24130 = (j + (2));
j = G__24130;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24131 = null;
var G__24132 = self__.nodes;
var G__24133 = self__.i;
var G__24134 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__24131,G__24132,G__24133,G__24134) : cljs.core.create_array_node_seq.call(null,G__24131,G__24132,G__24133,G__24134));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4404__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4404__auto__)){
var nj = temp__4404__auto__;
var temp__4404__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var ns = temp__4404__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__24139 = (j + (1));
j = G__24139;
continue;
}
} else {
var G__24140 = (j + (1));
j = G__24140;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24142 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24142) : cljs.core.keys.call(null,G__24142));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24143 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24143) : cljs.core.vals.call(null,G__24143));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24144 = cljs.core.seq(coll);
var chunk__24145 = null;
var count__24146 = (0);
var i__24147 = (0);
while(true){
if((i__24147 < count__24146)){
var vec__24148 = chunk__24145.cljs$core$IIndexed$_nth$arity$2(null,i__24147);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24148,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24148,(1),null);
var G__24149_24160 = v;
var G__24150_24161 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24149_24160,G__24150_24161) : f.call(null,G__24149_24160,G__24150_24161));

var G__24162 = seq__24144;
var G__24163 = chunk__24145;
var G__24164 = count__24146;
var G__24165 = (i__24147 + (1));
seq__24144 = G__24162;
chunk__24145 = G__24163;
count__24146 = G__24164;
i__24147 = G__24165;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__24144);
if(temp__4406__auto__){
var seq__24144__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24144__$1)){
var c__6677__auto__ = cljs.core.chunk_first(seq__24144__$1);
var G__24166 = cljs.core.chunk_rest(seq__24144__$1);
var G__24167 = c__6677__auto__;
var G__24168 = cljs.core.count(c__6677__auto__);
var G__24169 = (0);
seq__24144 = G__24166;
chunk__24145 = G__24167;
count__24146 = G__24168;
i__24147 = G__24169;
continue;
} else {
var vec__24151 = cljs.core.first(seq__24144__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24151,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24151,(1),null);
var G__24152_24170 = v;
var G__24153_24171 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24152_24170,G__24153_24171) : f.call(null,G__24152_24170,G__24153_24171));

var G__24172 = cljs.core.next(seq__24144__$1);
var G__24173 = null;
var G__24174 = (0);
var G__24175 = (0);
seq__24144 = G__24172;
chunk__24145 = G__24173;
count__24146 = G__24174;
i__24147 = G__24175;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__24154 = init;
var G__24155 = null;
var G__24156 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24154,G__24155,G__24156) : f.call(null,G__24154,G__24155,G__24156));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__24157 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24157) : cljs.core.deref.call(null,G__24157));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj24159 = {};
return obj24159;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24176 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24177 = cljs.core.next(es);
ret = G__24176;
es = G__24177;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__24178 = null;
var G__24178__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24178__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24178 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24178__2.call(this,self__,k);
case 3:
return G__24178__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24178.cljs$core$IFn$_invoke$arity$2 = G__24178__2;
G__24178.cljs$core$IFn$_invoke$arity$3 = G__24178__3;
return G__24178;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args24141){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24141)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__24179 = (i + (2));
var G__24180 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__24179;
ret = G__24180;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__24181 = (i + (1));
var G__24182 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__24181;
out = G__24182;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__24183 = o;
if(G__24183){
var bit__6571__auto__ = (G__24183.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__6571__auto__) || (G__24183.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__24183.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24183);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24183);
}
})()){
return tcoll.assoc_BANG_((function (){var G__24184 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24184) : cljs.core.key.call(null,G__24184));
})(),(function (){var G__24185 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24185) : cljs.core.val.call(null,G__24185));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__24188 = cljs.core.next(es);
var G__24189 = tcoll__$1.assoc_BANG_((function (){var G__24186 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24186) : cljs.core.key.call(null,G__24186));
})(),(function (){var G__24187 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24187) : cljs.core.val.call(null,G__24187));
})());
es = G__24188;
tcoll__$1 = G__24189;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__24190 = ((ascending_QMARK_)?t.left:t.right);
var G__24191 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__24190;
stack__$1 = G__24191;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__24204 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24204) : cljs.core.deref.call(null,G__24204));
} else {
var init__$2 = (function (){var G__24205 = init__$1;
var G__24206 = node.key;
var G__24207 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24205,G__24206,G__24207) : f.call(null,G__24205,G__24206,G__24207));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24208 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24208) : cljs.core.deref.call(null,G__24208));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__24209 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24209) : cljs.core.deref.call(null,G__24209));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__24211 = null;
var G__24211__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24211__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24211 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24211__2.call(this,self__,k);
case 3:
return G__24211__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24211.cljs$core$IFn$_invoke$arity$2 = G__24211__2;
G__24211.cljs$core$IFn$_invoke$arity$3 = G__24211__3;
return G__24211;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args24210){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24210)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__24213 = null;
var G__24213__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24213__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24213 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24213__2.call(this,self__,k);
case 3:
return G__24213__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24213.cljs$core$IFn$_invoke$arity$2 = G__24213__2;
G__24213.cljs$core$IFn$_invoke$arity$3 = G__24213__3;
return G__24213;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args24212){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24212)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__24226 = k;
var G__24227 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24226,G__24227) : comp.call(null,G__24226,G__24227));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__24246 = k;
var G__24247 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24246,G__24247) : comp.call(null,G__24246,G__24247));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__24258 = k;
var G__24259 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24258,G__24259) : comp.call(null,G__24258,G__24259));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24261 = cljs.core.seq(coll);
var chunk__24262 = null;
var count__24263 = (0);
var i__24264 = (0);
while(true){
if((i__24264 < count__24263)){
var vec__24265 = chunk__24262.cljs$core$IIndexed$_nth$arity$2(null,i__24264);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24265,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24265,(1),null);
var G__24266_24278 = v;
var G__24267_24279 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24266_24278,G__24267_24279) : f.call(null,G__24266_24278,G__24267_24279));

var G__24280 = seq__24261;
var G__24281 = chunk__24262;
var G__24282 = count__24263;
var G__24283 = (i__24264 + (1));
seq__24261 = G__24280;
chunk__24262 = G__24281;
count__24263 = G__24282;
i__24264 = G__24283;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__24261);
if(temp__4406__auto__){
var seq__24261__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24261__$1)){
var c__6677__auto__ = cljs.core.chunk_first(seq__24261__$1);
var G__24284 = cljs.core.chunk_rest(seq__24261__$1);
var G__24285 = c__6677__auto__;
var G__24286 = cljs.core.count(c__6677__auto__);
var G__24287 = (0);
seq__24261 = G__24284;
chunk__24262 = G__24285;
count__24263 = G__24286;
i__24264 = G__24287;
continue;
} else {
var vec__24268 = cljs.core.first(seq__24261__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24268,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24268,(1),null);
var G__24269_24288 = v;
var G__24270_24289 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24269_24288,G__24270_24289) : f.call(null,G__24269_24288,G__24270_24289));

var G__24290 = cljs.core.next(seq__24261__$1);
var G__24291 = null;
var G__24292 = (0);
var G__24293 = (0);
seq__24261 = G__24290;
chunk__24262 = G__24291;
count__24263 = G__24292;
i__24264 = G__24293;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24271 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24271) : cljs.core.keys.call(null,G__24271));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24272 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24272) : cljs.core.vals.call(null,G__24272));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__24273 = k;
var G__24274 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24273,G__24274) : self__.comp.call(null,G__24273,G__24274));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__24294 = t.left;
t = G__24294;
continue;
} else {
var G__24295 = t.right;
t = G__24295;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24296 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24297 = cljs.core.next(es);
ret = G__24296;
es = G__24297;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__24298 = null;
var G__24298__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24298__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24298 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24298__2.call(this,self__,k);
case 3:
return G__24298__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24298.cljs$core$IFn$_invoke$arity$2 = G__24298__2;
G__24298.cljs$core$IFn$_invoke$arity$3 = G__24298__3;
return G__24298;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args24260){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24260)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__24275 = k;
var G__24276 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24275,G__24276) : self__.comp.call(null,G__24275,G__24276));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__24299 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__24300 = t.left;
stack = G__24299;
t = G__24300;
continue;
} else {
var G__24301 = stack;
var G__24302 = t.right;
stack = G__24301;
t = G__24302;
continue;
}
} else {
if((c > (0))){
var G__24303 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__24304 = t.right;
stack = G__24303;
t = G__24304;
continue;
} else {
var G__24305 = stack;
var G__24306 = t.left;
stack = G__24305;
t = G__24306;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__24277 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24277) : cljs.core.key.call(null,G__24277));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__24307 = cljs.core.nnext(in$);
var G__24308 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24307;
out = G__24308;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24309__i = 0, G__24309__a = new Array(arguments.length -  0);
while (G__24309__i < G__24309__a.length) {G__24309__a[G__24309__i] = arguments[G__24309__i + 0]; ++G__24309__i;}
  keyvals = new cljs.core.IndexedSeq(G__24309__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__24310){
var keyvals = cljs.core.seq(arglist__24310);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24311__i = 0, G__24311__a = new Array(arguments.length -  0);
while (G__24311__i < G__24311__a.length) {G__24311__a[G__24311__i] = arguments[G__24311__i + 0]; ++G__24311__i;}
  keyvals = new cljs.core.IndexedSeq(G__24311__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__24312){
var keyvals = cljs.core.seq(arglist__24312);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj24316 = {};
return obj24316;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__24317 = cljs.core.nnext(kvs);
kvs = G__24317;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24318__i = 0, G__24318__a = new Array(arguments.length -  0);
while (G__24318__i < G__24318__a.length) {G__24318__a[G__24318__i] = arguments[G__24318__i + 0]; ++G__24318__i;}
  keyvals = new cljs.core.IndexedSeq(G__24318__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__24319){
var keyvals = cljs.core.seq(arglist__24319);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__24320 = cljs.core.nnext(in$);
var G__24321 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24320;
out = G__24321;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24322__i = 0, G__24322__a = new Array(arguments.length -  0);
while (G__24322__i < G__24322__a.length) {G__24322__a[G__24322__i] = arguments[G__24322__i + 0]; ++G__24322__i;}
  keyvals = new cljs.core.IndexedSeq(G__24322__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__24323){
var keyvals = cljs.core.seq(arglist__24323);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__24324 = cljs.core.nnext(in$);
var G__24325 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24324;
out = G__24325;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__24326__i = 0, G__24326__a = new Array(arguments.length -  1);
while (G__24326__i < G__24326__a.length) {G__24326__a[G__24326__i] = arguments[G__24326__i + 1]; ++G__24326__i;}
  keyvals = new cljs.core.IndexedSeq(G__24326__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__24327){
var comparator = cljs.core.first(arglist__24327);
var keyvals = cljs.core.rest(arglist__24327);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24328 = self__.mseq;
if(G__24328){
var bit__6571__auto__ = (G__24328.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6571__auto__) || (G__24328.cljs$core$INext$)){
return true;
} else {
if((!G__24328.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24328);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24328);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24329 = self__.mseq;
if(G__24329){
var bit__6571__auto__ = (G__24329.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6571__auto__) || (G__24329.cljs$core$INext$)){
return true;
} else {
if((!G__24329.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24329);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24329);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24330 = self__.mseq;
if(G__24330){
var bit__6571__auto__ = (G__24330.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6571__auto__) || (G__24330.cljs$core$INext$)){
return true;
} else {
if((!G__24330.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24330);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24330);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24331 = self__.mseq;
if(G__24331){
var bit__6571__auto__ = (G__24331.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6571__auto__) || (G__24331.cljs$core$INext$)){
return true;
} else {
if((!G__24331.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24331);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24331);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__24332_SHARP_,p2__24333_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5890__auto__ = p1__24332_SHARP_;
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__24333_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__24334__i = 0, G__24334__a = new Array(arguments.length -  0);
while (G__24334__i < G__24334__a.length) {G__24334__a[G__24334__i] = arguments[G__24334__i + 0]; ++G__24334__i;}
  maps = new cljs.core.IndexedSeq(G__24334__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__24335){
var maps = cljs.core.seq(arglist__24335);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24338 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24339 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24338,G__24339) : f.call(null,G__24338,G__24339));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__5890__auto__ = m1;
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__24340__i = 0, G__24340__a = new Array(arguments.length -  1);
while (G__24340__i < G__24340__a.length) {G__24340__a[G__24340__i] = arguments[G__24340__i + 1]; ++G__24340__i;}
  maps = new cljs.core.IndexedSeq(G__24340__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__24341){
var f = cljs.core.first(arglist__24341);
var maps = cljs.core.rest(arglist__24341);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__24342 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__24343 = cljs.core.next(keys);
ret = G__24342;
keys = G__24343;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24346 = cljs.core.seq(coll);
var chunk__24347 = null;
var count__24348 = (0);
var i__24349 = (0);
while(true){
if((i__24349 < count__24348)){
var vec__24350 = chunk__24347.cljs$core$IIndexed$_nth$arity$2(null,i__24349);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24350,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24350,(1),null);
var G__24351_24356 = v;
var G__24352_24357 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24351_24356,G__24352_24357) : f.call(null,G__24351_24356,G__24352_24357));

var G__24358 = seq__24346;
var G__24359 = chunk__24347;
var G__24360 = count__24348;
var G__24361 = (i__24349 + (1));
seq__24346 = G__24358;
chunk__24347 = G__24359;
count__24348 = G__24360;
i__24349 = G__24361;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__24346);
if(temp__4406__auto__){
var seq__24346__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24346__$1)){
var c__6677__auto__ = cljs.core.chunk_first(seq__24346__$1);
var G__24362 = cljs.core.chunk_rest(seq__24346__$1);
var G__24363 = c__6677__auto__;
var G__24364 = cljs.core.count(c__6677__auto__);
var G__24365 = (0);
seq__24346 = G__24362;
chunk__24347 = G__24363;
count__24348 = G__24364;
i__24349 = G__24365;
continue;
} else {
var vec__24353 = cljs.core.first(seq__24346__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24353,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24353,(1),null);
var G__24354_24366 = v;
var G__24355_24367 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24354_24366,G__24355_24367) : f.call(null,G__24354_24366,G__24355_24367));

var G__24368 = cljs.core.next(seq__24346__$1);
var G__24369 = null;
var G__24370 = (0);
var G__24371 = (0);
seq__24346 = G__24368;
chunk__24347 = G__24369;
count__24348 = G__24370;
i__24349 = G__24371;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__24344_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__24344_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__24372 = null;
var G__24372__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24372__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24372 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24372__2.call(this,self__,k);
case 3:
return G__24372__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24372.cljs$core$IFn$_invoke$arity$2 = G__24372__2;
G__24372.cljs$core$IFn$_invoke$arity$3 = G__24372__3;
return G__24372;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args24345){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24345)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__24373 = (i + (1));
var G__24374 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__24373;
out = G__24374;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__24375 = (i + (1));
var G__24376 = cljs.core._conj_BANG_(out,(items[i]));
i = G__24375;
out = G__24376;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__24378 = null;
var G__24378__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__24378__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__24378 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24378__2.call(this,self__,k);
case 3:
return G__24378__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24378.cljs$core$IFn$_invoke$arity$2 = G__24378__2;
G__24378.cljs$core$IFn$_invoke$arity$3 = G__24378__3;
return G__24378;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args24377){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24377)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24381 = cljs.core.seq(coll);
var chunk__24382 = null;
var count__24383 = (0);
var i__24384 = (0);
while(true){
if((i__24384 < count__24383)){
var vec__24385 = chunk__24382.cljs$core$IIndexed$_nth$arity$2(null,i__24384);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24385,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24385,(1),null);
var G__24386_24391 = v;
var G__24387_24392 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24386_24391,G__24387_24392) : f.call(null,G__24386_24391,G__24387_24392));

var G__24393 = seq__24381;
var G__24394 = chunk__24382;
var G__24395 = count__24383;
var G__24396 = (i__24384 + (1));
seq__24381 = G__24393;
chunk__24382 = G__24394;
count__24383 = G__24395;
i__24384 = G__24396;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__24381);
if(temp__4406__auto__){
var seq__24381__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24381__$1)){
var c__6677__auto__ = cljs.core.chunk_first(seq__24381__$1);
var G__24397 = cljs.core.chunk_rest(seq__24381__$1);
var G__24398 = c__6677__auto__;
var G__24399 = cljs.core.count(c__6677__auto__);
var G__24400 = (0);
seq__24381 = G__24397;
chunk__24382 = G__24398;
count__24383 = G__24399;
i__24384 = G__24400;
continue;
} else {
var vec__24388 = cljs.core.first(seq__24381__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24388,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24388,(1),null);
var G__24389_24401 = v;
var G__24390_24402 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24389_24401,G__24390_24402) : f.call(null,G__24389_24401,G__24390_24402));

var G__24403 = cljs.core.next(seq__24381__$1);
var G__24404 = null;
var G__24405 = (0);
var G__24406 = (0);
seq__24381 = G__24403;
chunk__24382 = G__24404;
count__24383 = G__24405;
i__24384 = G__24406;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__24379_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__24379_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__24407 = null;
var G__24407__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24407__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24407 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24407__2.call(this,self__,k);
case 3:
return G__24407__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24407.cljs$core$IFn$_invoke$arity$2 = G__24407__2;
G__24407.cljs$core$IFn$_invoke$arity$3 = G__24407__3;
return G__24407;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args24380){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24380)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__6771__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__6771__auto__.length)){
var G__24408 = (i + (1));
var G__24409 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__24408;
res = G__24409;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__24410 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__24411 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__24410;
out = G__24411;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__24412__delegate = function (keys){
return cljs.core.set(keys);
};
var G__24412 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__24413__i = 0, G__24413__a = new Array(arguments.length -  0);
while (G__24413__i < G__24413__a.length) {G__24413__a[G__24413__i] = arguments[G__24413__i + 0]; ++G__24413__i;}
  keys = new cljs.core.IndexedSeq(G__24413__a,0);
} 
return G__24412__delegate.call(this,keys);};
G__24412.cljs$lang$maxFixedArity = 0;
G__24412.cljs$lang$applyTo = (function (arglist__24414){
var keys = cljs.core.seq(arglist__24414);
return G__24412__delegate(keys);
});
G__24412.cljs$core$IFn$_invoke$arity$variadic = G__24412__delegate;
return G__24412;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__24415 = null;
if (arguments.length > 0) {
var G__24416__i = 0, G__24416__a = new Array(arguments.length -  0);
while (G__24416__i < G__24416__a.length) {G__24416__a[G__24416__i] = arguments[G__24416__i + 0]; ++G__24416__i;}
G__24415 = new cljs.core.IndexedSeq(G__24416__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__24415);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__24417__i = 0, G__24417__a = new Array(arguments.length -  0);
while (G__24417__i < G__24417__a.length) {G__24417__a[G__24417__i] = arguments[G__24417__i + 0]; ++G__24417__i;}
  keys = new cljs.core.IndexedSeq(G__24417__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__24418){
var keys = cljs.core.seq(arglist__24418);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__24419__i = 0, G__24419__a = new Array(arguments.length -  1);
while (G__24419__i < G__24419__a.length) {G__24419__a[G__24419__i] = arguments[G__24419__i + 1]; ++G__24419__i;}
  keys = new cljs.core.IndexedSeq(G__24419__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__24420){
var comparator = cljs.core.first(arglist__24420);
var keys = cljs.core.rest(arglist__24420);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__24421_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__24421_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.val(e);
} else {
return p1__24421_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4404__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24422_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__24422_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.second(e);
} else {
return p1__24422_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__24443 = null;
var G__24443__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24443__1 = (function (result){
var G__24433 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24433) : rf.call(null,G__24433));
});
var G__24443__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__24434 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24434) : cljs.core.deref.call(null,G__24434));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__24435 = result;
var G__24436 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24435,G__24436) : rf.call(null,G__24435,G__24436));
}
});
G__24443 = function(result,input){
switch(arguments.length){
case 0:
return G__24443__0.call(this);
case 1:
return G__24443__1.call(this,result);
case 2:
return G__24443__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24443.cljs$core$IFn$_invoke$arity$0 = G__24443__0;
G__24443.cljs$core$IFn$_invoke$arity$1 = G__24443__1;
G__24443.cljs$core$IFn$_invoke$arity$2 = G__24443__2;
return G__24443;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__24441,seen__$1){
while(true){
var vec__24442 = p__24441;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24442,(0),null);
var xs__$1 = vec__24442;
var temp__4406__auto__ = cljs.core.seq(xs__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__24444 = cljs.core.rest(s);
var G__24445 = seen__$1;
p__24441 = G__24444;
seen__$1 = G__24445;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__24446 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__24447 = cljs.core.next(s__$1);
ret = G__24446;
s__$1 = G__24447;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__24449 = x;
if(G__24449){
var bit__6564__auto__ = (G__24449.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__6564__auto__) || (G__24449.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__24450 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__24451 = cljs.core.next(ks);
var G__24452 = cljs.core.next(vs);
map = G__24450;
ks = G__24451;
vs = G__24452;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__24463 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24463) : k.call(null,G__24463));
})() > (function (){var G__24464 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24464) : k.call(null,G__24464));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__24465__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24453_SHARP_,p2__24454_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__24453_SHARP_,p2__24454_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__24465 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__24466__i = 0, G__24466__a = new Array(arguments.length -  3);
while (G__24466__i < G__24466__a.length) {G__24466__a[G__24466__i] = arguments[G__24466__i + 3]; ++G__24466__i;}
  more = new cljs.core.IndexedSeq(G__24466__a,0);
} 
return G__24465__delegate.call(this,k,x,y,more);};
G__24465.cljs$lang$maxFixedArity = 3;
G__24465.cljs$lang$applyTo = (function (arglist__24467){
var k = cljs.core.first(arglist__24467);
arglist__24467 = cljs.core.next(arglist__24467);
var x = cljs.core.first(arglist__24467);
arglist__24467 = cljs.core.next(arglist__24467);
var y = cljs.core.first(arglist__24467);
var more = cljs.core.rest(arglist__24467);
return G__24465__delegate(k,x,y,more);
});
G__24465.cljs$core$IFn$_invoke$arity$variadic = G__24465__delegate;
return G__24465;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__24468 = null;
if (arguments.length > 3) {
var G__24469__i = 0, G__24469__a = new Array(arguments.length -  3);
while (G__24469__i < G__24469__a.length) {G__24469__a[G__24469__i] = arguments[G__24469__i + 3]; ++G__24469__i;}
G__24468 = new cljs.core.IndexedSeq(G__24469__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__24468);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__24480 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24480) : k.call(null,G__24480));
})() < (function (){var G__24481 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24481) : k.call(null,G__24481));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__24482__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24470_SHARP_,p2__24471_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__24470_SHARP_,p2__24471_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__24482 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__24483__i = 0, G__24483__a = new Array(arguments.length -  3);
while (G__24483__i < G__24483__a.length) {G__24483__a[G__24483__i] = arguments[G__24483__i + 3]; ++G__24483__i;}
  more = new cljs.core.IndexedSeq(G__24483__a,0);
} 
return G__24482__delegate.call(this,k,x,y,more);};
G__24482.cljs$lang$maxFixedArity = 3;
G__24482.cljs$lang$applyTo = (function (arglist__24484){
var k = cljs.core.first(arglist__24484);
arglist__24484 = cljs.core.next(arglist__24484);
var x = cljs.core.first(arglist__24484);
arglist__24484 = cljs.core.next(arglist__24484);
var y = cljs.core.first(arglist__24484);
var more = cljs.core.rest(arglist__24484);
return G__24482__delegate(k,x,y,more);
});
G__24482.cljs$core$IFn$_invoke$arity$variadic = G__24482__delegate;
return G__24482;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__24485 = null;
if (arguments.length > 3) {
var G__24486__i = 0, G__24486__a = new Array(arguments.length -  3);
while (G__24486__i < G__24486__a.length) {G__24486__a[G__24486__i] = arguments[G__24486__i + 3]; ++G__24486__i;}
G__24485 = new cljs.core.IndexedSeq(G__24486__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__24485);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__24503 = null;
var G__24503__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24503__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__24498 = result;
var G__24499 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24498,G__24499) : rf.call(null,G__24498,G__24499));
})());
})());
var G__24500 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24500) : rf.call(null,G__24500));
});
var G__24503__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__24501 = result;
var G__24502 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24501,G__24502) : rf.call(null,G__24501,G__24502));
} else {
return result;
}
});
G__24503 = function(result,input){
switch(arguments.length){
case 0:
return G__24503__0.call(this);
case 1:
return G__24503__1.call(this,result);
case 2:
return G__24503__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24503.cljs$core$IFn$_invoke$arity$0 = G__24503__0;
G__24503.cljs$core$IFn$_invoke$arity$1 = G__24503__1;
G__24503.cljs$core$IFn$_invoke$arity$2 = G__24503__2;
return G__24503;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__24516 = null;
var G__24516__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24516__1 = (function (result){
var G__24511 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24511) : rf.call(null,G__24511));
});
var G__24516__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__24512 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24512) : pred.call(null,G__24512));
})())){
var G__24513 = result;
var G__24514 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24513,G__24514) : rf.call(null,G__24513,G__24514));
} else {
return cljs.core.reduced(result);
}
});
G__24516 = function(result,input){
switch(arguments.length){
case 0:
return G__24516__0.call(this);
case 1:
return G__24516__1.call(this,result);
case 2:
return G__24516__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24516.cljs$core$IFn$_invoke$arity$0 = G__24516__0;
G__24516.cljs$core$IFn$_invoke$arity$1 = G__24516__1;
G__24516.cljs$core$IFn$_invoke$arity$2 = G__24516__2;
return G__24516;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.truth_((function (){var G__24515 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24515) : pred.call(null,G__24515));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__24521 = (function (){var G__24523 = cljs.core._entry_key(sc,e);
var G__24524 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24523,G__24524) : comp.call(null,G__24523,G__24524));
})();
var G__24522 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__24521,G__24522) : test.call(null,G__24521,G__24522));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__24528 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24528,(0),null);
var s = vec__24528;
if(cljs.core.truth_((function (){var G__24529 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24529) : include.call(null,G__24529));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__24530 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24530,(0),null);
var s = vec__24530;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__24534 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24534,(0),null);
var s = vec__24534;
if(cljs.core.truth_((function (){var G__24535 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24535) : include.call(null,G__24535));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__24536 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24536,(0),null);
var s = vec__24536;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__24537 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24537) : Math.ceil.call(null,G__24537));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__6311__auto__ = self__.__hash;
if(!((h__6311__auto__ == null))){
return h__6311__auto__;
} else {
var h__6311__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__6311__auto____$1;

return h__6311__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__24538 = ret;
var G__24539 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24538,G__24539) : f.call(null,G__24538,G__24539));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__24540 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24540) : cljs.core.deref.call(null,G__24540));
} else {
var G__24541 = (i + self__.step);
var G__24542 = ret__$1;
i = G__24541;
ret = G__24542;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__24560 = null;
var G__24560__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24560__1 = (function (result){
var G__24557 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24557) : rf.call(null,G__24557));
});
var G__24560__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__24558 = result;
var G__24559 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24558,G__24559) : rf.call(null,G__24558,G__24559));
} else {
return result;
}
});
G__24560 = function(result,input){
switch(arguments.length){
case 0:
return G__24560__0.call(this);
case 1:
return G__24560__1.call(this,result);
case 2:
return G__24560__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24560.cljs$core$IFn$_invoke$arity$0 = G__24560__0;
G__24560.cljs$core$IFn$_invoke$arity$1 = G__24560__1;
G__24560.cljs$core$IFn$_invoke$arity$2 = G__24560__2;
return G__24560;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__24582 = null;
var G__24582__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24582__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__24573 = result;
var G__24574 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24573,G__24574) : rf.call(null,G__24573,G__24574));
})());
})());
var G__24575 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24575) : rf.call(null,G__24575));
});
var G__24582__2 = (function (result,input){
var pval = (function (){var G__24576 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24576) : cljs.core.deref.call(null,G__24576));
})();
var val = (function (){var G__24577 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24577) : f.call(null,G__24577));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__24578 = result;
var G__24579 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24578,G__24579) : rf.call(null,G__24578,G__24579));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__24582 = function(result,input){
switch(arguments.length){
case 0:
return G__24582__0.call(this);
case 1:
return G__24582__1.call(this,result);
case 2:
return G__24582__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24582.cljs$core$IFn$_invoke$arity$0 = G__24582__0;
G__24582.cljs$core$IFn$_invoke$arity$1 = G__24582__1;
G__24582.cljs$core$IFn$_invoke$arity$2 = G__24582__2;
return G__24582;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__24580 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24580) : f.call(null,G__24580));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4406__auto__){
return (function (p1__24561_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__24581 = p1__24561_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24581) : f.call(null,G__24581));
})());
});})(fst,fv,s,temp__4406__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__24591 = init;
var G__24592 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24591,G__24592) : f.call(null,G__24591,G__24592));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__24687 = null;
var G__24687__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__24687__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24645 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24645) : f.call(null,G__24645));
})()],null));
});
var G__24687__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24646 = x;
var G__24647 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24646,G__24647) : f.call(null,G__24646,G__24647));
})()],null));
});
var G__24687__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24648 = x;
var G__24649 = y;
var G__24650 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24648,G__24649,G__24650) : f.call(null,G__24648,G__24649,G__24650));
})()],null));
});
var G__24687__4 = (function() { 
var G__24688__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__24688 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24689__i = 0, G__24689__a = new Array(arguments.length -  3);
while (G__24689__i < G__24689__a.length) {G__24689__a[G__24689__i] = arguments[G__24689__i + 3]; ++G__24689__i;}
  args = new cljs.core.IndexedSeq(G__24689__a,0);
} 
return G__24688__delegate.call(this,x,y,z,args);};
G__24688.cljs$lang$maxFixedArity = 3;
G__24688.cljs$lang$applyTo = (function (arglist__24690){
var x = cljs.core.first(arglist__24690);
arglist__24690 = cljs.core.next(arglist__24690);
var y = cljs.core.first(arglist__24690);
arglist__24690 = cljs.core.next(arglist__24690);
var z = cljs.core.first(arglist__24690);
var args = cljs.core.rest(arglist__24690);
return G__24688__delegate(x,y,z,args);
});
G__24688.cljs$core$IFn$_invoke$arity$variadic = G__24688__delegate;
return G__24688;
})()
;
G__24687 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24687__0.call(this);
case 1:
return G__24687__1.call(this,x);
case 2:
return G__24687__2.call(this,x,y);
case 3:
return G__24687__3.call(this,x,y,z);
default:
var G__24691 = null;
if (arguments.length > 3) {
var G__24692__i = 0, G__24692__a = new Array(arguments.length -  3);
while (G__24692__i < G__24692__a.length) {G__24692__a[G__24692__i] = arguments[G__24692__i + 3]; ++G__24692__i;}
G__24691 = new cljs.core.IndexedSeq(G__24692__a,0);
}
return G__24687__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24687.cljs$lang$maxFixedArity = 3;
G__24687.cljs$lang$applyTo = G__24687__4.cljs$lang$applyTo;
G__24687.cljs$core$IFn$_invoke$arity$0 = G__24687__0;
G__24687.cljs$core$IFn$_invoke$arity$1 = G__24687__1;
G__24687.cljs$core$IFn$_invoke$arity$2 = G__24687__2;
G__24687.cljs$core$IFn$_invoke$arity$3 = G__24687__3;
G__24687.cljs$core$IFn$_invoke$arity$variadic = G__24687__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24687;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__24693 = null;
var G__24693__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__24693__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24651 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24651) : f.call(null,G__24651));
})(),(function (){var G__24652 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24652) : g.call(null,G__24652));
})()],null));
});
var G__24693__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24653 = x;
var G__24654 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24653,G__24654) : f.call(null,G__24653,G__24654));
})(),(function (){var G__24655 = x;
var G__24656 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24655,G__24656) : g.call(null,G__24655,G__24656));
})()],null));
});
var G__24693__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24657 = x;
var G__24658 = y;
var G__24659 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24657,G__24658,G__24659) : f.call(null,G__24657,G__24658,G__24659));
})(),(function (){var G__24660 = x;
var G__24661 = y;
var G__24662 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24660,G__24661,G__24662) : g.call(null,G__24660,G__24661,G__24662));
})()],null));
});
var G__24693__4 = (function() { 
var G__24694__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__24694 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24695__i = 0, G__24695__a = new Array(arguments.length -  3);
while (G__24695__i < G__24695__a.length) {G__24695__a[G__24695__i] = arguments[G__24695__i + 3]; ++G__24695__i;}
  args = new cljs.core.IndexedSeq(G__24695__a,0);
} 
return G__24694__delegate.call(this,x,y,z,args);};
G__24694.cljs$lang$maxFixedArity = 3;
G__24694.cljs$lang$applyTo = (function (arglist__24696){
var x = cljs.core.first(arglist__24696);
arglist__24696 = cljs.core.next(arglist__24696);
var y = cljs.core.first(arglist__24696);
arglist__24696 = cljs.core.next(arglist__24696);
var z = cljs.core.first(arglist__24696);
var args = cljs.core.rest(arglist__24696);
return G__24694__delegate(x,y,z,args);
});
G__24694.cljs$core$IFn$_invoke$arity$variadic = G__24694__delegate;
return G__24694;
})()
;
G__24693 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24693__0.call(this);
case 1:
return G__24693__1.call(this,x);
case 2:
return G__24693__2.call(this,x,y);
case 3:
return G__24693__3.call(this,x,y,z);
default:
var G__24697 = null;
if (arguments.length > 3) {
var G__24698__i = 0, G__24698__a = new Array(arguments.length -  3);
while (G__24698__i < G__24698__a.length) {G__24698__a[G__24698__i] = arguments[G__24698__i + 3]; ++G__24698__i;}
G__24697 = new cljs.core.IndexedSeq(G__24698__a,0);
}
return G__24693__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24697);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24693.cljs$lang$maxFixedArity = 3;
G__24693.cljs$lang$applyTo = G__24693__4.cljs$lang$applyTo;
G__24693.cljs$core$IFn$_invoke$arity$0 = G__24693__0;
G__24693.cljs$core$IFn$_invoke$arity$1 = G__24693__1;
G__24693.cljs$core$IFn$_invoke$arity$2 = G__24693__2;
G__24693.cljs$core$IFn$_invoke$arity$3 = G__24693__3;
G__24693.cljs$core$IFn$_invoke$arity$variadic = G__24693__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24693;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__24699 = null;
var G__24699__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__24699__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24663 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24663) : f.call(null,G__24663));
})(),(function (){var G__24664 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24664) : g.call(null,G__24664));
})(),(function (){var G__24665 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__24665) : h.call(null,G__24665));
})()],null));
});
var G__24699__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24666 = x;
var G__24667 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24666,G__24667) : f.call(null,G__24666,G__24667));
})(),(function (){var G__24668 = x;
var G__24669 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24668,G__24669) : g.call(null,G__24668,G__24669));
})(),(function (){var G__24670 = x;
var G__24671 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__24670,G__24671) : h.call(null,G__24670,G__24671));
})()],null));
});
var G__24699__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24672 = x;
var G__24673 = y;
var G__24674 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24672,G__24673,G__24674) : f.call(null,G__24672,G__24673,G__24674));
})(),(function (){var G__24675 = x;
var G__24676 = y;
var G__24677 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24675,G__24676,G__24677) : g.call(null,G__24675,G__24676,G__24677));
})(),(function (){var G__24678 = x;
var G__24679 = y;
var G__24680 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__24678,G__24679,G__24680) : h.call(null,G__24678,G__24679,G__24680));
})()],null));
});
var G__24699__4 = (function() { 
var G__24700__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__24700 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24701__i = 0, G__24701__a = new Array(arguments.length -  3);
while (G__24701__i < G__24701__a.length) {G__24701__a[G__24701__i] = arguments[G__24701__i + 3]; ++G__24701__i;}
  args = new cljs.core.IndexedSeq(G__24701__a,0);
} 
return G__24700__delegate.call(this,x,y,z,args);};
G__24700.cljs$lang$maxFixedArity = 3;
G__24700.cljs$lang$applyTo = (function (arglist__24702){
var x = cljs.core.first(arglist__24702);
arglist__24702 = cljs.core.next(arglist__24702);
var y = cljs.core.first(arglist__24702);
arglist__24702 = cljs.core.next(arglist__24702);
var z = cljs.core.first(arglist__24702);
var args = cljs.core.rest(arglist__24702);
return G__24700__delegate(x,y,z,args);
});
G__24700.cljs$core$IFn$_invoke$arity$variadic = G__24700__delegate;
return G__24700;
})()
;
G__24699 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24699__0.call(this);
case 1:
return G__24699__1.call(this,x);
case 2:
return G__24699__2.call(this,x,y);
case 3:
return G__24699__3.call(this,x,y,z);
default:
var G__24703 = null;
if (arguments.length > 3) {
var G__24704__i = 0, G__24704__a = new Array(arguments.length -  3);
while (G__24704__i < G__24704__a.length) {G__24704__a[G__24704__i] = arguments[G__24704__i + 3]; ++G__24704__i;}
G__24703 = new cljs.core.IndexedSeq(G__24704__a,0);
}
return G__24699__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24703);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24699.cljs$lang$maxFixedArity = 3;
G__24699.cljs$lang$applyTo = G__24699__4.cljs$lang$applyTo;
G__24699.cljs$core$IFn$_invoke$arity$0 = G__24699__0;
G__24699.cljs$core$IFn$_invoke$arity$1 = G__24699__1;
G__24699.cljs$core$IFn$_invoke$arity$2 = G__24699__2;
G__24699.cljs$core$IFn$_invoke$arity$3 = G__24699__3;
G__24699.cljs$core$IFn$_invoke$arity$variadic = G__24699__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24699;
})()
});
var juxt__4 = (function() { 
var G__24705__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__24706 = null;
var G__24706__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24593_SHARP_,p2__24594_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24593_SHARP_,(function (){return (p2__24594_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__24594_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__24594_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24706__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24595_SHARP_,p2__24596_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24595_SHARP_,(function (){var G__24681 = x;
return (p2__24596_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__24596_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24681) : p2__24596_SHARP_.call(null,G__24681));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24706__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24597_SHARP_,p2__24598_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24597_SHARP_,(function (){var G__24682 = x;
var G__24683 = y;
return (p2__24598_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__24598_SHARP_.cljs$core$IFn$_invoke$arity$2(G__24682,G__24683) : p2__24598_SHARP_.call(null,G__24682,G__24683));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24706__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24599_SHARP_,p2__24600_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24599_SHARP_,(function (){var G__24684 = x;
var G__24685 = y;
var G__24686 = z;
return (p2__24600_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__24600_SHARP_.cljs$core$IFn$_invoke$arity$3(G__24684,G__24685,G__24686) : p2__24600_SHARP_.call(null,G__24684,G__24685,G__24686));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24706__4 = (function() { 
var G__24707__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24601_SHARP_,p2__24602_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24601_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__24602_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__24707 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24708__i = 0, G__24708__a = new Array(arguments.length -  3);
while (G__24708__i < G__24708__a.length) {G__24708__a[G__24708__i] = arguments[G__24708__i + 3]; ++G__24708__i;}
  args = new cljs.core.IndexedSeq(G__24708__a,0);
} 
return G__24707__delegate.call(this,x,y,z,args);};
G__24707.cljs$lang$maxFixedArity = 3;
G__24707.cljs$lang$applyTo = (function (arglist__24709){
var x = cljs.core.first(arglist__24709);
arglist__24709 = cljs.core.next(arglist__24709);
var y = cljs.core.first(arglist__24709);
arglist__24709 = cljs.core.next(arglist__24709);
var z = cljs.core.first(arglist__24709);
var args = cljs.core.rest(arglist__24709);
return G__24707__delegate(x,y,z,args);
});
G__24707.cljs$core$IFn$_invoke$arity$variadic = G__24707__delegate;
return G__24707;
})()
;
G__24706 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24706__0.call(this);
case 1:
return G__24706__1.call(this,x);
case 2:
return G__24706__2.call(this,x,y);
case 3:
return G__24706__3.call(this,x,y,z);
default:
var G__24710 = null;
if (arguments.length > 3) {
var G__24711__i = 0, G__24711__a = new Array(arguments.length -  3);
while (G__24711__i < G__24711__a.length) {G__24711__a[G__24711__i] = arguments[G__24711__i + 3]; ++G__24711__i;}
G__24710 = new cljs.core.IndexedSeq(G__24711__a,0);
}
return G__24706__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24706.cljs$lang$maxFixedArity = 3;
G__24706.cljs$lang$applyTo = G__24706__4.cljs$lang$applyTo;
G__24706.cljs$core$IFn$_invoke$arity$0 = G__24706__0;
G__24706.cljs$core$IFn$_invoke$arity$1 = G__24706__1;
G__24706.cljs$core$IFn$_invoke$arity$2 = G__24706__2;
G__24706.cljs$core$IFn$_invoke$arity$3 = G__24706__3;
G__24706.cljs$core$IFn$_invoke$arity$variadic = G__24706__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24706;
})()
;})(fs__$1))
};
var G__24705 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__24712__i = 0, G__24712__a = new Array(arguments.length -  3);
while (G__24712__i < G__24712__a.length) {G__24712__a[G__24712__i] = arguments[G__24712__i + 3]; ++G__24712__i;}
  fs = new cljs.core.IndexedSeq(G__24712__a,0);
} 
return G__24705__delegate.call(this,f,g,h,fs);};
G__24705.cljs$lang$maxFixedArity = 3;
G__24705.cljs$lang$applyTo = (function (arglist__24713){
var f = cljs.core.first(arglist__24713);
arglist__24713 = cljs.core.next(arglist__24713);
var g = cljs.core.first(arglist__24713);
arglist__24713 = cljs.core.next(arglist__24713);
var h = cljs.core.first(arglist__24713);
var fs = cljs.core.rest(arglist__24713);
return G__24705__delegate(f,g,h,fs);
});
G__24705.cljs$core$IFn$_invoke$arity$variadic = G__24705__delegate;
return G__24705;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__24714 = null;
if (arguments.length > 3) {
var G__24715__i = 0, G__24715__a = new Array(arguments.length -  3);
while (G__24715__i < G__24715__a.length) {G__24715__a[G__24715__i] = arguments[G__24715__i + 3]; ++G__24715__i;}
G__24714 = new cljs.core.IndexedSeq(G__24715__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__24714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__24716 = cljs.core.next(coll);
coll = G__24716;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__24717 = (n - (1));
var G__24718 = cljs.core.next(coll);
n = G__24717;
coll = G__24718;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__24722 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24722,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24722,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24722,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_24730 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__24731_24737 = cljs.core.first(coll);
var G__24732_24738 = writer;
var G__24733_24739 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24731_24737,G__24732_24738,G__24733_24739) : print_one.call(null,G__24731_24737,G__24732_24738,G__24733_24739));
} else {
}

var coll_24740__$1 = cljs.core.next(coll);
var n_24741 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_24740__$1) && (((n_24741 == null)) || (!((n_24741 === (0)))))){
cljs.core._write(writer,sep);

var G__24734_24742 = cljs.core.first(coll_24740__$1);
var G__24735_24743 = writer;
var G__24736_24744 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24734_24742,G__24735_24743,G__24736_24744) : print_one.call(null,G__24734_24742,G__24735_24743,G__24736_24744));

var G__24745 = cljs.core.next(coll_24740__$1);
var G__24746 = (n_24741 - (1));
coll_24740__$1 = G__24745;
n_24741 = G__24746;
continue;
} else {
if((cljs.core.seq(coll_24740__$1)) && ((n_24741 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_24730;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__24751 = cljs.core.seq(ss);
var chunk__24752 = null;
var count__24753 = (0);
var i__24754 = (0);
while(true){
if((i__24754 < count__24753)){
var s = chunk__24752.cljs$core$IIndexed$_nth$arity$2(null,i__24754);
cljs.core._write(writer,s);

var G__24755 = seq__24751;
var G__24756 = chunk__24752;
var G__24757 = count__24753;
var G__24758 = (i__24754 + (1));
seq__24751 = G__24755;
chunk__24752 = G__24756;
count__24753 = G__24757;
i__24754 = G__24758;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__24751);
if(temp__4406__auto__){
var seq__24751__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24751__$1)){
var c__6677__auto__ = cljs.core.chunk_first(seq__24751__$1);
var G__24759 = cljs.core.chunk_rest(seq__24751__$1);
var G__24760 = c__6677__auto__;
var G__24761 = cljs.core.count(c__6677__auto__);
var G__24762 = (0);
seq__24751 = G__24759;
chunk__24752 = G__24760;
count__24753 = G__24761;
i__24754 = G__24762;
continue;
} else {
var s = cljs.core.first(seq__24751__$1);
cljs.core._write(writer,s);

var G__24763 = cljs.core.next(seq__24751__$1);
var G__24764 = null;
var G__24765 = (0);
var G__24766 = (0);
seq__24751 = G__24763;
chunk__24752 = G__24764;
count__24753 = G__24765;
i__24754 = G__24766;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__24767__i = 0, G__24767__a = new Array(arguments.length -  1);
while (G__24767__i < G__24767__a.length) {G__24767__a[G__24767__i] = arguments[G__24767__i + 1]; ++G__24767__i;}
  ss = new cljs.core.IndexedSeq(G__24767__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__24768){
var writer = cljs.core.first(arglist__24768);
var ss = cljs.core.rest(arglist__24768);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj24770 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj24770;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__24773 = "[\\\\\"\b\f\n\r\t]";
var G__24774 = "g";
return RegExp(G__24773,G__24774);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__5878__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__5878__auto__)){
var and__5878__auto____$1 = (function (){var G__24788 = obj;
if(G__24788){
var bit__6571__auto__ = (G__24788.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__6571__auto__) || (G__24788.cljs$core$IMeta$)){
return true;
} else {
if((!G__24788.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24788);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24788);
}
})();
if(and__5878__auto____$1){
return cljs.core.meta(obj);
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__24789 = obj;
if(G__24789){
var bit__6564__auto__ = (G__24789.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__6564__auto__) || (G__24789.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__24790 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__24791 = pr_writer;
var G__24792 = writer;
var G__24793 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__24790,G__24791,G__24792,G__24793) : cljs.core.print_map.call(null,G__24790,G__24791,G__24792,G__24793));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__24794 = obj;
return goog.isString(G__24794);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__24796 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__24796;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__24795 = obj;
if(G__24795){
var bit__6571__auto__ = (G__24795.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__6571__auto__) || (G__24795.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__24795.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__24795);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__24795);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__24801 = cljs.core.seq(cljs.core.next(objs));
var chunk__24802 = null;
var count__24803 = (0);
var i__24804 = (0);
while(true){
if((i__24804 < count__24803)){
var obj = chunk__24802.cljs$core$IIndexed$_nth$arity$2(null,i__24804);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__24805 = seq__24801;
var G__24806 = chunk__24802;
var G__24807 = count__24803;
var G__24808 = (i__24804 + (1));
seq__24801 = G__24805;
chunk__24802 = G__24806;
count__24803 = G__24807;
i__24804 = G__24808;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__24801);
if(temp__4406__auto__){
var seq__24801__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24801__$1)){
var c__6677__auto__ = cljs.core.chunk_first(seq__24801__$1);
var G__24809 = cljs.core.chunk_rest(seq__24801__$1);
var G__24810 = c__6677__auto__;
var G__24811 = cljs.core.count(c__6677__auto__);
var G__24812 = (0);
seq__24801 = G__24809;
chunk__24802 = G__24810;
count__24803 = G__24811;
i__24804 = G__24812;
continue;
} else {
var obj = cljs.core.first(seq__24801__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__24813 = cljs.core.next(seq__24801__$1);
var G__24814 = null;
var G__24815 = (0);
var G__24816 = (0);
seq__24801 = G__24813;
chunk__24802 = G__24814;
count__24803 = G__24815;
i__24804 = G__24816;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24817__i = 0, G__24817__a = new Array(arguments.length -  0);
while (G__24817__i < G__24817__a.length) {G__24817__a[G__24817__i] = arguments[G__24817__i + 0]; ++G__24817__i;}
  objs = new cljs.core.IndexedSeq(G__24817__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__24818){
var objs = cljs.core.seq(arglist__24818);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24819__i = 0, G__24819__a = new Array(arguments.length -  0);
while (G__24819__i < G__24819__a.length) {G__24819__a[G__24819__i] = arguments[G__24819__i + 0]; ++G__24819__i;}
  objs = new cljs.core.IndexedSeq(G__24819__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__24820){
var objs = cljs.core.seq(arglist__24820);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24821__i = 0, G__24821__a = new Array(arguments.length -  0);
while (G__24821__i < G__24821__a.length) {G__24821__a[G__24821__i] = arguments[G__24821__i + 0]; ++G__24821__i;}
  objs = new cljs.core.IndexedSeq(G__24821__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__24822){
var objs = cljs.core.seq(arglist__24822);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24823__i = 0, G__24823__a = new Array(arguments.length -  0);
while (G__24823__i < G__24823__a.length) {G__24823__a[G__24823__i] = arguments[G__24823__i + 0]; ++G__24823__i;}
  objs = new cljs.core.IndexedSeq(G__24823__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__24824){
var objs = cljs.core.seq(arglist__24824);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24825__i = 0, G__24825__a = new Array(arguments.length -  0);
while (G__24825__i < G__24825__a.length) {G__24825__a[G__24825__i] = arguments[G__24825__i + 0]; ++G__24825__i;}
  objs = new cljs.core.IndexedSeq(G__24825__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__24826){
var objs = cljs.core.seq(arglist__24826);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24827__i = 0, G__24827__a = new Array(arguments.length -  0);
while (G__24827__i < G__24827__a.length) {G__24827__a[G__24827__i] = arguments[G__24827__i + 0]; ++G__24827__i;}
  objs = new cljs.core.IndexedSeq(G__24827__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__24828){
var objs = cljs.core.seq(arglist__24828);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24829__i = 0, G__24829__a = new Array(arguments.length -  0);
while (G__24829__i < G__24829__a.length) {G__24829__a[G__24829__i] = arguments[G__24829__i + 0]; ++G__24829__i;}
  objs = new cljs.core.IndexedSeq(G__24829__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__24830){
var objs = cljs.core.seq(arglist__24830);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24831__i = 0, G__24831__a = new Array(arguments.length -  0);
while (G__24831__i < G__24831__a.length) {G__24831__a[G__24831__i] = arguments[G__24831__i + 0]; ++G__24831__i;}
  objs = new cljs.core.IndexedSeq(G__24831__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__24832){
var objs = cljs.core.seq(arglist__24832);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__24839_24845 = cljs.core.key(e);
var G__24840_24846 = w;
var G__24841_24847 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24839_24845,G__24840_24846,G__24841_24847) : print_one.call(null,G__24839_24845,G__24840_24846,G__24841_24847));

cljs.core._write(w," ");

var G__24842 = cljs.core.val(e);
var G__24843 = w;
var G__24844 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24842,G__24843,G__24844) : print_one.call(null,G__24842,G__24843,G__24844));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__24848__i = 0, G__24848__a = new Array(arguments.length -  2);
while (G__24848__i < G__24848__a.length) {G__24848__a[G__24848__i] = arguments[G__24848__i + 2]; ++G__24848__i;}
  args = new cljs.core.IndexedSeq(G__24848__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__24849){
var iref = cljs.core.first(arglist__24849);
arglist__24849 = cljs.core.next(arglist__24849);
var f = cljs.core.first(arglist__24849);
var args = cljs.core.rest(arglist__24849);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__24852 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24852) : cljs.core.atom.call(null,G__24852));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__24854 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24854) : cljs.core.deref.call(null,G__24854));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__24855_SHARP_,p2__24856_SHARP_){
var ret = (function (){var G__24859 = p1__24855_SHARP_;
var G__24860 = p2__24856_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24859,G__24860) : rf.call(null,G__24859,G__24860));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__24863 = null;
var G__24863__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24863__1 = (function (result){
var G__24862 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24862) : rf.call(null,G__24862));
});
var G__24863__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__24863 = function(result,input){
switch(arguments.length){
case 0:
return G__24863__0.call(this);
case 1:
return G__24863__1.call(this,result);
case 2:
return G__24863__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24863.cljs$core$IFn$_invoke$arity$0 = G__24863__0;
G__24863.cljs$core$IFn$_invoke$arity$1 = G__24863__1;
G__24863.cljs$core$IFn$_invoke$arity$2 = G__24863__2;
return G__24863;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__24872 = null;
var G__24872__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24872__1 = (function (result){
var G__24868 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24868) : rf.call(null,G__24868));
});
var G__24872__2 = (function (result,input){
var prior = (function (){var G__24869 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24869) : cljs.core.deref.call(null,G__24869));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__24870 = result;
var G__24871 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24870,G__24871) : rf.call(null,G__24870,G__24871));
}
});
G__24872 = function(result,input){
switch(arguments.length){
case 0:
return G__24872__0.call(this);
case 1:
return G__24872__1.call(this,result);
case 2:
return G__24872__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24872.cljs$core$IFn$_invoke$arity$0 = G__24872__0;
G__24872.cljs$core$IFn$_invoke$arity$1 = G__24872__1;
G__24872.cljs$core$IFn$_invoke$arity$2 = G__24872__2;
return G__24872;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6868__auto__ = this;
return cljs.core.es6_iterator(this__6868__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24874_SHARP_,p2__24873_SHARP_){
var G__24876 = p2__24873_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__24876) : proc.call(null,G__24876));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj24878 = {};
return obj24878;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__5878__auto__ = x;
if(and__5878__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__5878__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__6534__auto__ = (((x == null))?null:x);
return (function (){var or__5890__auto__ = (cljs.core._clj__GT_js[(function (){var G__24882 = x__6534__auto__;
return goog.typeOf(G__24882);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__5878__auto__ = x;
if(and__5878__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__5878__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__6534__auto__ = (((x == null))?null:x);
return (function (){var or__5890__auto__ = (cljs.core._key__GT_js[(function (){var G__24886 = x__6534__auto__;
return goog.typeOf(G__24886);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__24889 = k;
if(G__24889){
var bit__6571__auto__ = null;
if(cljs.core.truth_((function (){var or__5890__auto__ = bit__6571__auto__;
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return G__24889.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24889.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24889);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24889);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__24890 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__24890) : cljs.core.clj__GT_js.call(null,G__24890));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__24906 = x;
if(G__24906){
var bit__6571__auto__ = null;
if(cljs.core.truth_((function (){var or__5890__auto__ = bit__6571__auto__;
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return G__24906.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24906.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24906);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24906);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj24908 = {};
return obj24908;
})();
var seq__24909_24919 = cljs.core.seq(x);
var chunk__24910_24920 = null;
var count__24911_24921 = (0);
var i__24912_24922 = (0);
while(true){
if((i__24912_24922 < count__24911_24921)){
var vec__24913_24923 = chunk__24910_24920.cljs$core$IIndexed$_nth$arity$2(null,i__24912_24922);
var k_24924 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24913_24923,(0),null);
var v_24925 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24913_24923,(1),null);
(m[cljs.core.key__GT_js(k_24924)] = clj__GT_js(v_24925));

var G__24926 = seq__24909_24919;
var G__24927 = chunk__24910_24920;
var G__24928 = count__24911_24921;
var G__24929 = (i__24912_24922 + (1));
seq__24909_24919 = G__24926;
chunk__24910_24920 = G__24927;
count__24911_24921 = G__24928;
i__24912_24922 = G__24929;
continue;
} else {
var temp__4406__auto___24930 = cljs.core.seq(seq__24909_24919);
if(temp__4406__auto___24930){
var seq__24909_24931__$1 = temp__4406__auto___24930;
if(cljs.core.chunked_seq_QMARK_(seq__24909_24931__$1)){
var c__6677__auto___24932 = cljs.core.chunk_first(seq__24909_24931__$1);
var G__24933 = cljs.core.chunk_rest(seq__24909_24931__$1);
var G__24934 = c__6677__auto___24932;
var G__24935 = cljs.core.count(c__6677__auto___24932);
var G__24936 = (0);
seq__24909_24919 = G__24933;
chunk__24910_24920 = G__24934;
count__24911_24921 = G__24935;
i__24912_24922 = G__24936;
continue;
} else {
var vec__24914_24937 = cljs.core.first(seq__24909_24931__$1);
var k_24938 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24914_24937,(0),null);
var v_24939 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24914_24937,(1),null);
(m[cljs.core.key__GT_js(k_24938)] = clj__GT_js(v_24939));

var G__24940 = cljs.core.next(seq__24909_24931__$1);
var G__24941 = null;
var G__24942 = (0);
var G__24943 = (0);
seq__24909_24919 = G__24940;
chunk__24910_24920 = G__24941;
count__24911_24921 = G__24942;
i__24912_24922 = G__24943;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__24915_24944 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__24916_24945 = null;
var count__24917_24946 = (0);
var i__24918_24947 = (0);
while(true){
if((i__24918_24947 < count__24917_24946)){
var x_24948__$1 = chunk__24916_24945.cljs$core$IIndexed$_nth$arity$2(null,i__24918_24947);
arr.push(x_24948__$1);

var G__24949 = seq__24915_24944;
var G__24950 = chunk__24916_24945;
var G__24951 = count__24917_24946;
var G__24952 = (i__24918_24947 + (1));
seq__24915_24944 = G__24949;
chunk__24916_24945 = G__24950;
count__24917_24946 = G__24951;
i__24918_24947 = G__24952;
continue;
} else {
var temp__4406__auto___24953 = cljs.core.seq(seq__24915_24944);
if(temp__4406__auto___24953){
var seq__24915_24954__$1 = temp__4406__auto___24953;
if(cljs.core.chunked_seq_QMARK_(seq__24915_24954__$1)){
var c__6677__auto___24955 = cljs.core.chunk_first(seq__24915_24954__$1);
var G__24956 = cljs.core.chunk_rest(seq__24915_24954__$1);
var G__24957 = c__6677__auto___24955;
var G__24958 = cljs.core.count(c__6677__auto___24955);
var G__24959 = (0);
seq__24915_24944 = G__24956;
chunk__24916_24945 = G__24957;
count__24917_24946 = G__24958;
i__24918_24947 = G__24959;
continue;
} else {
var x_24960__$1 = cljs.core.first(seq__24915_24954__$1);
arr.push(x_24960__$1);

var G__24961 = cljs.core.next(seq__24915_24954__$1);
var G__24962 = null;
var G__24963 = (0);
var G__24964 = (0);
seq__24915_24944 = G__24961;
chunk__24916_24945 = G__24962;
count__24917_24946 = G__24963;
i__24918_24947 = G__24964;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj24966 = {};
return obj24966;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__5878__auto__ = x;
if(and__5878__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__5878__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__6534__auto__ = (((x == null))?null:x);
return (function (){var or__5890__auto__ = (cljs.core._js__GT_clj[(function (){var G__24970 = x__6534__auto__;
return goog.typeOf(G__24970);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$11,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__25027__delegate = function (x,opts){
var map__25000 = opts;
var map__25000__$1 = ((cljs.core.seq_QMARK_(map__25000))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25000):map__25000);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25000__$1,cljs.core.constant$keyword$11);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__25000,map__25000__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__25016 = x__$1;
if(G__25016){
var bit__6571__auto__ = null;
if(cljs.core.truth_((function (){var or__5890__auto__ = bit__6571__auto__;
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return G__25016.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__25016.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25016);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25016);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__6646__auto__ = ((function (map__25000,map__25000__$1,keywordize_keys,keyfn){
return (function iter__25017(s__25018){
return (new cljs.core.LazySeq(null,((function (map__25000,map__25000__$1,keywordize_keys,keyfn){
return (function (){
var s__25018__$1 = s__25018;
while(true){
var temp__4406__auto__ = cljs.core.seq(s__25018__$1);
if(temp__4406__auto__){
var s__25018__$2 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s__25018__$2)){
var c__6644__auto__ = cljs.core.chunk_first(s__25018__$2);
var size__6645__auto__ = cljs.core.count(c__6644__auto__);
var b__25020 = cljs.core.chunk_buffer(size__6645__auto__);
if((function (){var i__25019 = (0);
while(true){
if((i__25019 < size__6645__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__6644__auto__,i__25019);
cljs.core.chunk_append(b__25020,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25025 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25025) : keyfn.call(null,G__25025));
})(),thisfn((x__$1[k]))], null));

var G__25028 = (i__25019 + (1));
i__25019 = G__25028;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__25020),iter__25017(cljs.core.chunk_rest(s__25018__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__25020),null);
}
} else {
var k = cljs.core.first(s__25018__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25026 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25026) : keyfn.call(null,G__25026));
})(),thisfn((x__$1[k]))], null),iter__25017(cljs.core.rest(s__25018__$2)));
}
} else {
return null;
}
break;
}
});})(map__25000,map__25000__$1,keywordize_keys,keyfn))
,null,null));
});})(map__25000,map__25000__$1,keywordize_keys,keyfn))
;
return iter__6646__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__25000,map__25000__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__25027 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__25029__i = 0, G__25029__a = new Array(arguments.length -  1);
while (G__25029__i < G__25029__a.length) {G__25029__a[G__25029__i] = arguments[G__25029__i + 1]; ++G__25029__i;}
  opts = new cljs.core.IndexedSeq(G__25029__a,0);
} 
return G__25027__delegate.call(this,x,opts);};
G__25027.cljs$lang$maxFixedArity = 1;
G__25027.cljs$lang$applyTo = (function (arglist__25030){
var x = cljs.core.first(arglist__25030);
var opts = cljs.core.rest(arglist__25030);
return G__25027__delegate(x,opts);
});
G__25027.cljs$core$IFn$_invoke$arity$variadic = G__25027__delegate;
return G__25027;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__25031 = null;
if (arguments.length > 1) {
var G__25032__i = 0, G__25032__a = new Array(arguments.length -  1);
while (G__25032__i < G__25032__a.length) {G__25032__a[G__25032__i] = arguments[G__25032__i + 1]; ++G__25032__i;}
G__25031 = new cljs.core.IndexedSeq(G__25032__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25031);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__25035 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25035) : cljs.core.atom.call(null,G__25035));
})();
return ((function (mem){
return (function() { 
var G__25037__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__25036 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25036) : cljs.core.deref.call(null,G__25036));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__25037 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25038__i = 0, G__25038__a = new Array(arguments.length -  0);
while (G__25038__i < G__25038__a.length) {G__25038__a[G__25038__i] = arguments[G__25038__i + 0]; ++G__25038__i;}
  args = new cljs.core.IndexedSeq(G__25038__a,0);
} 
return G__25037__delegate.call(this,args);};
G__25037.cljs$lang$maxFixedArity = 0;
G__25037.cljs$lang$applyTo = (function (arglist__25039){
var args = cljs.core.seq(arglist__25039);
return G__25037__delegate(args);
});
G__25037.cljs$core$IFn$_invoke$arity$variadic = G__25037__delegate;
return G__25037;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__25041 = ret;
f = G__25041;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__25042__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__25042 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25043__i = 0, G__25043__a = new Array(arguments.length -  1);
while (G__25043__i < G__25043__a.length) {G__25043__a[G__25043__i] = arguments[G__25043__i + 1]; ++G__25043__i;}
  args = new cljs.core.IndexedSeq(G__25043__a,0);
} 
return G__25042__delegate.call(this,f,args);};
G__25042.cljs$lang$maxFixedArity = 1;
G__25042.cljs$lang$applyTo = (function (arglist__25044){
var f = cljs.core.first(arglist__25044);
var args = cljs.core.rest(arglist__25044);
return G__25042__delegate(f,args);
});
G__25042.cljs$core$IFn$_invoke$arity$variadic = G__25042__delegate;
return G__25042;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__25045 = null;
if (arguments.length > 1) {
var G__25046__i = 0, G__25046__a = new Array(arguments.length -  1);
while (G__25046__i < G__25046__a.length) {G__25046__a[G__25046__i] = arguments[G__25046__i + 1]; ++G__25046__i;}
G__25045 = new cljs.core.IndexedSeq(G__25046__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__25045);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__25049 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25049) : Math.floor.call(null,G__25049));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__25051 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25051) : f.call(null,G__25051));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$12,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$13,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$14,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__25053 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25053) : cljs.core.atom.call(null,G__25053));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25054__i = 0, G__25054__a = new Array(arguments.length -  1);
while (G__25054__i < G__25054__a.length) {G__25054__a[G__25054__i] = arguments[G__25054__i + 1]; ++G__25054__i;}
  args = new cljs.core.IndexedSeq(G__25054__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__25055){
var f = cljs.core.first(arglist__25055);
var args = cljs.core.rest(arglist__25055);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__25120 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25120) : cljs.core.deref.call(null,G__25120));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__5890__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
var and__5878__auto__ = cljs.core.vector_QMARK_(parent);
if(and__5878__auto__){
var and__5878__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__5878__auto____$1){
var and__5878__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__5878__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__25145 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__25143 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__25143) : child.call(null,G__25143));
})(),(function (){var G__25144 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__25144) : parent.call(null,G__25144));
})());
var G__25146 = (i + (1));
ret = G__25145;
i = G__25146;
continue;
}
break;
}
} else {
return and__5878__auto____$2;
}
} else {
return and__5878__auto____$1;
}
} else {
return and__5878__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__25150 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25150) : cljs.core.deref.call(null,G__25150));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__25154 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25154) : cljs.core.deref.call(null,G__25154));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__25158 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25158) : cljs.core.deref.call(null,G__25158));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__25167 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__25167) : targets.call(null,G__25167));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__25168 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__25168) : sources.call(null,G__25168));
})()));
});})(tp,td,ta))
;
var or__5890__auto__ = ((cljs.core.contains_QMARK_((function (){var G__25172 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__25172) : tp.call(null,G__25172));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__25173 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__25173) : ta.call(null,G__25173));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__25174 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__25174) : ta.call(null,G__25174));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$12,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$14,tf(cljs.core.constant$keyword$14.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$13,tf(cljs.core.constant$keyword$13.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__25181 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25181) : parentMap.call(null,G__25181));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__25182 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25182) : parentMap.call(null,G__25182));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__25175_SHARP_){
return cljs.core.cons(cljs.core.first(p1__25175_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__25175_SHARP_),cljs.core.second(p1__25175_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__25183 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25183) : parentMap.call(null,G__25183));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__25176_SHARP_,p2__25177_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__25176_SHARP_,p2__25177_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__25186 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25186) : cljs.core.deref.call(null,G__25186));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__25187 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25187) : cljs.core.deref.call(null,G__25187));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__25203 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25203) : cljs.core.deref.call(null,G__25203));
})().call(null,x);
var or__5890__auto__ = (cljs.core.truth_((function (){var and__5878__auto__ = xprefs;
if(cljs.core.truth_(and__5878__auto__)){
var G__25205 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__25205) : xprefs.call(null,G__25205));
} else {
return and__5878__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__25206 = cljs.core.rest(ps);
ps = G__25206;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__5890__auto____$1)){
return or__5890__auto____$1;
} else {
var or__5890__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__25207 = cljs.core.rest(ps);
ps = G__25207;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__5890__auto____$2)){
return or__5890__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__5890__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__5890__auto__)){
return or__5890__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__25221){
var vec__25222 = p__25221;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25222,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25222,(1),null);
var e = vec__25222;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__25223 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25223) : cljs.core.deref.call(null,G__25223));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__5890__auto__ = (be == null);
if(or__5890__auto__){
return or__5890__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__25224 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25224) : cljs.core.deref.call(null,G__25224));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__25225 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25225) : cljs.core.deref.call(null,G__25225));
})(),(function (){var G__25226 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25226) : cljs.core.deref.call(null,G__25226));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj25228 = {};
return obj25228;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__5878__auto__ = mf;
if(and__5878__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__5878__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__6534__auto__ = (((mf == null))?null:mf);
return (function (){var or__5890__auto__ = (cljs.core._reset[(function (){var G__25232 = x__6534__auto__;
return goog.typeOf(G__25232);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._reset["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__5878__auto__ = mf;
if(and__5878__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__5878__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__6534__auto__ = (((mf == null))?null:mf);
return (function (){var or__5890__auto__ = (cljs.core._add_method[(function (){var G__25236 = x__6534__auto__;
return goog.typeOf(G__25236);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._add_method["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__5878__auto__ = mf;
if(and__5878__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__5878__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__6534__auto__ = (((mf == null))?null:mf);
return (function (){var or__5890__auto__ = (cljs.core._remove_method[(function (){var G__25240 = x__6534__auto__;
return goog.typeOf(G__25240);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._remove_method["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__5878__auto__ = mf;
if(and__5878__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__5878__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__6534__auto__ = (((mf == null))?null:mf);
return (function (){var or__5890__auto__ = (cljs.core._prefer_method[(function (){var G__25244 = x__6534__auto__;
return goog.typeOf(G__25244);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__5878__auto__ = mf;
if(and__5878__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__5878__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__6534__auto__ = (((mf == null))?null:mf);
return (function (){var or__5890__auto__ = (cljs.core._get_method[(function (){var G__25248 = x__6534__auto__;
return goog.typeOf(G__25248);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._get_method["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__5878__auto__ = mf;
if(and__5878__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__5878__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__6534__auto__ = (((mf == null))?null:mf);
return (function (){var or__5890__auto__ = (cljs.core._methods[(function (){var G__25252 = x__6534__auto__;
return goog.typeOf(G__25252);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._methods["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__5878__auto__ = mf;
if(and__5878__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__5878__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__6534__auto__ = (((mf == null))?null:mf);
return (function (){var or__5890__auto__ = (cljs.core._prefers[(function (){var G__25256 = x__6534__auto__;
return goog.typeOf(G__25256);
})()]);
if(or__5890__auto__){
return or__5890__auto__;
} else {
var or__5890__auto____$1 = (cljs.core._prefers["_"]);
if(or__5890__auto____$1){
return or__5890__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25258 = this$__$1;
return goog.getUid(G__25258);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__25259 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25259) : cljs.core.deref.call(null,G__25259));
})(),(function (){var G__25260 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25260) : cljs.core.deref.call(null,G__25260));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4404__auto__ = (function (){var G__25261 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25261) : cljs.core.deref.call(null,G__25261));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4404__auto__)){
var target_fn = temp__4404__auto__;
return target_fn;
} else {
var temp__4404__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4404__auto____$1)){
var target_fn = temp__4404__auto____$1;
return target_fn;
} else {
return (function (){var G__25262 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25262) : cljs.core.deref.call(null,G__25262));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__25263 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25263) : cljs.core.deref.call(null,G__25263));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__25264 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25264) : cljs.core.deref.call(null,G__25264));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__26105 = null;
var G__26105__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__26105__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25265 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__25265) : self__.dispatch_fn.call(null,G__25265));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25266 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__25266) : target_fn.call(null,G__25266));
});
var G__26105__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25267 = a;
var G__25268 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__25267,G__25268) : self__.dispatch_fn.call(null,G__25267,G__25268));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25269 = a;
var G__25270 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__25269,G__25270) : target_fn.call(null,G__25269,G__25270));
});
var G__26105__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25271 = a;
var G__25272 = b;
var G__25273 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__25271,G__25272,G__25273) : self__.dispatch_fn.call(null,G__25271,G__25272,G__25273));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25274 = a;
var G__25275 = b;
var G__25276 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__25274,G__25275,G__25276) : target_fn.call(null,G__25274,G__25275,G__25276));
});
var G__26105__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25277 = a;
var G__25278 = b;
var G__25279 = c;
var G__25280 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__25277,G__25278,G__25279,G__25280) : self__.dispatch_fn.call(null,G__25277,G__25278,G__25279,G__25280));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25281 = a;
var G__25282 = b;
var G__25283 = c;
var G__25284 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__25281,G__25282,G__25283,G__25284) : target_fn.call(null,G__25281,G__25282,G__25283,G__25284));
});
var G__26105__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25285 = a;
var G__25286 = b;
var G__25287 = c;
var G__25288 = d;
var G__25289 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__25285,G__25286,G__25287,G__25288,G__25289) : self__.dispatch_fn.call(null,G__25285,G__25286,G__25287,G__25288,G__25289));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25290 = a;
var G__25291 = b;
var G__25292 = c;
var G__25293 = d;
var G__25294 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__25290,G__25291,G__25292,G__25293,G__25294) : target_fn.call(null,G__25290,G__25291,G__25292,G__25293,G__25294));
});
var G__26105__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25295 = a;
var G__25296 = b;
var G__25297 = c;
var G__25298 = d;
var G__25299 = e;
var G__25300 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__25295,G__25296,G__25297,G__25298,G__25299,G__25300) : self__.dispatch_fn.call(null,G__25295,G__25296,G__25297,G__25298,G__25299,G__25300));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25301 = a;
var G__25302 = b;
var G__25303 = c;
var G__25304 = d;
var G__25305 = e;
var G__25306 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__25301,G__25302,G__25303,G__25304,G__25305,G__25306) : target_fn.call(null,G__25301,G__25302,G__25303,G__25304,G__25305,G__25306));
});
var G__26105__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25307 = a;
var G__25308 = b;
var G__25309 = c;
var G__25310 = d;
var G__25311 = e;
var G__25312 = f;
var G__25313 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313) : self__.dispatch_fn.call(null,G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25314 = a;
var G__25315 = b;
var G__25316 = c;
var G__25317 = d;
var G__25318 = e;
var G__25319 = f;
var G__25320 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__25314,G__25315,G__25316,G__25317,G__25318,G__25319,G__25320) : target_fn.call(null,G__25314,G__25315,G__25316,G__25317,G__25318,G__25319,G__25320));
});
var G__26105__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25321 = a;
var G__25322 = b;
var G__25323 = c;
var G__25324 = d;
var G__25325 = e;
var G__25326 = f;
var G__25327 = g;
var G__25328 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__25321,G__25322,G__25323,G__25324,G__25325,G__25326,G__25327,G__25328) : self__.dispatch_fn.call(null,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326,G__25327,G__25328));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25329 = a;
var G__25330 = b;
var G__25331 = c;
var G__25332 = d;
var G__25333 = e;
var G__25334 = f;
var G__25335 = g;
var G__25336 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336) : target_fn.call(null,G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336));
});
var G__26105__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25337 = a;
var G__25338 = b;
var G__25339 = c;
var G__25340 = d;
var G__25341 = e;
var G__25342 = f;
var G__25343 = g;
var G__25344 = h;
var G__25345 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__25337,G__25338,G__25339,G__25340,G__25341,G__25342,G__25343,G__25344,G__25345) : self__.dispatch_fn.call(null,G__25337,G__25338,G__25339,G__25340,G__25341,G__25342,G__25343,G__25344,G__25345));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25346 = a;
var G__25347 = b;
var G__25348 = c;
var G__25349 = d;
var G__25350 = e;
var G__25351 = f;
var G__25352 = g;
var G__25353 = h;
var G__25354 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__25346,G__25347,G__25348,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354) : target_fn.call(null,G__25346,G__25347,G__25348,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354));
});
var G__26105__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25355 = a;
var G__25356 = b;
var G__25357 = c;
var G__25358 = d;
var G__25359 = e;
var G__25360 = f;
var G__25361 = g;
var G__25362 = h;
var G__25363 = i;
var G__25364 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__25355,G__25356,G__25357,G__25358,G__25359,G__25360,G__25361,G__25362,G__25363,G__25364) : self__.dispatch_fn.call(null,G__25355,G__25356,G__25357,G__25358,G__25359,G__25360,G__25361,G__25362,G__25363,G__25364));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25365 = a;
var G__25366 = b;
var G__25367 = c;
var G__25368 = d;
var G__25369 = e;
var G__25370 = f;
var G__25371 = g;
var G__25372 = h;
var G__25373 = i;
var G__25374 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__25365,G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374) : target_fn.call(null,G__25365,G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374));
});
var G__26105__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25375 = a;
var G__25376 = b;
var G__25377 = c;
var G__25378 = d;
var G__25379 = e;
var G__25380 = f;
var G__25381 = g;
var G__25382 = h;
var G__25383 = i;
var G__25384 = j;
var G__25385 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__25375,G__25376,G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384,G__25385) : self__.dispatch_fn.call(null,G__25375,G__25376,G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384,G__25385));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25386 = a;
var G__25387 = b;
var G__25388 = c;
var G__25389 = d;
var G__25390 = e;
var G__25391 = f;
var G__25392 = g;
var G__25393 = h;
var G__25394 = i;
var G__25395 = j;
var G__25396 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394,G__25395,G__25396) : target_fn.call(null,G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394,G__25395,G__25396));
});
var G__26105__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25397 = a;
var G__25398 = b;
var G__25399 = c;
var G__25400 = d;
var G__25401 = e;
var G__25402 = f;
var G__25403 = g;
var G__25404 = h;
var G__25405 = i;
var G__25406 = j;
var G__25407 = k;
var G__25408 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404,G__25405,G__25406,G__25407,G__25408) : self__.dispatch_fn.call(null,G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404,G__25405,G__25406,G__25407,G__25408));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25409 = a;
var G__25410 = b;
var G__25411 = c;
var G__25412 = d;
var G__25413 = e;
var G__25414 = f;
var G__25415 = g;
var G__25416 = h;
var G__25417 = i;
var G__25418 = j;
var G__25419 = k;
var G__25420 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418,G__25419,G__25420) : target_fn.call(null,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418,G__25419,G__25420));
});
var G__26105__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25421 = a;
var G__25422 = b;
var G__25423 = c;
var G__25424 = d;
var G__25425 = e;
var G__25426 = f;
var G__25427 = g;
var G__25428 = h;
var G__25429 = i;
var G__25430 = j;
var G__25431 = k;
var G__25432 = l;
var G__25433 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433) : self__.dispatch_fn.call(null,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25434 = a;
var G__25435 = b;
var G__25436 = c;
var G__25437 = d;
var G__25438 = e;
var G__25439 = f;
var G__25440 = g;
var G__25441 = h;
var G__25442 = i;
var G__25443 = j;
var G__25444 = k;
var G__25445 = l;
var G__25446 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__25434,G__25435,G__25436,G__25437,G__25438,G__25439,G__25440,G__25441,G__25442,G__25443,G__25444,G__25445,G__25446) : target_fn.call(null,G__25434,G__25435,G__25436,G__25437,G__25438,G__25439,G__25440,G__25441,G__25442,G__25443,G__25444,G__25445,G__25446));
});
var G__26105__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25447 = a;
var G__25448 = b;
var G__25449 = c;
var G__25450 = d;
var G__25451 = e;
var G__25452 = f;
var G__25453 = g;
var G__25454 = h;
var G__25455 = i;
var G__25456 = j;
var G__25457 = k;
var G__25458 = l;
var G__25459 = m;
var G__25460 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__25447,G__25448,G__25449,G__25450,G__25451,G__25452,G__25453,G__25454,G__25455,G__25456,G__25457,G__25458,G__25459,G__25460) : self__.dispatch_fn.call(null,G__25447,G__25448,G__25449,G__25450,G__25451,G__25452,G__25453,G__25454,G__25455,G__25456,G__25457,G__25458,G__25459,G__25460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25461 = a;
var G__25462 = b;
var G__25463 = c;
var G__25464 = d;
var G__25465 = e;
var G__25466 = f;
var G__25467 = g;
var G__25468 = h;
var G__25469 = i;
var G__25470 = j;
var G__25471 = k;
var G__25472 = l;
var G__25473 = m;
var G__25474 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__25461,G__25462,G__25463,G__25464,G__25465,G__25466,G__25467,G__25468,G__25469,G__25470,G__25471,G__25472,G__25473,G__25474) : target_fn.call(null,G__25461,G__25462,G__25463,G__25464,G__25465,G__25466,G__25467,G__25468,G__25469,G__25470,G__25471,G__25472,G__25473,G__25474));
});
var G__26105__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25475 = a;
var G__25476 = b;
var G__25477 = c;
var G__25478 = d;
var G__25479 = e;
var G__25480 = f;
var G__25481 = g;
var G__25482 = h;
var G__25483 = i;
var G__25484 = j;
var G__25485 = k;
var G__25486 = l;
var G__25487 = m;
var G__25488 = n;
var G__25489 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__25475,G__25476,G__25477,G__25478,G__25479,G__25480,G__25481,G__25482,G__25483,G__25484,G__25485,G__25486,G__25487,G__25488,G__25489) : self__.dispatch_fn.call(null,G__25475,G__25476,G__25477,G__25478,G__25479,G__25480,G__25481,G__25482,G__25483,G__25484,G__25485,G__25486,G__25487,G__25488,G__25489));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25490 = a;
var G__25491 = b;
var G__25492 = c;
var G__25493 = d;
var G__25494 = e;
var G__25495 = f;
var G__25496 = g;
var G__25497 = h;
var G__25498 = i;
var G__25499 = j;
var G__25500 = k;
var G__25501 = l;
var G__25502 = m;
var G__25503 = n;
var G__25504 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25490,G__25491,G__25492,G__25493,G__25494,G__25495,G__25496,G__25497,G__25498,G__25499,G__25500,G__25501,G__25502,G__25503,G__25504) : target_fn.call(null,G__25490,G__25491,G__25492,G__25493,G__25494,G__25495,G__25496,G__25497,G__25498,G__25499,G__25500,G__25501,G__25502,G__25503,G__25504));
});
var G__26105__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25505 = a;
var G__25506 = b;
var G__25507 = c;
var G__25508 = d;
var G__25509 = e;
var G__25510 = f;
var G__25511 = g;
var G__25512 = h;
var G__25513 = i;
var G__25514 = j;
var G__25515 = k;
var G__25516 = l;
var G__25517 = m;
var G__25518 = n;
var G__25519 = o;
var G__25520 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25505,G__25506,G__25507,G__25508,G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518,G__25519,G__25520) : self__.dispatch_fn.call(null,G__25505,G__25506,G__25507,G__25508,G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518,G__25519,G__25520));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25521 = a;
var G__25522 = b;
var G__25523 = c;
var G__25524 = d;
var G__25525 = e;
var G__25526 = f;
var G__25527 = g;
var G__25528 = h;
var G__25529 = i;
var G__25530 = j;
var G__25531 = k;
var G__25532 = l;
var G__25533 = m;
var G__25534 = n;
var G__25535 = o;
var G__25536 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25521,G__25522,G__25523,G__25524,G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534,G__25535,G__25536) : target_fn.call(null,G__25521,G__25522,G__25523,G__25524,G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534,G__25535,G__25536));
});
var G__26105__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25537 = a;
var G__25538 = b;
var G__25539 = c;
var G__25540 = d;
var G__25541 = e;
var G__25542 = f;
var G__25543 = g;
var G__25544 = h;
var G__25545 = i;
var G__25546 = j;
var G__25547 = k;
var G__25548 = l;
var G__25549 = m;
var G__25550 = n;
var G__25551 = o;
var G__25552 = p;
var G__25553 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544,G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553) : self__.dispatch_fn.call(null,G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544,G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25554 = a;
var G__25555 = b;
var G__25556 = c;
var G__25557 = d;
var G__25558 = e;
var G__25559 = f;
var G__25560 = g;
var G__25561 = h;
var G__25562 = i;
var G__25563 = j;
var G__25564 = k;
var G__25565 = l;
var G__25566 = m;
var G__25567 = n;
var G__25568 = o;
var G__25569 = p;
var G__25570 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25554,G__25555,G__25556,G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570) : target_fn.call(null,G__25554,G__25555,G__25556,G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570));
});
var G__26105__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25571 = a;
var G__25572 = b;
var G__25573 = c;
var G__25574 = d;
var G__25575 = e;
var G__25576 = f;
var G__25577 = g;
var G__25578 = h;
var G__25579 = i;
var G__25580 = j;
var G__25581 = k;
var G__25582 = l;
var G__25583 = m;
var G__25584 = n;
var G__25585 = o;
var G__25586 = p;
var G__25587 = q;
var G__25588 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__25571,G__25572,G__25573,G__25574,G__25575,G__25576,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588) : self__.dispatch_fn.call(null,G__25571,G__25572,G__25573,G__25574,G__25575,G__25576,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25589 = a;
var G__25590 = b;
var G__25591 = c;
var G__25592 = d;
var G__25593 = e;
var G__25594 = f;
var G__25595 = g;
var G__25596 = h;
var G__25597 = i;
var G__25598 = j;
var G__25599 = k;
var G__25600 = l;
var G__25601 = m;
var G__25602 = n;
var G__25603 = o;
var G__25604 = p;
var G__25605 = q;
var G__25606 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__25589,G__25590,G__25591,G__25592,G__25593,G__25594,G__25595,G__25596,G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603,G__25604,G__25605,G__25606) : target_fn.call(null,G__25589,G__25590,G__25591,G__25592,G__25593,G__25594,G__25595,G__25596,G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603,G__25604,G__25605,G__25606));
});
var G__26105__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25607 = a;
var G__25608 = b;
var G__25609 = c;
var G__25610 = d;
var G__25611 = e;
var G__25612 = f;
var G__25613 = g;
var G__25614 = h;
var G__25615 = i;
var G__25616 = j;
var G__25617 = k;
var G__25618 = l;
var G__25619 = m;
var G__25620 = n;
var G__25621 = o;
var G__25622 = p;
var G__25623 = q;
var G__25624 = r;
var G__25625 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__25607,G__25608,G__25609,G__25610,G__25611,G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625) : self__.dispatch_fn.call(null,G__25607,G__25608,G__25609,G__25610,G__25611,G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25626 = a;
var G__25627 = b;
var G__25628 = c;
var G__25629 = d;
var G__25630 = e;
var G__25631 = f;
var G__25632 = g;
var G__25633 = h;
var G__25634 = i;
var G__25635 = j;
var G__25636 = k;
var G__25637 = l;
var G__25638 = m;
var G__25639 = n;
var G__25640 = o;
var G__25641 = p;
var G__25642 = q;
var G__25643 = r;
var G__25644 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__25626,G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635,G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644) : target_fn.call(null,G__25626,G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635,G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644));
});
var G__26105__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25645 = a;
var G__25646 = b;
var G__25647 = c;
var G__25648 = d;
var G__25649 = e;
var G__25650 = f;
var G__25651 = g;
var G__25652 = h;
var G__25653 = i;
var G__25654 = j;
var G__25655 = k;
var G__25656 = l;
var G__25657 = m;
var G__25658 = n;
var G__25659 = o;
var G__25660 = p;
var G__25661 = q;
var G__25662 = r;
var G__25663 = s;
var G__25664 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__25645,G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654,G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664) : self__.dispatch_fn.call(null,G__25645,G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654,G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25665 = a;
var G__25666 = b;
var G__25667 = c;
var G__25668 = d;
var G__25669 = e;
var G__25670 = f;
var G__25671 = g;
var G__25672 = h;
var G__25673 = i;
var G__25674 = j;
var G__25675 = k;
var G__25676 = l;
var G__25677 = m;
var G__25678 = n;
var G__25679 = o;
var G__25680 = p;
var G__25681 = q;
var G__25682 = r;
var G__25683 = s;
var G__25684 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__25665,G__25666,G__25667,G__25668,G__25669,G__25670,G__25671,G__25672,G__25673,G__25674,G__25675,G__25676,G__25677,G__25678,G__25679,G__25680,G__25681,G__25682,G__25683,G__25684) : target_fn.call(null,G__25665,G__25666,G__25667,G__25668,G__25669,G__25670,G__25671,G__25672,G__25673,G__25674,G__25675,G__25676,G__25677,G__25678,G__25679,G__25680,G__25681,G__25682,G__25683,G__25684));
});
var G__26105__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__26105 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__26105__1.call(this,self__);
case 2:
return G__26105__2.call(this,self__,a);
case 3:
return G__26105__3.call(this,self__,a,b);
case 4:
return G__26105__4.call(this,self__,a,b,c);
case 5:
return G__26105__5.call(this,self__,a,b,c,d);
case 6:
return G__26105__6.call(this,self__,a,b,c,d,e);
case 7:
return G__26105__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__26105__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__26105__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__26105__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__26105__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__26105__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__26105__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__26105__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__26105__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__26105__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__26105__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__26105__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__26105__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__26105__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__26105__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__26105__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26105.cljs$core$IFn$_invoke$arity$1 = G__26105__1;
G__26105.cljs$core$IFn$_invoke$arity$2 = G__26105__2;
G__26105.cljs$core$IFn$_invoke$arity$3 = G__26105__3;
G__26105.cljs$core$IFn$_invoke$arity$4 = G__26105__4;
G__26105.cljs$core$IFn$_invoke$arity$5 = G__26105__5;
G__26105.cljs$core$IFn$_invoke$arity$6 = G__26105__6;
G__26105.cljs$core$IFn$_invoke$arity$7 = G__26105__7;
G__26105.cljs$core$IFn$_invoke$arity$8 = G__26105__8;
G__26105.cljs$core$IFn$_invoke$arity$9 = G__26105__9;
G__26105.cljs$core$IFn$_invoke$arity$10 = G__26105__10;
G__26105.cljs$core$IFn$_invoke$arity$11 = G__26105__11;
G__26105.cljs$core$IFn$_invoke$arity$12 = G__26105__12;
G__26105.cljs$core$IFn$_invoke$arity$13 = G__26105__13;
G__26105.cljs$core$IFn$_invoke$arity$14 = G__26105__14;
G__26105.cljs$core$IFn$_invoke$arity$15 = G__26105__15;
G__26105.cljs$core$IFn$_invoke$arity$16 = G__26105__16;
G__26105.cljs$core$IFn$_invoke$arity$17 = G__26105__17;
G__26105.cljs$core$IFn$_invoke$arity$18 = G__26105__18;
G__26105.cljs$core$IFn$_invoke$arity$19 = G__26105__19;
G__26105.cljs$core$IFn$_invoke$arity$20 = G__26105__20;
G__26105.cljs$core$IFn$_invoke$arity$21 = G__26105__21;
G__26105.cljs$core$IFn$_invoke$arity$22 = G__26105__22;
return G__26105;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args25257){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25257)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25685 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__25685) : self__.dispatch_fn.call(null,G__25685));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25686 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__25686) : target_fn.call(null,G__25686));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25687 = a;
var G__25688 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__25687,G__25688) : self__.dispatch_fn.call(null,G__25687,G__25688));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25689 = a;
var G__25690 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__25689,G__25690) : target_fn.call(null,G__25689,G__25690));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25691 = a;
var G__25692 = b;
var G__25693 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__25691,G__25692,G__25693) : self__.dispatch_fn.call(null,G__25691,G__25692,G__25693));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25694 = a;
var G__25695 = b;
var G__25696 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__25694,G__25695,G__25696) : target_fn.call(null,G__25694,G__25695,G__25696));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25697 = a;
var G__25698 = b;
var G__25699 = c;
var G__25700 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__25697,G__25698,G__25699,G__25700) : self__.dispatch_fn.call(null,G__25697,G__25698,G__25699,G__25700));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25701 = a;
var G__25702 = b;
var G__25703 = c;
var G__25704 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__25701,G__25702,G__25703,G__25704) : target_fn.call(null,G__25701,G__25702,G__25703,G__25704));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25705 = a;
var G__25706 = b;
var G__25707 = c;
var G__25708 = d;
var G__25709 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__25705,G__25706,G__25707,G__25708,G__25709) : self__.dispatch_fn.call(null,G__25705,G__25706,G__25707,G__25708,G__25709));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25710 = a;
var G__25711 = b;
var G__25712 = c;
var G__25713 = d;
var G__25714 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__25710,G__25711,G__25712,G__25713,G__25714) : target_fn.call(null,G__25710,G__25711,G__25712,G__25713,G__25714));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25715 = a;
var G__25716 = b;
var G__25717 = c;
var G__25718 = d;
var G__25719 = e;
var G__25720 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__25715,G__25716,G__25717,G__25718,G__25719,G__25720) : self__.dispatch_fn.call(null,G__25715,G__25716,G__25717,G__25718,G__25719,G__25720));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25721 = a;
var G__25722 = b;
var G__25723 = c;
var G__25724 = d;
var G__25725 = e;
var G__25726 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__25721,G__25722,G__25723,G__25724,G__25725,G__25726) : target_fn.call(null,G__25721,G__25722,G__25723,G__25724,G__25725,G__25726));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25727 = a;
var G__25728 = b;
var G__25729 = c;
var G__25730 = d;
var G__25731 = e;
var G__25732 = f;
var G__25733 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__25727,G__25728,G__25729,G__25730,G__25731,G__25732,G__25733) : self__.dispatch_fn.call(null,G__25727,G__25728,G__25729,G__25730,G__25731,G__25732,G__25733));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25734 = a;
var G__25735 = b;
var G__25736 = c;
var G__25737 = d;
var G__25738 = e;
var G__25739 = f;
var G__25740 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__25734,G__25735,G__25736,G__25737,G__25738,G__25739,G__25740) : target_fn.call(null,G__25734,G__25735,G__25736,G__25737,G__25738,G__25739,G__25740));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25741 = a;
var G__25742 = b;
var G__25743 = c;
var G__25744 = d;
var G__25745 = e;
var G__25746 = f;
var G__25747 = g;
var G__25748 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__25741,G__25742,G__25743,G__25744,G__25745,G__25746,G__25747,G__25748) : self__.dispatch_fn.call(null,G__25741,G__25742,G__25743,G__25744,G__25745,G__25746,G__25747,G__25748));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25749 = a;
var G__25750 = b;
var G__25751 = c;
var G__25752 = d;
var G__25753 = e;
var G__25754 = f;
var G__25755 = g;
var G__25756 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__25749,G__25750,G__25751,G__25752,G__25753,G__25754,G__25755,G__25756) : target_fn.call(null,G__25749,G__25750,G__25751,G__25752,G__25753,G__25754,G__25755,G__25756));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25757 = a;
var G__25758 = b;
var G__25759 = c;
var G__25760 = d;
var G__25761 = e;
var G__25762 = f;
var G__25763 = g;
var G__25764 = h;
var G__25765 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__25757,G__25758,G__25759,G__25760,G__25761,G__25762,G__25763,G__25764,G__25765) : self__.dispatch_fn.call(null,G__25757,G__25758,G__25759,G__25760,G__25761,G__25762,G__25763,G__25764,G__25765));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25766 = a;
var G__25767 = b;
var G__25768 = c;
var G__25769 = d;
var G__25770 = e;
var G__25771 = f;
var G__25772 = g;
var G__25773 = h;
var G__25774 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__25766,G__25767,G__25768,G__25769,G__25770,G__25771,G__25772,G__25773,G__25774) : target_fn.call(null,G__25766,G__25767,G__25768,G__25769,G__25770,G__25771,G__25772,G__25773,G__25774));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25775 = a;
var G__25776 = b;
var G__25777 = c;
var G__25778 = d;
var G__25779 = e;
var G__25780 = f;
var G__25781 = g;
var G__25782 = h;
var G__25783 = i;
var G__25784 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__25775,G__25776,G__25777,G__25778,G__25779,G__25780,G__25781,G__25782,G__25783,G__25784) : self__.dispatch_fn.call(null,G__25775,G__25776,G__25777,G__25778,G__25779,G__25780,G__25781,G__25782,G__25783,G__25784));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25785 = a;
var G__25786 = b;
var G__25787 = c;
var G__25788 = d;
var G__25789 = e;
var G__25790 = f;
var G__25791 = g;
var G__25792 = h;
var G__25793 = i;
var G__25794 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__25785,G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794) : target_fn.call(null,G__25785,G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25795 = a;
var G__25796 = b;
var G__25797 = c;
var G__25798 = d;
var G__25799 = e;
var G__25800 = f;
var G__25801 = g;
var G__25802 = h;
var G__25803 = i;
var G__25804 = j;
var G__25805 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802,G__25803,G__25804,G__25805) : self__.dispatch_fn.call(null,G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802,G__25803,G__25804,G__25805));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25806 = a;
var G__25807 = b;
var G__25808 = c;
var G__25809 = d;
var G__25810 = e;
var G__25811 = f;
var G__25812 = g;
var G__25813 = h;
var G__25814 = i;
var G__25815 = j;
var G__25816 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__25806,G__25807,G__25808,G__25809,G__25810,G__25811,G__25812,G__25813,G__25814,G__25815,G__25816) : target_fn.call(null,G__25806,G__25807,G__25808,G__25809,G__25810,G__25811,G__25812,G__25813,G__25814,G__25815,G__25816));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25817 = a;
var G__25818 = b;
var G__25819 = c;
var G__25820 = d;
var G__25821 = e;
var G__25822 = f;
var G__25823 = g;
var G__25824 = h;
var G__25825 = i;
var G__25826 = j;
var G__25827 = k;
var G__25828 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823,G__25824,G__25825,G__25826,G__25827,G__25828) : self__.dispatch_fn.call(null,G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823,G__25824,G__25825,G__25826,G__25827,G__25828));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25829 = a;
var G__25830 = b;
var G__25831 = c;
var G__25832 = d;
var G__25833 = e;
var G__25834 = f;
var G__25835 = g;
var G__25836 = h;
var G__25837 = i;
var G__25838 = j;
var G__25839 = k;
var G__25840 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835,G__25836,G__25837,G__25838,G__25839,G__25840) : target_fn.call(null,G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835,G__25836,G__25837,G__25838,G__25839,G__25840));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25841 = a;
var G__25842 = b;
var G__25843 = c;
var G__25844 = d;
var G__25845 = e;
var G__25846 = f;
var G__25847 = g;
var G__25848 = h;
var G__25849 = i;
var G__25850 = j;
var G__25851 = k;
var G__25852 = l;
var G__25853 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__25841,G__25842,G__25843,G__25844,G__25845,G__25846,G__25847,G__25848,G__25849,G__25850,G__25851,G__25852,G__25853) : self__.dispatch_fn.call(null,G__25841,G__25842,G__25843,G__25844,G__25845,G__25846,G__25847,G__25848,G__25849,G__25850,G__25851,G__25852,G__25853));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25854 = a;
var G__25855 = b;
var G__25856 = c;
var G__25857 = d;
var G__25858 = e;
var G__25859 = f;
var G__25860 = g;
var G__25861 = h;
var G__25862 = i;
var G__25863 = j;
var G__25864 = k;
var G__25865 = l;
var G__25866 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860,G__25861,G__25862,G__25863,G__25864,G__25865,G__25866) : target_fn.call(null,G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860,G__25861,G__25862,G__25863,G__25864,G__25865,G__25866));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25867 = a;
var G__25868 = b;
var G__25869 = c;
var G__25870 = d;
var G__25871 = e;
var G__25872 = f;
var G__25873 = g;
var G__25874 = h;
var G__25875 = i;
var G__25876 = j;
var G__25877 = k;
var G__25878 = l;
var G__25879 = m;
var G__25880 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__25867,G__25868,G__25869,G__25870,G__25871,G__25872,G__25873,G__25874,G__25875,G__25876,G__25877,G__25878,G__25879,G__25880) : self__.dispatch_fn.call(null,G__25867,G__25868,G__25869,G__25870,G__25871,G__25872,G__25873,G__25874,G__25875,G__25876,G__25877,G__25878,G__25879,G__25880));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25881 = a;
var G__25882 = b;
var G__25883 = c;
var G__25884 = d;
var G__25885 = e;
var G__25886 = f;
var G__25887 = g;
var G__25888 = h;
var G__25889 = i;
var G__25890 = j;
var G__25891 = k;
var G__25892 = l;
var G__25893 = m;
var G__25894 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__25881,G__25882,G__25883,G__25884,G__25885,G__25886,G__25887,G__25888,G__25889,G__25890,G__25891,G__25892,G__25893,G__25894) : target_fn.call(null,G__25881,G__25882,G__25883,G__25884,G__25885,G__25886,G__25887,G__25888,G__25889,G__25890,G__25891,G__25892,G__25893,G__25894));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25895 = a;
var G__25896 = b;
var G__25897 = c;
var G__25898 = d;
var G__25899 = e;
var G__25900 = f;
var G__25901 = g;
var G__25902 = h;
var G__25903 = i;
var G__25904 = j;
var G__25905 = k;
var G__25906 = l;
var G__25907 = m;
var G__25908 = n;
var G__25909 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__25895,G__25896,G__25897,G__25898,G__25899,G__25900,G__25901,G__25902,G__25903,G__25904,G__25905,G__25906,G__25907,G__25908,G__25909) : self__.dispatch_fn.call(null,G__25895,G__25896,G__25897,G__25898,G__25899,G__25900,G__25901,G__25902,G__25903,G__25904,G__25905,G__25906,G__25907,G__25908,G__25909));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25910 = a;
var G__25911 = b;
var G__25912 = c;
var G__25913 = d;
var G__25914 = e;
var G__25915 = f;
var G__25916 = g;
var G__25917 = h;
var G__25918 = i;
var G__25919 = j;
var G__25920 = k;
var G__25921 = l;
var G__25922 = m;
var G__25923 = n;
var G__25924 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25910,G__25911,G__25912,G__25913,G__25914,G__25915,G__25916,G__25917,G__25918,G__25919,G__25920,G__25921,G__25922,G__25923,G__25924) : target_fn.call(null,G__25910,G__25911,G__25912,G__25913,G__25914,G__25915,G__25916,G__25917,G__25918,G__25919,G__25920,G__25921,G__25922,G__25923,G__25924));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25925 = a;
var G__25926 = b;
var G__25927 = c;
var G__25928 = d;
var G__25929 = e;
var G__25930 = f;
var G__25931 = g;
var G__25932 = h;
var G__25933 = i;
var G__25934 = j;
var G__25935 = k;
var G__25936 = l;
var G__25937 = m;
var G__25938 = n;
var G__25939 = o;
var G__25940 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25925,G__25926,G__25927,G__25928,G__25929,G__25930,G__25931,G__25932,G__25933,G__25934,G__25935,G__25936,G__25937,G__25938,G__25939,G__25940) : self__.dispatch_fn.call(null,G__25925,G__25926,G__25927,G__25928,G__25929,G__25930,G__25931,G__25932,G__25933,G__25934,G__25935,G__25936,G__25937,G__25938,G__25939,G__25940));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25941 = a;
var G__25942 = b;
var G__25943 = c;
var G__25944 = d;
var G__25945 = e;
var G__25946 = f;
var G__25947 = g;
var G__25948 = h;
var G__25949 = i;
var G__25950 = j;
var G__25951 = k;
var G__25952 = l;
var G__25953 = m;
var G__25954 = n;
var G__25955 = o;
var G__25956 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25941,G__25942,G__25943,G__25944,G__25945,G__25946,G__25947,G__25948,G__25949,G__25950,G__25951,G__25952,G__25953,G__25954,G__25955,G__25956) : target_fn.call(null,G__25941,G__25942,G__25943,G__25944,G__25945,G__25946,G__25947,G__25948,G__25949,G__25950,G__25951,G__25952,G__25953,G__25954,G__25955,G__25956));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25957 = a;
var G__25958 = b;
var G__25959 = c;
var G__25960 = d;
var G__25961 = e;
var G__25962 = f;
var G__25963 = g;
var G__25964 = h;
var G__25965 = i;
var G__25966 = j;
var G__25967 = k;
var G__25968 = l;
var G__25969 = m;
var G__25970 = n;
var G__25971 = o;
var G__25972 = p;
var G__25973 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25957,G__25958,G__25959,G__25960,G__25961,G__25962,G__25963,G__25964,G__25965,G__25966,G__25967,G__25968,G__25969,G__25970,G__25971,G__25972,G__25973) : self__.dispatch_fn.call(null,G__25957,G__25958,G__25959,G__25960,G__25961,G__25962,G__25963,G__25964,G__25965,G__25966,G__25967,G__25968,G__25969,G__25970,G__25971,G__25972,G__25973));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25974 = a;
var G__25975 = b;
var G__25976 = c;
var G__25977 = d;
var G__25978 = e;
var G__25979 = f;
var G__25980 = g;
var G__25981 = h;
var G__25982 = i;
var G__25983 = j;
var G__25984 = k;
var G__25985 = l;
var G__25986 = m;
var G__25987 = n;
var G__25988 = o;
var G__25989 = p;
var G__25990 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25974,G__25975,G__25976,G__25977,G__25978,G__25979,G__25980,G__25981,G__25982,G__25983,G__25984,G__25985,G__25986,G__25987,G__25988,G__25989,G__25990) : target_fn.call(null,G__25974,G__25975,G__25976,G__25977,G__25978,G__25979,G__25980,G__25981,G__25982,G__25983,G__25984,G__25985,G__25986,G__25987,G__25988,G__25989,G__25990));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25991 = a;
var G__25992 = b;
var G__25993 = c;
var G__25994 = d;
var G__25995 = e;
var G__25996 = f;
var G__25997 = g;
var G__25998 = h;
var G__25999 = i;
var G__26000 = j;
var G__26001 = k;
var G__26002 = l;
var G__26003 = m;
var G__26004 = n;
var G__26005 = o;
var G__26006 = p;
var G__26007 = q;
var G__26008 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__25991,G__25992,G__25993,G__25994,G__25995,G__25996,G__25997,G__25998,G__25999,G__26000,G__26001,G__26002,G__26003,G__26004,G__26005,G__26006,G__26007,G__26008) : self__.dispatch_fn.call(null,G__25991,G__25992,G__25993,G__25994,G__25995,G__25996,G__25997,G__25998,G__25999,G__26000,G__26001,G__26002,G__26003,G__26004,G__26005,G__26006,G__26007,G__26008));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26009 = a;
var G__26010 = b;
var G__26011 = c;
var G__26012 = d;
var G__26013 = e;
var G__26014 = f;
var G__26015 = g;
var G__26016 = h;
var G__26017 = i;
var G__26018 = j;
var G__26019 = k;
var G__26020 = l;
var G__26021 = m;
var G__26022 = n;
var G__26023 = o;
var G__26024 = p;
var G__26025 = q;
var G__26026 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26009,G__26010,G__26011,G__26012,G__26013,G__26014,G__26015,G__26016,G__26017,G__26018,G__26019,G__26020,G__26021,G__26022,G__26023,G__26024,G__26025,G__26026) : target_fn.call(null,G__26009,G__26010,G__26011,G__26012,G__26013,G__26014,G__26015,G__26016,G__26017,G__26018,G__26019,G__26020,G__26021,G__26022,G__26023,G__26024,G__26025,G__26026));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26027 = a;
var G__26028 = b;
var G__26029 = c;
var G__26030 = d;
var G__26031 = e;
var G__26032 = f;
var G__26033 = g;
var G__26034 = h;
var G__26035 = i;
var G__26036 = j;
var G__26037 = k;
var G__26038 = l;
var G__26039 = m;
var G__26040 = n;
var G__26041 = o;
var G__26042 = p;
var G__26043 = q;
var G__26044 = r;
var G__26045 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__26027,G__26028,G__26029,G__26030,G__26031,G__26032,G__26033,G__26034,G__26035,G__26036,G__26037,G__26038,G__26039,G__26040,G__26041,G__26042,G__26043,G__26044,G__26045) : self__.dispatch_fn.call(null,G__26027,G__26028,G__26029,G__26030,G__26031,G__26032,G__26033,G__26034,G__26035,G__26036,G__26037,G__26038,G__26039,G__26040,G__26041,G__26042,G__26043,G__26044,G__26045));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26046 = a;
var G__26047 = b;
var G__26048 = c;
var G__26049 = d;
var G__26050 = e;
var G__26051 = f;
var G__26052 = g;
var G__26053 = h;
var G__26054 = i;
var G__26055 = j;
var G__26056 = k;
var G__26057 = l;
var G__26058 = m;
var G__26059 = n;
var G__26060 = o;
var G__26061 = p;
var G__26062 = q;
var G__26063 = r;
var G__26064 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__26046,G__26047,G__26048,G__26049,G__26050,G__26051,G__26052,G__26053,G__26054,G__26055,G__26056,G__26057,G__26058,G__26059,G__26060,G__26061,G__26062,G__26063,G__26064) : target_fn.call(null,G__26046,G__26047,G__26048,G__26049,G__26050,G__26051,G__26052,G__26053,G__26054,G__26055,G__26056,G__26057,G__26058,G__26059,G__26060,G__26061,G__26062,G__26063,G__26064));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26065 = a;
var G__26066 = b;
var G__26067 = c;
var G__26068 = d;
var G__26069 = e;
var G__26070 = f;
var G__26071 = g;
var G__26072 = h;
var G__26073 = i;
var G__26074 = j;
var G__26075 = k;
var G__26076 = l;
var G__26077 = m;
var G__26078 = n;
var G__26079 = o;
var G__26080 = p;
var G__26081 = q;
var G__26082 = r;
var G__26083 = s;
var G__26084 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__26065,G__26066,G__26067,G__26068,G__26069,G__26070,G__26071,G__26072,G__26073,G__26074,G__26075,G__26076,G__26077,G__26078,G__26079,G__26080,G__26081,G__26082,G__26083,G__26084) : self__.dispatch_fn.call(null,G__26065,G__26066,G__26067,G__26068,G__26069,G__26070,G__26071,G__26072,G__26073,G__26074,G__26075,G__26076,G__26077,G__26078,G__26079,G__26080,G__26081,G__26082,G__26083,G__26084));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26085 = a;
var G__26086 = b;
var G__26087 = c;
var G__26088 = d;
var G__26089 = e;
var G__26090 = f;
var G__26091 = g;
var G__26092 = h;
var G__26093 = i;
var G__26094 = j;
var G__26095 = k;
var G__26096 = l;
var G__26097 = m;
var G__26098 = n;
var G__26099 = o;
var G__26100 = p;
var G__26101 = q;
var G__26102 = r;
var G__26103 = s;
var G__26104 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__26085,G__26086,G__26087,G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095,G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103,G__26104) : target_fn.call(null,G__26085,G__26086,G__26087,G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095,G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103,G__26104));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26106 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__26106);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__6477__auto__,writer__6478__auto__,opt__6479__auto__){
return cljs.core._write(writer__6478__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__26111 = msg;
return Error(G__26111);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__26116 = x;
var G__26117 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26116,G__26117) : pred.call(null,G__26116,G__26117));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__26118 = y;
var G__26119 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26118,G__26119) : pred.call(null,G__26118,G__26119));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$15;
} else {
return cljs.core.constant$keyword$16;
}
});
