// Compiled by ClojureScript 0.0-2816 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__12669__delegate = function (args){
return console.log.apply(console,(function (){var G__12668 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__12668) : cljs.core.into_array.call(null,G__12668));
})());
};
var G__12669 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12670__i = 0, G__12670__a = new Array(arguments.length -  0);
while (G__12670__i < G__12670__a.length) {G__12670__a[G__12670__i] = arguments[G__12670__i + 0]; ++G__12670__i;}
  args = new cljs.core.IndexedSeq(G__12670__a,0);
} 
return G__12669__delegate.call(this,args);};
G__12669.cljs$lang$maxFixedArity = 0;
G__12669.cljs$lang$applyTo = (function (arglist__12671){
var args = cljs.core.seq(arglist__12671);
return G__12669__delegate(args);
});
G__12669.cljs$core$IFn$_invoke$arity$variadic = G__12669__delegate;
return G__12669;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__12673 = x;
return goog.isString(G__12673);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__12675 = x__$1;
return goog.typeOf(G__12675);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__10929__auto__ = ty;
if(cljs.core.truth_(and__10929__auto__)){
return ty.cljs$lang$type;
} else {
return and__10929__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__12677 = obj;
return goog.typeOf(G__12677);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4404__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4404__auto__)){
var s = temp__4404__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__12679 = Symbol;
return goog.typeOf(G__12679);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__11828__auto___12681 = len;
var i_12682 = (0);
while(true){
if((i_12682 < n__11828__auto___12681)){
(new_arr[i_12682] = (arr[i_12682]));

var G__12683 = (i_12682 + (1));
i_12682 = G__12683;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__12684 = (i + (1));
i = G__12684;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__12693__delegate = function (array,i,idxs){
var G__12690 = aget;
var G__12691 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__12692 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__12690,G__12691,G__12692) : cljs.core.apply.call(null,G__12690,G__12691,G__12692));
};
var G__12693 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__12694__i = 0, G__12694__a = new Array(arguments.length -  2);
while (G__12694__i < G__12694__a.length) {G__12694__a[G__12694__i] = arguments[G__12694__i + 2]; ++G__12694__i;}
  idxs = new cljs.core.IndexedSeq(G__12694__a,0);
} 
return G__12693__delegate.call(this,array,i,idxs);};
G__12693.cljs$lang$maxFixedArity = 2;
G__12693.cljs$lang$applyTo = (function (arglist__12695){
var array = cljs.core.first(arglist__12695);
arglist__12695 = cljs.core.next(arglist__12695);
var i = cljs.core.first(arglist__12695);
var idxs = cljs.core.rest(arglist__12695);
return G__12693__delegate(array,i,idxs);
});
G__12693.cljs$core$IFn$_invoke$arity$variadic = G__12693__delegate;
return G__12693;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__12696 = null;
if (arguments.length > 2) {
var G__12697__i = 0, G__12697__a = new Array(arguments.length -  2);
while (G__12697__i < G__12697__a.length) {G__12697__a[G__12697__i] = arguments[G__12697__i + 2]; ++G__12697__i;}
G__12696 = new cljs.core.IndexedSeq(G__12697__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__12696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__12706__delegate = function (array,idx,idx2,idxv){
var G__12702 = aset;
var G__12703 = (array[idx]);
var G__12704 = idx2;
var G__12705 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__12702,G__12703,G__12704,G__12705) : cljs.core.apply.call(null,G__12702,G__12703,G__12704,G__12705));
};
var G__12706 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__12707__i = 0, G__12707__a = new Array(arguments.length -  3);
while (G__12707__i < G__12707__a.length) {G__12707__a[G__12707__i] = arguments[G__12707__i + 3]; ++G__12707__i;}
  idxv = new cljs.core.IndexedSeq(G__12707__a,0);
} 
return G__12706__delegate.call(this,array,idx,idx2,idxv);};
G__12706.cljs$lang$maxFixedArity = 3;
G__12706.cljs$lang$applyTo = (function (arglist__12708){
var array = cljs.core.first(arglist__12708);
arglist__12708 = cljs.core.next(arglist__12708);
var idx = cljs.core.first(arglist__12708);
arglist__12708 = cljs.core.next(arglist__12708);
var idx2 = cljs.core.first(arglist__12708);
var idxv = cljs.core.rest(arglist__12708);
return G__12706__delegate(array,idx,idx2,idxv);
});
G__12706.cljs$core$IFn$_invoke$arity$variadic = G__12706__delegate;
return G__12706;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__12709 = null;
if (arguments.length > 3) {
var G__12710__i = 0, G__12710__a = new Array(arguments.length -  3);
while (G__12710__i < G__12710__a.length) {G__12710__a[G__12710__i] = arguments[G__12710__i + 3]; ++G__12710__i;}
G__12709 = new cljs.core.IndexedSeq(G__12710__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__12709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__12716 = (function (a,x){
a.push(x);

return a;
});
var G__12717 = [];
var G__12718 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12716,G__12717,G__12718) : cljs.core.reduce.call(null,G__12716,G__12717,G__12718));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__12719__i = 0, G__12719__a = new Array(arguments.length -  2);
while (G__12719__i < G__12719__a.length) {G__12719__a[G__12719__i] = arguments[G__12719__i + 2]; ++G__12719__i;}
  args = new cljs.core.IndexedSeq(G__12719__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__12720){
var obj = cljs.core.first(arglist__12720);
arglist__12720 = cljs.core.next(arglist__12720);
var s = cljs.core.first(arglist__12720);
var args = cljs.core.rest(arglist__12720);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj12722 = {};
return obj12722;
})();


cljs.core.IFn = (function (){var obj12724 = {};
return obj12724;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12770 = x__11585__auto__;
return goog.typeOf(G__12770);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12772 = x__11585__auto__;
return goog.typeOf(G__12772);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12774 = x__11585__auto__;
return goog.typeOf(G__12774);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12776 = x__11585__auto__;
return goog.typeOf(G__12776);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12778 = x__11585__auto__;
return goog.typeOf(G__12778);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12780 = x__11585__auto__;
return goog.typeOf(G__12780);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12782 = x__11585__auto__;
return goog.typeOf(G__12782);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12784 = x__11585__auto__;
return goog.typeOf(G__12784);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12786 = x__11585__auto__;
return goog.typeOf(G__12786);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12788 = x__11585__auto__;
return goog.typeOf(G__12788);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12790 = x__11585__auto__;
return goog.typeOf(G__12790);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12792 = x__11585__auto__;
return goog.typeOf(G__12792);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12794 = x__11585__auto__;
return goog.typeOf(G__12794);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12796 = x__11585__auto__;
return goog.typeOf(G__12796);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12798 = x__11585__auto__;
return goog.typeOf(G__12798);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12800 = x__11585__auto__;
return goog.typeOf(G__12800);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12802 = x__11585__auto__;
return goog.typeOf(G__12802);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12804 = x__11585__auto__;
return goog.typeOf(G__12804);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12806 = x__11585__auto__;
return goog.typeOf(G__12806);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12808 = x__11585__auto__;
return goog.typeOf(G__12808);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12810 = x__11585__auto__;
return goog.typeOf(G__12810);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__12812 = x__11585__auto__;
return goog.typeOf(G__12812);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj12814 = {};
return obj12814;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__10929__auto__ = value;
if(and__10929__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__10929__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__11585__auto__ = (((value == null))?null:value);
return (function (){var or__10941__auto__ = (cljs.core._clone[(function (){var G__12818 = x__11585__auto__;
return goog.typeOf(G__12818);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._clone["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj12820 = {};
return obj12820;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._count[(function (){var G__12824 = x__11585__auto__;
return goog.typeOf(G__12824);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._count["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj12826 = {};
return obj12826;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._empty[(function (){var G__12830 = x__11585__auto__;
return goog.typeOf(G__12830);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._empty["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj12832 = {};
return obj12832;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._conj[(function (){var G__12836 = x__11585__auto__;
return goog.typeOf(G__12836);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._conj["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj12838 = {};
return obj12838;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._nth[(function (){var G__12844 = x__11585__auto__;
return goog.typeOf(G__12844);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._nth["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._nth[(function (){var G__12846 = x__11585__auto__;
return goog.typeOf(G__12846);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._nth["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj12848 = {};
return obj12848;
})();


cljs.core.ISeq = (function (){var obj12850 = {};
return obj12850;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._first[(function (){var G__12854 = x__11585__auto__;
return goog.typeOf(G__12854);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._first["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._rest[(function (){var G__12858 = x__11585__auto__;
return goog.typeOf(G__12858);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._rest["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj12860 = {};
return obj12860;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._next[(function (){var G__12864 = x__11585__auto__;
return goog.typeOf(G__12864);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._next["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj12866 = {};
return obj12866;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._lookup[(function (){var G__12872 = x__11585__auto__;
return goog.typeOf(G__12872);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._lookup["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._lookup[(function (){var G__12874 = x__11585__auto__;
return goog.typeOf(G__12874);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._lookup["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj12876 = {};
return obj12876;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__12880 = x__11585__auto__;
return goog.typeOf(G__12880);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._assoc[(function (){var G__12884 = x__11585__auto__;
return goog.typeOf(G__12884);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._assoc["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj12886 = {};
return obj12886;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._dissoc[(function (){var G__12890 = x__11585__auto__;
return goog.typeOf(G__12890);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._dissoc["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj12892 = {};
return obj12892;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._key[(function (){var G__12896 = x__11585__auto__;
return goog.typeOf(G__12896);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._key["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._val[(function (){var G__12900 = x__11585__auto__;
return goog.typeOf(G__12900);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._val["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj12902 = {};
return obj12902;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._disjoin[(function (){var G__12906 = x__11585__auto__;
return goog.typeOf(G__12906);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._disjoin["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj12908 = {};
return obj12908;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._peek[(function (){var G__12912 = x__11585__auto__;
return goog.typeOf(G__12912);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._peek["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._pop[(function (){var G__12916 = x__11585__auto__;
return goog.typeOf(G__12916);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._pop["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj12918 = {};
return obj12918;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._assoc_n[(function (){var G__12922 = x__11585__auto__;
return goog.typeOf(G__12922);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj12924 = {};
return obj12924;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._deref[(function (){var G__12928 = x__11585__auto__;
return goog.typeOf(G__12928);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._deref["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj12930 = {};
return obj12930;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._deref_with_timeout[(function (){var G__12934 = x__11585__auto__;
return goog.typeOf(G__12934);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj12936 = {};
return obj12936;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._meta[(function (){var G__12940 = x__11585__auto__;
return goog.typeOf(G__12940);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._meta["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj12942 = {};
return obj12942;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._with_meta[(function (){var G__12946 = x__11585__auto__;
return goog.typeOf(G__12946);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._with_meta["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj12948 = {};
return obj12948;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._reduce[(function (){var G__12954 = x__11585__auto__;
return goog.typeOf(G__12954);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._reduce["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._reduce[(function (){var G__12956 = x__11585__auto__;
return goog.typeOf(G__12956);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._reduce["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj12958 = {};
return obj12958;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._kv_reduce[(function (){var G__12962 = x__11585__auto__;
return goog.typeOf(G__12962);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj12964 = {};
return obj12964;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._equiv[(function (){var G__12968 = x__11585__auto__;
return goog.typeOf(G__12968);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._equiv["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj12970 = {};
return obj12970;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._hash[(function (){var G__12974 = x__11585__auto__;
return goog.typeOf(G__12974);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._hash["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj12976 = {};
return obj12976;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._seq[(function (){var G__12980 = x__11585__auto__;
return goog.typeOf(G__12980);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._seq["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj12982 = {};
return obj12982;
})();


cljs.core.IList = (function (){var obj12984 = {};
return obj12984;
})();


cljs.core.IRecord = (function (){var obj12986 = {};
return obj12986;
})();


cljs.core.IReversible = (function (){var obj12988 = {};
return obj12988;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._rseq[(function (){var G__12992 = x__11585__auto__;
return goog.typeOf(G__12992);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._rseq["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj12994 = {};
return obj12994;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._sorted_seq[(function (){var G__12998 = x__11585__auto__;
return goog.typeOf(G__12998);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._sorted_seq_from[(function (){var G__13002 = x__11585__auto__;
return goog.typeOf(G__13002);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._entry_key[(function (){var G__13006 = x__11585__auto__;
return goog.typeOf(G__13006);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._entry_key["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._comparator[(function (){var G__13010 = x__11585__auto__;
return goog.typeOf(G__13010);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._comparator["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj13012 = {};
return obj13012;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__10929__auto__ = writer;
if(and__10929__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__10929__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__11585__auto__ = (((writer == null))?null:writer);
return (function (){var or__10941__auto__ = (cljs.core._write[(function (){var G__13016 = x__11585__auto__;
return goog.typeOf(G__13016);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._write["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__10929__auto__ = writer;
if(and__10929__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__10929__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__11585__auto__ = (((writer == null))?null:writer);
return (function (){var or__10941__auto__ = (cljs.core._flush[(function (){var G__13020 = x__11585__auto__;
return goog.typeOf(G__13020);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._flush["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj13022 = {};
return obj13022;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._pr_writer[(function (){var G__13026 = x__11585__auto__;
return goog.typeOf(G__13026);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj13028 = {};
return obj13028;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__10929__auto__ = d;
if(and__10929__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__10929__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__11585__auto__ = (((d == null))?null:d);
return (function (){var or__10941__auto__ = (cljs.core._realized_QMARK_[(function (){var G__13032 = x__11585__auto__;
return goog.typeOf(G__13032);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj13034 = {};
return obj13034;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._notify_watches[(function (){var G__13038 = x__11585__auto__;
return goog.typeOf(G__13038);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._add_watch[(function (){var G__13042 = x__11585__auto__;
return goog.typeOf(G__13042);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._add_watch["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._remove_watch[(function (){var G__13046 = x__11585__auto__;
return goog.typeOf(G__13046);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj13048 = {};
return obj13048;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._as_transient[(function (){var G__13052 = x__11585__auto__;
return goog.typeOf(G__13052);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._as_transient["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj13054 = {};
return obj13054;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._conj_BANG_[(function (){var G__13058 = x__11585__auto__;
return goog.typeOf(G__13058);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._persistent_BANG_[(function (){var G__13062 = x__11585__auto__;
return goog.typeOf(G__13062);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj13064 = {};
return obj13064;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._assoc_BANG_[(function (){var G__13068 = x__11585__auto__;
return goog.typeOf(G__13068);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj13070 = {};
return obj13070;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__13074 = x__11585__auto__;
return goog.typeOf(G__13074);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj13076 = {};
return obj13076;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__13080 = x__11585__auto__;
return goog.typeOf(G__13080);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._pop_BANG_[(function (){var G__13084 = x__11585__auto__;
return goog.typeOf(G__13084);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj13086 = {};
return obj13086;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__13090 = x__11585__auto__;
return goog.typeOf(G__13090);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj13092 = {};
return obj13092;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._compare[(function (){var G__13096 = x__11585__auto__;
return goog.typeOf(G__13096);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._compare["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj13098 = {};
return obj13098;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._drop_first[(function (){var G__13102 = x__11585__auto__;
return goog.typeOf(G__13102);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._drop_first["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj13104 = {};
return obj13104;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._chunked_first[(function (){var G__13108 = x__11585__auto__;
return goog.typeOf(G__13108);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._chunked_rest[(function (){var G__13112 = x__11585__auto__;
return goog.typeOf(G__13112);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj13114 = {};
return obj13114;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._chunked_next[(function (){var G__13118 = x__11585__auto__;
return goog.typeOf(G__13118);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj13120 = {};
return obj13120;
})();

cljs.core._name = (function _name(x){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._name[(function (){var G__13124 = x__11585__auto__;
return goog.typeOf(G__13124);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._name["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._namespace[(function (){var G__13128 = x__11585__auto__;
return goog.typeOf(G__13128);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._namespace["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj13130 = {};
return obj13130;
})();


cljs.core.IReset = (function (){var obj13132 = {};
return obj13132;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._reset_BANG_[(function (){var G__13136 = x__11585__auto__;
return goog.typeOf(G__13136);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj13138 = {};
return obj13138;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._swap_BANG_[(function (){var G__13148 = x__11585__auto__;
return goog.typeOf(G__13148);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._swap_BANG_[(function (){var G__13150 = x__11585__auto__;
return goog.typeOf(G__13150);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._swap_BANG_[(function (){var G__13152 = x__11585__auto__;
return goog.typeOf(G__13152);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._swap_BANG_[(function (){var G__13154 = x__11585__auto__;
return goog.typeOf(G__13154);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj13156 = {};
return obj13156;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._vreset_BANG_[(function (){var G__13160 = x__11585__auto__;
return goog.typeOf(G__13160);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj13162 = {};
return obj13162;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._iterator[(function (){var G__13166 = x__11585__auto__;
return goog.typeOf(G__13166);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._iterator["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__13169 = (4294967295);
var G__13170 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__13169,G__13170) : Math.imul.call(null,G__13169,G__13170));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__13173 = a;
var G__13174 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__13173,G__13174) : Math.imul.call(null,G__13173,G__13174));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__13175 = (i + (2));
var G__13176 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__13175;
h1 = G__13176;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj13178 = {};
return obj13178;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__13179 = (i + (1));
var G__13180 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__13179;
hash = G__13180;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj13184 = {};
return obj13184;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__13187 = o;
if(G__13187){
var bit__11615__auto__ = (G__13187.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__11615__auto__) || (G__13187.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__13188 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13188) : Math.floor.call(null,G__13188));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__10929__auto__ = cljs.core.not(a.ns);
if(and__10929__auto__){
return b.ns;
} else {
return and__10929__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__13195 = a.ns;
var G__13196 = b.ns;
return goog.array.defaultCompare(G__13195,G__13196);
})();
if(((0) === nsc)){
var G__13197 = a.name;
var G__13198 = b.name;
return goog.array.defaultCompare(G__13197,G__13198);
} else {
return nsc;
}
}
} else {
var G__13199 = a.name;
var G__13200 = b.name;
return goog.array.defaultCompare(G__13199,G__13200);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__11362__auto__ = self__._hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__13202 = null;
var G__13202__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__13202__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__13202 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__13202__2.call(this,self__,coll);
case 3:
return G__13202__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13202.cljs$core$IFn$_invoke$arity$2 = G__13202__2;
G__13202.cljs$core$IFn$_invoke$arity$3 = G__13202__3;
return G__13202;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args13201){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13201)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__13250 = null;
var G__13250__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__13250__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__13250__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__13250__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__13250__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__13250__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__13250__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__13250__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__13250__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__13250__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__13250__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__13250__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__13250__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__13250__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__13250__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__13250__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__13250__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__13250__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__13250__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__13250__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__13250__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__13250__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13206 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__13207 = a;
var G__13208 = b;
var G__13209 = c;
var G__13210 = d;
var G__13211 = e;
var G__13212 = f;
var G__13213 = g;
var G__13214 = h;
var G__13215 = i;
var G__13216 = j;
var G__13217 = k;
var G__13218 = l;
var G__13219 = m;
var G__13220 = n;
var G__13221 = o;
var G__13222 = p;
var G__13223 = q;
var G__13224 = r;
var G__13225 = s;
var G__13226 = t;
var G__13227 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219,G__13220,G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227) : cljs.core.apply.call(null,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217,G__13218,G__13219,G__13220,G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227));
});
G__13250 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13250__1.call(this,self__);
case 2:
return G__13250__2.call(this,self__,a);
case 3:
return G__13250__3.call(this,self__,a,b);
case 4:
return G__13250__4.call(this,self__,a,b,c);
case 5:
return G__13250__5.call(this,self__,a,b,c,d);
case 6:
return G__13250__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13250__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13250__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13250__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13250__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13250__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13250__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13250__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13250__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13250__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13250__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13250__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13250__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13250__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13250__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13250__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13250__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13250.cljs$core$IFn$_invoke$arity$1 = G__13250__1;
G__13250.cljs$core$IFn$_invoke$arity$2 = G__13250__2;
G__13250.cljs$core$IFn$_invoke$arity$3 = G__13250__3;
G__13250.cljs$core$IFn$_invoke$arity$4 = G__13250__4;
G__13250.cljs$core$IFn$_invoke$arity$5 = G__13250__5;
G__13250.cljs$core$IFn$_invoke$arity$6 = G__13250__6;
G__13250.cljs$core$IFn$_invoke$arity$7 = G__13250__7;
G__13250.cljs$core$IFn$_invoke$arity$8 = G__13250__8;
G__13250.cljs$core$IFn$_invoke$arity$9 = G__13250__9;
G__13250.cljs$core$IFn$_invoke$arity$10 = G__13250__10;
G__13250.cljs$core$IFn$_invoke$arity$11 = G__13250__11;
G__13250.cljs$core$IFn$_invoke$arity$12 = G__13250__12;
G__13250.cljs$core$IFn$_invoke$arity$13 = G__13250__13;
G__13250.cljs$core$IFn$_invoke$arity$14 = G__13250__14;
G__13250.cljs$core$IFn$_invoke$arity$15 = G__13250__15;
G__13250.cljs$core$IFn$_invoke$arity$16 = G__13250__16;
G__13250.cljs$core$IFn$_invoke$arity$17 = G__13250__17;
G__13250.cljs$core$IFn$_invoke$arity$18 = G__13250__18;
G__13250.cljs$core$IFn$_invoke$arity$19 = G__13250__19;
G__13250.cljs$core$IFn$_invoke$arity$20 = G__13250__20;
G__13250.cljs$core$IFn$_invoke$arity$21 = G__13250__21;
G__13250.cljs$core$IFn$_invoke$arity$22 = G__13250__22;
return G__13250;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args13205){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13205)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__13228 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__13229 = a;
var G__13230 = b;
var G__13231 = c;
var G__13232 = d;
var G__13233 = e;
var G__13234 = f;
var G__13235 = g;
var G__13236 = h;
var G__13237 = i;
var G__13238 = j;
var G__13239 = k;
var G__13240 = l;
var G__13241 = m;
var G__13242 = n;
var G__13243 = o;
var G__13244 = p;
var G__13245 = q;
var G__13246 = r;
var G__13247 = s;
var G__13248 = t;
var G__13249 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13228,G__13229,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249) : cljs.core.apply.call(null,G__13228,G__13229,G__13230,G__13231,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246,G__13247,G__13248,G__13249));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__13252 = x;
if(G__13252){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto__ = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return G__13252.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__13252.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__13252);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__13252);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__13254 = value;
if(G__13254){
var bit__11622__auto__ = (G__13254.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__11622__auto__) || (G__13254.cljs$core$ICloneable$)){
return true;
} else {
if((!G__13254.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__13254);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__13254);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13256 = coll;
if(G__13256){
var bit__11615__auto__ = (G__13256.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__11615__auto__) || (G__13256.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13258 = coll;
if(G__13258){
var bit__11615__auto__ = (G__13258.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11615__auto__) || (G__13258.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__13260 = coll;
if(G__13260){
var bit__11615__auto__ = (G__13260.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11615__auto__) || (G__13260.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13262 = coll;
if(G__13262){
var bit__11615__auto__ = (G__13262.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11615__auto__) || (G__13262.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__13267__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__13268 = y;
var G__13269 = cljs.core.first(more);
var G__13270 = cljs.core.next(more);
x = G__13268;
y = G__13269;
more = G__13270;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13267 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13271__i = 0, G__13271__a = new Array(arguments.length -  2);
while (G__13271__i < G__13271__a.length) {G__13271__a[G__13271__i] = arguments[G__13271__i + 2]; ++G__13271__i;}
  more = new cljs.core.IndexedSeq(G__13271__a,0);
} 
return G__13267__delegate.call(this,x,y,more);};
G__13267.cljs$lang$maxFixedArity = 2;
G__13267.cljs$lang$applyTo = (function (arglist__13272){
var x = cljs.core.first(arglist__13272);
arglist__13272 = cljs.core.next(arglist__13272);
var y = cljs.core.first(arglist__13272);
var more = cljs.core.rest(arglist__13272);
return G__13267__delegate(x,y,more);
});
G__13267.cljs$core$IFn$_invoke$arity$variadic = G__13267__delegate;
return G__13267;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__13273 = null;
if (arguments.length > 2) {
var G__13274__i = 0, G__13274__a = new Array(arguments.length -  2);
while (G__13274__i < G__13274__a.length) {G__13274__a[G__13274__i] = arguments[G__13274__i + 2]; ++G__13274__i;}
G__13273 = new cljs.core.IndexedSeq(G__13274__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__13275 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__13275) : cljs.core.es6_iterator_seq.call(null,G__13275));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__13276 = (n + (1));
var G__13277 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__13278 = cljs.core.next(coll__$1);
n = G__13276;
hash_code = G__13277;
coll__$1 = G__13278;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__13279 = (n + (1));
var G__13280 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__13281 = cljs.core.next(coll__$1);
n = G__13279;
hash_code = G__13280;
coll__$1 = G__13281;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__13282 = o;
return goog.getUid(G__13282);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__13284 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13284) : cljs.core.deref.call(null,G__13284));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13291 = val;
var G__13292 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13291,G__13292) : f.call(null,G__13291,G__13292));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13297 = nval;
var G__13298 = (n + (1));
val = G__13297;
n = G__13298;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13293 = val__$1;
var G__13294 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13293,G__13294) : f.call(null,G__13293,G__13294));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13299 = nval;
var G__13300 = (n + (1));
val__$1 = G__13299;
n = G__13300;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13295 = val__$1;
var G__13296 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13295,G__13296) : f.call(null,G__13295,G__13296));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13301 = nval;
var G__13302 = (n + (1));
val__$1 = G__13301;
n = G__13302;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13309 = val;
var G__13310 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13309,G__13310) : f.call(null,G__13309,G__13310));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13315 = nval;
var G__13316 = (n + (1));
val = G__13315;
n = G__13316;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13311 = val__$1;
var G__13312 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13311,G__13312) : f.call(null,G__13311,G__13312));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13317 = nval;
var G__13318 = (n + (1));
val__$1 = G__13317;
n = G__13318;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13313 = val__$1;
var G__13314 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13313,G__13314) : f.call(null,G__13313,G__13314));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13319 = nval;
var G__13320 = (n + (1));
val__$1 = G__13319;
n = G__13320;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__13322 = x;
if(G__13322){
var bit__11622__auto__ = (G__13322.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__11622__auto__) || (G__13322.cljs$core$ICounted$)){
return true;
} else {
if((!G__13322.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13322);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13322);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__13324 = x;
if(G__13324){
var bit__11622__auto__ = (G__13324.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__11622__auto__) || (G__13324.cljs$core$IIndexed$)){
return true;
} else {
if((!G__13324.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13324);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13324);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13325 = coll__$1;
var G__13326 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13325,G__13326) : cljs.core.equiv_sequential.call(null,G__13325,G__13326));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13327 = o;
var G__13328 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13327,G__13328) : cljs.core.cons.call(null,G__13327,G__13328));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13331 = coll__$1;
var G__13332 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13331,G__13332) : cljs.core.equiv_sequential.call(null,G__13331,G__13332));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__13333 = cljs.core.List.EMPTY;
var G__13334 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__13333,G__13334) : cljs.core.with_meta.call(null,G__13333,G__13334));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__13335 = f;
var G__13336 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__13335,G__13336) : cljs.core.seq_reduce.call(null,G__13335,G__13336));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__13337 = f;
var G__13338 = start;
var G__13339 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__13337,G__13338,G__13339) : cljs.core.seq_reduce.call(null,G__13337,G__13338,G__13339));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13340 = o;
var G__13341 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13340,G__13341) : cljs.core.cons.call(null,G__13340,G__13341));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__13342 = sn;
s = G__13342;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__13347__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__13348 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__13349 = cljs.core.first(xs);
var G__13350 = cljs.core.next(xs);
coll = G__13348;
x = G__13349;
xs = G__13350;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__13347 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__13351__i = 0, G__13351__a = new Array(arguments.length -  2);
while (G__13351__i < G__13351__a.length) {G__13351__a[G__13351__i] = arguments[G__13351__i + 2]; ++G__13351__i;}
  xs = new cljs.core.IndexedSeq(G__13351__a,0);
} 
return G__13347__delegate.call(this,coll,x,xs);};
G__13347.cljs$lang$maxFixedArity = 2;
G__13347.cljs$lang$applyTo = (function (arglist__13352){
var coll = cljs.core.first(arglist__13352);
arglist__13352 = cljs.core.next(arglist__13352);
var x = cljs.core.first(arglist__13352);
var xs = cljs.core.rest(arglist__13352);
return G__13347__delegate(coll,x,xs);
});
G__13347.cljs$core$IFn$_invoke$arity$variadic = G__13347__delegate;
return G__13347;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__13353 = null;
if (arguments.length > 2) {
var G__13354__i = 0, G__13354__a = new Array(arguments.length -  2);
while (G__13354__i < G__13354__a.length) {G__13354__a[G__13354__i] = arguments[G__13354__i + 2]; ++G__13354__i;}
G__13353 = new cljs.core.IndexedSeq(G__13354__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__13353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__13355 = cljs.core.next(s);
var G__13356 = (acc + (1));
s = G__13355;
acc = G__13356;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__13358 = coll;
if(G__13358){
var bit__11615__auto__ = (G__13358.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__11615__auto__) || (G__13358.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__13359 = cljs.core.next(coll);
var G__13360 = (n - (1));
coll = G__13359;
n = G__13360;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__13361 = cljs.core.next(coll);
var G__13362 = (n - (1));
var G__13363 = not_found;
coll = G__13361;
n = G__13362;
not_found = G__13363;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__13368 = coll;
if(G__13368){
var bit__11615__auto__ = (G__13368.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__11615__auto__) || (G__13368.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13369 = coll;
if(G__13369){
var bit__11622__auto__ = (G__13369.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11622__auto__) || (G__13369.cljs$core$ISeq$)){
return true;
} else {
if((!G__13369.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13369);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13369);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__13370 = coll;
if(G__13370){
var bit__11615__auto__ = (G__13370.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__11615__auto__) || (G__13370.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13371 = coll;
if(G__13371){
var bit__11622__auto__ = (G__13371.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11622__auto__) || (G__13371.cljs$core$ISeq$)){
return true;
} else {
if((!G__13371.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13371);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13371);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__13372 = (n__$1 - (1));
var G__13373 = cljs.core.rest(xs);
n__$1 = G__13372;
xs = G__13373;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__13376 = o;
if(G__13376){
var bit__11615__auto__ = (G__13376.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__11615__auto__) || (G__13376.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__13377 = o;
if(G__13377){
var bit__11615__auto__ = (G__13377.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__11615__auto__) || (G__13377.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__13381__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__13382 = ret;
var G__13383 = cljs.core.first(kvs);
var G__13384 = cljs.core.second(kvs);
var G__13385 = cljs.core.nnext(kvs);
coll = G__13382;
k = G__13383;
v = G__13384;
kvs = G__13385;
continue;
} else {
return ret;
}
break;
}
};
var G__13381 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13386__i = 0, G__13386__a = new Array(arguments.length -  3);
while (G__13386__i < G__13386__a.length) {G__13386__a[G__13386__i] = arguments[G__13386__i + 3]; ++G__13386__i;}
  kvs = new cljs.core.IndexedSeq(G__13386__a,0);
} 
return G__13381__delegate.call(this,coll,k,v,kvs);};
G__13381.cljs$lang$maxFixedArity = 3;
G__13381.cljs$lang$applyTo = (function (arglist__13387){
var coll = cljs.core.first(arglist__13387);
arglist__13387 = cljs.core.next(arglist__13387);
var k = cljs.core.first(arglist__13387);
arglist__13387 = cljs.core.next(arglist__13387);
var v = cljs.core.first(arglist__13387);
var kvs = cljs.core.rest(arglist__13387);
return G__13381__delegate(coll,k,v,kvs);
});
G__13381.cljs$core$IFn$_invoke$arity$variadic = G__13381__delegate;
return G__13381;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__13388 = null;
if (arguments.length > 3) {
var G__13389__i = 0, G__13389__a = new Array(arguments.length -  3);
while (G__13389__i < G__13389__a.length) {G__13389__a[G__13389__i] = arguments[G__13389__i + 3]; ++G__13389__i;}
G__13388 = new cljs.core.IndexedSeq(G__13389__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__13388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__13392__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13393 = ret;
var G__13394 = cljs.core.first(ks);
var G__13395 = cljs.core.next(ks);
coll = G__13393;
k = G__13394;
ks = G__13395;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13392 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13396__i = 0, G__13396__a = new Array(arguments.length -  2);
while (G__13396__i < G__13396__a.length) {G__13396__a[G__13396__i] = arguments[G__13396__i + 2]; ++G__13396__i;}
  ks = new cljs.core.IndexedSeq(G__13396__a,0);
} 
return G__13392__delegate.call(this,coll,k,ks);};
G__13392.cljs$lang$maxFixedArity = 2;
G__13392.cljs$lang$applyTo = (function (arglist__13397){
var coll = cljs.core.first(arglist__13397);
arglist__13397 = cljs.core.next(arglist__13397);
var k = cljs.core.first(arglist__13397);
var ks = cljs.core.rest(arglist__13397);
return G__13392__delegate(coll,k,ks);
});
G__13392.cljs$core$IFn$_invoke$arity$variadic = G__13392__delegate;
return G__13392;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__13398 = null;
if (arguments.length > 2) {
var G__13399__i = 0, G__13399__a = new Array(arguments.length -  2);
while (G__13399__i < G__13399__a.length) {G__13399__a[G__13399__i] = arguments[G__13399__i + 2]; ++G__13399__i;}
G__13398 = new cljs.core.IndexedSeq(G__13399__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__10941__auto__ = (function (){var G__13404 = f;
return goog.isFunction(G__13404);
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__13405 = f;
if(G__13405){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto____$1 = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
return G__13405.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__13405.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13405);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13405);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__13871 = null;
var G__13871__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__13871__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13407 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13407) : self__.afn.call(null,G__13407));
});
var G__13871__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13408 = a;
var G__13409 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13408,G__13409) : self__.afn.call(null,G__13408,G__13409));
});
var G__13871__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13410 = a;
var G__13411 = b;
var G__13412 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13410,G__13411,G__13412) : self__.afn.call(null,G__13410,G__13411,G__13412));
});
var G__13871__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13413 = a;
var G__13414 = b;
var G__13415 = c;
var G__13416 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13413,G__13414,G__13415,G__13416) : self__.afn.call(null,G__13413,G__13414,G__13415,G__13416));
});
var G__13871__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13417 = a;
var G__13418 = b;
var G__13419 = c;
var G__13420 = d;
var G__13421 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13417,G__13418,G__13419,G__13420,G__13421) : self__.afn.call(null,G__13417,G__13418,G__13419,G__13420,G__13421));
});
var G__13871__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13422 = a;
var G__13423 = b;
var G__13424 = c;
var G__13425 = d;
var G__13426 = e;
var G__13427 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13422,G__13423,G__13424,G__13425,G__13426,G__13427) : self__.afn.call(null,G__13422,G__13423,G__13424,G__13425,G__13426,G__13427));
});
var G__13871__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13428 = a;
var G__13429 = b;
var G__13430 = c;
var G__13431 = d;
var G__13432 = e;
var G__13433 = f;
var G__13434 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434) : self__.afn.call(null,G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434));
});
var G__13871__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13435 = a;
var G__13436 = b;
var G__13437 = c;
var G__13438 = d;
var G__13439 = e;
var G__13440 = f;
var G__13441 = g;
var G__13442 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13435,G__13436,G__13437,G__13438,G__13439,G__13440,G__13441,G__13442) : self__.afn.call(null,G__13435,G__13436,G__13437,G__13438,G__13439,G__13440,G__13441,G__13442));
});
var G__13871__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13443 = a;
var G__13444 = b;
var G__13445 = c;
var G__13446 = d;
var G__13447 = e;
var G__13448 = f;
var G__13449 = g;
var G__13450 = h;
var G__13451 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450,G__13451) : self__.afn.call(null,G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450,G__13451));
});
var G__13871__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13452 = a;
var G__13453 = b;
var G__13454 = c;
var G__13455 = d;
var G__13456 = e;
var G__13457 = f;
var G__13458 = g;
var G__13459 = h;
var G__13460 = i;
var G__13461 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13452,G__13453,G__13454,G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461) : self__.afn.call(null,G__13452,G__13453,G__13454,G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461));
});
var G__13871__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13462 = a;
var G__13463 = b;
var G__13464 = c;
var G__13465 = d;
var G__13466 = e;
var G__13467 = f;
var G__13468 = g;
var G__13469 = h;
var G__13470 = i;
var G__13471 = j;
var G__13472 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13462,G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471,G__13472) : self__.afn.call(null,G__13462,G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471,G__13472));
});
var G__13871__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13473 = a;
var G__13474 = b;
var G__13475 = c;
var G__13476 = d;
var G__13477 = e;
var G__13478 = f;
var G__13479 = g;
var G__13480 = h;
var G__13481 = i;
var G__13482 = j;
var G__13483 = k;
var G__13484 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13473,G__13474,G__13475,G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482,G__13483,G__13484) : self__.afn.call(null,G__13473,G__13474,G__13475,G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482,G__13483,G__13484));
});
var G__13871__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13485 = a;
var G__13486 = b;
var G__13487 = c;
var G__13488 = d;
var G__13489 = e;
var G__13490 = f;
var G__13491 = g;
var G__13492 = h;
var G__13493 = i;
var G__13494 = j;
var G__13495 = k;
var G__13496 = l;
var G__13497 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492,G__13493,G__13494,G__13495,G__13496,G__13497) : self__.afn.call(null,G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492,G__13493,G__13494,G__13495,G__13496,G__13497));
});
var G__13871__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13498 = a;
var G__13499 = b;
var G__13500 = c;
var G__13501 = d;
var G__13502 = e;
var G__13503 = f;
var G__13504 = g;
var G__13505 = h;
var G__13506 = i;
var G__13507 = j;
var G__13508 = k;
var G__13509 = l;
var G__13510 = m;
var G__13511 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13498,G__13499,G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507,G__13508,G__13509,G__13510,G__13511) : self__.afn.call(null,G__13498,G__13499,G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507,G__13508,G__13509,G__13510,G__13511));
});
var G__13871__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13512 = a;
var G__13513 = b;
var G__13514 = c;
var G__13515 = d;
var G__13516 = e;
var G__13517 = f;
var G__13518 = g;
var G__13519 = h;
var G__13520 = i;
var G__13521 = j;
var G__13522 = k;
var G__13523 = l;
var G__13524 = m;
var G__13525 = n;
var G__13526 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13512,G__13513,G__13514,G__13515,G__13516,G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526) : self__.afn.call(null,G__13512,G__13513,G__13514,G__13515,G__13516,G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526));
});
var G__13871__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13527 = a;
var G__13528 = b;
var G__13529 = c;
var G__13530 = d;
var G__13531 = e;
var G__13532 = f;
var G__13533 = g;
var G__13534 = h;
var G__13535 = i;
var G__13536 = j;
var G__13537 = k;
var G__13538 = l;
var G__13539 = m;
var G__13540 = n;
var G__13541 = o;
var G__13542 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13527,G__13528,G__13529,G__13530,G__13531,G__13532,G__13533,G__13534,G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542) : self__.afn.call(null,G__13527,G__13528,G__13529,G__13530,G__13531,G__13532,G__13533,G__13534,G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542));
});
var G__13871__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13543 = a;
var G__13544 = b;
var G__13545 = c;
var G__13546 = d;
var G__13547 = e;
var G__13548 = f;
var G__13549 = g;
var G__13550 = h;
var G__13551 = i;
var G__13552 = j;
var G__13553 = k;
var G__13554 = l;
var G__13555 = m;
var G__13556 = n;
var G__13557 = o;
var G__13558 = p;
var G__13559 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13543,G__13544,G__13545,G__13546,G__13547,G__13548,G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559) : self__.afn.call(null,G__13543,G__13544,G__13545,G__13546,G__13547,G__13548,G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559));
});
var G__13871__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13560 = a;
var G__13561 = b;
var G__13562 = c;
var G__13563 = d;
var G__13564 = e;
var G__13565 = f;
var G__13566 = g;
var G__13567 = h;
var G__13568 = i;
var G__13569 = j;
var G__13570 = k;
var G__13571 = l;
var G__13572 = m;
var G__13573 = n;
var G__13574 = o;
var G__13575 = p;
var G__13576 = q;
var G__13577 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13560,G__13561,G__13562,G__13563,G__13564,G__13565,G__13566,G__13567,G__13568,G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577) : self__.afn.call(null,G__13560,G__13561,G__13562,G__13563,G__13564,G__13565,G__13566,G__13567,G__13568,G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577));
});
var G__13871__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13578 = a;
var G__13579 = b;
var G__13580 = c;
var G__13581 = d;
var G__13582 = e;
var G__13583 = f;
var G__13584 = g;
var G__13585 = h;
var G__13586 = i;
var G__13587 = j;
var G__13588 = k;
var G__13589 = l;
var G__13590 = m;
var G__13591 = n;
var G__13592 = o;
var G__13593 = p;
var G__13594 = q;
var G__13595 = r;
var G__13596 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590,G__13591,G__13592,G__13593,G__13594,G__13595,G__13596) : self__.afn.call(null,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590,G__13591,G__13592,G__13593,G__13594,G__13595,G__13596));
});
var G__13871__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13597 = a;
var G__13598 = b;
var G__13599 = c;
var G__13600 = d;
var G__13601 = e;
var G__13602 = f;
var G__13603 = g;
var G__13604 = h;
var G__13605 = i;
var G__13606 = j;
var G__13607 = k;
var G__13608 = l;
var G__13609 = m;
var G__13610 = n;
var G__13611 = o;
var G__13612 = p;
var G__13613 = q;
var G__13614 = r;
var G__13615 = s;
var G__13616 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13597,G__13598,G__13599,G__13600,G__13601,G__13602,G__13603,G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610,G__13611,G__13612,G__13613,G__13614,G__13615,G__13616) : self__.afn.call(null,G__13597,G__13598,G__13599,G__13600,G__13601,G__13602,G__13603,G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610,G__13611,G__13612,G__13613,G__13614,G__13615,G__13616));
});
var G__13871__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13617 = self__.afn;
var G__13618 = a;
var G__13619 = b;
var G__13620 = c;
var G__13621 = d;
var G__13622 = e;
var G__13623 = f;
var G__13624 = g;
var G__13625 = h;
var G__13626 = i;
var G__13627 = j;
var G__13628 = k;
var G__13629 = l;
var G__13630 = m;
var G__13631 = n;
var G__13632 = o;
var G__13633 = p;
var G__13634 = q;
var G__13635 = r;
var G__13636 = s;
var G__13637 = t;
var G__13638 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13617,G__13618,G__13619,G__13620,G__13621,G__13622,G__13623,G__13624,G__13625,G__13626,G__13627,G__13628,G__13629,G__13630,G__13631,G__13632,G__13633,G__13634,G__13635,G__13636,G__13637,G__13638) : cljs.core.apply.call(null,G__13617,G__13618,G__13619,G__13620,G__13621,G__13622,G__13623,G__13624,G__13625,G__13626,G__13627,G__13628,G__13629,G__13630,G__13631,G__13632,G__13633,G__13634,G__13635,G__13636,G__13637,G__13638));
});
G__13871 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13871__1.call(this,self__);
case 2:
return G__13871__2.call(this,self__,a);
case 3:
return G__13871__3.call(this,self__,a,b);
case 4:
return G__13871__4.call(this,self__,a,b,c);
case 5:
return G__13871__5.call(this,self__,a,b,c,d);
case 6:
return G__13871__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13871__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13871__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13871__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13871__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13871__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13871__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13871__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13871__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13871__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13871__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13871__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13871__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13871__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13871__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13871__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13871__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13871.cljs$core$IFn$_invoke$arity$1 = G__13871__1;
G__13871.cljs$core$IFn$_invoke$arity$2 = G__13871__2;
G__13871.cljs$core$IFn$_invoke$arity$3 = G__13871__3;
G__13871.cljs$core$IFn$_invoke$arity$4 = G__13871__4;
G__13871.cljs$core$IFn$_invoke$arity$5 = G__13871__5;
G__13871.cljs$core$IFn$_invoke$arity$6 = G__13871__6;
G__13871.cljs$core$IFn$_invoke$arity$7 = G__13871__7;
G__13871.cljs$core$IFn$_invoke$arity$8 = G__13871__8;
G__13871.cljs$core$IFn$_invoke$arity$9 = G__13871__9;
G__13871.cljs$core$IFn$_invoke$arity$10 = G__13871__10;
G__13871.cljs$core$IFn$_invoke$arity$11 = G__13871__11;
G__13871.cljs$core$IFn$_invoke$arity$12 = G__13871__12;
G__13871.cljs$core$IFn$_invoke$arity$13 = G__13871__13;
G__13871.cljs$core$IFn$_invoke$arity$14 = G__13871__14;
G__13871.cljs$core$IFn$_invoke$arity$15 = G__13871__15;
G__13871.cljs$core$IFn$_invoke$arity$16 = G__13871__16;
G__13871.cljs$core$IFn$_invoke$arity$17 = G__13871__17;
G__13871.cljs$core$IFn$_invoke$arity$18 = G__13871__18;
G__13871.cljs$core$IFn$_invoke$arity$19 = G__13871__19;
G__13871.cljs$core$IFn$_invoke$arity$20 = G__13871__20;
G__13871.cljs$core$IFn$_invoke$arity$21 = G__13871__21;
G__13871.cljs$core$IFn$_invoke$arity$22 = G__13871__22;
return G__13871;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args13406){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13406)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__13639 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13639) : self__.afn.call(null,G__13639));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__13640 = a;
var G__13641 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13640,G__13641) : self__.afn.call(null,G__13640,G__13641));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__13642 = a;
var G__13643 = b;
var G__13644 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13642,G__13643,G__13644) : self__.afn.call(null,G__13642,G__13643,G__13644));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__13645 = a;
var G__13646 = b;
var G__13647 = c;
var G__13648 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13645,G__13646,G__13647,G__13648) : self__.afn.call(null,G__13645,G__13646,G__13647,G__13648));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__13649 = a;
var G__13650 = b;
var G__13651 = c;
var G__13652 = d;
var G__13653 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13649,G__13650,G__13651,G__13652,G__13653) : self__.afn.call(null,G__13649,G__13650,G__13651,G__13652,G__13653));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__13654 = a;
var G__13655 = b;
var G__13656 = c;
var G__13657 = d;
var G__13658 = e;
var G__13659 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13654,G__13655,G__13656,G__13657,G__13658,G__13659) : self__.afn.call(null,G__13654,G__13655,G__13656,G__13657,G__13658,G__13659));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__13660 = a;
var G__13661 = b;
var G__13662 = c;
var G__13663 = d;
var G__13664 = e;
var G__13665 = f;
var G__13666 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13660,G__13661,G__13662,G__13663,G__13664,G__13665,G__13666) : self__.afn.call(null,G__13660,G__13661,G__13662,G__13663,G__13664,G__13665,G__13666));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__13667 = a;
var G__13668 = b;
var G__13669 = c;
var G__13670 = d;
var G__13671 = e;
var G__13672 = f;
var G__13673 = g;
var G__13674 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13667,G__13668,G__13669,G__13670,G__13671,G__13672,G__13673,G__13674) : self__.afn.call(null,G__13667,G__13668,G__13669,G__13670,G__13671,G__13672,G__13673,G__13674));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__13675 = a;
var G__13676 = b;
var G__13677 = c;
var G__13678 = d;
var G__13679 = e;
var G__13680 = f;
var G__13681 = g;
var G__13682 = h;
var G__13683 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13675,G__13676,G__13677,G__13678,G__13679,G__13680,G__13681,G__13682,G__13683) : self__.afn.call(null,G__13675,G__13676,G__13677,G__13678,G__13679,G__13680,G__13681,G__13682,G__13683));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__13684 = a;
var G__13685 = b;
var G__13686 = c;
var G__13687 = d;
var G__13688 = e;
var G__13689 = f;
var G__13690 = g;
var G__13691 = h;
var G__13692 = i;
var G__13693 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13684,G__13685,G__13686,G__13687,G__13688,G__13689,G__13690,G__13691,G__13692,G__13693) : self__.afn.call(null,G__13684,G__13685,G__13686,G__13687,G__13688,G__13689,G__13690,G__13691,G__13692,G__13693));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__13694 = a;
var G__13695 = b;
var G__13696 = c;
var G__13697 = d;
var G__13698 = e;
var G__13699 = f;
var G__13700 = g;
var G__13701 = h;
var G__13702 = i;
var G__13703 = j;
var G__13704 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13694,G__13695,G__13696,G__13697,G__13698,G__13699,G__13700,G__13701,G__13702,G__13703,G__13704) : self__.afn.call(null,G__13694,G__13695,G__13696,G__13697,G__13698,G__13699,G__13700,G__13701,G__13702,G__13703,G__13704));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__13705 = a;
var G__13706 = b;
var G__13707 = c;
var G__13708 = d;
var G__13709 = e;
var G__13710 = f;
var G__13711 = g;
var G__13712 = h;
var G__13713 = i;
var G__13714 = j;
var G__13715 = k;
var G__13716 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13705,G__13706,G__13707,G__13708,G__13709,G__13710,G__13711,G__13712,G__13713,G__13714,G__13715,G__13716) : self__.afn.call(null,G__13705,G__13706,G__13707,G__13708,G__13709,G__13710,G__13711,G__13712,G__13713,G__13714,G__13715,G__13716));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__13717 = a;
var G__13718 = b;
var G__13719 = c;
var G__13720 = d;
var G__13721 = e;
var G__13722 = f;
var G__13723 = g;
var G__13724 = h;
var G__13725 = i;
var G__13726 = j;
var G__13727 = k;
var G__13728 = l;
var G__13729 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13717,G__13718,G__13719,G__13720,G__13721,G__13722,G__13723,G__13724,G__13725,G__13726,G__13727,G__13728,G__13729) : self__.afn.call(null,G__13717,G__13718,G__13719,G__13720,G__13721,G__13722,G__13723,G__13724,G__13725,G__13726,G__13727,G__13728,G__13729));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__13730 = a;
var G__13731 = b;
var G__13732 = c;
var G__13733 = d;
var G__13734 = e;
var G__13735 = f;
var G__13736 = g;
var G__13737 = h;
var G__13738 = i;
var G__13739 = j;
var G__13740 = k;
var G__13741 = l;
var G__13742 = m;
var G__13743 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13730,G__13731,G__13732,G__13733,G__13734,G__13735,G__13736,G__13737,G__13738,G__13739,G__13740,G__13741,G__13742,G__13743) : self__.afn.call(null,G__13730,G__13731,G__13732,G__13733,G__13734,G__13735,G__13736,G__13737,G__13738,G__13739,G__13740,G__13741,G__13742,G__13743));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__13744 = a;
var G__13745 = b;
var G__13746 = c;
var G__13747 = d;
var G__13748 = e;
var G__13749 = f;
var G__13750 = g;
var G__13751 = h;
var G__13752 = i;
var G__13753 = j;
var G__13754 = k;
var G__13755 = l;
var G__13756 = m;
var G__13757 = n;
var G__13758 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13744,G__13745,G__13746,G__13747,G__13748,G__13749,G__13750,G__13751,G__13752,G__13753,G__13754,G__13755,G__13756,G__13757,G__13758) : self__.afn.call(null,G__13744,G__13745,G__13746,G__13747,G__13748,G__13749,G__13750,G__13751,G__13752,G__13753,G__13754,G__13755,G__13756,G__13757,G__13758));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__13759 = a;
var G__13760 = b;
var G__13761 = c;
var G__13762 = d;
var G__13763 = e;
var G__13764 = f;
var G__13765 = g;
var G__13766 = h;
var G__13767 = i;
var G__13768 = j;
var G__13769 = k;
var G__13770 = l;
var G__13771 = m;
var G__13772 = n;
var G__13773 = o;
var G__13774 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13759,G__13760,G__13761,G__13762,G__13763,G__13764,G__13765,G__13766,G__13767,G__13768,G__13769,G__13770,G__13771,G__13772,G__13773,G__13774) : self__.afn.call(null,G__13759,G__13760,G__13761,G__13762,G__13763,G__13764,G__13765,G__13766,G__13767,G__13768,G__13769,G__13770,G__13771,G__13772,G__13773,G__13774));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__13775 = a;
var G__13776 = b;
var G__13777 = c;
var G__13778 = d;
var G__13779 = e;
var G__13780 = f;
var G__13781 = g;
var G__13782 = h;
var G__13783 = i;
var G__13784 = j;
var G__13785 = k;
var G__13786 = l;
var G__13787 = m;
var G__13788 = n;
var G__13789 = o;
var G__13790 = p;
var G__13791 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13775,G__13776,G__13777,G__13778,G__13779,G__13780,G__13781,G__13782,G__13783,G__13784,G__13785,G__13786,G__13787,G__13788,G__13789,G__13790,G__13791) : self__.afn.call(null,G__13775,G__13776,G__13777,G__13778,G__13779,G__13780,G__13781,G__13782,G__13783,G__13784,G__13785,G__13786,G__13787,G__13788,G__13789,G__13790,G__13791));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__13792 = a;
var G__13793 = b;
var G__13794 = c;
var G__13795 = d;
var G__13796 = e;
var G__13797 = f;
var G__13798 = g;
var G__13799 = h;
var G__13800 = i;
var G__13801 = j;
var G__13802 = k;
var G__13803 = l;
var G__13804 = m;
var G__13805 = n;
var G__13806 = o;
var G__13807 = p;
var G__13808 = q;
var G__13809 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13792,G__13793,G__13794,G__13795,G__13796,G__13797,G__13798,G__13799,G__13800,G__13801,G__13802,G__13803,G__13804,G__13805,G__13806,G__13807,G__13808,G__13809) : self__.afn.call(null,G__13792,G__13793,G__13794,G__13795,G__13796,G__13797,G__13798,G__13799,G__13800,G__13801,G__13802,G__13803,G__13804,G__13805,G__13806,G__13807,G__13808,G__13809));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__13810 = a;
var G__13811 = b;
var G__13812 = c;
var G__13813 = d;
var G__13814 = e;
var G__13815 = f;
var G__13816 = g;
var G__13817 = h;
var G__13818 = i;
var G__13819 = j;
var G__13820 = k;
var G__13821 = l;
var G__13822 = m;
var G__13823 = n;
var G__13824 = o;
var G__13825 = p;
var G__13826 = q;
var G__13827 = r;
var G__13828 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13810,G__13811,G__13812,G__13813,G__13814,G__13815,G__13816,G__13817,G__13818,G__13819,G__13820,G__13821,G__13822,G__13823,G__13824,G__13825,G__13826,G__13827,G__13828) : self__.afn.call(null,G__13810,G__13811,G__13812,G__13813,G__13814,G__13815,G__13816,G__13817,G__13818,G__13819,G__13820,G__13821,G__13822,G__13823,G__13824,G__13825,G__13826,G__13827,G__13828));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__13829 = a;
var G__13830 = b;
var G__13831 = c;
var G__13832 = d;
var G__13833 = e;
var G__13834 = f;
var G__13835 = g;
var G__13836 = h;
var G__13837 = i;
var G__13838 = j;
var G__13839 = k;
var G__13840 = l;
var G__13841 = m;
var G__13842 = n;
var G__13843 = o;
var G__13844 = p;
var G__13845 = q;
var G__13846 = r;
var G__13847 = s;
var G__13848 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13829,G__13830,G__13831,G__13832,G__13833,G__13834,G__13835,G__13836,G__13837,G__13838,G__13839,G__13840,G__13841,G__13842,G__13843,G__13844,G__13845,G__13846,G__13847,G__13848) : self__.afn.call(null,G__13829,G__13830,G__13831,G__13832,G__13833,G__13834,G__13835,G__13836,G__13837,G__13838,G__13839,G__13840,G__13841,G__13842,G__13843,G__13844,G__13845,G__13846,G__13847,G__13848));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__13849 = self__.afn;
var G__13850 = a;
var G__13851 = b;
var G__13852 = c;
var G__13853 = d;
var G__13854 = e;
var G__13855 = f;
var G__13856 = g;
var G__13857 = h;
var G__13858 = i;
var G__13859 = j;
var G__13860 = k;
var G__13861 = l;
var G__13862 = m;
var G__13863 = n;
var G__13864 = o;
var G__13865 = p;
var G__13866 = q;
var G__13867 = r;
var G__13868 = s;
var G__13869 = t;
var G__13870 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13849,G__13850,G__13851,G__13852,G__13853,G__13854,G__13855,G__13856,G__13857,G__13858,G__13859,G__13860,G__13861,G__13862,G__13863,G__13864,G__13865,G__13866,G__13867,G__13868,G__13869,G__13870) : cljs.core.apply.call(null,G__13849,G__13850,G__13851,G__13852,G__13853,G__13854,G__13855,G__13856,G__13857,G__13858,G__13859,G__13860,G__13861,G__13862,G__13863,G__13864,G__13865,G__13866,G__13867,G__13868,G__13869,G__13870));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__13875 = o;
if(G__13875){
var bit__11622__auto__ = (G__13875.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__11622__auto__) || (G__13875.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__13875.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13875);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13875);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__10929__auto__ = !((o == null));
if(and__10929__auto__){
var G__13879 = o;
if(G__13879){
var bit__11622__auto__ = (G__13879.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__11622__auto__) || (G__13879.cljs$core$IMeta$)){
return true;
} else {
if((!G__13879.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13879);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13879);
}
} else {
return and__10929__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__13882__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13883 = ret;
var G__13884 = cljs.core.first(ks);
var G__13885 = cljs.core.next(ks);
coll = G__13883;
k = G__13884;
ks = G__13885;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13882 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13886__i = 0, G__13886__a = new Array(arguments.length -  2);
while (G__13886__i < G__13886__a.length) {G__13886__a[G__13886__i] = arguments[G__13886__i + 2]; ++G__13886__i;}
  ks = new cljs.core.IndexedSeq(G__13886__a,0);
} 
return G__13882__delegate.call(this,coll,k,ks);};
G__13882.cljs$lang$maxFixedArity = 2;
G__13882.cljs$lang$applyTo = (function (arglist__13887){
var coll = cljs.core.first(arglist__13887);
arglist__13887 = cljs.core.next(arglist__13887);
var k = cljs.core.first(arglist__13887);
var ks = cljs.core.rest(arglist__13887);
return G__13882__delegate(coll,k,ks);
});
G__13882.cljs$core$IFn$_invoke$arity$variadic = G__13882__delegate;
return G__13882;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__13888 = null;
if (arguments.length > 2) {
var G__13889__i = 0, G__13889__a = new Array(arguments.length -  2);
while (G__13889__i < G__13889__a.length) {G__13889__a[G__13889__i] = arguments[G__13889__i + 2]; ++G__13889__i;}
G__13888 = new cljs.core.IndexedSeq(G__13889__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13891 = x;
if(G__13891){
var bit__11622__auto__ = (G__13891.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__11622__auto__) || (G__13891.cljs$core$ICollection$)){
return true;
} else {
if((!G__13891.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13891);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13891);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13893 = x;
if(G__13893){
var bit__11622__auto__ = (G__13893.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__11622__auto__) || (G__13893.cljs$core$ISet$)){
return true;
} else {
if((!G__13893.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13893);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13893);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__13895 = x;
if(G__13895){
var bit__11622__auto__ = (G__13895.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__11622__auto__) || (G__13895.cljs$core$IAssociative$)){
return true;
} else {
if((!G__13895.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13895);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13895);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__13897 = x;
if(G__13897){
var bit__11622__auto__ = (G__13897.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__11622__auto__) || (G__13897.cljs$core$ISequential$)){
return true;
} else {
if((!G__13897.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13897);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13897);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__13899 = x;
if(G__13899){
var bit__11622__auto__ = (G__13899.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__11622__auto__) || (G__13899.cljs$core$ISorted$)){
return true;
} else {
if((!G__13899.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13899);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13899);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__13901 = x;
if(G__13901){
var bit__11622__auto__ = (G__13901.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__11622__auto__) || (G__13901.cljs$core$IReduce$)){
return true;
} else {
if((!G__13901.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13901);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13901);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13903 = x;
if(G__13903){
var bit__11622__auto__ = (G__13903.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__11622__auto__) || (G__13903.cljs$core$IMap$)){
return true;
} else {
if((!G__13903.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13903);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13903);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__13905 = x;
if(G__13905){
var bit__11622__auto__ = (G__13905.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__11622__auto__) || (G__13905.cljs$core$IVector$)){
return true;
} else {
if((!G__13905.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13905);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13905);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__13907 = x;
if(G__13907){
var bit__11615__auto__ = (G__13907.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__11615__auto__) || (G__13907.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj13913 = {};
return obj13913;
});
var js_obj__1 = (function() { 
var G__13916__delegate = function (keyvals){
var G__13914 = goog.object.create;
var G__13915 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__13914,G__13915) : cljs.core.apply.call(null,G__13914,G__13915));
};
var G__13916 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13917__i = 0, G__13917__a = new Array(arguments.length -  0);
while (G__13917__i < G__13917__a.length) {G__13917__a[G__13917__i] = arguments[G__13917__i + 0]; ++G__13917__i;}
  keyvals = new cljs.core.IndexedSeq(G__13917__a,0);
} 
return G__13916__delegate.call(this,keyvals);};
G__13916.cljs$lang$maxFixedArity = 0;
G__13916.cljs$lang$applyTo = (function (arglist__13918){
var keyvals = cljs.core.seq(arglist__13918);
return G__13916__delegate(keyvals);
});
G__13916.cljs$core$IFn$_invoke$arity$variadic = G__13916__delegate;
return G__13916;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__13919 = null;
if (arguments.length > 0) {
var G__13920__i = 0, G__13920__a = new Array(arguments.length -  0);
while (G__13920__i < G__13920__a.length) {G__13920__a[G__13920__i] = arguments[G__13920__i + 0]; ++G__13920__i;}
G__13919 = new cljs.core.IndexedSeq(G__13920__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__13919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__13923_13925 = obj;
var G__13924_13926 = ((function (G__13923_13925,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__13923_13925,keys))
;
goog.object.forEach(G__13923_13925,G__13924_13926);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13927 = (i__$1 + (1));
var G__13928 = (j__$1 + (1));
var G__13929 = (len__$1 - (1));
i__$1 = G__13927;
j__$1 = G__13928;
len__$1 = G__13929;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13930 = (i__$1 - (1));
var G__13931 = (j__$1 - (1));
var G__13932 = (len__$1 - (1));
i__$1 = G__13930;
j__$1 = G__13931;
len__$1 = G__13932;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj13934 = {};
return obj13934;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__13936 = s;
if(G__13936){
var bit__11622__auto__ = (G__13936.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11622__auto__) || (G__13936.cljs$core$ISeq$)){
return true;
} else {
if((!G__13936.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13936);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13936);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__13938 = s;
if(G__13938){
var bit__11622__auto__ = (G__13938.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__11622__auto__) || (G__13938.cljs$core$ISeqable$)){
return true;
} else {
if((!G__13938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13938);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__10941__auto__ = cljs.core.fn_QMARK_(f);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var G__13942 = f;
if(G__13942){
var bit__11622__auto__ = (G__13942.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__11622__auto__) || (G__13942.cljs$core$IFn$)){
return true;
} else {
if((!G__13942.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13942);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13942);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__13955 = n;
return isNaN(G__13955);
})())) && (!((n === Infinity))) && (((function (){var G__13956 = n;
return parseFloat(G__13956);
})() === (function (){var G__13957 = n;
var G__13958 = (10);
return parseInt(G__13957,G__13958);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__13959__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__13960 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__13961 = etc;
s = G__13960;
xs = G__13961;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__13959 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13962__i = 0, G__13962__a = new Array(arguments.length -  2);
while (G__13962__i < G__13962__a.length) {G__13962__a[G__13962__i] = arguments[G__13962__i + 2]; ++G__13962__i;}
  more = new cljs.core.IndexedSeq(G__13962__a,0);
} 
return G__13959__delegate.call(this,x,y,more);};
G__13959.cljs$lang$maxFixedArity = 2;
G__13959.cljs$lang$applyTo = (function (arglist__13963){
var x = cljs.core.first(arglist__13963);
arglist__13963 = cljs.core.next(arglist__13963);
var y = cljs.core.first(arglist__13963);
var more = cljs.core.rest(arglist__13963);
return G__13959__delegate(x,y,more);
});
G__13959.cljs$core$IFn$_invoke$arity$variadic = G__13959__delegate;
return G__13959;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__13964 = null;
if (arguments.length > 2) {
var G__13965__i = 0, G__13965__a = new Array(arguments.length -  2);
while (G__13965__i < G__13965__a.length) {G__13965__a[G__13965__i] = arguments[G__13965__i + 2]; ++G__13965__i;}
G__13964 = new cljs.core.IndexedSeq(G__13965__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__13969 = x;
if(G__13969){
var bit__11615__auto__ = (G__13969.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__11615__auto__) || (G__13969.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__13970 = x;
var G__13971 = y;
return goog.array.defaultCompare(G__13970,G__13971);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__13976 = xs;
var G__13977 = ys;
var G__13978 = len;
var G__13979 = (n + (1));
xs = G__13976;
ys = G__13977;
len = G__13978;
n = G__13979;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__13984 = x;
var G__13985 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13984,G__13985) : f.call(null,G__13984,G__13985));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13986 = y;
var G__13987 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13986,G__13987) : f.call(null,G__13986,G__13987));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__13993 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13993) : cljs.core.to_array.call(null,G__13993));
})();
var G__13994_13996 = a;
var G__13995_13997 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__13994_13996,G__13995_13997);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__14003 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14003) : keyfn.call(null,G__14003));
})(),(function (){var G__14004 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14004) : keyfn.call(null,G__14004));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var G__14010 = f;
var G__14011 = cljs.core.first(s);
var G__14012 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__14010,G__14011,G__14012) : cljs.core.reduce.call(null,G__14010,G__14011,G__14012));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__14013 = val__$1;
var G__14014 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14013,G__14014) : f.call(null,G__14013,G__14014));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__14015 = nval;
var G__14016 = cljs.core.next(coll__$1);
val__$1 = G__14015;
coll__$1 = G__14016;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__14020 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__14020) : cljs.core.to_array.call(null,G__14020));
})();
var G__14021_14023 = a;
goog.array.shuffle(G__14021_14023);

var G__14022 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__14022) : cljs.core.vec.call(null,G__14022));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__14026 = coll;
if(G__14026){
var bit__11615__auto__ = (G__14026.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__11615__auto__) || (G__14026.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__14027 = coll;
if(G__14027){
var bit__11615__auto__ = (G__14027.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__11615__auto__) || (G__14027.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__14036 = null;
var G__14036__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__14036__1 = (function (x){
var G__14033 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__14033) : cf.call(null,G__14033));
});
var G__14036__2 = (function (x,y){
var G__14034 = x;
var G__14035 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14034,G__14035) : f.call(null,G__14034,G__14035));
});
G__14036 = function(x,y){
switch(arguments.length){
case 0:
return G__14036__0.call(this);
case 1:
return G__14036__1.call(this,x);
case 2:
return G__14036__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14036.cljs$core$IFn$_invoke$arity$0 = G__14036__0;
G__14036.cljs$core$IFn$_invoke$arity$1 = G__14036__1;
G__14036.cljs$core$IFn$_invoke$arity$2 = G__14036__2;
return G__14036;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__14043 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14043) : xform.call(null,G__14043));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__14044 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__14044) : f__$1.call(null,G__14044));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__14045__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__14045 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14046__i = 0, G__14046__a = new Array(arguments.length -  2);
while (G__14046__i < G__14046__a.length) {G__14046__a[G__14046__i] = arguments[G__14046__i + 2]; ++G__14046__i;}
  more = new cljs.core.IndexedSeq(G__14046__a,0);
} 
return G__14045__delegate.call(this,x,y,more);};
G__14045.cljs$lang$maxFixedArity = 2;
G__14045.cljs$lang$applyTo = (function (arglist__14047){
var x = cljs.core.first(arglist__14047);
arglist__14047 = cljs.core.next(arglist__14047);
var y = cljs.core.first(arglist__14047);
var more = cljs.core.rest(arglist__14047);
return G__14045__delegate(x,y,more);
});
G__14045.cljs$core$IFn$_invoke$arity$variadic = G__14045__delegate;
return G__14045;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__14048 = null;
if (arguments.length > 2) {
var G__14049__i = 0, G__14049__a = new Array(arguments.length -  2);
while (G__14049__i < G__14049__a.length) {G__14049__a[G__14049__i] = arguments[G__14049__i + 2]; ++G__14049__i;}
G__14048 = new cljs.core.IndexedSeq(G__14049__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__14050__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__14050 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14051__i = 0, G__14051__a = new Array(arguments.length -  2);
while (G__14051__i < G__14051__a.length) {G__14051__a[G__14051__i] = arguments[G__14051__i + 2]; ++G__14051__i;}
  more = new cljs.core.IndexedSeq(G__14051__a,0);
} 
return G__14050__delegate.call(this,x,y,more);};
G__14050.cljs$lang$maxFixedArity = 2;
G__14050.cljs$lang$applyTo = (function (arglist__14052){
var x = cljs.core.first(arglist__14052);
arglist__14052 = cljs.core.next(arglist__14052);
var y = cljs.core.first(arglist__14052);
var more = cljs.core.rest(arglist__14052);
return G__14050__delegate(x,y,more);
});
G__14050.cljs$core$IFn$_invoke$arity$variadic = G__14050__delegate;
return G__14050;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__14053 = null;
if (arguments.length > 2) {
var G__14054__i = 0, G__14054__a = new Array(arguments.length -  2);
while (G__14054__i < G__14054__a.length) {G__14054__a[G__14054__i] = arguments[G__14054__i + 2]; ++G__14054__i;}
G__14053 = new cljs.core.IndexedSeq(G__14054__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14053);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__14055__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__14055 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14056__i = 0, G__14056__a = new Array(arguments.length -  2);
while (G__14056__i < G__14056__a.length) {G__14056__a[G__14056__i] = arguments[G__14056__i + 2]; ++G__14056__i;}
  more = new cljs.core.IndexedSeq(G__14056__a,0);
} 
return G__14055__delegate.call(this,x,y,more);};
G__14055.cljs$lang$maxFixedArity = 2;
G__14055.cljs$lang$applyTo = (function (arglist__14057){
var x = cljs.core.first(arglist__14057);
arglist__14057 = cljs.core.next(arglist__14057);
var y = cljs.core.first(arglist__14057);
var more = cljs.core.rest(arglist__14057);
return G__14055__delegate(x,y,more);
});
G__14055.cljs$core$IFn$_invoke$arity$variadic = G__14055__delegate;
return G__14055;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__14058 = null;
if (arguments.length > 2) {
var G__14059__i = 0, G__14059__a = new Array(arguments.length -  2);
while (G__14059__i < G__14059__a.length) {G__14059__a[G__14059__i] = arguments[G__14059__i + 2]; ++G__14059__i;}
G__14058 = new cljs.core.IndexedSeq(G__14059__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__14064__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__14064 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14065__i = 0, G__14065__a = new Array(arguments.length -  2);
while (G__14065__i < G__14065__a.length) {G__14065__a[G__14065__i] = arguments[G__14065__i + 2]; ++G__14065__i;}
  more = new cljs.core.IndexedSeq(G__14065__a,0);
} 
return G__14064__delegate.call(this,x,y,more);};
G__14064.cljs$lang$maxFixedArity = 2;
G__14064.cljs$lang$applyTo = (function (arglist__14066){
var x = cljs.core.first(arglist__14066);
arglist__14066 = cljs.core.next(arglist__14066);
var y = cljs.core.first(arglist__14066);
var more = cljs.core.rest(arglist__14066);
return G__14064__delegate(x,y,more);
});
G__14064.cljs$core$IFn$_invoke$arity$variadic = G__14064__delegate;
return G__14064;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__14067 = null;
if (arguments.length > 2) {
var G__14068__i = 0, G__14068__a = new Array(arguments.length -  2);
while (G__14068__i < G__14068__a.length) {G__14068__a[G__14068__i] = arguments[G__14068__i + 2]; ++G__14068__i;}
G__14067 = new cljs.core.IndexedSeq(G__14068__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__14069__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__14070 = y;
var G__14071 = cljs.core.first(more);
var G__14072 = cljs.core.next(more);
x = G__14070;
y = G__14071;
more = G__14072;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14069 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14073__i = 0, G__14073__a = new Array(arguments.length -  2);
while (G__14073__i < G__14073__a.length) {G__14073__a[G__14073__i] = arguments[G__14073__i + 2]; ++G__14073__i;}
  more = new cljs.core.IndexedSeq(G__14073__a,0);
} 
return G__14069__delegate.call(this,x,y,more);};
G__14069.cljs$lang$maxFixedArity = 2;
G__14069.cljs$lang$applyTo = (function (arglist__14074){
var x = cljs.core.first(arglist__14074);
arglist__14074 = cljs.core.next(arglist__14074);
var y = cljs.core.first(arglist__14074);
var more = cljs.core.rest(arglist__14074);
return G__14069__delegate(x,y,more);
});
G__14069.cljs$core$IFn$_invoke$arity$variadic = G__14069__delegate;
return G__14069;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__14075 = null;
if (arguments.length > 2) {
var G__14076__i = 0, G__14076__a = new Array(arguments.length -  2);
while (G__14076__i < G__14076__a.length) {G__14076__a[G__14076__i] = arguments[G__14076__i + 2]; ++G__14076__i;}
G__14075 = new cljs.core.IndexedSeq(G__14076__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__14077__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__14078 = y;
var G__14079 = cljs.core.first(more);
var G__14080 = cljs.core.next(more);
x = G__14078;
y = G__14079;
more = G__14080;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14077 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14081__i = 0, G__14081__a = new Array(arguments.length -  2);
while (G__14081__i < G__14081__a.length) {G__14081__a[G__14081__i] = arguments[G__14081__i + 2]; ++G__14081__i;}
  more = new cljs.core.IndexedSeq(G__14081__a,0);
} 
return G__14077__delegate.call(this,x,y,more);};
G__14077.cljs$lang$maxFixedArity = 2;
G__14077.cljs$lang$applyTo = (function (arglist__14082){
var x = cljs.core.first(arglist__14082);
arglist__14082 = cljs.core.next(arglist__14082);
var y = cljs.core.first(arglist__14082);
var more = cljs.core.rest(arglist__14082);
return G__14077__delegate(x,y,more);
});
G__14077.cljs$core$IFn$_invoke$arity$variadic = G__14077__delegate;
return G__14077;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__14083 = null;
if (arguments.length > 2) {
var G__14084__i = 0, G__14084__a = new Array(arguments.length -  2);
while (G__14084__i < G__14084__a.length) {G__14084__a[G__14084__i] = arguments[G__14084__i + 2]; ++G__14084__i;}
G__14083 = new cljs.core.IndexedSeq(G__14084__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__14085__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__14086 = y;
var G__14087 = cljs.core.first(more);
var G__14088 = cljs.core.next(more);
x = G__14086;
y = G__14087;
more = G__14088;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14085 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14089__i = 0, G__14089__a = new Array(arguments.length -  2);
while (G__14089__i < G__14089__a.length) {G__14089__a[G__14089__i] = arguments[G__14089__i + 2]; ++G__14089__i;}
  more = new cljs.core.IndexedSeq(G__14089__a,0);
} 
return G__14085__delegate.call(this,x,y,more);};
G__14085.cljs$lang$maxFixedArity = 2;
G__14085.cljs$lang$applyTo = (function (arglist__14090){
var x = cljs.core.first(arglist__14090);
arglist__14090 = cljs.core.next(arglist__14090);
var y = cljs.core.first(arglist__14090);
var more = cljs.core.rest(arglist__14090);
return G__14085__delegate(x,y,more);
});
G__14085.cljs$core$IFn$_invoke$arity$variadic = G__14085__delegate;
return G__14085;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__14091 = null;
if (arguments.length > 2) {
var G__14092__i = 0, G__14092__a = new Array(arguments.length -  2);
while (G__14092__i < G__14092__a.length) {G__14092__a[G__14092__i] = arguments[G__14092__i + 2]; ++G__14092__i;}
G__14091 = new cljs.core.IndexedSeq(G__14092__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14091);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__14093__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__14094 = y;
var G__14095 = cljs.core.first(more);
var G__14096 = cljs.core.next(more);
x = G__14094;
y = G__14095;
more = G__14096;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14093 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14097__i = 0, G__14097__a = new Array(arguments.length -  2);
while (G__14097__i < G__14097__a.length) {G__14097__a[G__14097__i] = arguments[G__14097__i + 2]; ++G__14097__i;}
  more = new cljs.core.IndexedSeq(G__14097__a,0);
} 
return G__14093__delegate.call(this,x,y,more);};
G__14093.cljs$lang$maxFixedArity = 2;
G__14093.cljs$lang$applyTo = (function (arglist__14098){
var x = cljs.core.first(arglist__14098);
arglist__14098 = cljs.core.next(arglist__14098);
var y = cljs.core.first(arglist__14098);
var more = cljs.core.rest(arglist__14098);
return G__14093__delegate(x,y,more);
});
G__14093.cljs$core$IFn$_invoke$arity$variadic = G__14093__delegate;
return G__14093;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__14099 = null;
if (arguments.length > 2) {
var G__14100__i = 0, G__14100__a = new Array(arguments.length -  2);
while (G__14100__i < G__14100__a.length) {G__14100__a[G__14100__i] = arguments[G__14100__i + 2]; ++G__14100__i;}
G__14099 = new cljs.core.IndexedSeq(G__14100__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__11258__auto__ = x;
var y__11259__auto__ = y;
return ((x__11258__auto__ > y__11259__auto__) ? x__11258__auto__ : y__11259__auto__);
});
var max__3 = (function() { 
var G__14101__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__11258__auto__ = x;
var y__11259__auto__ = y;
return ((x__11258__auto__ > y__11259__auto__) ? x__11258__auto__ : y__11259__auto__);
})(),more);
};
var G__14101 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14102__i = 0, G__14102__a = new Array(arguments.length -  2);
while (G__14102__i < G__14102__a.length) {G__14102__a[G__14102__i] = arguments[G__14102__i + 2]; ++G__14102__i;}
  more = new cljs.core.IndexedSeq(G__14102__a,0);
} 
return G__14101__delegate.call(this,x,y,more);};
G__14101.cljs$lang$maxFixedArity = 2;
G__14101.cljs$lang$applyTo = (function (arglist__14103){
var x = cljs.core.first(arglist__14103);
arglist__14103 = cljs.core.next(arglist__14103);
var y = cljs.core.first(arglist__14103);
var more = cljs.core.rest(arglist__14103);
return G__14101__delegate(x,y,more);
});
G__14101.cljs$core$IFn$_invoke$arity$variadic = G__14101__delegate;
return G__14101;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__14104 = null;
if (arguments.length > 2) {
var G__14105__i = 0, G__14105__a = new Array(arguments.length -  2);
while (G__14105__i < G__14105__a.length) {G__14105__a[G__14105__i] = arguments[G__14105__i + 2]; ++G__14105__i;}
G__14104 = new cljs.core.IndexedSeq(G__14105__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__11265__auto__ = x;
var y__11266__auto__ = y;
return ((x__11265__auto__ < y__11266__auto__) ? x__11265__auto__ : y__11266__auto__);
});
var min__3 = (function() { 
var G__14106__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__11265__auto__ = x;
var y__11266__auto__ = y;
return ((x__11265__auto__ < y__11266__auto__) ? x__11265__auto__ : y__11266__auto__);
})(),more);
};
var G__14106 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14107__i = 0, G__14107__a = new Array(arguments.length -  2);
while (G__14107__i < G__14107__a.length) {G__14107__a[G__14107__i] = arguments[G__14107__i + 2]; ++G__14107__i;}
  more = new cljs.core.IndexedSeq(G__14107__a,0);
} 
return G__14106__delegate.call(this,x,y,more);};
G__14106.cljs$lang$maxFixedArity = 2;
G__14106.cljs$lang$applyTo = (function (arglist__14108){
var x = cljs.core.first(arglist__14108);
arglist__14108 = cljs.core.next(arglist__14108);
var y = cljs.core.first(arglist__14108);
var more = cljs.core.rest(arglist__14108);
return G__14106__delegate(x,y,more);
});
G__14106.cljs$core$IFn$_invoke$arity$variadic = G__14106__delegate;
return G__14106;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__14109 = null;
if (arguments.length > 2) {
var G__14110__i = 0, G__14110__a = new Array(arguments.length -  2);
while (G__14110__i < G__14110__a.length) {G__14110__a[G__14110__i] = arguments[G__14110__i + 2]; ++G__14110__i;}
G__14109 = new cljs.core.IndexedSeq(G__14110__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__14111__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__14111 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14112__i = 0, G__14112__a = new Array(arguments.length -  2);
while (G__14112__i < G__14112__a.length) {G__14112__a[G__14112__i] = arguments[G__14112__i + 2]; ++G__14112__i;}
  more = new cljs.core.IndexedSeq(G__14112__a,0);
} 
return G__14111__delegate.call(this,x,y,more);};
G__14111.cljs$lang$maxFixedArity = 2;
G__14111.cljs$lang$applyTo = (function (arglist__14113){
var x = cljs.core.first(arglist__14113);
arglist__14113 = cljs.core.next(arglist__14113);
var y = cljs.core.first(arglist__14113);
var more = cljs.core.rest(arglist__14113);
return G__14111__delegate(x,y,more);
});
G__14111.cljs$core$IFn$_invoke$arity$variadic = G__14111__delegate;
return G__14111;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__14114 = null;
if (arguments.length > 2) {
var G__14115__i = 0, G__14115__a = new Array(arguments.length -  2);
while (G__14115__i < G__14115__a.length) {G__14115__a[G__14115__i] = arguments[G__14115__i + 2]; ++G__14115__i;}
G__14114 = new cljs.core.IndexedSeq(G__14115__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14114);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__14116__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__14116 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14117__i = 0, G__14117__a = new Array(arguments.length -  2);
while (G__14117__i < G__14117__a.length) {G__14117__a[G__14117__i] = arguments[G__14117__i + 2]; ++G__14117__i;}
  more = new cljs.core.IndexedSeq(G__14117__a,0);
} 
return G__14116__delegate.call(this,x,y,more);};
G__14116.cljs$lang$maxFixedArity = 2;
G__14116.cljs$lang$applyTo = (function (arglist__14118){
var x = cljs.core.first(arglist__14118);
arglist__14118 = cljs.core.next(arglist__14118);
var y = cljs.core.first(arglist__14118);
var more = cljs.core.rest(arglist__14118);
return G__14116__delegate(x,y,more);
});
G__14116.cljs$core$IFn$_invoke$arity$variadic = G__14116__delegate;
return G__14116;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__14119 = null;
if (arguments.length > 2) {
var G__14120__i = 0, G__14120__a = new Array(arguments.length -  2);
while (G__14120__i < G__14120__a.length) {G__14120__a[G__14120__i] = arguments[G__14120__i + 2]; ++G__14120__i;}
G__14119 = new cljs.core.IndexedSeq(G__14120__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__14125__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__14125 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14126__i = 0, G__14126__a = new Array(arguments.length -  2);
while (G__14126__i < G__14126__a.length) {G__14126__a[G__14126__i] = arguments[G__14126__i + 2]; ++G__14126__i;}
  more = new cljs.core.IndexedSeq(G__14126__a,0);
} 
return G__14125__delegate.call(this,x,y,more);};
G__14125.cljs$lang$maxFixedArity = 2;
G__14125.cljs$lang$applyTo = (function (arglist__14127){
var x = cljs.core.first(arglist__14127);
arglist__14127 = cljs.core.next(arglist__14127);
var y = cljs.core.first(arglist__14127);
var more = cljs.core.rest(arglist__14127);
return G__14125__delegate(x,y,more);
});
G__14125.cljs$core$IFn$_invoke$arity$variadic = G__14125__delegate;
return G__14125;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__14128 = null;
if (arguments.length > 2) {
var G__14129__i = 0, G__14129__a = new Array(arguments.length -  2);
while (G__14129__i < G__14129__a.length) {G__14129__a[G__14129__i] = arguments[G__14129__i + 2]; ++G__14129__i;}
G__14128 = new cljs.core.IndexedSeq(G__14129__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__14130__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__14130 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14131__i = 0, G__14131__a = new Array(arguments.length -  2);
while (G__14131__i < G__14131__a.length) {G__14131__a[G__14131__i] = arguments[G__14131__i + 2]; ++G__14131__i;}
  more = new cljs.core.IndexedSeq(G__14131__a,0);
} 
return G__14130__delegate.call(this,x,y,more);};
G__14130.cljs$lang$maxFixedArity = 2;
G__14130.cljs$lang$applyTo = (function (arglist__14132){
var x = cljs.core.first(arglist__14132);
arglist__14132 = cljs.core.next(arglist__14132);
var y = cljs.core.first(arglist__14132);
var more = cljs.core.rest(arglist__14132);
return G__14130__delegate(x,y,more);
});
G__14130.cljs$core$IFn$_invoke$arity$variadic = G__14130__delegate;
return G__14130;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__14133 = null;
if (arguments.length > 2) {
var G__14134__i = 0, G__14134__a = new Array(arguments.length -  2);
while (G__14134__i < G__14134__a.length) {G__14134__a[G__14134__i] = arguments[G__14134__i + 2]; ++G__14134__i;}
G__14133 = new cljs.core.IndexedSeq(G__14134__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__14135__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__14135 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14136__i = 0, G__14136__a = new Array(arguments.length -  2);
while (G__14136__i < G__14136__a.length) {G__14136__a[G__14136__i] = arguments[G__14136__i + 2]; ++G__14136__i;}
  more = new cljs.core.IndexedSeq(G__14136__a,0);
} 
return G__14135__delegate.call(this,x,y,more);};
G__14135.cljs$lang$maxFixedArity = 2;
G__14135.cljs$lang$applyTo = (function (arglist__14137){
var x = cljs.core.first(arglist__14137);
arglist__14137 = cljs.core.next(arglist__14137);
var y = cljs.core.first(arglist__14137);
var more = cljs.core.rest(arglist__14137);
return G__14135__delegate(x,y,more);
});
G__14135.cljs$core$IFn$_invoke$arity$variadic = G__14135__delegate;
return G__14135;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__14138 = null;
if (arguments.length > 2) {
var G__14139__i = 0, G__14139__a = new Array(arguments.length -  2);
while (G__14139__i < G__14139__a.length) {G__14139__a[G__14139__i] = arguments[G__14139__i + 2]; ++G__14139__i;}
G__14138 = new cljs.core.IndexedSeq(G__14139__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14138);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__14142 = x;
var G__14143 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__14142,G__14143) : cljs.core.mod.call(null,G__14142,G__14143));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__14144__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__14144 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14145__i = 0, G__14145__a = new Array(arguments.length -  2);
while (G__14145__i < G__14145__a.length) {G__14145__a[G__14145__i] = arguments[G__14145__i + 2]; ++G__14145__i;}
  more = new cljs.core.IndexedSeq(G__14145__a,0);
} 
return G__14144__delegate.call(this,x,y,more);};
G__14144.cljs$lang$maxFixedArity = 2;
G__14144.cljs$lang$applyTo = (function (arglist__14146){
var x = cljs.core.first(arglist__14146);
arglist__14146 = cljs.core.next(arglist__14146);
var y = cljs.core.first(arglist__14146);
var more = cljs.core.rest(arglist__14146);
return G__14144__delegate(x,y,more);
});
G__14144.cljs$core$IFn$_invoke$arity$variadic = G__14144__delegate;
return G__14144;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__14147 = null;
if (arguments.length > 2) {
var G__14148__i = 0, G__14148__a = new Array(arguments.length -  2);
while (G__14148__i < G__14148__a.length) {G__14148__a[G__14148__i] = arguments[G__14148__i + 2]; ++G__14148__i;}
G__14147 = new cljs.core.IndexedSeq(G__14148__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__14149__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__14149 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14150__i = 0, G__14150__a = new Array(arguments.length -  2);
while (G__14150__i < G__14150__a.length) {G__14150__a[G__14150__i] = arguments[G__14150__i + 2]; ++G__14150__i;}
  more = new cljs.core.IndexedSeq(G__14150__a,0);
} 
return G__14149__delegate.call(this,x,y,more);};
G__14149.cljs$lang$maxFixedArity = 2;
G__14149.cljs$lang$applyTo = (function (arglist__14151){
var x = cljs.core.first(arglist__14151);
arglist__14151 = cljs.core.next(arglist__14151);
var y = cljs.core.first(arglist__14151);
var more = cljs.core.rest(arglist__14151);
return G__14149__delegate(x,y,more);
});
G__14149.cljs$core$IFn$_invoke$arity$variadic = G__14149__delegate;
return G__14149;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__14152 = null;
if (arguments.length > 2) {
var G__14153__i = 0, G__14153__a = new Array(arguments.length -  2);
while (G__14153__i < G__14153__a.length) {G__14153__a[G__14153__i] = arguments[G__14153__i + 2]; ++G__14153__i;}
G__14152 = new cljs.core.IndexedSeq(G__14153__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__14156 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14156) : Math.floor.call(null,G__14156));
} else {
var G__14157 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14157) : Math.ceil.call(null,G__14157));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__14158__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__14158 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14159__i = 0, G__14159__a = new Array(arguments.length -  2);
while (G__14159__i < G__14159__a.length) {G__14159__a[G__14159__i] = arguments[G__14159__i + 2]; ++G__14159__i;}
  more = new cljs.core.IndexedSeq(G__14159__a,0);
} 
return G__14158__delegate.call(this,x,y,more);};
G__14158.cljs$lang$maxFixedArity = 2;
G__14158.cljs$lang$applyTo = (function (arglist__14160){
var x = cljs.core.first(arglist__14160);
arglist__14160 = cljs.core.next(arglist__14160);
var y = cljs.core.first(arglist__14160);
var more = cljs.core.rest(arglist__14160);
return G__14158__delegate(x,y,more);
});
G__14158.cljs$core$IFn$_invoke$arity$variadic = G__14158__delegate;
return G__14158;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__14161 = null;
if (arguments.length > 2) {
var G__14162__i = 0, G__14162__a = new Array(arguments.length -  2);
while (G__14162__i < G__14162__a.length) {G__14162__a[G__14162__i] = arguments[G__14162__i + 2]; ++G__14162__i;}
G__14161 = new cljs.core.IndexedSeq(G__14162__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__14163__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__14163 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14164__i = 0, G__14164__a = new Array(arguments.length -  2);
while (G__14164__i < G__14164__a.length) {G__14164__a[G__14164__i] = arguments[G__14164__i + 2]; ++G__14164__i;}
  more = new cljs.core.IndexedSeq(G__14164__a,0);
} 
return G__14163__delegate.call(this,x,y,more);};
G__14163.cljs$lang$maxFixedArity = 2;
G__14163.cljs$lang$applyTo = (function (arglist__14165){
var x = cljs.core.first(arglist__14165);
arglist__14165 = cljs.core.next(arglist__14165);
var y = cljs.core.first(arglist__14165);
var more = cljs.core.rest(arglist__14165);
return G__14163__delegate(x,y,more);
});
G__14163.cljs$core$IFn$_invoke$arity$variadic = G__14163__delegate;
return G__14163;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__14166 = null;
if (arguments.length > 2) {
var G__14167__i = 0, G__14167__a = new Array(arguments.length -  2);
while (G__14167__i < G__14167__a.length) {G__14167__a[G__14167__i] = arguments[G__14167__i + 2]; ++G__14167__i;}
G__14166 = new cljs.core.IndexedSeq(G__14167__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14166);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__14168__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__14168 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14169__i = 0, G__14169__a = new Array(arguments.length -  2);
while (G__14169__i < G__14169__a.length) {G__14169__a[G__14169__i] = arguments[G__14169__i + 2]; ++G__14169__i;}
  more = new cljs.core.IndexedSeq(G__14169__a,0);
} 
return G__14168__delegate.call(this,x,y,more);};
G__14168.cljs$lang$maxFixedArity = 2;
G__14168.cljs$lang$applyTo = (function (arglist__14170){
var x = cljs.core.first(arglist__14170);
arglist__14170 = cljs.core.next(arglist__14170);
var y = cljs.core.first(arglist__14170);
var more = cljs.core.rest(arglist__14170);
return G__14168__delegate(x,y,more);
});
G__14168.cljs$core$IFn$_invoke$arity$variadic = G__14168__delegate;
return G__14168;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__14171 = null;
if (arguments.length > 2) {
var G__14172__i = 0, G__14172__a = new Array(arguments.length -  2);
while (G__14172__i < G__14172__a.length) {G__14172__a[G__14172__i] = arguments[G__14172__i + 2]; ++G__14172__i;}
G__14171 = new cljs.core.IndexedSeq(G__14172__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14171);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__14173__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__14173 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14174__i = 0, G__14174__a = new Array(arguments.length -  2);
while (G__14174__i < G__14174__a.length) {G__14174__a[G__14174__i] = arguments[G__14174__i + 2]; ++G__14174__i;}
  more = new cljs.core.IndexedSeq(G__14174__a,0);
} 
return G__14173__delegate.call(this,x,y,more);};
G__14173.cljs$lang$maxFixedArity = 2;
G__14173.cljs$lang$applyTo = (function (arglist__14175){
var x = cljs.core.first(arglist__14175);
arglist__14175 = cljs.core.next(arglist__14175);
var y = cljs.core.first(arglist__14175);
var more = cljs.core.rest(arglist__14175);
return G__14173__delegate(x,y,more);
});
G__14173.cljs$core$IFn$_invoke$arity$variadic = G__14173__delegate;
return G__14173;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__14176 = null;
if (arguments.length > 2) {
var G__14177__i = 0, G__14177__a = new Array(arguments.length -  2);
while (G__14177__i < G__14177__a.length) {G__14177__a[G__14177__i] = arguments[G__14177__i + 2]; ++G__14177__i;}
G__14176 = new cljs.core.IndexedSeq(G__14177__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14176);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__14182__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__14183 = y;
var G__14184 = cljs.core.first(more);
var G__14185 = cljs.core.next(more);
x = G__14183;
y = G__14184;
more = G__14185;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14182 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14186__i = 0, G__14186__a = new Array(arguments.length -  2);
while (G__14186__i < G__14186__a.length) {G__14186__a[G__14186__i] = arguments[G__14186__i + 2]; ++G__14186__i;}
  more = new cljs.core.IndexedSeq(G__14186__a,0);
} 
return G__14182__delegate.call(this,x,y,more);};
G__14182.cljs$lang$maxFixedArity = 2;
G__14182.cljs$lang$applyTo = (function (arglist__14187){
var x = cljs.core.first(arglist__14187);
arglist__14187 = cljs.core.next(arglist__14187);
var y = cljs.core.first(arglist__14187);
var more = cljs.core.rest(arglist__14187);
return G__14182__delegate(x,y,more);
});
G__14182.cljs$core$IFn$_invoke$arity$variadic = G__14182__delegate;
return G__14182;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__14188 = null;
if (arguments.length > 2) {
var G__14189__i = 0, G__14189__a = new Array(arguments.length -  2);
while (G__14189__i < G__14189__a.length) {G__14189__a[G__14189__i] = arguments[G__14189__i + 2]; ++G__14189__i;}
G__14188 = new cljs.core.IndexedSeq(G__14189__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__14190 = (n__$1 - (1));
var G__14191 = cljs.core.next(xs);
n__$1 = G__14190;
xs = G__14191;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__14195 = x;
return goog.string.buildString(G__14195);
}
});
var str__2 = (function() { 
var G__14196__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__14197 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__14198 = cljs.core.next(more);
sb = G__14197;
more = G__14198;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__14196 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__14199__i = 0, G__14199__a = new Array(arguments.length -  1);
while (G__14199__i < G__14199__a.length) {G__14199__a[G__14199__i] = arguments[G__14199__i + 1]; ++G__14199__i;}
  ys = new cljs.core.IndexedSeq(G__14199__a,0);
} 
return G__14196__delegate.call(this,x,ys);};
G__14196.cljs$lang$maxFixedArity = 1;
G__14196.cljs$lang$applyTo = (function (arglist__14200){
var x = cljs.core.first(arglist__14200);
var ys = cljs.core.rest(arglist__14200);
return G__14196__delegate(x,ys);
});
G__14196.cljs$core$IFn$_invoke$arity$variadic = G__14196__delegate;
return G__14196;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__14201 = null;
if (arguments.length > 1) {
var G__14202__i = 0, G__14202__a = new Array(arguments.length -  1);
while (G__14202__i < G__14202__a.length) {G__14202__a[G__14202__i] = arguments[G__14202__i + 1]; ++G__14202__i;}
G__14201 = new cljs.core.IndexedSeq(G__14202__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__14203 = cljs.core.next(xs);
var G__14204 = cljs.core.next(ys);
xs = G__14203;
ys = G__14204;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__14205 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__14206 = cljs.core.next(s);
res = G__14205;
s = G__14206;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__14211 = ((h + (cljs.core.hash((function (){var G__14209 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14209) : cljs.core.key.call(null,G__14209));
})()) ^ cljs.core.hash((function (){var G__14210 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14210) : cljs.core.val.call(null,G__14210));
})()))) % (4503599627370496));
var G__14212 = cljs.core.next(s);
h = G__14211;
s = G__14212;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__14213 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__14214 = cljs.core.next(s__$1);
h = G__14213;
s__$1 = G__14214;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__14225_14235 = cljs.core.seq(fn_map);
var chunk__14226_14236 = null;
var count__14227_14237 = (0);
var i__14228_14238 = (0);
while(true){
if((i__14228_14238 < count__14227_14237)){
var vec__14229_14239 = chunk__14226_14236.cljs$core$IIndexed$_nth$arity$2(null,i__14228_14238);
var key_name_14240 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14229_14239,(0),null);
var f_14241 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14229_14239,(1),null);
var str_name_14242 = (function (){var G__14230 = key_name_14240;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14230) : cljs.core.name.call(null,G__14230));
})();
(obj[str_name_14242] = f_14241);

var G__14243 = seq__14225_14235;
var G__14244 = chunk__14226_14236;
var G__14245 = count__14227_14237;
var G__14246 = (i__14228_14238 + (1));
seq__14225_14235 = G__14243;
chunk__14226_14236 = G__14244;
count__14227_14237 = G__14245;
i__14228_14238 = G__14246;
continue;
} else {
var temp__4406__auto___14247 = cljs.core.seq(seq__14225_14235);
if(temp__4406__auto___14247){
var seq__14225_14248__$1 = temp__4406__auto___14247;
if(cljs.core.chunked_seq_QMARK_(seq__14225_14248__$1)){
var c__11728__auto___14249 = (function (){var G__14231 = seq__14225_14248__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__14231) : cljs.core.chunk_first.call(null,G__14231));
})();
var G__14250 = (function (){var G__14232 = seq__14225_14248__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__14232) : cljs.core.chunk_rest.call(null,G__14232));
})();
var G__14251 = c__11728__auto___14249;
var G__14252 = cljs.core.count(c__11728__auto___14249);
var G__14253 = (0);
seq__14225_14235 = G__14250;
chunk__14226_14236 = G__14251;
count__14227_14237 = G__14252;
i__14228_14238 = G__14253;
continue;
} else {
var vec__14233_14254 = cljs.core.first(seq__14225_14248__$1);
var key_name_14255 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14233_14254,(0),null);
var f_14256 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14233_14254,(1),null);
var str_name_14257 = (function (){var G__14234 = key_name_14255;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14234) : cljs.core.name.call(null,G__14234));
})();
(obj[str_name_14257] = f_14256);

var G__14258 = cljs.core.next(seq__14225_14248__$1);
var G__14259 = null;
var G__14260 = (0);
var G__14261 = (0);
seq__14225_14235 = G__14258;
chunk__14226_14236 = G__14259;
count__14227_14237 = G__14260;
i__14228_14238 = G__14261;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__14263 = coll;
if(G__14263){
var bit__11622__auto__ = (G__14263.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__11622__auto__) || (G__14263.cljs$core$IReversible$)){
return true;
} else {
if((!G__14263.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__14263);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__14263);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__14264 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__14264;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__14265 = (i - (1));
var G__14266 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__14265;
r = G__14266;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__14267__i = 0, G__14267__a = new Array(arguments.length -  0);
while (G__14267__i < G__14267__a.length) {G__14267__a[G__14267__i] = arguments[G__14267__i + 0]; ++G__14267__i;}
  xs = new cljs.core.IndexedSeq(G__14267__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__14268){
var xs = cljs.core.seq(arglist__14268);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__10941__auto__ = (coll == null);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var G__14272 = coll;
if(G__14272){
var bit__11615__auto__ = (G__14272.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11615__auto__) || (G__14272.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__14274 = x;
if(G__14274){
var bit__11622__auto__ = (G__14274.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__11622__auto__) || (G__14274.cljs$core$IList$)){
return true;
} else {
if((!G__14274.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__14274);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__14274);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__10929__auto__ = cljs.core.not(a.ns);
if(and__10929__auto__){
return b.ns;
} else {
return and__10929__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__14281 = a.ns;
var G__14282 = b.ns;
return goog.array.defaultCompare(G__14281,G__14282);
})();
if(((0) === nsc)){
var G__14283 = a.name;
var G__14284 = b.name;
return goog.array.defaultCompare(G__14283,G__14284);
} else {
return nsc;
}
}
} else {
var G__14285 = a.name;
var G__14286 = b.name;
return goog.array.defaultCompare(G__14285,G__14286);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__11362__auto__ = self__._hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__14288 = null;
var G__14288__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__14288__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__14288 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__14288__2.call(this,self__,coll);
case 3:
return G__14288__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14288.cljs$core$IFn$_invoke$arity$2 = G__14288__2;
G__14288.cljs$core$IFn$_invoke$arity$3 = G__14288__3;
return G__14288;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args14287){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14287)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__14290 = x;
if(G__14290){
var bit__11615__auto__ = (G__14290.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__11615__auto__) || (G__14290.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__14292 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14292) : cljs.core.name.call(null,G__14292));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__14293 = ls.sval();
ls = G__14293;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__14295 = s;
if(G__14295){
var bit__11615__auto__ = (G__14295.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__11615__auto__) || (G__14295.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__14296 = cljs.core.next(s__$1);
s__$1 = G__14296;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_14297 = (0);
var xs_14298 = cljs.core.seq(coll);
while(true){
if(xs_14298){
(ret[i_14297] = cljs.core.to_array(cljs.core.first(xs_14298)));

var G__14299 = (i_14297 + (1));
var G__14300 = cljs.core.next(xs_14298);
i_14297 = G__14299;
xs_14298 = G__14300;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14303 = (i + (1));
var G__14304 = cljs.core.next(s__$1);
i = G__14303;
s__$1 = G__14304;
continue;
} else {
return a;
}
break;
}
} else {
var n__11828__auto___14305 = size;
var i_14306 = (0);
while(true){
if((i_14306 < n__11828__auto___14305)){
(a[i_14306] = init_val_or_seq);

var G__14307 = (i_14306 + (1));
i_14306 = G__14307;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14310 = (i + (1));
var G__14311 = cljs.core.next(s__$1);
i = G__14310;
s__$1 = G__14311;
continue;
} else {
return a;
}
break;
}
} else {
var n__11828__auto___14312 = size;
var i_14313 = (0);
while(true){
if((i_14313 < n__11828__auto___14312)){
(a[i_14313] = init_val_or_seq);

var G__14314 = (i_14313 + (1));
i_14313 = G__14314;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14317 = (i + (1));
var G__14318 = cljs.core.next(s__$1);
i = G__14317;
s__$1 = G__14318;
continue;
} else {
return a;
}
break;
}
} else {
var n__11828__auto___14319 = size;
var i_14320 = (0);
while(true){
if((i_14320 < n__11828__auto___14319)){
(a[i_14320] = init_val_or_seq);

var G__14321 = (i_14320 + (1));
i_14320 = G__14321;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14324 = (i + (1));
var G__14325 = cljs.core.next(s__$1);
i = G__14324;
s__$1 = G__14325;
continue;
} else {
return a;
}
break;
}
} else {
var n__11828__auto___14326 = size;
var i_14327 = (0);
while(true){
if((i_14327 < n__11828__auto___14326)){
(a[i_14327] = init_val_or_seq);

var G__14328 = (i_14327 + (1));
i_14327 = G__14328;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__14329 = cljs.core.next(s__$1);
var G__14330 = (i - (1));
var G__14331 = (sum + (1));
s__$1 = G__14329;
i = G__14330;
sum = G__14331;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__14351__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__14351 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14352__i = 0, G__14352__a = new Array(arguments.length -  2);
while (G__14352__i < G__14352__a.length) {G__14352__a[G__14352__i] = arguments[G__14352__i + 2]; ++G__14352__i;}
  zs = new cljs.core.IndexedSeq(G__14352__a,0);
} 
return G__14351__delegate.call(this,x,y,zs);};
G__14351.cljs$lang$maxFixedArity = 2;
G__14351.cljs$lang$applyTo = (function (arglist__14353){
var x = cljs.core.first(arglist__14353);
arglist__14353 = cljs.core.next(arglist__14353);
var y = cljs.core.first(arglist__14353);
var zs = cljs.core.rest(arglist__14353);
return G__14351__delegate(x,y,zs);
});
G__14351.cljs$core$IFn$_invoke$arity$variadic = G__14351__delegate;
return G__14351;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__14354 = null;
if (arguments.length > 2) {
var G__14355__i = 0, G__14355__a = new Array(arguments.length -  2);
while (G__14355__i < G__14355__a.length) {G__14355__a[G__14355__i] = arguments[G__14355__i + 2]; ++G__14355__i;}
G__14354 = new cljs.core.IndexedSeq(G__14355__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__14356__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__14356 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__14357__i = 0, G__14357__a = new Array(arguments.length -  4);
while (G__14357__i < G__14357__a.length) {G__14357__a[G__14357__i] = arguments[G__14357__i + 4]; ++G__14357__i;}
  more = new cljs.core.IndexedSeq(G__14357__a,0);
} 
return G__14356__delegate.call(this,a,b,c,d,more);};
G__14356.cljs$lang$maxFixedArity = 4;
G__14356.cljs$lang$applyTo = (function (arglist__14358){
var a = cljs.core.first(arglist__14358);
arglist__14358 = cljs.core.next(arglist__14358);
var b = cljs.core.first(arglist__14358);
arglist__14358 = cljs.core.next(arglist__14358);
var c = cljs.core.first(arglist__14358);
arglist__14358 = cljs.core.next(arglist__14358);
var d = cljs.core.first(arglist__14358);
var more = cljs.core.rest(arglist__14358);
return G__14356__delegate(a,b,c,d,more);
});
G__14356.cljs$core$IFn$_invoke$arity$variadic = G__14356__delegate;
return G__14356;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__14359 = null;
if (arguments.length > 4) {
var G__14360__i = 0, G__14360__a = new Array(arguments.length -  4);
while (G__14360__i < G__14360__a.length) {G__14360__a[G__14360__i] = arguments[G__14360__i + 4]; ++G__14360__i;}
G__14359 = new cljs.core.IndexedSeq(G__14360__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__14359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__14361__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14362 = ntcoll;
var G__14363 = cljs.core.first(vals);
var G__14364 = cljs.core.next(vals);
tcoll = G__14362;
val = G__14363;
vals = G__14364;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14361 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14365__i = 0, G__14365__a = new Array(arguments.length -  2);
while (G__14365__i < G__14365__a.length) {G__14365__a[G__14365__i] = arguments[G__14365__i + 2]; ++G__14365__i;}
  vals = new cljs.core.IndexedSeq(G__14365__a,0);
} 
return G__14361__delegate.call(this,tcoll,val,vals);};
G__14361.cljs$lang$maxFixedArity = 2;
G__14361.cljs$lang$applyTo = (function (arglist__14366){
var tcoll = cljs.core.first(arglist__14366);
arglist__14366 = cljs.core.next(arglist__14366);
var val = cljs.core.first(arglist__14366);
var vals = cljs.core.rest(arglist__14366);
return G__14361__delegate(tcoll,val,vals);
});
G__14361.cljs$core$IFn$_invoke$arity$variadic = G__14361__delegate;
return G__14361;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__14367 = null;
if (arguments.length > 2) {
var G__14368__i = 0, G__14368__a = new Array(arguments.length -  2);
while (G__14368__i < G__14368__a.length) {G__14368__a[G__14368__i] = arguments[G__14368__i + 2]; ++G__14368__i;}
G__14367 = new cljs.core.IndexedSeq(G__14368__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__14369__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__14370 = ntcoll;
var G__14371 = cljs.core.first(kvs);
var G__14372 = cljs.core.second(kvs);
var G__14373 = cljs.core.nnext(kvs);
tcoll = G__14370;
key = G__14371;
val = G__14372;
kvs = G__14373;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14369 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__14374__i = 0, G__14374__a = new Array(arguments.length -  3);
while (G__14374__i < G__14374__a.length) {G__14374__a[G__14374__i] = arguments[G__14374__i + 3]; ++G__14374__i;}
  kvs = new cljs.core.IndexedSeq(G__14374__a,0);
} 
return G__14369__delegate.call(this,tcoll,key,val,kvs);};
G__14369.cljs$lang$maxFixedArity = 3;
G__14369.cljs$lang$applyTo = (function (arglist__14375){
var tcoll = cljs.core.first(arglist__14375);
arglist__14375 = cljs.core.next(arglist__14375);
var key = cljs.core.first(arglist__14375);
arglist__14375 = cljs.core.next(arglist__14375);
var val = cljs.core.first(arglist__14375);
var kvs = cljs.core.rest(arglist__14375);
return G__14369__delegate(tcoll,key,val,kvs);
});
G__14369.cljs$core$IFn$_invoke$arity$variadic = G__14369__delegate;
return G__14369;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__14376 = null;
if (arguments.length > 3) {
var G__14377__i = 0, G__14377__a = new Array(arguments.length -  3);
while (G__14377__i < G__14377__a.length) {G__14377__a[G__14377__i] = arguments[G__14377__i + 3]; ++G__14377__i;}
G__14376 = new cljs.core.IndexedSeq(G__14377__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__14376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__14378__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__14379 = ntcoll;
var G__14380 = cljs.core.first(ks);
var G__14381 = cljs.core.next(ks);
tcoll = G__14379;
key = G__14380;
ks = G__14381;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14378 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__14382__i = 0, G__14382__a = new Array(arguments.length -  2);
while (G__14382__i < G__14382__a.length) {G__14382__a[G__14382__i] = arguments[G__14382__i + 2]; ++G__14382__i;}
  ks = new cljs.core.IndexedSeq(G__14382__a,0);
} 
return G__14378__delegate.call(this,tcoll,key,ks);};
G__14378.cljs$lang$maxFixedArity = 2;
G__14378.cljs$lang$applyTo = (function (arglist__14383){
var tcoll = cljs.core.first(arglist__14383);
arglist__14383 = cljs.core.next(arglist__14383);
var key = cljs.core.first(arglist__14383);
var ks = cljs.core.rest(arglist__14383);
return G__14378__delegate(tcoll,key,ks);
});
G__14378.cljs$core$IFn$_invoke$arity$variadic = G__14378__delegate;
return G__14378;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__14384 = null;
if (arguments.length > 2) {
var G__14385__i = 0, G__14385__a = new Array(arguments.length -  2);
while (G__14385__i < G__14385__a.length) {G__14385__a[G__14385__i] = arguments[G__14385__i + 2]; ++G__14385__i;}
G__14384 = new cljs.core.IndexedSeq(G__14385__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__14384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__14386__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14387 = ntcoll;
var G__14388 = cljs.core.first(vals);
var G__14389 = cljs.core.next(vals);
tcoll = G__14387;
val = G__14388;
vals = G__14389;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14386 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14390__i = 0, G__14390__a = new Array(arguments.length -  2);
while (G__14390__i < G__14390__a.length) {G__14390__a[G__14390__i] = arguments[G__14390__i + 2]; ++G__14390__i;}
  vals = new cljs.core.IndexedSeq(G__14390__a,0);
} 
return G__14386__delegate.call(this,tcoll,val,vals);};
G__14386.cljs$lang$maxFixedArity = 2;
G__14386.cljs$lang$applyTo = (function (arglist__14391){
var tcoll = cljs.core.first(arglist__14391);
arglist__14391 = cljs.core.next(arglist__14391);
var val = cljs.core.first(arglist__14391);
var vals = cljs.core.rest(arglist__14391);
return G__14386__delegate(tcoll,val,vals);
});
G__14386.cljs$core$IFn$_invoke$arity$variadic = G__14386__delegate;
return G__14386;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__14392 = null;
if (arguments.length > 2) {
var G__14393__i = 0, G__14393__a = new Array(arguments.length -  2);
while (G__14393__i < G__14393__a.length) {G__14393__a[G__14393__i] = arguments[G__14393__i + 2]; ++G__14393__i;}
G__14392 = new cljs.core.IndexedSeq(G__14393__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a11872 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a11872);
} else {
var G__14604 = a11872;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14604) : f.call(null,G__14604));
}
} else {
var b11873 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a11872,b11873);
} else {
var G__14605 = a11872;
var G__14606 = b11873;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14605,G__14606) : f.call(null,G__14605,G__14606));
}
} else {
var c11874 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a11872,b11873,c11874);
} else {
var G__14607 = a11872;
var G__14608 = b11873;
var G__14609 = c11874;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14607,G__14608,G__14609) : f.call(null,G__14607,G__14608,G__14609));
}
} else {
var d11875 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a11872,b11873,c11874,d11875);
} else {
var G__14610 = a11872;
var G__14611 = b11873;
var G__14612 = c11874;
var G__14613 = d11875;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14610,G__14611,G__14612,G__14613) : f.call(null,G__14610,G__14611,G__14612,G__14613));
}
} else {
var e11876 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a11872,b11873,c11874,d11875,e11876);
} else {
var G__14614 = a11872;
var G__14615 = b11873;
var G__14616 = c11874;
var G__14617 = d11875;
var G__14618 = e11876;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14614,G__14615,G__14616,G__14617,G__14618) : f.call(null,G__14614,G__14615,G__14616,G__14617,G__14618));
}
} else {
var f11877 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a11872,b11873,c11874,d11875,e11876,f11877);
} else {
var G__14619 = a11872;
var G__14620 = b11873;
var G__14621 = c11874;
var G__14622 = d11875;
var G__14623 = e11876;
var G__14624 = f11877;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14619,G__14620,G__14621,G__14622,G__14623,G__14624) : f.call(null,G__14619,G__14620,G__14621,G__14622,G__14623,G__14624));
}
} else {
var g11878 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a11872,b11873,c11874,d11875,e11876,f11877,g11878);
} else {
var G__14625 = a11872;
var G__14626 = b11873;
var G__14627 = c11874;
var G__14628 = d11875;
var G__14629 = e11876;
var G__14630 = f11877;
var G__14631 = g11878;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__14625,G__14626,G__14627,G__14628,G__14629,G__14630,G__14631) : f.call(null,G__14625,G__14626,G__14627,G__14628,G__14629,G__14630,G__14631));
}
} else {
var h11879 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879);
} else {
var G__14632 = a11872;
var G__14633 = b11873;
var G__14634 = c11874;
var G__14635 = d11875;
var G__14636 = e11876;
var G__14637 = f11877;
var G__14638 = g11878;
var G__14639 = h11879;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__14632,G__14633,G__14634,G__14635,G__14636,G__14637,G__14638,G__14639) : f.call(null,G__14632,G__14633,G__14634,G__14635,G__14636,G__14637,G__14638,G__14639));
}
} else {
var i11880 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880);
} else {
var G__14640 = a11872;
var G__14641 = b11873;
var G__14642 = c11874;
var G__14643 = d11875;
var G__14644 = e11876;
var G__14645 = f11877;
var G__14646 = g11878;
var G__14647 = h11879;
var G__14648 = i11880;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__14640,G__14641,G__14642,G__14643,G__14644,G__14645,G__14646,G__14647,G__14648) : f.call(null,G__14640,G__14641,G__14642,G__14643,G__14644,G__14645,G__14646,G__14647,G__14648));
}
} else {
var j11881 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881);
} else {
var G__14649 = a11872;
var G__14650 = b11873;
var G__14651 = c11874;
var G__14652 = d11875;
var G__14653 = e11876;
var G__14654 = f11877;
var G__14655 = g11878;
var G__14656 = h11879;
var G__14657 = i11880;
var G__14658 = j11881;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__14649,G__14650,G__14651,G__14652,G__14653,G__14654,G__14655,G__14656,G__14657,G__14658) : f.call(null,G__14649,G__14650,G__14651,G__14652,G__14653,G__14654,G__14655,G__14656,G__14657,G__14658));
}
} else {
var k11882 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882);
} else {
var G__14659 = a11872;
var G__14660 = b11873;
var G__14661 = c11874;
var G__14662 = d11875;
var G__14663 = e11876;
var G__14664 = f11877;
var G__14665 = g11878;
var G__14666 = h11879;
var G__14667 = i11880;
var G__14668 = j11881;
var G__14669 = k11882;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__14659,G__14660,G__14661,G__14662,G__14663,G__14664,G__14665,G__14666,G__14667,G__14668,G__14669) : f.call(null,G__14659,G__14660,G__14661,G__14662,G__14663,G__14664,G__14665,G__14666,G__14667,G__14668,G__14669));
}
} else {
var l11883 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883);
} else {
var G__14670 = a11872;
var G__14671 = b11873;
var G__14672 = c11874;
var G__14673 = d11875;
var G__14674 = e11876;
var G__14675 = f11877;
var G__14676 = g11878;
var G__14677 = h11879;
var G__14678 = i11880;
var G__14679 = j11881;
var G__14680 = k11882;
var G__14681 = l11883;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__14670,G__14671,G__14672,G__14673,G__14674,G__14675,G__14676,G__14677,G__14678,G__14679,G__14680,G__14681) : f.call(null,G__14670,G__14671,G__14672,G__14673,G__14674,G__14675,G__14676,G__14677,G__14678,G__14679,G__14680,G__14681));
}
} else {
var m11884 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884);
} else {
var G__14682 = a11872;
var G__14683 = b11873;
var G__14684 = c11874;
var G__14685 = d11875;
var G__14686 = e11876;
var G__14687 = f11877;
var G__14688 = g11878;
var G__14689 = h11879;
var G__14690 = i11880;
var G__14691 = j11881;
var G__14692 = k11882;
var G__14693 = l11883;
var G__14694 = m11884;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__14682,G__14683,G__14684,G__14685,G__14686,G__14687,G__14688,G__14689,G__14690,G__14691,G__14692,G__14693,G__14694) : f.call(null,G__14682,G__14683,G__14684,G__14685,G__14686,G__14687,G__14688,G__14689,G__14690,G__14691,G__14692,G__14693,G__14694));
}
} else {
var n11885 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885);
} else {
var G__14695 = a11872;
var G__14696 = b11873;
var G__14697 = c11874;
var G__14698 = d11875;
var G__14699 = e11876;
var G__14700 = f11877;
var G__14701 = g11878;
var G__14702 = h11879;
var G__14703 = i11880;
var G__14704 = j11881;
var G__14705 = k11882;
var G__14706 = l11883;
var G__14707 = m11884;
var G__14708 = n11885;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__14695,G__14696,G__14697,G__14698,G__14699,G__14700,G__14701,G__14702,G__14703,G__14704,G__14705,G__14706,G__14707,G__14708) : f.call(null,G__14695,G__14696,G__14697,G__14698,G__14699,G__14700,G__14701,G__14702,G__14703,G__14704,G__14705,G__14706,G__14707,G__14708));
}
} else {
var o11886 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886);
} else {
var G__14709 = a11872;
var G__14710 = b11873;
var G__14711 = c11874;
var G__14712 = d11875;
var G__14713 = e11876;
var G__14714 = f11877;
var G__14715 = g11878;
var G__14716 = h11879;
var G__14717 = i11880;
var G__14718 = j11881;
var G__14719 = k11882;
var G__14720 = l11883;
var G__14721 = m11884;
var G__14722 = n11885;
var G__14723 = o11886;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__14709,G__14710,G__14711,G__14712,G__14713,G__14714,G__14715,G__14716,G__14717,G__14718,G__14719,G__14720,G__14721,G__14722,G__14723) : f.call(null,G__14709,G__14710,G__14711,G__14712,G__14713,G__14714,G__14715,G__14716,G__14717,G__14718,G__14719,G__14720,G__14721,G__14722,G__14723));
}
} else {
var p11887 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887);
} else {
var G__14724 = a11872;
var G__14725 = b11873;
var G__14726 = c11874;
var G__14727 = d11875;
var G__14728 = e11876;
var G__14729 = f11877;
var G__14730 = g11878;
var G__14731 = h11879;
var G__14732 = i11880;
var G__14733 = j11881;
var G__14734 = k11882;
var G__14735 = l11883;
var G__14736 = m11884;
var G__14737 = n11885;
var G__14738 = o11886;
var G__14739 = p11887;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__14724,G__14725,G__14726,G__14727,G__14728,G__14729,G__14730,G__14731,G__14732,G__14733,G__14734,G__14735,G__14736,G__14737,G__14738,G__14739) : f.call(null,G__14724,G__14725,G__14726,G__14727,G__14728,G__14729,G__14730,G__14731,G__14732,G__14733,G__14734,G__14735,G__14736,G__14737,G__14738,G__14739));
}
} else {
var q11888 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887,q11888);
} else {
var G__14740 = a11872;
var G__14741 = b11873;
var G__14742 = c11874;
var G__14743 = d11875;
var G__14744 = e11876;
var G__14745 = f11877;
var G__14746 = g11878;
var G__14747 = h11879;
var G__14748 = i11880;
var G__14749 = j11881;
var G__14750 = k11882;
var G__14751 = l11883;
var G__14752 = m11884;
var G__14753 = n11885;
var G__14754 = o11886;
var G__14755 = p11887;
var G__14756 = q11888;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__14740,G__14741,G__14742,G__14743,G__14744,G__14745,G__14746,G__14747,G__14748,G__14749,G__14750,G__14751,G__14752,G__14753,G__14754,G__14755,G__14756) : f.call(null,G__14740,G__14741,G__14742,G__14743,G__14744,G__14745,G__14746,G__14747,G__14748,G__14749,G__14750,G__14751,G__14752,G__14753,G__14754,G__14755,G__14756));
}
} else {
var r11889 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887,q11888,r11889);
} else {
var G__14757 = a11872;
var G__14758 = b11873;
var G__14759 = c11874;
var G__14760 = d11875;
var G__14761 = e11876;
var G__14762 = f11877;
var G__14763 = g11878;
var G__14764 = h11879;
var G__14765 = i11880;
var G__14766 = j11881;
var G__14767 = k11882;
var G__14768 = l11883;
var G__14769 = m11884;
var G__14770 = n11885;
var G__14771 = o11886;
var G__14772 = p11887;
var G__14773 = q11888;
var G__14774 = r11889;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__14757,G__14758,G__14759,G__14760,G__14761,G__14762,G__14763,G__14764,G__14765,G__14766,G__14767,G__14768,G__14769,G__14770,G__14771,G__14772,G__14773,G__14774) : f.call(null,G__14757,G__14758,G__14759,G__14760,G__14761,G__14762,G__14763,G__14764,G__14765,G__14766,G__14767,G__14768,G__14769,G__14770,G__14771,G__14772,G__14773,G__14774));
}
} else {
var s11890 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887,q11888,r11889,s11890);
} else {
var G__14775 = a11872;
var G__14776 = b11873;
var G__14777 = c11874;
var G__14778 = d11875;
var G__14779 = e11876;
var G__14780 = f11877;
var G__14781 = g11878;
var G__14782 = h11879;
var G__14783 = i11880;
var G__14784 = j11881;
var G__14785 = k11882;
var G__14786 = l11883;
var G__14787 = m11884;
var G__14788 = n11885;
var G__14789 = o11886;
var G__14790 = p11887;
var G__14791 = q11888;
var G__14792 = r11889;
var G__14793 = s11890;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__14775,G__14776,G__14777,G__14778,G__14779,G__14780,G__14781,G__14782,G__14783,G__14784,G__14785,G__14786,G__14787,G__14788,G__14789,G__14790,G__14791,G__14792,G__14793) : f.call(null,G__14775,G__14776,G__14777,G__14778,G__14779,G__14780,G__14781,G__14782,G__14783,G__14784,G__14785,G__14786,G__14787,G__14788,G__14789,G__14790,G__14791,G__14792,G__14793));
}
} else {
var t11891 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887,q11888,r11889,s11890,t11891);
} else {
var G__14794 = a11872;
var G__14795 = b11873;
var G__14796 = c11874;
var G__14797 = d11875;
var G__14798 = e11876;
var G__14799 = f11877;
var G__14800 = g11878;
var G__14801 = h11879;
var G__14802 = i11880;
var G__14803 = j11881;
var G__14804 = k11882;
var G__14805 = l11883;
var G__14806 = m11884;
var G__14807 = n11885;
var G__14808 = o11886;
var G__14809 = p11887;
var G__14810 = q11888;
var G__14811 = r11889;
var G__14812 = s11890;
var G__14813 = t11891;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__14794,G__14795,G__14796,G__14797,G__14798,G__14799,G__14800,G__14801,G__14802,G__14803,G__14804,G__14805,G__14806,G__14807,G__14808,G__14809,G__14810,G__14811,G__14812,G__14813) : f.call(null,G__14794,G__14795,G__14796,G__14797,G__14798,G__14799,G__14800,G__14801,G__14802,G__14803,G__14804,G__14805,G__14806,G__14807,G__14808,G__14809,G__14810,G__14811,G__14812,G__14813));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__14814__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__14814 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__14815__i = 0, G__14815__a = new Array(arguments.length -  5);
while (G__14815__i < G__14815__a.length) {G__14815__a[G__14815__i] = arguments[G__14815__i + 5]; ++G__14815__i;}
  args = new cljs.core.IndexedSeq(G__14815__a,0);
} 
return G__14814__delegate.call(this,f,a,b,c,d,args);};
G__14814.cljs$lang$maxFixedArity = 5;
G__14814.cljs$lang$applyTo = (function (arglist__14816){
var f = cljs.core.first(arglist__14816);
arglist__14816 = cljs.core.next(arglist__14816);
var a = cljs.core.first(arglist__14816);
arglist__14816 = cljs.core.next(arglist__14816);
var b = cljs.core.first(arglist__14816);
arglist__14816 = cljs.core.next(arglist__14816);
var c = cljs.core.first(arglist__14816);
arglist__14816 = cljs.core.next(arglist__14816);
var d = cljs.core.first(arglist__14816);
var args = cljs.core.rest(arglist__14816);
return G__14814__delegate(f,a,b,c,d,args);
});
G__14814.cljs$core$IFn$_invoke$arity$variadic = G__14814__delegate;
return G__14814;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__14817 = null;
if (arguments.length > 5) {
var G__14818__i = 0, G__14818__a = new Array(arguments.length -  5);
while (G__14818__i < G__14818__a.length) {G__14818__a[G__14818__i] = arguments[G__14818__i + 5]; ++G__14818__i;}
G__14817 = new cljs.core.IndexedSeq(G__14818__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__14817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__14834 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14834) : f.call(null,G__14834));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__14835 = cljs.core.meta(obj);
var G__14836 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14835,G__14836) : f.call(null,G__14835,G__14836));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__14837 = cljs.core.meta(obj);
var G__14838 = a;
var G__14839 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14837,G__14838,G__14839) : f.call(null,G__14837,G__14838,G__14839));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__14840 = cljs.core.meta(obj);
var G__14841 = a;
var G__14842 = b;
var G__14843 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14840,G__14841,G__14842,G__14843) : f.call(null,G__14840,G__14841,G__14842,G__14843));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__14844 = cljs.core.meta(obj);
var G__14845 = a;
var G__14846 = b;
var G__14847 = c;
var G__14848 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14844,G__14845,G__14846,G__14847,G__14848) : f.call(null,G__14844,G__14845,G__14846,G__14847,G__14848));
})());
});
var vary_meta__7 = (function() { 
var G__14849__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__14849 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__14850__i = 0, G__14850__a = new Array(arguments.length -  6);
while (G__14850__i < G__14850__a.length) {G__14850__a[G__14850__i] = arguments[G__14850__i + 6]; ++G__14850__i;}
  args = new cljs.core.IndexedSeq(G__14850__a,0);
} 
return G__14849__delegate.call(this,obj,f,a,b,c,d,args);};
G__14849.cljs$lang$maxFixedArity = 6;
G__14849.cljs$lang$applyTo = (function (arglist__14851){
var obj = cljs.core.first(arglist__14851);
arglist__14851 = cljs.core.next(arglist__14851);
var f = cljs.core.first(arglist__14851);
arglist__14851 = cljs.core.next(arglist__14851);
var a = cljs.core.first(arglist__14851);
arglist__14851 = cljs.core.next(arglist__14851);
var b = cljs.core.first(arglist__14851);
arglist__14851 = cljs.core.next(arglist__14851);
var c = cljs.core.first(arglist__14851);
arglist__14851 = cljs.core.next(arglist__14851);
var d = cljs.core.first(arglist__14851);
var args = cljs.core.rest(arglist__14851);
return G__14849__delegate(obj,f,a,b,c,d,args);
});
G__14849.cljs$core$IFn$_invoke$arity$variadic = G__14849__delegate;
return G__14849;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__14852 = null;
if (arguments.length > 6) {
var G__14853__i = 0, G__14853__a = new Array(arguments.length -  6);
while (G__14853__i < G__14853__a.length) {G__14853__a[G__14853__i] = arguments[G__14853__i + 6]; ++G__14853__i;}
G__14852 = new cljs.core.IndexedSeq(G__14853__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__14852);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__14854__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__14854 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14855__i = 0, G__14855__a = new Array(arguments.length -  2);
while (G__14855__i < G__14855__a.length) {G__14855__a[G__14855__i] = arguments[G__14855__i + 2]; ++G__14855__i;}
  more = new cljs.core.IndexedSeq(G__14855__a,0);
} 
return G__14854__delegate.call(this,x,y,more);};
G__14854.cljs$lang$maxFixedArity = 2;
G__14854.cljs$lang$applyTo = (function (arglist__14856){
var x = cljs.core.first(arglist__14856);
arglist__14856 = cljs.core.next(arglist__14856);
var y = cljs.core.first(arglist__14856);
var more = cljs.core.rest(arglist__14856);
return G__14854__delegate(x,y,more);
});
G__14854.cljs$core$IFn$_invoke$arity$variadic = G__14854__delegate;
return G__14854;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__14857 = null;
if (arguments.length > 2) {
var G__14858__i = 0, G__14858__a = new Array(arguments.length -  2);
while (G__14858__i < G__14858__a.length) {G__14858__a[G__14858__i] = arguments[G__14858__i + 2]; ++G__14858__i;}
G__14857 = new cljs.core.IndexedSeq(G__14858__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14857);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t14862 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t14862 = (function (nil_iter,meta14863){
this.nil_iter = nil_iter;
this.meta14863 = meta14863;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t14862.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t14862.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t14862.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t14862.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_14864){
var self__ = this;
var _14864__$1 = this;
return self__.meta14863;
});

cljs.core.t14862.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_14864,meta14863__$1){
var self__ = this;
var _14864__$1 = this;
return (new cljs.core.t14862(self__.nil_iter,meta14863__$1));
});

cljs.core.t14862.cljs$lang$type = true;

cljs.core.t14862.cljs$lang$ctorStr = "cljs.core/t14862";

cljs.core.t14862.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/t14862");
});

cljs.core.__GT_t14862 = (function __GT_t14862(nil_iter__$1,meta14863){
return (new cljs.core.t14862(nil_iter__$1,meta14863));
});

}

return (new cljs.core.t14862(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__10929__auto__ = !((lt.stepper == null));
if(and__10929__auto__){
return self__.iter.hasNext();
} else {
return and__10929__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__14865 = lt;
var G__14866 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__14865,G__14866) : self__.xform.call(null,G__14865,G__14866));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14867 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14867) : self__.xform.call(null,G__14867));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__14869 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14869) : xform.call(null,G__14869));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__14871 = cljs.core.next(iters__$1);
iters__$1 = G__14871;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__11828__auto___14872 = self__.iters.length;
var i_14873 = (0);
while(true){
if((i_14873 < n__11828__auto___14872)){
(self__.nexts[i_14873] = (self__.iters[i_14873]).next());

var G__14874 = (i_14873 + (1));
i_14873 = G__14874;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__10929__auto__ = !((lt.stepper == null));
if(and__10929__auto__){
return this$.hasNext();
} else {
return and__10929__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14870 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14870) : self__.xform.call(null,G__14870));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__14879 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14879) : xform.call(null,G__14879));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__14880_14884 = cljs.core.seq(colls);
var chunk__14881_14885 = null;
var count__14882_14886 = (0);
var i__14883_14887 = (0);
while(true){
if((i__14883_14887 < count__14882_14886)){
var coll_14888 = chunk__14881_14885.cljs$core$IIndexed$_nth$arity$2(null,i__14883_14887);
iters.push(cljs.core.iter(coll_14888));

var G__14889 = seq__14880_14884;
var G__14890 = chunk__14881_14885;
var G__14891 = count__14882_14886;
var G__14892 = (i__14883_14887 + (1));
seq__14880_14884 = G__14889;
chunk__14881_14885 = G__14890;
count__14882_14886 = G__14891;
i__14883_14887 = G__14892;
continue;
} else {
var temp__4406__auto___14893 = cljs.core.seq(seq__14880_14884);
if(temp__4406__auto___14893){
var seq__14880_14894__$1 = temp__4406__auto___14893;
if(cljs.core.chunked_seq_QMARK_(seq__14880_14894__$1)){
var c__11728__auto___14895 = cljs.core.chunk_first(seq__14880_14894__$1);
var G__14896 = cljs.core.chunk_rest(seq__14880_14894__$1);
var G__14897 = c__11728__auto___14895;
var G__14898 = cljs.core.count(c__11728__auto___14895);
var G__14899 = (0);
seq__14880_14884 = G__14896;
chunk__14881_14885 = G__14897;
count__14882_14886 = G__14898;
i__14883_14887 = G__14899;
continue;
} else {
var coll_14900 = cljs.core.first(seq__14880_14894__$1);
iters.push(cljs.core.iter(coll_14900));

var G__14901 = cljs.core.next(seq__14880_14894__$1);
var G__14902 = null;
var G__14903 = (0);
var G__14904 = (0);
seq__14880_14884 = G__14901;
chunk__14881_14885 = G__14902;
count__14882_14886 = G__14903;
i__14883_14887 = G__14904;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__10941__auto__ = cljs.core.seq(coll);
if(or__10941__auto__){
return or__10941__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__14905__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__14905 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14906__i = 0, G__14906__a = new Array(arguments.length -  2);
while (G__14906__i < G__14906__a.length) {G__14906__a[G__14906__i] = arguments[G__14906__i + 2]; ++G__14906__i;}
  colls = new cljs.core.IndexedSeq(G__14906__a,0);
} 
return G__14905__delegate.call(this,xform,coll,colls);};
G__14905.cljs$lang$maxFixedArity = 2;
G__14905.cljs$lang$applyTo = (function (arglist__14907){
var xform = cljs.core.first(arglist__14907);
arglist__14907 = cljs.core.next(arglist__14907);
var coll = cljs.core.first(arglist__14907);
var colls = cljs.core.rest(arglist__14907);
return G__14905__delegate(xform,coll,colls);
});
G__14905.cljs$core$IFn$_invoke$arity$variadic = G__14905__delegate;
return G__14905;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__14908 = null;
if (arguments.length > 2) {
var G__14909__i = 0, G__14909__a = new Array(arguments.length -  2);
while (G__14909__i < G__14909__a.length) {G__14909__a[G__14909__i] = arguments[G__14909__i + 2]; ++G__14909__i;}
G__14908 = new cljs.core.IndexedSeq(G__14909__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__14908);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__14911 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14911) : pred.call(null,G__14911));
})())){
var G__14912 = pred;
var G__14913 = cljs.core.next(coll);
pred = G__14912;
coll = G__14913;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__10941__auto__ = (function (){var G__14917 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14917) : pred.call(null,G__14917));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__14918 = pred;
var G__14919 = cljs.core.next(coll);
pred = G__14918;
coll = G__14919;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__14926 = null;
var G__14926__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__14926__1 = (function (x){
return cljs.core.not((function (){var G__14923 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14923) : f.call(null,G__14923));
})());
});
var G__14926__2 = (function (x,y){
return cljs.core.not((function (){var G__14924 = x;
var G__14925 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14924,G__14925) : f.call(null,G__14924,G__14925));
})());
});
var G__14926__3 = (function() { 
var G__14927__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__14927 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14928__i = 0, G__14928__a = new Array(arguments.length -  2);
while (G__14928__i < G__14928__a.length) {G__14928__a[G__14928__i] = arguments[G__14928__i + 2]; ++G__14928__i;}
  zs = new cljs.core.IndexedSeq(G__14928__a,0);
} 
return G__14927__delegate.call(this,x,y,zs);};
G__14927.cljs$lang$maxFixedArity = 2;
G__14927.cljs$lang$applyTo = (function (arglist__14929){
var x = cljs.core.first(arglist__14929);
arglist__14929 = cljs.core.next(arglist__14929);
var y = cljs.core.first(arglist__14929);
var zs = cljs.core.rest(arglist__14929);
return G__14927__delegate(x,y,zs);
});
G__14927.cljs$core$IFn$_invoke$arity$variadic = G__14927__delegate;
return G__14927;
})()
;
G__14926 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__14926__0.call(this);
case 1:
return G__14926__1.call(this,x);
case 2:
return G__14926__2.call(this,x,y);
default:
var G__14930 = null;
if (arguments.length > 2) {
var G__14931__i = 0, G__14931__a = new Array(arguments.length -  2);
while (G__14931__i < G__14931__a.length) {G__14931__a[G__14931__i] = arguments[G__14931__i + 2]; ++G__14931__i;}
G__14930 = new cljs.core.IndexedSeq(G__14931__a,0);
}
return G__14926__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14926.cljs$lang$maxFixedArity = 2;
G__14926.cljs$lang$applyTo = G__14926__3.cljs$lang$applyTo;
G__14926.cljs$core$IFn$_invoke$arity$0 = G__14926__0;
G__14926.cljs$core$IFn$_invoke$arity$1 = G__14926__1;
G__14926.cljs$core$IFn$_invoke$arity$2 = G__14926__2;
G__14926.cljs$core$IFn$_invoke$arity$variadic = G__14926__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14926;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__14932__delegate = function (args){
return x;
};
var G__14932 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14933__i = 0, G__14933__a = new Array(arguments.length -  0);
while (G__14933__i < G__14933__a.length) {G__14933__a[G__14933__i] = arguments[G__14933__i + 0]; ++G__14933__i;}
  args = new cljs.core.IndexedSeq(G__14933__a,0);
} 
return G__14932__delegate.call(this,args);};
G__14932.cljs$lang$maxFixedArity = 0;
G__14932.cljs$lang$applyTo = (function (arglist__14934){
var args = cljs.core.seq(arglist__14934);
return G__14932__delegate(args);
});
G__14932.cljs$core$IFn$_invoke$arity$variadic = G__14932__delegate;
return G__14932;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__14989 = null;
var G__14989__0 = (function (){
var G__14962 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14962) : f.call(null,G__14962));
});
var G__14989__1 = (function (x){
var G__14963 = (function (){var G__14964 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14964) : g.call(null,G__14964));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14963) : f.call(null,G__14963));
});
var G__14989__2 = (function (x,y){
var G__14965 = (function (){var G__14966 = x;
var G__14967 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14966,G__14967) : g.call(null,G__14966,G__14967));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14965) : f.call(null,G__14965));
});
var G__14989__3 = (function (x,y,z){
var G__14968 = (function (){var G__14969 = x;
var G__14970 = y;
var G__14971 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14969,G__14970,G__14971) : g.call(null,G__14969,G__14970,G__14971));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14968) : f.call(null,G__14968));
});
var G__14989__4 = (function() { 
var G__14990__delegate = function (x,y,z,args){
var G__14972 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14972) : f.call(null,G__14972));
};
var G__14990 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14991__i = 0, G__14991__a = new Array(arguments.length -  3);
while (G__14991__i < G__14991__a.length) {G__14991__a[G__14991__i] = arguments[G__14991__i + 3]; ++G__14991__i;}
  args = new cljs.core.IndexedSeq(G__14991__a,0);
} 
return G__14990__delegate.call(this,x,y,z,args);};
G__14990.cljs$lang$maxFixedArity = 3;
G__14990.cljs$lang$applyTo = (function (arglist__14992){
var x = cljs.core.first(arglist__14992);
arglist__14992 = cljs.core.next(arglist__14992);
var y = cljs.core.first(arglist__14992);
arglist__14992 = cljs.core.next(arglist__14992);
var z = cljs.core.first(arglist__14992);
var args = cljs.core.rest(arglist__14992);
return G__14990__delegate(x,y,z,args);
});
G__14990.cljs$core$IFn$_invoke$arity$variadic = G__14990__delegate;
return G__14990;
})()
;
G__14989 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14989__0.call(this);
case 1:
return G__14989__1.call(this,x);
case 2:
return G__14989__2.call(this,x,y);
case 3:
return G__14989__3.call(this,x,y,z);
default:
var G__14993 = null;
if (arguments.length > 3) {
var G__14994__i = 0, G__14994__a = new Array(arguments.length -  3);
while (G__14994__i < G__14994__a.length) {G__14994__a[G__14994__i] = arguments[G__14994__i + 3]; ++G__14994__i;}
G__14993 = new cljs.core.IndexedSeq(G__14994__a,0);
}
return G__14989__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14989.cljs$lang$maxFixedArity = 3;
G__14989.cljs$lang$applyTo = G__14989__4.cljs$lang$applyTo;
G__14989.cljs$core$IFn$_invoke$arity$0 = G__14989__0;
G__14989.cljs$core$IFn$_invoke$arity$1 = G__14989__1;
G__14989.cljs$core$IFn$_invoke$arity$2 = G__14989__2;
G__14989.cljs$core$IFn$_invoke$arity$3 = G__14989__3;
G__14989.cljs$core$IFn$_invoke$arity$variadic = G__14989__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14989;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__14995 = null;
var G__14995__0 = (function (){
var G__14973 = (function (){var G__14974 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14974) : g.call(null,G__14974));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14973) : f.call(null,G__14973));
});
var G__14995__1 = (function (x){
var G__14975 = (function (){var G__14976 = (function (){var G__14977 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14977) : h.call(null,G__14977));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14976) : g.call(null,G__14976));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14975) : f.call(null,G__14975));
});
var G__14995__2 = (function (x,y){
var G__14978 = (function (){var G__14979 = (function (){var G__14980 = x;
var G__14981 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14980,G__14981) : h.call(null,G__14980,G__14981));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14979) : g.call(null,G__14979));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14978) : f.call(null,G__14978));
});
var G__14995__3 = (function (x,y,z){
var G__14982 = (function (){var G__14983 = (function (){var G__14984 = x;
var G__14985 = y;
var G__14986 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14984,G__14985,G__14986) : h.call(null,G__14984,G__14985,G__14986));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14983) : g.call(null,G__14983));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14982) : f.call(null,G__14982));
});
var G__14995__4 = (function() { 
var G__14996__delegate = function (x,y,z,args){
var G__14987 = (function (){var G__14988 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14988) : g.call(null,G__14988));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14987) : f.call(null,G__14987));
};
var G__14996 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14997__i = 0, G__14997__a = new Array(arguments.length -  3);
while (G__14997__i < G__14997__a.length) {G__14997__a[G__14997__i] = arguments[G__14997__i + 3]; ++G__14997__i;}
  args = new cljs.core.IndexedSeq(G__14997__a,0);
} 
return G__14996__delegate.call(this,x,y,z,args);};
G__14996.cljs$lang$maxFixedArity = 3;
G__14996.cljs$lang$applyTo = (function (arglist__14998){
var x = cljs.core.first(arglist__14998);
arglist__14998 = cljs.core.next(arglist__14998);
var y = cljs.core.first(arglist__14998);
arglist__14998 = cljs.core.next(arglist__14998);
var z = cljs.core.first(arglist__14998);
var args = cljs.core.rest(arglist__14998);
return G__14996__delegate(x,y,z,args);
});
G__14996.cljs$core$IFn$_invoke$arity$variadic = G__14996__delegate;
return G__14996;
})()
;
G__14995 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14995__0.call(this);
case 1:
return G__14995__1.call(this,x);
case 2:
return G__14995__2.call(this,x,y);
case 3:
return G__14995__3.call(this,x,y,z);
default:
var G__14999 = null;
if (arguments.length > 3) {
var G__15000__i = 0, G__15000__a = new Array(arguments.length -  3);
while (G__15000__i < G__15000__a.length) {G__15000__a[G__15000__i] = arguments[G__15000__i + 3]; ++G__15000__i;}
G__14999 = new cljs.core.IndexedSeq(G__15000__a,0);
}
return G__14995__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14999);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14995.cljs$lang$maxFixedArity = 3;
G__14995.cljs$lang$applyTo = G__14995__4.cljs$lang$applyTo;
G__14995.cljs$core$IFn$_invoke$arity$0 = G__14995__0;
G__14995.cljs$core$IFn$_invoke$arity$1 = G__14995__1;
G__14995.cljs$core$IFn$_invoke$arity$2 = G__14995__2;
G__14995.cljs$core$IFn$_invoke$arity$3 = G__14995__3;
G__14995.cljs$core$IFn$_invoke$arity$variadic = G__14995__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14995;
})()
});
var comp__4 = (function() { 
var G__15001__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__15002__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__15003 = cljs.core.first(fs__$2).call(null,ret);
var G__15004 = cljs.core.next(fs__$2);
ret = G__15003;
fs__$2 = G__15004;
continue;
} else {
return ret;
}
break;
}
};
var G__15002 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15005__i = 0, G__15005__a = new Array(arguments.length -  0);
while (G__15005__i < G__15005__a.length) {G__15005__a[G__15005__i] = arguments[G__15005__i + 0]; ++G__15005__i;}
  args = new cljs.core.IndexedSeq(G__15005__a,0);
} 
return G__15002__delegate.call(this,args);};
G__15002.cljs$lang$maxFixedArity = 0;
G__15002.cljs$lang$applyTo = (function (arglist__15006){
var args = cljs.core.seq(arglist__15006);
return G__15002__delegate(args);
});
G__15002.cljs$core$IFn$_invoke$arity$variadic = G__15002__delegate;
return G__15002;
})()
;
;})(fs__$1))
};
var G__15001 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15007__i = 0, G__15007__a = new Array(arguments.length -  3);
while (G__15007__i < G__15007__a.length) {G__15007__a[G__15007__i] = arguments[G__15007__i + 3]; ++G__15007__i;}
  fs = new cljs.core.IndexedSeq(G__15007__a,0);
} 
return G__15001__delegate.call(this,f1,f2,f3,fs);};
G__15001.cljs$lang$maxFixedArity = 3;
G__15001.cljs$lang$applyTo = (function (arglist__15008){
var f1 = cljs.core.first(arglist__15008);
arglist__15008 = cljs.core.next(arglist__15008);
var f2 = cljs.core.first(arglist__15008);
arglist__15008 = cljs.core.next(arglist__15008);
var f3 = cljs.core.first(arglist__15008);
var fs = cljs.core.rest(arglist__15008);
return G__15001__delegate(f1,f2,f3,fs);
});
G__15001.cljs$core$IFn$_invoke$arity$variadic = G__15001__delegate;
return G__15001;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__15009 = null;
if (arguments.length > 3) {
var G__15010__i = 0, G__15010__a = new Array(arguments.length -  3);
while (G__15010__i < G__15010__a.length) {G__15010__a[G__15010__i] = arguments[G__15010__i + 3]; ++G__15010__i;}
G__15009 = new cljs.core.IndexedSeq(G__15010__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__15009);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__15095 = null;
var G__15095__0 = (function (){
var G__15053 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15053) : f.call(null,G__15053));
});
var G__15095__1 = (function (x){
var G__15054 = arg1;
var G__15055 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15054,G__15055) : f.call(null,G__15054,G__15055));
});
var G__15095__2 = (function (x,y){
var G__15056 = arg1;
var G__15057 = x;
var G__15058 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15056,G__15057,G__15058) : f.call(null,G__15056,G__15057,G__15058));
});
var G__15095__3 = (function (x,y,z){
var G__15059 = arg1;
var G__15060 = x;
var G__15061 = y;
var G__15062 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15059,G__15060,G__15061,G__15062) : f.call(null,G__15059,G__15060,G__15061,G__15062));
});
var G__15095__4 = (function() { 
var G__15096__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__15096 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15097__i = 0, G__15097__a = new Array(arguments.length -  3);
while (G__15097__i < G__15097__a.length) {G__15097__a[G__15097__i] = arguments[G__15097__i + 3]; ++G__15097__i;}
  args = new cljs.core.IndexedSeq(G__15097__a,0);
} 
return G__15096__delegate.call(this,x,y,z,args);};
G__15096.cljs$lang$maxFixedArity = 3;
G__15096.cljs$lang$applyTo = (function (arglist__15098){
var x = cljs.core.first(arglist__15098);
arglist__15098 = cljs.core.next(arglist__15098);
var y = cljs.core.first(arglist__15098);
arglist__15098 = cljs.core.next(arglist__15098);
var z = cljs.core.first(arglist__15098);
var args = cljs.core.rest(arglist__15098);
return G__15096__delegate(x,y,z,args);
});
G__15096.cljs$core$IFn$_invoke$arity$variadic = G__15096__delegate;
return G__15096;
})()
;
G__15095 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15095__0.call(this);
case 1:
return G__15095__1.call(this,x);
case 2:
return G__15095__2.call(this,x,y);
case 3:
return G__15095__3.call(this,x,y,z);
default:
var G__15099 = null;
if (arguments.length > 3) {
var G__15100__i = 0, G__15100__a = new Array(arguments.length -  3);
while (G__15100__i < G__15100__a.length) {G__15100__a[G__15100__i] = arguments[G__15100__i + 3]; ++G__15100__i;}
G__15099 = new cljs.core.IndexedSeq(G__15100__a,0);
}
return G__15095__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15095.cljs$lang$maxFixedArity = 3;
G__15095.cljs$lang$applyTo = G__15095__4.cljs$lang$applyTo;
G__15095.cljs$core$IFn$_invoke$arity$0 = G__15095__0;
G__15095.cljs$core$IFn$_invoke$arity$1 = G__15095__1;
G__15095.cljs$core$IFn$_invoke$arity$2 = G__15095__2;
G__15095.cljs$core$IFn$_invoke$arity$3 = G__15095__3;
G__15095.cljs$core$IFn$_invoke$arity$variadic = G__15095__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15095;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__15101 = null;
var G__15101__0 = (function (){
var G__15063 = arg1;
var G__15064 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15063,G__15064) : f.call(null,G__15063,G__15064));
});
var G__15101__1 = (function (x){
var G__15065 = arg1;
var G__15066 = arg2;
var G__15067 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15065,G__15066,G__15067) : f.call(null,G__15065,G__15066,G__15067));
});
var G__15101__2 = (function (x,y){
var G__15068 = arg1;
var G__15069 = arg2;
var G__15070 = x;
var G__15071 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15068,G__15069,G__15070,G__15071) : f.call(null,G__15068,G__15069,G__15070,G__15071));
});
var G__15101__3 = (function (x,y,z){
var G__15072 = arg1;
var G__15073 = arg2;
var G__15074 = x;
var G__15075 = y;
var G__15076 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15072,G__15073,G__15074,G__15075,G__15076) : f.call(null,G__15072,G__15073,G__15074,G__15075,G__15076));
});
var G__15101__4 = (function() { 
var G__15102__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__15102 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15103__i = 0, G__15103__a = new Array(arguments.length -  3);
while (G__15103__i < G__15103__a.length) {G__15103__a[G__15103__i] = arguments[G__15103__i + 3]; ++G__15103__i;}
  args = new cljs.core.IndexedSeq(G__15103__a,0);
} 
return G__15102__delegate.call(this,x,y,z,args);};
G__15102.cljs$lang$maxFixedArity = 3;
G__15102.cljs$lang$applyTo = (function (arglist__15104){
var x = cljs.core.first(arglist__15104);
arglist__15104 = cljs.core.next(arglist__15104);
var y = cljs.core.first(arglist__15104);
arglist__15104 = cljs.core.next(arglist__15104);
var z = cljs.core.first(arglist__15104);
var args = cljs.core.rest(arglist__15104);
return G__15102__delegate(x,y,z,args);
});
G__15102.cljs$core$IFn$_invoke$arity$variadic = G__15102__delegate;
return G__15102;
})()
;
G__15101 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15101__0.call(this);
case 1:
return G__15101__1.call(this,x);
case 2:
return G__15101__2.call(this,x,y);
case 3:
return G__15101__3.call(this,x,y,z);
default:
var G__15105 = null;
if (arguments.length > 3) {
var G__15106__i = 0, G__15106__a = new Array(arguments.length -  3);
while (G__15106__i < G__15106__a.length) {G__15106__a[G__15106__i] = arguments[G__15106__i + 3]; ++G__15106__i;}
G__15105 = new cljs.core.IndexedSeq(G__15106__a,0);
}
return G__15101__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15101.cljs$lang$maxFixedArity = 3;
G__15101.cljs$lang$applyTo = G__15101__4.cljs$lang$applyTo;
G__15101.cljs$core$IFn$_invoke$arity$0 = G__15101__0;
G__15101.cljs$core$IFn$_invoke$arity$1 = G__15101__1;
G__15101.cljs$core$IFn$_invoke$arity$2 = G__15101__2;
G__15101.cljs$core$IFn$_invoke$arity$3 = G__15101__3;
G__15101.cljs$core$IFn$_invoke$arity$variadic = G__15101__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15101;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__15107 = null;
var G__15107__0 = (function (){
var G__15077 = arg1;
var G__15078 = arg2;
var G__15079 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15077,G__15078,G__15079) : f.call(null,G__15077,G__15078,G__15079));
});
var G__15107__1 = (function (x){
var G__15080 = arg1;
var G__15081 = arg2;
var G__15082 = arg3;
var G__15083 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15080,G__15081,G__15082,G__15083) : f.call(null,G__15080,G__15081,G__15082,G__15083));
});
var G__15107__2 = (function (x,y){
var G__15084 = arg1;
var G__15085 = arg2;
var G__15086 = arg3;
var G__15087 = x;
var G__15088 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15084,G__15085,G__15086,G__15087,G__15088) : f.call(null,G__15084,G__15085,G__15086,G__15087,G__15088));
});
var G__15107__3 = (function (x,y,z){
var G__15089 = arg1;
var G__15090 = arg2;
var G__15091 = arg3;
var G__15092 = x;
var G__15093 = y;
var G__15094 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__15089,G__15090,G__15091,G__15092,G__15093,G__15094) : f.call(null,G__15089,G__15090,G__15091,G__15092,G__15093,G__15094));
});
var G__15107__4 = (function() { 
var G__15108__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__15108 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15109__i = 0, G__15109__a = new Array(arguments.length -  3);
while (G__15109__i < G__15109__a.length) {G__15109__a[G__15109__i] = arguments[G__15109__i + 3]; ++G__15109__i;}
  args = new cljs.core.IndexedSeq(G__15109__a,0);
} 
return G__15108__delegate.call(this,x,y,z,args);};
G__15108.cljs$lang$maxFixedArity = 3;
G__15108.cljs$lang$applyTo = (function (arglist__15110){
var x = cljs.core.first(arglist__15110);
arglist__15110 = cljs.core.next(arglist__15110);
var y = cljs.core.first(arglist__15110);
arglist__15110 = cljs.core.next(arglist__15110);
var z = cljs.core.first(arglist__15110);
var args = cljs.core.rest(arglist__15110);
return G__15108__delegate(x,y,z,args);
});
G__15108.cljs$core$IFn$_invoke$arity$variadic = G__15108__delegate;
return G__15108;
})()
;
G__15107 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15107__0.call(this);
case 1:
return G__15107__1.call(this,x);
case 2:
return G__15107__2.call(this,x,y);
case 3:
return G__15107__3.call(this,x,y,z);
default:
var G__15111 = null;
if (arguments.length > 3) {
var G__15112__i = 0, G__15112__a = new Array(arguments.length -  3);
while (G__15112__i < G__15112__a.length) {G__15112__a[G__15112__i] = arguments[G__15112__i + 3]; ++G__15112__i;}
G__15111 = new cljs.core.IndexedSeq(G__15112__a,0);
}
return G__15107__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15111);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15107.cljs$lang$maxFixedArity = 3;
G__15107.cljs$lang$applyTo = G__15107__4.cljs$lang$applyTo;
G__15107.cljs$core$IFn$_invoke$arity$0 = G__15107__0;
G__15107.cljs$core$IFn$_invoke$arity$1 = G__15107__1;
G__15107.cljs$core$IFn$_invoke$arity$2 = G__15107__2;
G__15107.cljs$core$IFn$_invoke$arity$3 = G__15107__3;
G__15107.cljs$core$IFn$_invoke$arity$variadic = G__15107__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15107;
})()
});
var partial__5 = (function() { 
var G__15113__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__15114__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__15114 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15115__i = 0, G__15115__a = new Array(arguments.length -  0);
while (G__15115__i < G__15115__a.length) {G__15115__a[G__15115__i] = arguments[G__15115__i + 0]; ++G__15115__i;}
  args = new cljs.core.IndexedSeq(G__15115__a,0);
} 
return G__15114__delegate.call(this,args);};
G__15114.cljs$lang$maxFixedArity = 0;
G__15114.cljs$lang$applyTo = (function (arglist__15116){
var args = cljs.core.seq(arglist__15116);
return G__15114__delegate(args);
});
G__15114.cljs$core$IFn$_invoke$arity$variadic = G__15114__delegate;
return G__15114;
})()
;
};
var G__15113 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__15117__i = 0, G__15117__a = new Array(arguments.length -  4);
while (G__15117__i < G__15117__a.length) {G__15117__a[G__15117__i] = arguments[G__15117__i + 4]; ++G__15117__i;}
  more = new cljs.core.IndexedSeq(G__15117__a,0);
} 
return G__15113__delegate.call(this,f,arg1,arg2,arg3,more);};
G__15113.cljs$lang$maxFixedArity = 4;
G__15113.cljs$lang$applyTo = (function (arglist__15118){
var f = cljs.core.first(arglist__15118);
arglist__15118 = cljs.core.next(arglist__15118);
var arg1 = cljs.core.first(arglist__15118);
arglist__15118 = cljs.core.next(arglist__15118);
var arg2 = cljs.core.first(arglist__15118);
arglist__15118 = cljs.core.next(arglist__15118);
var arg3 = cljs.core.first(arglist__15118);
var more = cljs.core.rest(arglist__15118);
return G__15113__delegate(f,arg1,arg2,arg3,more);
});
G__15113.cljs$core$IFn$_invoke$arity$variadic = G__15113__delegate;
return G__15113;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__15119 = null;
if (arguments.length > 4) {
var G__15120__i = 0, G__15120__a = new Array(arguments.length -  4);
while (G__15120__i < G__15120__a.length) {G__15120__a[G__15120__i] = arguments[G__15120__i + 4]; ++G__15120__i;}
G__15119 = new cljs.core.IndexedSeq(G__15120__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__15119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__15153 = null;
var G__15153__1 = (function (a){
var G__15137 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15137) : f.call(null,G__15137));
});
var G__15153__2 = (function (a,b){
var G__15138 = (((a == null))?x:a);
var G__15139 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15138,G__15139) : f.call(null,G__15138,G__15139));
});
var G__15153__3 = (function (a,b,c){
var G__15140 = (((a == null))?x:a);
var G__15141 = b;
var G__15142 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15140,G__15141,G__15142) : f.call(null,G__15140,G__15141,G__15142));
});
var G__15153__4 = (function() { 
var G__15154__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__15154 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15155__i = 0, G__15155__a = new Array(arguments.length -  3);
while (G__15155__i < G__15155__a.length) {G__15155__a[G__15155__i] = arguments[G__15155__i + 3]; ++G__15155__i;}
  ds = new cljs.core.IndexedSeq(G__15155__a,0);
} 
return G__15154__delegate.call(this,a,b,c,ds);};
G__15154.cljs$lang$maxFixedArity = 3;
G__15154.cljs$lang$applyTo = (function (arglist__15156){
var a = cljs.core.first(arglist__15156);
arglist__15156 = cljs.core.next(arglist__15156);
var b = cljs.core.first(arglist__15156);
arglist__15156 = cljs.core.next(arglist__15156);
var c = cljs.core.first(arglist__15156);
var ds = cljs.core.rest(arglist__15156);
return G__15154__delegate(a,b,c,ds);
});
G__15154.cljs$core$IFn$_invoke$arity$variadic = G__15154__delegate;
return G__15154;
})()
;
G__15153 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__15153__1.call(this,a);
case 2:
return G__15153__2.call(this,a,b);
case 3:
return G__15153__3.call(this,a,b,c);
default:
var G__15157 = null;
if (arguments.length > 3) {
var G__15158__i = 0, G__15158__a = new Array(arguments.length -  3);
while (G__15158__i < G__15158__a.length) {G__15158__a[G__15158__i] = arguments[G__15158__i + 3]; ++G__15158__i;}
G__15157 = new cljs.core.IndexedSeq(G__15158__a,0);
}
return G__15153__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15157);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15153.cljs$lang$maxFixedArity = 3;
G__15153.cljs$lang$applyTo = G__15153__4.cljs$lang$applyTo;
G__15153.cljs$core$IFn$_invoke$arity$1 = G__15153__1;
G__15153.cljs$core$IFn$_invoke$arity$2 = G__15153__2;
G__15153.cljs$core$IFn$_invoke$arity$3 = G__15153__3;
G__15153.cljs$core$IFn$_invoke$arity$variadic = G__15153__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15153;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__15159 = null;
var G__15159__2 = (function (a,b){
var G__15143 = (((a == null))?x:a);
var G__15144 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15143,G__15144) : f.call(null,G__15143,G__15144));
});
var G__15159__3 = (function (a,b,c){
var G__15145 = (((a == null))?x:a);
var G__15146 = (((b == null))?y:b);
var G__15147 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15145,G__15146,G__15147) : f.call(null,G__15145,G__15146,G__15147));
});
var G__15159__4 = (function() { 
var G__15160__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__15160 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15161__i = 0, G__15161__a = new Array(arguments.length -  3);
while (G__15161__i < G__15161__a.length) {G__15161__a[G__15161__i] = arguments[G__15161__i + 3]; ++G__15161__i;}
  ds = new cljs.core.IndexedSeq(G__15161__a,0);
} 
return G__15160__delegate.call(this,a,b,c,ds);};
G__15160.cljs$lang$maxFixedArity = 3;
G__15160.cljs$lang$applyTo = (function (arglist__15162){
var a = cljs.core.first(arglist__15162);
arglist__15162 = cljs.core.next(arglist__15162);
var b = cljs.core.first(arglist__15162);
arglist__15162 = cljs.core.next(arglist__15162);
var c = cljs.core.first(arglist__15162);
var ds = cljs.core.rest(arglist__15162);
return G__15160__delegate(a,b,c,ds);
});
G__15160.cljs$core$IFn$_invoke$arity$variadic = G__15160__delegate;
return G__15160;
})()
;
G__15159 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__15159__2.call(this,a,b);
case 3:
return G__15159__3.call(this,a,b,c);
default:
var G__15163 = null;
if (arguments.length > 3) {
var G__15164__i = 0, G__15164__a = new Array(arguments.length -  3);
while (G__15164__i < G__15164__a.length) {G__15164__a[G__15164__i] = arguments[G__15164__i + 3]; ++G__15164__i;}
G__15163 = new cljs.core.IndexedSeq(G__15164__a,0);
}
return G__15159__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15159.cljs$lang$maxFixedArity = 3;
G__15159.cljs$lang$applyTo = G__15159__4.cljs$lang$applyTo;
G__15159.cljs$core$IFn$_invoke$arity$2 = G__15159__2;
G__15159.cljs$core$IFn$_invoke$arity$3 = G__15159__3;
G__15159.cljs$core$IFn$_invoke$arity$variadic = G__15159__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15159;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__15165 = null;
var G__15165__2 = (function (a,b){
var G__15148 = (((a == null))?x:a);
var G__15149 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15148,G__15149) : f.call(null,G__15148,G__15149));
});
var G__15165__3 = (function (a,b,c){
var G__15150 = (((a == null))?x:a);
var G__15151 = (((b == null))?y:b);
var G__15152 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15150,G__15151,G__15152) : f.call(null,G__15150,G__15151,G__15152));
});
var G__15165__4 = (function() { 
var G__15166__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__15166 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15167__i = 0, G__15167__a = new Array(arguments.length -  3);
while (G__15167__i < G__15167__a.length) {G__15167__a[G__15167__i] = arguments[G__15167__i + 3]; ++G__15167__i;}
  ds = new cljs.core.IndexedSeq(G__15167__a,0);
} 
return G__15166__delegate.call(this,a,b,c,ds);};
G__15166.cljs$lang$maxFixedArity = 3;
G__15166.cljs$lang$applyTo = (function (arglist__15168){
var a = cljs.core.first(arglist__15168);
arglist__15168 = cljs.core.next(arglist__15168);
var b = cljs.core.first(arglist__15168);
arglist__15168 = cljs.core.next(arglist__15168);
var c = cljs.core.first(arglist__15168);
var ds = cljs.core.rest(arglist__15168);
return G__15166__delegate(a,b,c,ds);
});
G__15166.cljs$core$IFn$_invoke$arity$variadic = G__15166__delegate;
return G__15166;
})()
;
G__15165 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__15165__2.call(this,a,b);
case 3:
return G__15165__3.call(this,a,b,c);
default:
var G__15169 = null;
if (arguments.length > 3) {
var G__15170__i = 0, G__15170__a = new Array(arguments.length -  3);
while (G__15170__i < G__15170__a.length) {G__15170__a[G__15170__i] = arguments[G__15170__i + 3]; ++G__15170__i;}
G__15169 = new cljs.core.IndexedSeq(G__15170__a,0);
}
return G__15165__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15165.cljs$lang$maxFixedArity = 3;
G__15165.cljs$lang$applyTo = G__15165__4.cljs$lang$applyTo;
G__15165.cljs$core$IFn$_invoke$arity$2 = G__15165__2;
G__15165.cljs$core$IFn$_invoke$arity$3 = G__15165__3;
G__15165.cljs$core$IFn$_invoke$arity$variadic = G__15165__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15165;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__15201 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__15201) : cljs.core.volatile_BANG_.call(null,G__15201));
})();
return ((function (i){
return (function() {
var G__15231 = null;
var G__15231__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15231__1 = (function (result){
var G__15202 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15202) : rf.call(null,G__15202));
});
var G__15231__2 = (function (result,input){
var G__15203 = result;
var G__15204 = (function (){var G__15205 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__15206 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15205,G__15206) : f.call(null,G__15205,G__15206));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15203,G__15204) : rf.call(null,G__15203,G__15204));
});
G__15231 = function(result,input){
switch(arguments.length){
case 0:
return G__15231__0.call(this);
case 1:
return G__15231__1.call(this,result);
case 2:
return G__15231__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15231.cljs$core$IFn$_invoke$arity$0 = G__15231__0;
G__15231.cljs$core$IFn$_invoke$arity$1 = G__15231__1;
G__15231.cljs$core$IFn$_invoke$arity$2 = G__15231__2;
return G__15231;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___15232 = size;
var i_15233 = (0);
while(true){
if((i_15233 < n__11828__auto___15232)){
cljs.core.chunk_append(b,(function (){var G__15227 = (idx + i_15233);
var G__15228 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15233);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15227,G__15228) : f.call(null,G__15227,G__15228));
})());

var G__15234 = (i_15233 + (1));
i_15233 = G__15234;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__15229 = idx;
var G__15230 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15229,G__15230) : f.call(null,G__15229,G__15230));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__15253 = null;
var G__15253__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15253__1 = (function (result){
var G__15247 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15247) : rf.call(null,G__15247));
});
var G__15253__2 = (function (result,input){
var v = (function (){var G__15248 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15248) : f.call(null,G__15248));
})();
if((v == null)){
return result;
} else {
var G__15249 = result;
var G__15250 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15249,G__15250) : rf.call(null,G__15249,G__15250));
}
});
G__15253 = function(result,input){
switch(arguments.length){
case 0:
return G__15253__0.call(this);
case 1:
return G__15253__1.call(this,result);
case 2:
return G__15253__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15253.cljs$core$IFn$_invoke$arity$0 = G__15253__0;
G__15253.cljs$core$IFn$_invoke$arity$1 = G__15253__1;
G__15253.cljs$core$IFn$_invoke$arity$2 = G__15253__2;
return G__15253;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___15254 = size;
var i_15255 = (0);
while(true){
if((i_15255 < n__11828__auto___15254)){
var x_15256 = (function (){var G__15251 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15255);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15251) : f.call(null,G__15251));
})();
if((x_15256 == null)){
} else {
cljs.core.chunk_append(b,x_15256);
}

var G__15257 = (i_15255 + (1));
i_15255 = G__15257;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__15252 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15252) : f.call(null,G__15252));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15258 = this$__$1;
return goog.getUid(G__15258);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__15259 = cljs.core.seq(self__.watches);
var chunk__15260 = null;
var count__15261 = (0);
var i__15262 = (0);
while(true){
if((i__15262 < count__15261)){
var vec__15263 = chunk__15260.cljs$core$IIndexed$_nth$arity$2(null,i__15262);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15263,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15263,(1),null);
var G__15264_15273 = key;
var G__15265_15274 = this$__$1;
var G__15266_15275 = oldval;
var G__15267_15276 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15264_15273,G__15265_15274,G__15266_15275,G__15267_15276) : f.call(null,G__15264_15273,G__15265_15274,G__15266_15275,G__15267_15276));

var G__15277 = seq__15259;
var G__15278 = chunk__15260;
var G__15279 = count__15261;
var G__15280 = (i__15262 + (1));
seq__15259 = G__15277;
chunk__15260 = G__15278;
count__15261 = G__15279;
i__15262 = G__15280;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__15259);
if(temp__4406__auto__){
var seq__15259__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15259__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__15259__$1);
var G__15281 = cljs.core.chunk_rest(seq__15259__$1);
var G__15282 = c__11728__auto__;
var G__15283 = cljs.core.count(c__11728__auto__);
var G__15284 = (0);
seq__15259 = G__15281;
chunk__15260 = G__15282;
count__15261 = G__15283;
i__15262 = G__15284;
continue;
} else {
var vec__15268 = cljs.core.first(seq__15259__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15268,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15268,(1),null);
var G__15269_15285 = key;
var G__15270_15286 = this$__$1;
var G__15271_15287 = oldval;
var G__15272_15288 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15269_15285,G__15270_15286,G__15271_15287,G__15272_15288) : f.call(null,G__15269_15285,G__15270_15286,G__15271_15287,G__15272_15288));

var G__15289 = cljs.core.next(seq__15259__$1);
var G__15290 = null;
var G__15291 = (0);
var G__15292 = (0);
seq__15259 = G__15289;
chunk__15260 = G__15290;
count__15261 = G__15291;
i__15262 = G__15292;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__15296__delegate = function (x,p__15293){
var map__15295 = p__15293;
var map__15295__$1 = ((cljs.core.seq_QMARK_(map__15295))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15295):map__15295);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15295__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15295__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__15296 = function (x,var_args){
var p__15293 = null;
if (arguments.length > 1) {
var G__15297__i = 0, G__15297__a = new Array(arguments.length -  1);
while (G__15297__i < G__15297__a.length) {G__15297__a[G__15297__i] = arguments[G__15297__i + 1]; ++G__15297__i;}
  p__15293 = new cljs.core.IndexedSeq(G__15297__a,0);
} 
return G__15296__delegate.call(this,x,p__15293);};
G__15296.cljs$lang$maxFixedArity = 1;
G__15296.cljs$lang$applyTo = (function (arglist__15298){
var x = cljs.core.first(arglist__15298);
var p__15293 = cljs.core.rest(arglist__15298);
return G__15296__delegate(x,p__15293);
});
G__15296.cljs$core$IFn$_invoke$arity$variadic = G__15296__delegate;
return G__15296;
})()
;
atom = function(x,var_args){
var p__15293 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__15299 = null;
if (arguments.length > 1) {
var G__15300__i = 0, G__15300__a = new Array(arguments.length -  1);
while (G__15300__i < G__15300__a.length) {G__15300__a[G__15300__i] = arguments[G__15300__i + 1]; ++G__15300__i;}
G__15299 = new cljs.core.IndexedSeq(G__15300__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__15303 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__15303) : validate.call(null,G__15303));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__15304 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15304) : cljs.core.pr_str.call(null,G__15304));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15311 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15311) : f.call(null,G__15311));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15312 = a.state;
var G__15313 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15312,G__15313) : f.call(null,G__15312,G__15313));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15314 = a.state;
var G__15315 = x;
var G__15316 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15314,G__15315,G__15316) : f.call(null,G__15314,G__15315,G__15316));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__15317__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__15317 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__15318__i = 0, G__15318__a = new Array(arguments.length -  4);
while (G__15318__i < G__15318__a.length) {G__15318__a[G__15318__i] = arguments[G__15318__i + 4]; ++G__15318__i;}
  more = new cljs.core.IndexedSeq(G__15318__a,0);
} 
return G__15317__delegate.call(this,a,f,x,y,more);};
G__15317.cljs$lang$maxFixedArity = 4;
G__15317.cljs$lang$applyTo = (function (arglist__15319){
var a = cljs.core.first(arglist__15319);
arglist__15319 = cljs.core.next(arglist__15319);
var f = cljs.core.first(arglist__15319);
arglist__15319 = cljs.core.next(arglist__15319);
var x = cljs.core.first(arglist__15319);
arglist__15319 = cljs.core.next(arglist__15319);
var y = cljs.core.first(arglist__15319);
var more = cljs.core.rest(arglist__15319);
return G__15317__delegate(a,f,x,y,more);
});
G__15317.cljs$core$IFn$_invoke$arity$variadic = G__15317__delegate;
return G__15317;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__15320 = null;
if (arguments.length > 4) {
var G__15321__i = 0, G__15321__a = new Array(arguments.length -  4);
while (G__15321__i < G__15321__a.length) {G__15321__a[G__15321__i] = arguments[G__15321__i + 4]; ++G__15321__i;}
G__15320 = new cljs.core.IndexedSeq(G__15321__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__15320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15388 = null;
var G__15388__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15388__1 = (function (result){
var G__15355 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15355) : rf.call(null,G__15355));
});
var G__15388__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__15356 = i;
var G__15357 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15356,G__15357) : f.call(null,G__15356,G__15357));
})();
if((v == null)){
return result;
} else {
var G__15358 = result;
var G__15359 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15358,G__15359) : rf.call(null,G__15358,G__15359));
}
});
G__15388 = function(result,input){
switch(arguments.length){
case 0:
return G__15388__0.call(this);
case 1:
return G__15388__1.call(this,result);
case 2:
return G__15388__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15388.cljs$core$IFn$_invoke$arity$0 = G__15388__0;
G__15388.cljs$core$IFn$_invoke$arity$1 = G__15388__1;
G__15388.cljs$core$IFn$_invoke$arity$2 = G__15388__2;
return G__15388;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___15389 = size;
var i_15390 = (0);
while(true){
if((i_15390 < n__11828__auto___15389)){
var x_15391 = (function (){var G__15384 = (idx + i_15390);
var G__15385 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15390);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15384,G__15385) : f.call(null,G__15384,G__15385));
})();
if((x_15391 == null)){
} else {
cljs.core.chunk_append(b,x_15391);
}

var G__15392 = (i_15390 + (1));
i_15390 = G__15392;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__15386 = idx;
var G__15387 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15386,G__15387) : f.call(null,G__15386,G__15387));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__15606 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15606) : p.call(null,G__15606));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__15608 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15608) : p.call(null,G__15608));
})();
if(cljs.core.truth_(and__10929__auto__)){
var G__15609 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15609) : p.call(null,G__15609));
} else {
return and__10929__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__15611 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15611) : p.call(null,G__15611));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__15613 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15613) : p.call(null,G__15613));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var G__15614 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15614) : p.call(null,G__15614));
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__15783__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__15783 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15784__i = 0, G__15784__a = new Array(arguments.length -  3);
while (G__15784__i < G__15784__a.length) {G__15784__a[G__15784__i] = arguments[G__15784__i + 3]; ++G__15784__i;}
  args = new cljs.core.IndexedSeq(G__15784__a,0);
} 
return G__15783__delegate.call(this,x,y,z,args);};
G__15783.cljs$lang$maxFixedArity = 3;
G__15783.cljs$lang$applyTo = (function (arglist__15785){
var x = cljs.core.first(arglist__15785);
arglist__15785 = cljs.core.next(arglist__15785);
var y = cljs.core.first(arglist__15785);
arglist__15785 = cljs.core.next(arglist__15785);
var z = cljs.core.first(arglist__15785);
var args = cljs.core.rest(arglist__15785);
return G__15783__delegate(x,y,z,args);
});
G__15783.cljs$core$IFn$_invoke$arity$variadic = G__15783__delegate;
return G__15783;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__15786 = null;
if (arguments.length > 3) {
var G__15787__i = 0, G__15787__a = new Array(arguments.length -  3);
while (G__15787__i < G__15787__a.length) {G__15787__a[G__15787__i] = arguments[G__15787__i + 3]; ++G__15787__i;}
G__15786 = new cljs.core.IndexedSeq(G__15787__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__15646 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15646) : p1.call(null,G__15646));
})();
if(cljs.core.truth_(and__10929__auto__)){
var G__15647 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15647) : p2.call(null,G__15647));
} else {
return and__10929__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__15649 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15649) : p1.call(null,G__15649));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__15651 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15651) : p1.call(null,G__15651));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var and__10929__auto____$2 = (function (){var G__15653 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15653) : p2.call(null,G__15653));
})();
if(cljs.core.truth_(and__10929__auto____$2)){
var G__15654 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15654) : p2.call(null,G__15654));
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__15656 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15656) : p1.call(null,G__15656));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__15658 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15658) : p1.call(null,G__15658));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var and__10929__auto____$2 = (function (){var G__15660 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15660) : p1.call(null,G__15660));
})();
if(cljs.core.truth_(and__10929__auto____$2)){
var and__10929__auto____$3 = (function (){var G__15662 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15662) : p2.call(null,G__15662));
})();
if(cljs.core.truth_(and__10929__auto____$3)){
var and__10929__auto____$4 = (function (){var G__15664 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15664) : p2.call(null,G__15664));
})();
if(cljs.core.truth_(and__10929__auto____$4)){
var G__15665 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15665) : p2.call(null,G__15665));
} else {
return and__10929__auto____$4;
}
} else {
return and__10929__auto____$3;
}
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__15788__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15393_SHARP_){
var and__10929__auto__ = (function (){var G__15670 = p1__15393_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15670) : p1.call(null,G__15670));
})();
if(cljs.core.truth_(and__10929__auto__)){
var G__15671 = p1__15393_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15671) : p2.call(null,G__15671));
} else {
return and__10929__auto__;
}
}),args)));
};
var G__15788 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15789__i = 0, G__15789__a = new Array(arguments.length -  3);
while (G__15789__i < G__15789__a.length) {G__15789__a[G__15789__i] = arguments[G__15789__i + 3]; ++G__15789__i;}
  args = new cljs.core.IndexedSeq(G__15789__a,0);
} 
return G__15788__delegate.call(this,x,y,z,args);};
G__15788.cljs$lang$maxFixedArity = 3;
G__15788.cljs$lang$applyTo = (function (arglist__15790){
var x = cljs.core.first(arglist__15790);
arglist__15790 = cljs.core.next(arglist__15790);
var y = cljs.core.first(arglist__15790);
arglist__15790 = cljs.core.next(arglist__15790);
var z = cljs.core.first(arglist__15790);
var args = cljs.core.rest(arglist__15790);
return G__15788__delegate(x,y,z,args);
});
G__15788.cljs$core$IFn$_invoke$arity$variadic = G__15788__delegate;
return G__15788;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__15791 = null;
if (arguments.length > 3) {
var G__15792__i = 0, G__15792__a = new Array(arguments.length -  3);
while (G__15792__i < G__15792__a.length) {G__15792__a[G__15792__i] = arguments[G__15792__i + 3]; ++G__15792__i;}
G__15791 = new cljs.core.IndexedSeq(G__15792__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__15717 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15717) : p1.call(null,G__15717));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__15719 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15719) : p2.call(null,G__15719));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var G__15720 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15720) : p3.call(null,G__15720));
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__15722 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15722) : p1.call(null,G__15722));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__15724 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15724) : p2.call(null,G__15724));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var and__10929__auto____$2 = (function (){var G__15726 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15726) : p3.call(null,G__15726));
})();
if(cljs.core.truth_(and__10929__auto____$2)){
var and__10929__auto____$3 = (function (){var G__15728 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15728) : p1.call(null,G__15728));
})();
if(cljs.core.truth_(and__10929__auto____$3)){
var and__10929__auto____$4 = (function (){var G__15730 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15730) : p2.call(null,G__15730));
})();
if(cljs.core.truth_(and__10929__auto____$4)){
var G__15731 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15731) : p3.call(null,G__15731));
} else {
return and__10929__auto____$4;
}
} else {
return and__10929__auto____$3;
}
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__15733 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15733) : p1.call(null,G__15733));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__15735 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15735) : p2.call(null,G__15735));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var and__10929__auto____$2 = (function (){var G__15737 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15737) : p3.call(null,G__15737));
})();
if(cljs.core.truth_(and__10929__auto____$2)){
var and__10929__auto____$3 = (function (){var G__15739 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15739) : p1.call(null,G__15739));
})();
if(cljs.core.truth_(and__10929__auto____$3)){
var and__10929__auto____$4 = (function (){var G__15741 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15741) : p2.call(null,G__15741));
})();
if(cljs.core.truth_(and__10929__auto____$4)){
var and__10929__auto____$5 = (function (){var G__15743 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15743) : p3.call(null,G__15743));
})();
if(cljs.core.truth_(and__10929__auto____$5)){
var and__10929__auto____$6 = (function (){var G__15745 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15745) : p1.call(null,G__15745));
})();
if(cljs.core.truth_(and__10929__auto____$6)){
var and__10929__auto____$7 = (function (){var G__15747 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15747) : p2.call(null,G__15747));
})();
if(cljs.core.truth_(and__10929__auto____$7)){
var G__15748 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15748) : p3.call(null,G__15748));
} else {
return and__10929__auto____$7;
}
} else {
return and__10929__auto____$6;
}
} else {
return and__10929__auto____$5;
}
} else {
return and__10929__auto____$4;
}
} else {
return and__10929__auto____$3;
}
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__15793__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15394_SHARP_){
var and__10929__auto__ = (function (){var G__15755 = p1__15394_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15755) : p1.call(null,G__15755));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__15757 = p1__15394_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15757) : p2.call(null,G__15757));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var G__15758 = p1__15394_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15758) : p3.call(null,G__15758));
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
}),args)));
};
var G__15793 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15794__i = 0, G__15794__a = new Array(arguments.length -  3);
while (G__15794__i < G__15794__a.length) {G__15794__a[G__15794__i] = arguments[G__15794__i + 3]; ++G__15794__i;}
  args = new cljs.core.IndexedSeq(G__15794__a,0);
} 
return G__15793__delegate.call(this,x,y,z,args);};
G__15793.cljs$lang$maxFixedArity = 3;
G__15793.cljs$lang$applyTo = (function (arglist__15795){
var x = cljs.core.first(arglist__15795);
arglist__15795 = cljs.core.next(arglist__15795);
var y = cljs.core.first(arglist__15795);
arglist__15795 = cljs.core.next(arglist__15795);
var z = cljs.core.first(arglist__15795);
var args = cljs.core.rest(arglist__15795);
return G__15793__delegate(x,y,z,args);
});
G__15793.cljs$core$IFn$_invoke$arity$variadic = G__15793__delegate;
return G__15793;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__15796 = null;
if (arguments.length > 3) {
var G__15797__i = 0, G__15797__a = new Array(arguments.length -  3);
while (G__15797__i < G__15797__a.length) {G__15797__a[G__15797__i] = arguments[G__15797__i + 3]; ++G__15797__i;}
G__15796 = new cljs.core.IndexedSeq(G__15797__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__15798__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15395_SHARP_){
var G__15774 = x;
return (p1__15395_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15395_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15774) : p1__15395_SHARP_.call(null,G__15774));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15396_SHARP_){
var and__10929__auto__ = (function (){var G__15776 = x;
return (p1__15396_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15396_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15776) : p1__15396_SHARP_.call(null,G__15776));
})();
if(cljs.core.truth_(and__10929__auto__)){
var G__15777 = y;
return (p1__15396_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15396_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15777) : p1__15396_SHARP_.call(null,G__15777));
} else {
return and__10929__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15397_SHARP_){
var and__10929__auto__ = (function (){var G__15779 = x;
return (p1__15397_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15397_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15779) : p1__15397_SHARP_.call(null,G__15779));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__15781 = y;
return (p1__15397_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15397_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15781) : p1__15397_SHARP_.call(null,G__15781));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var G__15782 = z;
return (p1__15397_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15397_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15782) : p1__15397_SHARP_.call(null,G__15782));
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__15799__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15398_SHARP_){
return cljs.core.every_QMARK_(p1__15398_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__15799 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15800__i = 0, G__15800__a = new Array(arguments.length -  3);
while (G__15800__i < G__15800__a.length) {G__15800__a[G__15800__i] = arguments[G__15800__i + 3]; ++G__15800__i;}
  args = new cljs.core.IndexedSeq(G__15800__a,0);
} 
return G__15799__delegate.call(this,x,y,z,args);};
G__15799.cljs$lang$maxFixedArity = 3;
G__15799.cljs$lang$applyTo = (function (arglist__15801){
var x = cljs.core.first(arglist__15801);
arglist__15801 = cljs.core.next(arglist__15801);
var y = cljs.core.first(arglist__15801);
arglist__15801 = cljs.core.next(arglist__15801);
var z = cljs.core.first(arglist__15801);
var args = cljs.core.rest(arglist__15801);
return G__15799__delegate(x,y,z,args);
});
G__15799.cljs$core$IFn$_invoke$arity$variadic = G__15799__delegate;
return G__15799;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__15802 = null;
if (arguments.length > 3) {
var G__15803__i = 0, G__15803__a = new Array(arguments.length -  3);
while (G__15803__i < G__15803__a.length) {G__15803__a[G__15803__i] = arguments[G__15803__i + 3]; ++G__15803__i;}
G__15802 = new cljs.core.IndexedSeq(G__15803__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15802);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__15798 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__15804__i = 0, G__15804__a = new Array(arguments.length -  3);
while (G__15804__i < G__15804__a.length) {G__15804__a[G__15804__i] = arguments[G__15804__i + 3]; ++G__15804__i;}
  ps = new cljs.core.IndexedSeq(G__15804__a,0);
} 
return G__15798__delegate.call(this,p1,p2,p3,ps);};
G__15798.cljs$lang$maxFixedArity = 3;
G__15798.cljs$lang$applyTo = (function (arglist__15805){
var p1 = cljs.core.first(arglist__15805);
arglist__15805 = cljs.core.next(arglist__15805);
var p2 = cljs.core.first(arglist__15805);
arglist__15805 = cljs.core.next(arglist__15805);
var p3 = cljs.core.first(arglist__15805);
var ps = cljs.core.rest(arglist__15805);
return G__15798__delegate(p1,p2,p3,ps);
});
G__15798.cljs$core$IFn$_invoke$arity$variadic = G__15798__delegate;
return G__15798;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__15806 = null;
if (arguments.length > 3) {
var G__15807__i = 0, G__15807__a = new Array(arguments.length -  3);
while (G__15807__i < G__15807__a.length) {G__15807__a[G__15807__i] = arguments[G__15807__i + 3]; ++G__15807__i;}
G__15806 = new cljs.core.IndexedSeq(G__15807__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__15806);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__16013 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16013) : p.call(null,G__16013));
});
var sp1__2 = (function (x,y){
var or__10941__auto__ = (function (){var G__16015 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16015) : p.call(null,G__16015));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__16016 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16016) : p.call(null,G__16016));
}
});
var sp1__3 = (function (x,y,z){
var or__10941__auto__ = (function (){var G__16018 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16018) : p.call(null,G__16018));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__16020 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16020) : p.call(null,G__16020));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var G__16021 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16021) : p.call(null,G__16021));
}
}
});
var sp1__4 = (function() { 
var G__16182__delegate = function (x,y,z,args){
var or__10941__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__16182 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16183__i = 0, G__16183__a = new Array(arguments.length -  3);
while (G__16183__i < G__16183__a.length) {G__16183__a[G__16183__i] = arguments[G__16183__i + 3]; ++G__16183__i;}
  args = new cljs.core.IndexedSeq(G__16183__a,0);
} 
return G__16182__delegate.call(this,x,y,z,args);};
G__16182.cljs$lang$maxFixedArity = 3;
G__16182.cljs$lang$applyTo = (function (arglist__16184){
var x = cljs.core.first(arglist__16184);
arglist__16184 = cljs.core.next(arglist__16184);
var y = cljs.core.first(arglist__16184);
arglist__16184 = cljs.core.next(arglist__16184);
var z = cljs.core.first(arglist__16184);
var args = cljs.core.rest(arglist__16184);
return G__16182__delegate(x,y,z,args);
});
G__16182.cljs$core$IFn$_invoke$arity$variadic = G__16182__delegate;
return G__16182;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__16185 = null;
if (arguments.length > 3) {
var G__16186__i = 0, G__16186__a = new Array(arguments.length -  3);
while (G__16186__i < G__16186__a.length) {G__16186__a[G__16186__i] = arguments[G__16186__i + 3]; ++G__16186__i;}
G__16185 = new cljs.core.IndexedSeq(G__16186__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__10941__auto__ = (function (){var G__16053 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16053) : p1.call(null,G__16053));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__16054 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16054) : p2.call(null,G__16054));
}
});
var sp2__2 = (function (x,y){
var or__10941__auto__ = (function (){var G__16056 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16056) : p1.call(null,G__16056));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__16058 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16058) : p1.call(null,G__16058));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__16060 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16060) : p2.call(null,G__16060));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var G__16061 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16061) : p2.call(null,G__16061));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__10941__auto__ = (function (){var G__16063 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16063) : p1.call(null,G__16063));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__16065 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16065) : p1.call(null,G__16065));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__16067 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16067) : p1.call(null,G__16067));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var or__10941__auto____$3 = (function (){var G__16069 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16069) : p2.call(null,G__16069));
})();
if(cljs.core.truth_(or__10941__auto____$3)){
return or__10941__auto____$3;
} else {
var or__10941__auto____$4 = (function (){var G__16071 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16071) : p2.call(null,G__16071));
})();
if(cljs.core.truth_(or__10941__auto____$4)){
return or__10941__auto____$4;
} else {
var G__16072 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16072) : p2.call(null,G__16072));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__16187__delegate = function (x,y,z,args){
var or__10941__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.some(((function (or__10941__auto__){
return (function (p1__15808_SHARP_){
var or__10941__auto____$1 = (function (){var G__16074 = p1__15808_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16074) : p1.call(null,G__16074));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var G__16075 = p1__15808_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16075) : p2.call(null,G__16075));
}
});})(or__10941__auto__))
,args);
}
};
var G__16187 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16188__i = 0, G__16188__a = new Array(arguments.length -  3);
while (G__16188__i < G__16188__a.length) {G__16188__a[G__16188__i] = arguments[G__16188__i + 3]; ++G__16188__i;}
  args = new cljs.core.IndexedSeq(G__16188__a,0);
} 
return G__16187__delegate.call(this,x,y,z,args);};
G__16187.cljs$lang$maxFixedArity = 3;
G__16187.cljs$lang$applyTo = (function (arglist__16189){
var x = cljs.core.first(arglist__16189);
arglist__16189 = cljs.core.next(arglist__16189);
var y = cljs.core.first(arglist__16189);
arglist__16189 = cljs.core.next(arglist__16189);
var z = cljs.core.first(arglist__16189);
var args = cljs.core.rest(arglist__16189);
return G__16187__delegate(x,y,z,args);
});
G__16187.cljs$core$IFn$_invoke$arity$variadic = G__16187__delegate;
return G__16187;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__16190 = null;
if (arguments.length > 3) {
var G__16191__i = 0, G__16191__a = new Array(arguments.length -  3);
while (G__16191__i < G__16191__a.length) {G__16191__a[G__16191__i] = arguments[G__16191__i + 3]; ++G__16191__i;}
G__16190 = new cljs.core.IndexedSeq(G__16191__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__10941__auto__ = (function (){var G__16121 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16121) : p1.call(null,G__16121));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__16123 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16123) : p2.call(null,G__16123));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var G__16124 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16124) : p3.call(null,G__16124));
}
}
});
var sp3__2 = (function (x,y){
var or__10941__auto__ = (function (){var G__16126 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16126) : p1.call(null,G__16126));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__16128 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16128) : p2.call(null,G__16128));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__16130 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16130) : p3.call(null,G__16130));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var or__10941__auto____$3 = (function (){var G__16132 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16132) : p1.call(null,G__16132));
})();
if(cljs.core.truth_(or__10941__auto____$3)){
return or__10941__auto____$3;
} else {
var or__10941__auto____$4 = (function (){var G__16134 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16134) : p2.call(null,G__16134));
})();
if(cljs.core.truth_(or__10941__auto____$4)){
return or__10941__auto____$4;
} else {
var G__16135 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16135) : p3.call(null,G__16135));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__10941__auto__ = (function (){var G__16137 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16137) : p1.call(null,G__16137));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__16139 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16139) : p2.call(null,G__16139));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__16141 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16141) : p3.call(null,G__16141));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var or__10941__auto____$3 = (function (){var G__16143 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16143) : p1.call(null,G__16143));
})();
if(cljs.core.truth_(or__10941__auto____$3)){
return or__10941__auto____$3;
} else {
var or__10941__auto____$4 = (function (){var G__16145 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16145) : p2.call(null,G__16145));
})();
if(cljs.core.truth_(or__10941__auto____$4)){
return or__10941__auto____$4;
} else {
var or__10941__auto____$5 = (function (){var G__16147 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16147) : p3.call(null,G__16147));
})();
if(cljs.core.truth_(or__10941__auto____$5)){
return or__10941__auto____$5;
} else {
var or__10941__auto____$6 = (function (){var G__16149 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16149) : p1.call(null,G__16149));
})();
if(cljs.core.truth_(or__10941__auto____$6)){
return or__10941__auto____$6;
} else {
var or__10941__auto____$7 = (function (){var G__16151 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16151) : p2.call(null,G__16151));
})();
if(cljs.core.truth_(or__10941__auto____$7)){
return or__10941__auto____$7;
} else {
var G__16152 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16152) : p3.call(null,G__16152));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__16192__delegate = function (x,y,z,args){
var or__10941__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.some(((function (or__10941__auto__){
return (function (p1__15809_SHARP_){
var or__10941__auto____$1 = (function (){var G__16154 = p1__15809_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16154) : p1.call(null,G__16154));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__16156 = p1__15809_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16156) : p2.call(null,G__16156));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var G__16157 = p1__15809_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16157) : p3.call(null,G__16157));
}
}
});})(or__10941__auto__))
,args);
}
};
var G__16192 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16193__i = 0, G__16193__a = new Array(arguments.length -  3);
while (G__16193__i < G__16193__a.length) {G__16193__a[G__16193__i] = arguments[G__16193__i + 3]; ++G__16193__i;}
  args = new cljs.core.IndexedSeq(G__16193__a,0);
} 
return G__16192__delegate.call(this,x,y,z,args);};
G__16192.cljs$lang$maxFixedArity = 3;
G__16192.cljs$lang$applyTo = (function (arglist__16194){
var x = cljs.core.first(arglist__16194);
arglist__16194 = cljs.core.next(arglist__16194);
var y = cljs.core.first(arglist__16194);
arglist__16194 = cljs.core.next(arglist__16194);
var z = cljs.core.first(arglist__16194);
var args = cljs.core.rest(arglist__16194);
return G__16192__delegate(x,y,z,args);
});
G__16192.cljs$core$IFn$_invoke$arity$variadic = G__16192__delegate;
return G__16192;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__16195 = null;
if (arguments.length > 3) {
var G__16196__i = 0, G__16196__a = new Array(arguments.length -  3);
while (G__16196__i < G__16196__a.length) {G__16196__a[G__16196__i] = arguments[G__16196__i + 3]; ++G__16196__i;}
G__16195 = new cljs.core.IndexedSeq(G__16196__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__16197__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__15810_SHARP_){
var G__16173 = x;
return (p1__15810_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15810_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16173) : p1__15810_SHARP_.call(null,G__16173));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__15811_SHARP_){
var or__10941__auto__ = (function (){var G__16175 = x;
return (p1__15811_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15811_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16175) : p1__15811_SHARP_.call(null,G__16175));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__16176 = y;
return (p1__15811_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15811_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16176) : p1__15811_SHARP_.call(null,G__16176));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__15812_SHARP_){
var or__10941__auto__ = (function (){var G__16178 = x;
return (p1__15812_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15812_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16178) : p1__15812_SHARP_.call(null,G__16178));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__16180 = y;
return (p1__15812_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15812_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16180) : p1__15812_SHARP_.call(null,G__16180));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var G__16181 = z;
return (p1__15812_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15812_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16181) : p1__15812_SHARP_.call(null,G__16181));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__16198__delegate = function (x,y,z,args){
var or__10941__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.some(((function (or__10941__auto__,ps__$1){
return (function (p1__15813_SHARP_){
return cljs.core.some(p1__15813_SHARP_,args);
});})(or__10941__auto__,ps__$1))
,ps__$1);
}
};
var G__16198 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16199__i = 0, G__16199__a = new Array(arguments.length -  3);
while (G__16199__i < G__16199__a.length) {G__16199__a[G__16199__i] = arguments[G__16199__i + 3]; ++G__16199__i;}
  args = new cljs.core.IndexedSeq(G__16199__a,0);
} 
return G__16198__delegate.call(this,x,y,z,args);};
G__16198.cljs$lang$maxFixedArity = 3;
G__16198.cljs$lang$applyTo = (function (arglist__16200){
var x = cljs.core.first(arglist__16200);
arglist__16200 = cljs.core.next(arglist__16200);
var y = cljs.core.first(arglist__16200);
arglist__16200 = cljs.core.next(arglist__16200);
var z = cljs.core.first(arglist__16200);
var args = cljs.core.rest(arglist__16200);
return G__16198__delegate(x,y,z,args);
});
G__16198.cljs$core$IFn$_invoke$arity$variadic = G__16198__delegate;
return G__16198;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__16201 = null;
if (arguments.length > 3) {
var G__16202__i = 0, G__16202__a = new Array(arguments.length -  3);
while (G__16202__i < G__16202__a.length) {G__16202__a[G__16202__i] = arguments[G__16202__i + 3]; ++G__16202__i;}
G__16201 = new cljs.core.IndexedSeq(G__16202__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__16197 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__16203__i = 0, G__16203__a = new Array(arguments.length -  3);
while (G__16203__i < G__16203__a.length) {G__16203__a[G__16203__i] = arguments[G__16203__i + 3]; ++G__16203__i;}
  ps = new cljs.core.IndexedSeq(G__16203__a,0);
} 
return G__16197__delegate.call(this,p1,p2,p3,ps);};
G__16197.cljs$lang$maxFixedArity = 3;
G__16197.cljs$lang$applyTo = (function (arglist__16204){
var p1 = cljs.core.first(arglist__16204);
arglist__16204 = cljs.core.next(arglist__16204);
var p2 = cljs.core.first(arglist__16204);
arglist__16204 = cljs.core.next(arglist__16204);
var p3 = cljs.core.first(arglist__16204);
var ps = cljs.core.rest(arglist__16204);
return G__16197__delegate(p1,p2,p3,ps);
});
G__16197.cljs$core$IFn$_invoke$arity$variadic = G__16197__delegate;
return G__16197;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__16205 = null;
if (arguments.length > 3) {
var G__16206__i = 0, G__16206__a = new Array(arguments.length -  3);
while (G__16206__i < G__16206__a.length) {G__16206__a[G__16206__i] = arguments[G__16206__i + 3]; ++G__16206__i;}
G__16205 = new cljs.core.IndexedSeq(G__16206__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__16205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__16261 = null;
var G__16261__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16261__1 = (function (result){
var G__16247 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16247) : rf.call(null,G__16247));
});
var G__16261__2 = (function (result,input){
var G__16248 = result;
var G__16249 = (function (){var G__16250 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16250) : f.call(null,G__16250));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16248,G__16249) : rf.call(null,G__16248,G__16249));
});
var G__16261__3 = (function() { 
var G__16262__delegate = function (result,input,inputs){
var G__16251 = result;
var G__16252 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16251,G__16252) : rf.call(null,G__16251,G__16252));
};
var G__16262 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__16263__i = 0, G__16263__a = new Array(arguments.length -  2);
while (G__16263__i < G__16263__a.length) {G__16263__a[G__16263__i] = arguments[G__16263__i + 2]; ++G__16263__i;}
  inputs = new cljs.core.IndexedSeq(G__16263__a,0);
} 
return G__16262__delegate.call(this,result,input,inputs);};
G__16262.cljs$lang$maxFixedArity = 2;
G__16262.cljs$lang$applyTo = (function (arglist__16264){
var result = cljs.core.first(arglist__16264);
arglist__16264 = cljs.core.next(arglist__16264);
var input = cljs.core.first(arglist__16264);
var inputs = cljs.core.rest(arglist__16264);
return G__16262__delegate(result,input,inputs);
});
G__16262.cljs$core$IFn$_invoke$arity$variadic = G__16262__delegate;
return G__16262;
})()
;
G__16261 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__16261__0.call(this);
case 1:
return G__16261__1.call(this,result);
case 2:
return G__16261__2.call(this,result,input);
default:
var G__16265 = null;
if (arguments.length > 2) {
var G__16266__i = 0, G__16266__a = new Array(arguments.length -  2);
while (G__16266__i < G__16266__a.length) {G__16266__a[G__16266__i] = arguments[G__16266__i + 2]; ++G__16266__i;}
G__16265 = new cljs.core.IndexedSeq(G__16266__a,0);
}
return G__16261__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__16265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16261.cljs$lang$maxFixedArity = 2;
G__16261.cljs$lang$applyTo = G__16261__3.cljs$lang$applyTo;
G__16261.cljs$core$IFn$_invoke$arity$0 = G__16261__0;
G__16261.cljs$core$IFn$_invoke$arity$1 = G__16261__1;
G__16261.cljs$core$IFn$_invoke$arity$2 = G__16261__2;
G__16261.cljs$core$IFn$_invoke$arity$variadic = G__16261__3.cljs$core$IFn$_invoke$arity$variadic;
return G__16261;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___16267 = size;
var i_16268 = (0);
while(true){
if((i_16268 < n__11828__auto___16267)){
cljs.core.chunk_append(b,(function (){var G__16253 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16268);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16253) : f.call(null,G__16253));
})());

var G__16269 = (i_16268 + (1));
i_16268 = G__16269;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__16254 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16254) : f.call(null,G__16254));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__16255 = cljs.core.first(s1);
var G__16256 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16255,G__16256) : f.call(null,G__16255,G__16256));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__16257 = cljs.core.first(s1);
var G__16258 = cljs.core.first(s2);
var G__16259 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16257,G__16258,G__16259) : f.call(null,G__16257,G__16258,G__16259));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__16270__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__16207_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__16207_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__16270 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__16271__i = 0, G__16271__a = new Array(arguments.length -  4);
while (G__16271__i < G__16271__a.length) {G__16271__a[G__16271__i] = arguments[G__16271__i + 4]; ++G__16271__i;}
  colls = new cljs.core.IndexedSeq(G__16271__a,0);
} 
return G__16270__delegate.call(this,f,c1,c2,c3,colls);};
G__16270.cljs$lang$maxFixedArity = 4;
G__16270.cljs$lang$applyTo = (function (arglist__16272){
var f = cljs.core.first(arglist__16272);
arglist__16272 = cljs.core.next(arglist__16272);
var c1 = cljs.core.first(arglist__16272);
arglist__16272 = cljs.core.next(arglist__16272);
var c2 = cljs.core.first(arglist__16272);
arglist__16272 = cljs.core.next(arglist__16272);
var c3 = cljs.core.first(arglist__16272);
var colls = cljs.core.rest(arglist__16272);
return G__16270__delegate(f,c1,c2,c3,colls);
});
G__16270.cljs$core$IFn$_invoke$arity$variadic = G__16270__delegate;
return G__16270;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__16273 = null;
if (arguments.length > 4) {
var G__16274__i = 0, G__16274__a = new Array(arguments.length -  4);
while (G__16274__i < G__16274__a.length) {G__16274__a[G__16274__i] = arguments[G__16274__i + 4]; ++G__16274__i;}
G__16273 = new cljs.core.IndexedSeq(G__16274__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__16273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16283 = null;
var G__16283__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16283__1 = (function (result){
var G__16280 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16280) : rf.call(null,G__16280));
});
var G__16283__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__16281 = result;
var G__16282 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16281,G__16282) : rf.call(null,G__16281,G__16282));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__16283 = function(result,input){
switch(arguments.length){
case 0:
return G__16283__0.call(this);
case 1:
return G__16283__1.call(this,result);
case 2:
return G__16283__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16283.cljs$core$IFn$_invoke$arity$0 = G__16283__0;
G__16283.cljs$core$IFn$_invoke$arity$1 = G__16283__1;
G__16283.cljs$core$IFn$_invoke$arity$2 = G__16283__2;
return G__16283;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16290 = null;
var G__16290__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16290__1 = (function (result){
var G__16287 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16287) : rf.call(null,G__16287));
});
var G__16290__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__16288 = result;
var G__16289 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16288,G__16289) : rf.call(null,G__16288,G__16289));
}
});
G__16290 = function(result,input){
switch(arguments.length){
case 0:
return G__16290__0.call(this);
case 1:
return G__16290__1.call(this,result);
case 2:
return G__16290__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16290.cljs$core$IFn$_invoke$arity$0 = G__16290__0;
G__16290.cljs$core$IFn$_invoke$arity$1 = G__16290__1;
G__16290.cljs$core$IFn$_invoke$arity$2 = G__16290__2;
return G__16290;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__16291 = (n__$1 - (1));
var G__16292 = cljs.core.rest(s);
n__$1 = G__16291;
coll__$1 = G__16292;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__16295 = cljs.core.next(s);
var G__16296 = cljs.core.next(lead);
s = G__16295;
lead = G__16296;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__16309 = null;
var G__16309__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16309__1 = (function (result){
var G__16303 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16303) : rf.call(null,G__16303));
});
var G__16309__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__10929__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__10929__auto__)){
var G__16304 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16304) : pred.call(null,G__16304));
} else {
return and__10929__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__16305 = result;
var G__16306 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16305,G__16306) : rf.call(null,G__16305,G__16306));
}
});
G__16309 = function(result,input){
switch(arguments.length){
case 0:
return G__16309__0.call(this);
case 1:
return G__16309__1.call(this,result);
case 2:
return G__16309__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16309.cljs$core$IFn$_invoke$arity$0 = G__16309__0;
G__16309.cljs$core$IFn$_invoke$arity$1 = G__16309__1;
G__16309.cljs$core$IFn$_invoke$arity$2 = G__16309__2;
return G__16309;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__10929__auto__ = s;
if(and__10929__auto__){
var G__16308 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__16308) : pred__$1.call(null,G__16308));
} else {
return and__10929__auto__;
}
})())){
var G__16310 = pred__$1;
var G__16311 = cljs.core.rest(s);
pred__$1 = G__16310;
coll__$1 = G__16311;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__16320 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16320) : f.call(null,G__16320));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__16323__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__16323 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__16324__i = 0, G__16324__a = new Array(arguments.length -  2);
while (G__16324__i < G__16324__a.length) {G__16324__a[G__16324__i] = arguments[G__16324__i + 2]; ++G__16324__i;}
  colls = new cljs.core.IndexedSeq(G__16324__a,0);
} 
return G__16323__delegate.call(this,c1,c2,colls);};
G__16323.cljs$lang$maxFixedArity = 2;
G__16323.cljs$lang$applyTo = (function (arglist__16325){
var c1 = cljs.core.first(arglist__16325);
arglist__16325 = cljs.core.next(arglist__16325);
var c2 = cljs.core.first(arglist__16325);
var colls = cljs.core.rest(arglist__16325);
return G__16323__delegate(c1,c2,colls);
});
G__16323.cljs$core$IFn$_invoke$arity$variadic = G__16323__delegate;
return G__16323;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__16326 = null;
if (arguments.length > 2) {
var G__16327__i = 0, G__16327__a = new Array(arguments.length -  2);
while (G__16327__i < G__16327__a.length) {G__16327__a[G__16327__i] = arguments[G__16327__i + 2]; ++G__16327__i;}
G__16326 = new cljs.core.IndexedSeq(G__16327__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__16326);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__16342 = null;
var G__16342__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16342__1 = (function (result){
var G__16335 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16335) : rf.call(null,G__16335));
});
var G__16342__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__16336 = result;
var G__16337 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16336,G__16337) : rf.call(null,G__16336,G__16337));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__16338 = sepr;
var G__16339 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16338,G__16339) : rf.call(null,G__16338,G__16339));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__16340 = result;
var G__16341 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16340,G__16341) : rf.call(null,G__16340,G__16341));
}
});
G__16342 = function(result,input){
switch(arguments.length){
case 0:
return G__16342__0.call(this);
case 1:
return G__16342__1.call(this,result);
case 2:
return G__16342__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16342.cljs$core$IFn$_invoke$arity$0 = G__16342__0;
G__16342.cljs$core$IFn$_invoke$arity$1 = G__16342__1;
G__16342.cljs$core$IFn$_invoke$arity$2 = G__16342__2;
return G__16342;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var coll__$1 = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__16351__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__16351 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__16352__i = 0, G__16352__a = new Array(arguments.length -  1);
while (G__16352__i < G__16352__a.length) {G__16352__a[G__16352__i] = arguments[G__16352__i + 1]; ++G__16352__i;}
  colls = new cljs.core.IndexedSeq(G__16352__a,0);
} 
return G__16351__delegate.call(this,f,colls);};
G__16351.cljs$lang$maxFixedArity = 1;
G__16351.cljs$lang$applyTo = (function (arglist__16353){
var f = cljs.core.first(arglist__16353);
var colls = cljs.core.rest(arglist__16353);
return G__16351__delegate(f,colls);
});
G__16351.cljs$core$IFn$_invoke$arity$variadic = G__16351__delegate;
return G__16351;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__16354 = null;
if (arguments.length > 1) {
var G__16355__i = 0, G__16355__a = new Array(arguments.length -  1);
while (G__16355__i < G__16355__a.length) {G__16355__a[G__16355__i] = arguments[G__16355__i + 1]; ++G__16355__i;}
G__16354 = new cljs.core.IndexedSeq(G__16355__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__16374 = null;
var G__16374__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16374__1 = (function (result){
var G__16368 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16368) : rf.call(null,G__16368));
});
var G__16374__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16369 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16369) : pred.call(null,G__16369));
})())){
var G__16370 = result;
var G__16371 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16370,G__16371) : rf.call(null,G__16370,G__16371));
} else {
return result;
}
});
G__16374 = function(result,input){
switch(arguments.length){
case 0:
return G__16374__0.call(this);
case 1:
return G__16374__1.call(this,result);
case 2:
return G__16374__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16374.cljs$core$IFn$_invoke$arity$0 = G__16374__0;
G__16374.cljs$core$IFn$_invoke$arity$1 = G__16374__1;
G__16374.cljs$core$IFn$_invoke$arity$2 = G__16374__2;
return G__16374;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___16375 = size;
var i_16376 = (0);
while(true){
if((i_16376 < n__11828__auto___16375)){
if(cljs.core.truth_((function (){var G__16372 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16376);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16372) : pred.call(null,G__16372));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16376));
} else {
}

var G__16377 = (i_16376 + (1));
i_16376 = G__16377;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__16373 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16373) : pred.call(null,G__16373));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__16384 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__16384) : branch_QMARK_.call(null,G__16384));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__16385 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__16385) : children.call(null,G__16385));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__16386_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__16386_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__16389 = to;
if(G__16389){
var bit__11615__auto__ = (G__16389.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__11615__auto__) || (G__16389.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__16390 = to;
if(G__16390){
var bit__11615__auto__ = (G__16390.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__11615__auto__) || (G__16390.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__16392 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16392) : f.call(null,G__16392));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__16393__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__16393 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__16394__i = 0, G__16394__a = new Array(arguments.length -  4);
while (G__16394__i < G__16394__a.length) {G__16394__a[G__16394__i] = arguments[G__16394__i + 4]; ++G__16394__i;}
  colls = new cljs.core.IndexedSeq(G__16394__a,0);
} 
return G__16393__delegate.call(this,f,c1,c2,c3,colls);};
G__16393.cljs$lang$maxFixedArity = 4;
G__16393.cljs$lang$applyTo = (function (arglist__16395){
var f = cljs.core.first(arglist__16395);
arglist__16395 = cljs.core.next(arglist__16395);
var c1 = cljs.core.first(arglist__16395);
arglist__16395 = cljs.core.next(arglist__16395);
var c2 = cljs.core.first(arglist__16395);
arglist__16395 = cljs.core.next(arglist__16395);
var c3 = cljs.core.first(arglist__16395);
var colls = cljs.core.rest(arglist__16395);
return G__16393__delegate(f,c1,c2,c3,colls);
});
G__16393.cljs$core$IFn$_invoke$arity$variadic = G__16393__delegate;
return G__16393;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__16396 = null;
if (arguments.length > 4) {
var G__16397__i = 0, G__16397__a = new Array(arguments.length -  4);
while (G__16397__i < G__16397__a.length) {G__16397__a[G__16397__i] = arguments[G__16397__i + 4]; ++G__16397__i;}
G__16396 = new cljs.core.IndexedSeq(G__16397__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__16396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__16399 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16399) : pred.call(null,G__16399));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__16414 = m__$1;
if(G__16414){
var bit__11622__auto__ = (G__16414.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__11622__auto__) || (G__16414.cljs$core$ILookup$)){
return true;
} else {
if((!G__16414.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16414);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16414);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__16415 = sentinel;
var G__16416 = m__$2;
var G__16417 = cljs.core.next(ks__$1);
sentinel = G__16415;
m__$1 = G__16416;
ks__$1 = G__16417;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__16418,v){
var vec__16423 = p__16418;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16423,(0),null);
var ks = cljs.core.nthnext(vec__16423,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__16424,f){
var vec__16462 = p__16424;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16462,(0),null);
var ks = cljs.core.nthnext(vec__16462,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16463 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16463) : f.call(null,G__16463));
})());
}
});
var update_in__4 = (function (m,p__16425,f,a){
var vec__16464 = p__16425;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16464,(0),null);
var ks = cljs.core.nthnext(vec__16464,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16465 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16466 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16465,G__16466) : f.call(null,G__16465,G__16466));
})());
}
});
var update_in__5 = (function (m,p__16426,f,a,b){
var vec__16467 = p__16426;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16467,(0),null);
var ks = cljs.core.nthnext(vec__16467,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16468 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16469 = a;
var G__16470 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16468,G__16469,G__16470) : f.call(null,G__16468,G__16469,G__16470));
})());
}
});
var update_in__6 = (function (m,p__16427,f,a,b,c){
var vec__16471 = p__16427;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16471,(0),null);
var ks = cljs.core.nthnext(vec__16471,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16472 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16473 = a;
var G__16474 = b;
var G__16475 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16472,G__16473,G__16474,G__16475) : f.call(null,G__16472,G__16473,G__16474,G__16475));
})());
}
});
var update_in__7 = (function() { 
var G__16477__delegate = function (m,p__16428,f,a,b,c,args){
var vec__16476 = p__16428;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16476,(0),null);
var ks = cljs.core.nthnext(vec__16476,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__16477 = function (m,p__16428,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__16478__i = 0, G__16478__a = new Array(arguments.length -  6);
while (G__16478__i < G__16478__a.length) {G__16478__a[G__16478__i] = arguments[G__16478__i + 6]; ++G__16478__i;}
  args = new cljs.core.IndexedSeq(G__16478__a,0);
} 
return G__16477__delegate.call(this,m,p__16428,f,a,b,c,args);};
G__16477.cljs$lang$maxFixedArity = 6;
G__16477.cljs$lang$applyTo = (function (arglist__16479){
var m = cljs.core.first(arglist__16479);
arglist__16479 = cljs.core.next(arglist__16479);
var p__16428 = cljs.core.first(arglist__16479);
arglist__16479 = cljs.core.next(arglist__16479);
var f = cljs.core.first(arglist__16479);
arglist__16479 = cljs.core.next(arglist__16479);
var a = cljs.core.first(arglist__16479);
arglist__16479 = cljs.core.next(arglist__16479);
var b = cljs.core.first(arglist__16479);
arglist__16479 = cljs.core.next(arglist__16479);
var c = cljs.core.first(arglist__16479);
var args = cljs.core.rest(arglist__16479);
return G__16477__delegate(m,p__16428,f,a,b,c,args);
});
G__16477.cljs$core$IFn$_invoke$arity$variadic = G__16477__delegate;
return G__16477;
})()
;
update_in = function(m,p__16428,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__16428,f);
case 4:
return update_in__4.call(this,m,p__16428,f,a);
case 5:
return update_in__5.call(this,m,p__16428,f,a,b);
case 6:
return update_in__6.call(this,m,p__16428,f,a,b,c);
default:
var G__16480 = null;
if (arguments.length > 6) {
var G__16481__i = 0, G__16481__a = new Array(arguments.length -  6);
while (G__16481__i < G__16481__a.length) {G__16481__a[G__16481__i] = arguments[G__16481__i + 6]; ++G__16481__i;}
G__16480 = new cljs.core.IndexedSeq(G__16481__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__16428,f,a,b,c, G__16480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16492 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16492) : f.call(null,G__16492));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16493 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16494 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16493,G__16494) : f.call(null,G__16493,G__16494));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16495 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16496 = x;
var G__16497 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16495,G__16496,G__16497) : f.call(null,G__16495,G__16496,G__16497));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16498 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16499 = x;
var G__16500 = y;
var G__16501 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16498,G__16499,G__16500,G__16501) : f.call(null,G__16498,G__16499,G__16500,G__16501));
})());
});
var update__7 = (function() { 
var G__16502__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__16502 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__16503__i = 0, G__16503__a = new Array(arguments.length -  6);
while (G__16503__i < G__16503__a.length) {G__16503__a[G__16503__i] = arguments[G__16503__i + 6]; ++G__16503__i;}
  more = new cljs.core.IndexedSeq(G__16503__a,0);
} 
return G__16502__delegate.call(this,m,k,f,x,y,z,more);};
G__16502.cljs$lang$maxFixedArity = 6;
G__16502.cljs$lang$applyTo = (function (arglist__16504){
var m = cljs.core.first(arglist__16504);
arglist__16504 = cljs.core.next(arglist__16504);
var k = cljs.core.first(arglist__16504);
arglist__16504 = cljs.core.next(arglist__16504);
var f = cljs.core.first(arglist__16504);
arglist__16504 = cljs.core.next(arglist__16504);
var x = cljs.core.first(arglist__16504);
arglist__16504 = cljs.core.next(arglist__16504);
var y = cljs.core.first(arglist__16504);
arglist__16504 = cljs.core.next(arglist__16504);
var z = cljs.core.first(arglist__16504);
var more = cljs.core.rest(arglist__16504);
return G__16502__delegate(m,k,f,x,y,z,more);
});
G__16502.cljs$core$IFn$_invoke$arity$variadic = G__16502__delegate;
return G__16502;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__16505 = null;
if (arguments.length > 6) {
var G__16506__i = 0, G__16506__a = new Array(arguments.length -  6);
while (G__16506__i < G__16506__a.length) {G__16506__a[G__16506__i] = arguments[G__16506__i + 6]; ++G__16506__i;}
G__16505 = new cljs.core.IndexedSeq(G__16506__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__16505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__16507 = (ll - (5));
var G__16508 = r;
ll = G__16507;
ret = G__16508;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__16513 = cljs.core.pv_aget(node,(0));
var G__16514 = (level - (5));
node = G__16513;
level = G__16514;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__16515 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__16516 = (level - (5));
node = G__16515;
level = G__16516;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__16526 = init__$2;
var G__16527 = (j + i);
var G__16528 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16526,G__16527,G__16528) : f.call(null,G__16526,G__16527,G__16528));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__16539 = (j + (1));
var G__16540 = init__$3;
j = G__16539;
init__$2 = G__16540;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16529 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16529) : cljs.core.deref.call(null,G__16529));
} else {
var G__16541 = (i + len);
var G__16542 = init__$2;
i = G__16541;
init__$1 = G__16542;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__16530 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__16530) : cljs.core.tv_editable_root.call(null,G__16530));
})(),(function (){var G__16531 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__16531) : cljs.core.tv_editable_tail.call(null,G__16531));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__16532 = init__$2;
var G__16533 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16532,G__16533) : f.call(null,G__16532,G__16533));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__16543 = (j + (1));
var G__16544 = init__$3;
j = G__16543;
init__$2 = G__16544;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16534 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16534) : cljs.core.deref.call(null,G__16534));
} else {
var G__16545 = (i + len);
var G__16546 = init__$2;
i = G__16545;
init__$1 = G__16546;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__16535 = coll__$1;
var G__16536 = cljs.core.first_array_for_longvec(coll__$1);
var G__16537 = (0);
var G__16538 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16535,G__16536,G__16537,G__16538) : cljs.core.chunked_seq.call(null,G__16535,G__16536,G__16537,G__16538));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__11828__auto___16547 = len;
var i_16548 = (0);
while(true){
if((i_16548 < n__11828__auto___16547)){
(new_tail[i_16548] = (self__.tail[i_16548]));

var G__16549 = (i_16548 + (1));
i_16548 = G__16549;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__16550 = null;
var G__16550__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__16550__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__16550 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16550__2.call(this,self__,k);
case 3:
return G__16550__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16550.cljs$core$IFn$_invoke$arity$2 = G__16550__2;
G__16550.cljs$core$IFn$_invoke$arity$3 = G__16550__3;
return G__16550;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args16525){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16525)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__16551 = (i + (1));
var G__16552 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__16551;
out = G__16552;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16553__i = 0, G__16553__a = new Array(arguments.length -  0);
while (G__16553__i < G__16553__a.length) {G__16553__a[G__16553__i] = arguments[G__16553__i + 0]; ++G__16553__i;}
  args = new cljs.core.IndexedSeq(G__16553__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__16554){
var args = cljs.core.seq(arglist__16554);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16555 = self__.vec;
var G__16556 = self__.node;
var G__16557 = self__.i;
var G__16558 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16555,G__16556,G__16557,G__16558) : cljs.core.chunked_seq.call(null,G__16555,G__16556,G__16557,G__16558));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__16559 = self__.vec;
var G__16560 = (self__.i + self__.off);
var G__16561 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16559,G__16560,G__16561) : cljs.core.subvec.call(null,G__16559,G__16560,G__16561));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__16562 = self__.vec;
var G__16563 = (self__.i + self__.off);
var G__16564 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16562,G__16563,G__16564) : cljs.core.subvec.call(null,G__16562,G__16563,G__16564));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16565 = self__.vec;
var G__16566 = self__.node;
var G__16567 = self__.i;
var G__16568 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16565,G__16566,G__16567,G__16568) : cljs.core.chunked_seq.call(null,G__16565,G__16566,G__16567,G__16568));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16569 = self__.vec;
var G__16570 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16571 = end;
var G__16572 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16569,G__16570,G__16571,G__16572) : cljs.core.chunked_seq.call(null,G__16569,G__16570,G__16571,G__16572));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__16573 = self__.vec;
var G__16574 = self__.node;
var G__16575 = self__.i;
var G__16576 = self__.off;
var G__16577 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__16573,G__16574,G__16575,G__16576,G__16577) : cljs.core.chunked_seq.call(null,G__16573,G__16574,G__16575,G__16576,G__16577));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16578 = self__.vec;
var G__16579 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16580 = end;
var G__16581 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16578,G__16579,G__16580,G__16581) : cljs.core.chunked_seq.call(null,G__16578,G__16579,G__16580,G__16581));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__16583 = self__.meta;
var G__16584 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__16585 = self__.start;
var G__16586 = (function (){var x__11258__auto__ = self__.end;
var y__11259__auto__ = (v_pos + (1));
return ((x__11258__auto__ > y__11259__auto__) ? x__11258__auto__ : y__11259__auto__);
})();
var G__16587 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16583,G__16584,G__16585,G__16586,G__16587) : cljs.core.build_subvec.call(null,G__16583,G__16584,G__16585,G__16586,G__16587));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__16588 = self__.meta;
var G__16589 = self__.v;
var G__16590 = self__.start;
var G__16591 = (self__.end - (1));
var G__16592 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16588,G__16589,G__16590,G__16591,G__16592) : cljs.core.build_subvec.call(null,G__16588,G__16589,G__16590,G__16591,G__16592));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__16594 = meta__$1;
var G__16595 = self__.v;
var G__16596 = self__.start;
var G__16597 = self__.end;
var G__16598 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16594,G__16595,G__16596,G__16597,G__16598) : cljs.core.build_subvec.call(null,G__16594,G__16595,G__16596,G__16597,G__16598));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__16599 = self__.meta;
var G__16600 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__16601 = self__.start;
var G__16602 = (self__.end + (1));
var G__16603 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16599,G__16600,G__16601,G__16602,G__16603) : cljs.core.build_subvec.call(null,G__16599,G__16600,G__16601,G__16602,G__16603));
});

cljs.core.Subvec.prototype.call = (function() {
var G__16604 = null;
var G__16604__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__16604__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__16604 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16604__2.call(this,self__,k);
case 3:
return G__16604__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16604.cljs$core$IFn$_invoke$arity$2 = G__16604__2;
G__16604.cljs$core$IFn$_invoke$arity$3 = G__16604__3;
return G__16604;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args16582){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16582)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__16605 = meta;
var G__16606 = v.v;
var G__16607 = (v.start + start);
var G__16608 = (v.start + end);
var G__16609 = __hash;
meta = G__16605;
v = G__16606;
start = G__16607;
end = G__16608;
__hash = G__16609;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj16616 = {};
return obj16616;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__16624 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__16625 = (level - (5));
node = G__16624;
level = G__16625;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__16629 = null;
var G__16629__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16629__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16629 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16629__2.call(this,self__,k);
case 3:
return G__16629__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16629.cljs$core$IFn$_invoke$arity$2 = G__16629__2;
G__16629.cljs$core$IFn$_invoke$arity$3 = G__16629__3;
return G__16629;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args16626){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16626)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__10941__auto__ = self__.front;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__10941__auto__ = self__.rear;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__16630 = (i + incr);
i = G__16630;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__16631 = (i + (1));
var G__16632 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__16631;
out = G__16632;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj16636 = {};
return obj16636;
})();
var l = ks.length;
var i_16637 = (0);
while(true){
if((i_16637 < l)){
var k_16638 = (ks[i_16637]);
(new_obj[k_16638] = (obj[k_16638]));

var G__16639 = (i_16637 + (1));
i_16637 = G__16639;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__10929__auto__ = (function (){var G__16643 = k;
return goog.isString(G__16643);
})();
if(cljs.core.truth_(and__10929__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__10929__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__16644 = init__$1;
var G__16645 = k;
var G__16646 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16644,G__16645,G__16646) : f.call(null,G__16644,G__16645,G__16646));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16647 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16647) : cljs.core.deref.call(null,G__16647));
} else {
var G__16653 = cljs.core.rest(keys__$1);
var G__16654 = init__$2;
keys__$1 = G__16653;
init__$1 = G__16654;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__10929__auto__ = (function (){var G__16649 = k;
return goog.isString(G__16649);
})();
if(cljs.core.truth_(and__10929__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__10929__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__16650 = k;
return goog.isString(G__16650);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__10929__auto__ = (function (){var G__16652 = k;
return goog.isString(G__16652);
})();
if(cljs.core.truth_(and__10929__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__10929__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__16640_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__16640_SHARP_,(self__.strobj[p1__16640_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__16655 = null;
var G__16655__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16655__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16655 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16655__2.call(this,self__,k);
case 3:
return G__16655__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16655.cljs$core$IFn$_invoke$arity$2 = G__16655__2;
G__16655.cljs$core$IFn$_invoke$arity$3 = G__16655__3;
return G__16655;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args16641){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16641)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj16657 = {};
return obj16657;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__16658 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16658,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16658,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__16659 = (i + (2));
i = G__16659;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__16660 = (i + (2));
i = G__16660;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__16661 = (i + (2));
i = G__16661;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__16662 = (i + (2));
i = G__16662;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__16663 = (i + (2));
i = G__16663;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__10941__auto__ = (function (){var G__16667 = k;
return goog.isString(G__16667);
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_16668 = (0);
while(true){
if((i_16668 < l)){
(narr[i_16668] = (arr[i_16668]));

var G__16669 = (i_16668 + (1));
i_16668 = G__16669;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16671 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16671) : cljs.core.keys.call(null,G__16671));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16672 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16672) : cljs.core.vals.call(null,G__16672));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16673 = cljs.core.seq(coll);
var chunk__16674 = null;
var count__16675 = (0);
var i__16676 = (0);
while(true){
if((i__16676 < count__16675)){
var vec__16677 = chunk__16674.cljs$core$IIndexed$_nth$arity$2(null,i__16676);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16677,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16677,(1),null);
var G__16678_16691 = v;
var G__16679_16692 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16678_16691,G__16679_16692) : f.call(null,G__16678_16691,G__16679_16692));

var G__16693 = seq__16673;
var G__16694 = chunk__16674;
var G__16695 = count__16675;
var G__16696 = (i__16676 + (1));
seq__16673 = G__16693;
chunk__16674 = G__16694;
count__16675 = G__16695;
i__16676 = G__16696;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__16673);
if(temp__4406__auto__){
var seq__16673__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16673__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__16673__$1);
var G__16697 = cljs.core.chunk_rest(seq__16673__$1);
var G__16698 = c__11728__auto__;
var G__16699 = cljs.core.count(c__11728__auto__);
var G__16700 = (0);
seq__16673 = G__16697;
chunk__16674 = G__16698;
count__16675 = G__16699;
i__16676 = G__16700;
continue;
} else {
var vec__16680 = cljs.core.first(seq__16673__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16680,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16680,(1),null);
var G__16681_16701 = v;
var G__16682_16702 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16681_16701,G__16682_16702) : f.call(null,G__16681_16701,G__16682_16702));

var G__16703 = cljs.core.next(seq__16673__$1);
var G__16704 = null;
var G__16705 = (0);
var G__16706 = (0);
seq__16673 = G__16703;
chunk__16674 = G__16704;
count__16675 = G__16705;
i__16676 = G__16706;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__16683 = init__$1;
var G__16684 = (self__.arr[i]);
var G__16685 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16683,G__16684,G__16685) : f.call(null,G__16683,G__16684,G__16685));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16686 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16686) : cljs.core.deref.call(null,G__16686));
} else {
var G__16707 = (i + (2));
var G__16708 = init__$2;
i = G__16707;
init__$1 = G__16708;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__16687 = other;
if(G__16687){
var bit__11615__auto__ = (G__16687.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__11615__auto__) || (G__16687.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__16709 = (i + (2));
i = G__16709;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj16689 = {};
return obj16689;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__16710 = (s + (2));
var G__16711 = d;
s = G__16710;
d = G__16711;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__16712 = (s + (2));
var G__16713 = (d + (2));
s = G__16712;
d = G__16713;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__16690 = cljs.core.aclone(self__.arr);
(G__16690[(idx + (1))] = v);

return G__16690;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16714 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16715 = cljs.core.next(es);
ret = G__16714;
es = G__16715;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__16716 = null;
var G__16716__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16716__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16716 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16716__2.call(this,self__,k);
case 3:
return G__16716__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16716.cljs$core$IFn$_invoke$arity$2 = G__16716__2;
G__16716.cljs$core$IFn$_invoke$arity$3 = G__16716__3;
return G__16716;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args16670){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16670)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__16717 = (i + (2));
var G__16718 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__16717;
ret = G__16718;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__16719_16727 = self__.arr;
G__16719_16727.pop();

G__16719_16727.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__16720 = self__.len;
var G__16721 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__16720,G__16721) : cljs.core.array__GT_transient_hash_map.call(null,G__16720,G__16721));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__16722 = o;
if(G__16722){
var bit__11622__auto__ = (G__16722.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__11622__auto__) || (G__16722.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__16722.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16722);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16722);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__16723 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16723) : cljs.core.key.call(null,G__16723));
})(),(function (){var G__16724 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16724) : cljs.core.val.call(null,G__16724));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__16728 = cljs.core.next(es);
var G__16729 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__16725 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16725) : cljs.core.key.call(null,G__16725));
})(),(function (){var G__16726 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16726) : cljs.core.val.call(null,G__16726));
})());
es = G__16728;
tcoll__$2 = G__16729;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__16730 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__16731 = (i + (2));
out = G__16730;
i = G__16731;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__16734 = cljs.core.aclone(arr);
(G__16734[i] = a);

return G__16734;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__16735 = cljs.core.aclone(arr);
(G__16735[i] = a);

(G__16735[j] = b);

return G__16735;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__16740 = init__$1;
var G__16741 = k;
var G__16742 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16740,G__16741,G__16742) : f.call(null,G__16740,G__16741,G__16742));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16743 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16743) : cljs.core.deref.call(null,G__16743));
} else {
var G__16744 = (i + (2));
var G__16745 = init__$2;
i = G__16744;
init__$1 = G__16745;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16746 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16746) : cljs.core.create_inode_seq.call(null,G__16746));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_16760 = (0);
var j_16761 = (0);
while(true){
if((i_16760 < (32))){
if((((self__.bitmap >>> i_16760) & (1)) === (0))){
var G__16762 = (i_16760 + (1));
var G__16763 = j_16761;
i_16760 = G__16762;
j_16761 = G__16763;
continue;
} else {
(nodes[i_16760] = ((!(((self__.arr[j_16761]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_16761])),(self__.arr[j_16761]),(self__.arr[(j_16761 + (1))]),added_leaf_QMARK_):(self__.arr[(j_16761 + (1))])));

var G__16764 = (i_16760 + (1));
var G__16765 = (j_16761 + (2));
i_16760 = G__16764;
j_16761 = G__16765;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__16747 = edit__$1;
var G__16748 = (shift + (5));
var G__16749 = key_or_nil;
var G__16750 = val_or_node;
var G__16751 = hash;
var G__16752 = key;
var G__16753 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753) : cljs.core.create_node.call(null,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_16766 = (0);
var j_16767 = (0);
while(true){
if((i_16766 < (32))){
if((((self__.bitmap >>> i_16766) & (1)) === (0))){
var G__16768 = (i_16766 + (1));
var G__16769 = j_16767;
i_16766 = G__16768;
j_16767 = G__16769;
continue;
} else {
(nodes[i_16766] = ((!(((self__.arr[j_16767]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_16767])),(self__.arr[j_16767]),(self__.arr[(j_16767 + (1))]),added_leaf_QMARK_):(self__.arr[(j_16767 + (1))])));

var G__16770 = (i_16766 + (1));
var G__16771 = (j_16767 + (2));
i_16766 = G__16770;
j_16767 = G__16771;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__16754 = (shift + (5));
var G__16755 = key_or_nil;
var G__16756 = val_or_node;
var G__16757 = hash;
var G__16758 = key;
var G__16759 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__16754,G__16755,G__16756,G__16757,G__16758,G__16759) : cljs.core.create_node.call(null,G__16754,G__16755,G__16756,G__16757,G__16758,G__16759));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__16772 = (i + (1));
var G__16773 = (j + (2));
var G__16774 = (bitmap | ((1) << i));
i = G__16772;
j = G__16773;
bitmap = G__16774;
continue;
} else {
var G__16775 = (i + (1));
var G__16776 = j;
var G__16777 = bitmap;
i = G__16775;
j = G__16776;
bitmap = G__16777;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16778 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__16778) : cljs.core.create_array_node_seq.call(null,G__16778));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16779 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16779) : cljs.core.deref.call(null,G__16779));
} else {
var G__16780 = (i + (1));
var G__16781 = init__$2;
i = G__16780;
init__$1 = G__16781;
continue;
}
} else {
var G__16782 = (i + (1));
var G__16783 = init__$1;
i = G__16782;
init__$1 = G__16783;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__16784 = (i + (2));
i = G__16784;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16785 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16785) : cljs.core.create_inode_seq.call(null,G__16785));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__16786 = self__.nodes;
var G__16787 = (self__.i + (2));
var G__16788 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16786,G__16787,G__16788) : cljs.core.create_inode_seq.call(null,G__16786,G__16787,G__16788));
} else {
var G__16789 = self__.nodes;
var G__16790 = self__.i;
var G__16791 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16789,G__16790,G__16791) : cljs.core.create_inode_seq.call(null,G__16789,G__16790,G__16791));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4404__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4404__auto__)){
var node = temp__4404__auto__;
var temp__4404__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var node_seq = temp__4404__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__16795 = (j + (2));
j = G__16795;
continue;
}
} else {
var G__16796 = (j + (2));
j = G__16796;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__16797 = null;
var G__16798 = self__.nodes;
var G__16799 = self__.i;
var G__16800 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__16797,G__16798,G__16799,G__16800) : cljs.core.create_array_node_seq.call(null,G__16797,G__16798,G__16799,G__16800));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4404__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4404__auto__)){
var nj = temp__4404__auto__;
var temp__4404__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var ns = temp__4404__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__16805 = (j + (1));
j = G__16805;
continue;
}
} else {
var G__16806 = (j + (1));
j = G__16806;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16808 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16808) : cljs.core.keys.call(null,G__16808));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16809 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16809) : cljs.core.vals.call(null,G__16809));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16810 = cljs.core.seq(coll);
var chunk__16811 = null;
var count__16812 = (0);
var i__16813 = (0);
while(true){
if((i__16813 < count__16812)){
var vec__16814 = chunk__16811.cljs$core$IIndexed$_nth$arity$2(null,i__16813);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16814,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16814,(1),null);
var G__16815_16826 = v;
var G__16816_16827 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16815_16826,G__16816_16827) : f.call(null,G__16815_16826,G__16816_16827));

var G__16828 = seq__16810;
var G__16829 = chunk__16811;
var G__16830 = count__16812;
var G__16831 = (i__16813 + (1));
seq__16810 = G__16828;
chunk__16811 = G__16829;
count__16812 = G__16830;
i__16813 = G__16831;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__16810);
if(temp__4406__auto__){
var seq__16810__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16810__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__16810__$1);
var G__16832 = cljs.core.chunk_rest(seq__16810__$1);
var G__16833 = c__11728__auto__;
var G__16834 = cljs.core.count(c__11728__auto__);
var G__16835 = (0);
seq__16810 = G__16832;
chunk__16811 = G__16833;
count__16812 = G__16834;
i__16813 = G__16835;
continue;
} else {
var vec__16817 = cljs.core.first(seq__16810__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16817,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16817,(1),null);
var G__16818_16836 = v;
var G__16819_16837 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16818_16836,G__16819_16837) : f.call(null,G__16818_16836,G__16819_16837));

var G__16838 = cljs.core.next(seq__16810__$1);
var G__16839 = null;
var G__16840 = (0);
var G__16841 = (0);
seq__16810 = G__16838;
chunk__16811 = G__16839;
count__16812 = G__16840;
i__16813 = G__16841;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__16820 = init;
var G__16821 = null;
var G__16822 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16820,G__16821,G__16822) : f.call(null,G__16820,G__16821,G__16822));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__16823 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16823) : cljs.core.deref.call(null,G__16823));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj16825 = {};
return obj16825;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16842 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16843 = cljs.core.next(es);
ret = G__16842;
es = G__16843;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__16844 = null;
var G__16844__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16844__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16844 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16844__2.call(this,self__,k);
case 3:
return G__16844__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16844.cljs$core$IFn$_invoke$arity$2 = G__16844__2;
G__16844.cljs$core$IFn$_invoke$arity$3 = G__16844__3;
return G__16844;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args16807){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16807)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16845 = (i + (2));
var G__16846 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__16845;
ret = G__16846;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16847 = (i + (1));
var G__16848 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__16847;
out = G__16848;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__16849 = o;
if(G__16849){
var bit__11622__auto__ = (G__16849.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__11622__auto__) || (G__16849.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__16849.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16849);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16849);
}
})()){
return tcoll.assoc_BANG_((function (){var G__16850 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16850) : cljs.core.key.call(null,G__16850));
})(),(function (){var G__16851 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16851) : cljs.core.val.call(null,G__16851));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__16854 = cljs.core.next(es);
var G__16855 = tcoll__$1.assoc_BANG_((function (){var G__16852 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16852) : cljs.core.key.call(null,G__16852));
})(),(function (){var G__16853 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16853) : cljs.core.val.call(null,G__16853));
})());
es = G__16854;
tcoll__$1 = G__16855;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__16856 = ((ascending_QMARK_)?t.left:t.right);
var G__16857 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__16856;
stack__$1 = G__16857;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__16870 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16870) : cljs.core.deref.call(null,G__16870));
} else {
var init__$2 = (function (){var G__16871 = init__$1;
var G__16872 = node.key;
var G__16873 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16871,G__16872,G__16873) : f.call(null,G__16871,G__16872,G__16873));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16874 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16874) : cljs.core.deref.call(null,G__16874));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__16875 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16875) : cljs.core.deref.call(null,G__16875));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__16877 = null;
var G__16877__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16877__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16877 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16877__2.call(this,self__,k);
case 3:
return G__16877__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16877.cljs$core$IFn$_invoke$arity$2 = G__16877__2;
G__16877.cljs$core$IFn$_invoke$arity$3 = G__16877__3;
return G__16877;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args16876){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16876)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__16879 = null;
var G__16879__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16879__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16879 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16879__2.call(this,self__,k);
case 3:
return G__16879__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16879.cljs$core$IFn$_invoke$arity$2 = G__16879__2;
G__16879.cljs$core$IFn$_invoke$arity$3 = G__16879__3;
return G__16879;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args16878){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16878)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__16892 = k;
var G__16893 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16892,G__16893) : comp.call(null,G__16892,G__16893));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__16912 = k;
var G__16913 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16912,G__16913) : comp.call(null,G__16912,G__16913));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__16924 = k;
var G__16925 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16924,G__16925) : comp.call(null,G__16924,G__16925));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16927 = cljs.core.seq(coll);
var chunk__16928 = null;
var count__16929 = (0);
var i__16930 = (0);
while(true){
if((i__16930 < count__16929)){
var vec__16931 = chunk__16928.cljs$core$IIndexed$_nth$arity$2(null,i__16930);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16931,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16931,(1),null);
var G__16932_16944 = v;
var G__16933_16945 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16932_16944,G__16933_16945) : f.call(null,G__16932_16944,G__16933_16945));

var G__16946 = seq__16927;
var G__16947 = chunk__16928;
var G__16948 = count__16929;
var G__16949 = (i__16930 + (1));
seq__16927 = G__16946;
chunk__16928 = G__16947;
count__16929 = G__16948;
i__16930 = G__16949;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__16927);
if(temp__4406__auto__){
var seq__16927__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16927__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__16927__$1);
var G__16950 = cljs.core.chunk_rest(seq__16927__$1);
var G__16951 = c__11728__auto__;
var G__16952 = cljs.core.count(c__11728__auto__);
var G__16953 = (0);
seq__16927 = G__16950;
chunk__16928 = G__16951;
count__16929 = G__16952;
i__16930 = G__16953;
continue;
} else {
var vec__16934 = cljs.core.first(seq__16927__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16934,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16934,(1),null);
var G__16935_16954 = v;
var G__16936_16955 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16935_16954,G__16936_16955) : f.call(null,G__16935_16954,G__16936_16955));

var G__16956 = cljs.core.next(seq__16927__$1);
var G__16957 = null;
var G__16958 = (0);
var G__16959 = (0);
seq__16927 = G__16956;
chunk__16928 = G__16957;
count__16929 = G__16958;
i__16930 = G__16959;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16937 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16937) : cljs.core.keys.call(null,G__16937));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16938 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16938) : cljs.core.vals.call(null,G__16938));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16939 = k;
var G__16940 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16939,G__16940) : self__.comp.call(null,G__16939,G__16940));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__16960 = t.left;
t = G__16960;
continue;
} else {
var G__16961 = t.right;
t = G__16961;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16962 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16963 = cljs.core.next(es);
ret = G__16962;
es = G__16963;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__16964 = null;
var G__16964__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16964__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16964 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16964__2.call(this,self__,k);
case 3:
return G__16964__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16964.cljs$core$IFn$_invoke$arity$2 = G__16964__2;
G__16964.cljs$core$IFn$_invoke$arity$3 = G__16964__3;
return G__16964;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args16926){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16926)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16941 = k;
var G__16942 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16941,G__16942) : self__.comp.call(null,G__16941,G__16942));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__16965 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16966 = t.left;
stack = G__16965;
t = G__16966;
continue;
} else {
var G__16967 = stack;
var G__16968 = t.right;
stack = G__16967;
t = G__16968;
continue;
}
} else {
if((c > (0))){
var G__16969 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16970 = t.right;
stack = G__16969;
t = G__16970;
continue;
} else {
var G__16971 = stack;
var G__16972 = t.left;
stack = G__16971;
t = G__16972;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__16943 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16943) : cljs.core.key.call(null,G__16943));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__16973 = cljs.core.nnext(in$);
var G__16974 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16973;
out = G__16974;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16975__i = 0, G__16975__a = new Array(arguments.length -  0);
while (G__16975__i < G__16975__a.length) {G__16975__a[G__16975__i] = arguments[G__16975__i + 0]; ++G__16975__i;}
  keyvals = new cljs.core.IndexedSeq(G__16975__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__16976){
var keyvals = cljs.core.seq(arglist__16976);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16977__i = 0, G__16977__a = new Array(arguments.length -  0);
while (G__16977__i < G__16977__a.length) {G__16977__a[G__16977__i] = arguments[G__16977__i + 0]; ++G__16977__i;}
  keyvals = new cljs.core.IndexedSeq(G__16977__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__16978){
var keyvals = cljs.core.seq(arglist__16978);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj16982 = {};
return obj16982;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__16983 = cljs.core.nnext(kvs);
kvs = G__16983;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16984__i = 0, G__16984__a = new Array(arguments.length -  0);
while (G__16984__i < G__16984__a.length) {G__16984__a[G__16984__i] = arguments[G__16984__i + 0]; ++G__16984__i;}
  keyvals = new cljs.core.IndexedSeq(G__16984__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__16985){
var keyvals = cljs.core.seq(arglist__16985);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__16986 = cljs.core.nnext(in$);
var G__16987 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16986;
out = G__16987;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16988__i = 0, G__16988__a = new Array(arguments.length -  0);
while (G__16988__i < G__16988__a.length) {G__16988__a[G__16988__i] = arguments[G__16988__i + 0]; ++G__16988__i;}
  keyvals = new cljs.core.IndexedSeq(G__16988__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__16989){
var keyvals = cljs.core.seq(arglist__16989);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__16990 = cljs.core.nnext(in$);
var G__16991 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16990;
out = G__16991;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__16992__i = 0, G__16992__a = new Array(arguments.length -  1);
while (G__16992__i < G__16992__a.length) {G__16992__a[G__16992__i] = arguments[G__16992__i + 1]; ++G__16992__i;}
  keyvals = new cljs.core.IndexedSeq(G__16992__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__16993){
var comparator = cljs.core.first(arglist__16993);
var keyvals = cljs.core.rest(arglist__16993);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16994 = self__.mseq;
if(G__16994){
var bit__11622__auto__ = (G__16994.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11622__auto__) || (G__16994.cljs$core$INext$)){
return true;
} else {
if((!G__16994.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16994);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16994);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16995 = self__.mseq;
if(G__16995){
var bit__11622__auto__ = (G__16995.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11622__auto__) || (G__16995.cljs$core$INext$)){
return true;
} else {
if((!G__16995.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16995);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16996 = self__.mseq;
if(G__16996){
var bit__11622__auto__ = (G__16996.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11622__auto__) || (G__16996.cljs$core$INext$)){
return true;
} else {
if((!G__16996.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16996);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16996);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16997 = self__.mseq;
if(G__16997){
var bit__11622__auto__ = (G__16997.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11622__auto__) || (G__16997.cljs$core$INext$)){
return true;
} else {
if((!G__16997.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16997);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__16998_SHARP_,p2__16999_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__10941__auto__ = p1__16998_SHARP_;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__16999_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__17000__i = 0, G__17000__a = new Array(arguments.length -  0);
while (G__17000__i < G__17000__a.length) {G__17000__a[G__17000__i] = arguments[G__17000__i + 0]; ++G__17000__i;}
  maps = new cljs.core.IndexedSeq(G__17000__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__17001){
var maps = cljs.core.seq(arglist__17001);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__17004 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__17005 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17004,G__17005) : f.call(null,G__17004,G__17005));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__10941__auto__ = m1;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__17006__i = 0, G__17006__a = new Array(arguments.length -  1);
while (G__17006__i < G__17006__a.length) {G__17006__a[G__17006__i] = arguments[G__17006__i + 1]; ++G__17006__i;}
  maps = new cljs.core.IndexedSeq(G__17006__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__17007){
var f = cljs.core.first(arglist__17007);
var maps = cljs.core.rest(arglist__17007);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__17008 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__17009 = cljs.core.next(keys);
ret = G__17008;
keys = G__17009;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17012 = cljs.core.seq(coll);
var chunk__17013 = null;
var count__17014 = (0);
var i__17015 = (0);
while(true){
if((i__17015 < count__17014)){
var vec__17016 = chunk__17013.cljs$core$IIndexed$_nth$arity$2(null,i__17015);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17016,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17016,(1),null);
var G__17017_17022 = v;
var G__17018_17023 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17017_17022,G__17018_17023) : f.call(null,G__17017_17022,G__17018_17023));

var G__17024 = seq__17012;
var G__17025 = chunk__17013;
var G__17026 = count__17014;
var G__17027 = (i__17015 + (1));
seq__17012 = G__17024;
chunk__17013 = G__17025;
count__17014 = G__17026;
i__17015 = G__17027;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__17012);
if(temp__4406__auto__){
var seq__17012__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17012__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__17012__$1);
var G__17028 = cljs.core.chunk_rest(seq__17012__$1);
var G__17029 = c__11728__auto__;
var G__17030 = cljs.core.count(c__11728__auto__);
var G__17031 = (0);
seq__17012 = G__17028;
chunk__17013 = G__17029;
count__17014 = G__17030;
i__17015 = G__17031;
continue;
} else {
var vec__17019 = cljs.core.first(seq__17012__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17019,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17019,(1),null);
var G__17020_17032 = v;
var G__17021_17033 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17020_17032,G__17021_17033) : f.call(null,G__17020_17032,G__17021_17033));

var G__17034 = cljs.core.next(seq__17012__$1);
var G__17035 = null;
var G__17036 = (0);
var G__17037 = (0);
seq__17012 = G__17034;
chunk__17013 = G__17035;
count__17014 = G__17036;
i__17015 = G__17037;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__17010_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__17010_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__17038 = null;
var G__17038__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17038__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17038 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17038__2.call(this,self__,k);
case 3:
return G__17038__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17038.cljs$core$IFn$_invoke$arity$2 = G__17038__2;
G__17038.cljs$core$IFn$_invoke$arity$3 = G__17038__3;
return G__17038;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args17011){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17011)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__17039 = (i + (1));
var G__17040 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__17039;
out = G__17040;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__17041 = (i + (1));
var G__17042 = cljs.core._conj_BANG_(out,(items[i]));
i = G__17041;
out = G__17042;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__17044 = null;
var G__17044__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__17044__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__17044 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17044__2.call(this,self__,k);
case 3:
return G__17044__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17044.cljs$core$IFn$_invoke$arity$2 = G__17044__2;
G__17044.cljs$core$IFn$_invoke$arity$3 = G__17044__3;
return G__17044;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args17043){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17043)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17047 = cljs.core.seq(coll);
var chunk__17048 = null;
var count__17049 = (0);
var i__17050 = (0);
while(true){
if((i__17050 < count__17049)){
var vec__17051 = chunk__17048.cljs$core$IIndexed$_nth$arity$2(null,i__17050);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17051,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17051,(1),null);
var G__17052_17057 = v;
var G__17053_17058 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17052_17057,G__17053_17058) : f.call(null,G__17052_17057,G__17053_17058));

var G__17059 = seq__17047;
var G__17060 = chunk__17048;
var G__17061 = count__17049;
var G__17062 = (i__17050 + (1));
seq__17047 = G__17059;
chunk__17048 = G__17060;
count__17049 = G__17061;
i__17050 = G__17062;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__17047);
if(temp__4406__auto__){
var seq__17047__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17047__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__17047__$1);
var G__17063 = cljs.core.chunk_rest(seq__17047__$1);
var G__17064 = c__11728__auto__;
var G__17065 = cljs.core.count(c__11728__auto__);
var G__17066 = (0);
seq__17047 = G__17063;
chunk__17048 = G__17064;
count__17049 = G__17065;
i__17050 = G__17066;
continue;
} else {
var vec__17054 = cljs.core.first(seq__17047__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17054,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17054,(1),null);
var G__17055_17067 = v;
var G__17056_17068 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17055_17067,G__17056_17068) : f.call(null,G__17055_17067,G__17056_17068));

var G__17069 = cljs.core.next(seq__17047__$1);
var G__17070 = null;
var G__17071 = (0);
var G__17072 = (0);
seq__17047 = G__17069;
chunk__17048 = G__17070;
count__17049 = G__17071;
i__17050 = G__17072;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__17045_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__17045_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__17073 = null;
var G__17073__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17073__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17073 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17073__2.call(this,self__,k);
case 3:
return G__17073__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17073.cljs$core$IFn$_invoke$arity$2 = G__17073__2;
G__17073.cljs$core$IFn$_invoke$arity$3 = G__17073__3;
return G__17073;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args17046){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17046)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__11822__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__11822__auto__.length)){
var G__17074 = (i + (1));
var G__17075 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__17074;
res = G__17075;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__17076 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__17077 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__17076;
out = G__17077;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__17078__delegate = function (keys){
return cljs.core.set(keys);
};
var G__17078 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__17079__i = 0, G__17079__a = new Array(arguments.length -  0);
while (G__17079__i < G__17079__a.length) {G__17079__a[G__17079__i] = arguments[G__17079__i + 0]; ++G__17079__i;}
  keys = new cljs.core.IndexedSeq(G__17079__a,0);
} 
return G__17078__delegate.call(this,keys);};
G__17078.cljs$lang$maxFixedArity = 0;
G__17078.cljs$lang$applyTo = (function (arglist__17080){
var keys = cljs.core.seq(arglist__17080);
return G__17078__delegate(keys);
});
G__17078.cljs$core$IFn$_invoke$arity$variadic = G__17078__delegate;
return G__17078;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__17081 = null;
if (arguments.length > 0) {
var G__17082__i = 0, G__17082__a = new Array(arguments.length -  0);
while (G__17082__i < G__17082__a.length) {G__17082__a[G__17082__i] = arguments[G__17082__i + 0]; ++G__17082__i;}
G__17081 = new cljs.core.IndexedSeq(G__17082__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__17081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__17083__i = 0, G__17083__a = new Array(arguments.length -  0);
while (G__17083__i < G__17083__a.length) {G__17083__a[G__17083__i] = arguments[G__17083__i + 0]; ++G__17083__i;}
  keys = new cljs.core.IndexedSeq(G__17083__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__17084){
var keys = cljs.core.seq(arglist__17084);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__17085__i = 0, G__17085__a = new Array(arguments.length -  1);
while (G__17085__i < G__17085__a.length) {G__17085__a[G__17085__i] = arguments[G__17085__i + 1]; ++G__17085__i;}
  keys = new cljs.core.IndexedSeq(G__17085__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__17086){
var comparator = cljs.core.first(arglist__17086);
var keys = cljs.core.rest(arglist__17086);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__17087_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__17087_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.val(e);
} else {
return p1__17087_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4404__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__17088_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__17088_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.second(e);
} else {
return p1__17088_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__17109 = null;
var G__17109__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17109__1 = (function (result){
var G__17099 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17099) : rf.call(null,G__17099));
});
var G__17109__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__17100 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17100) : cljs.core.deref.call(null,G__17100));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__17101 = result;
var G__17102 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17101,G__17102) : rf.call(null,G__17101,G__17102));
}
});
G__17109 = function(result,input){
switch(arguments.length){
case 0:
return G__17109__0.call(this);
case 1:
return G__17109__1.call(this,result);
case 2:
return G__17109__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17109.cljs$core$IFn$_invoke$arity$0 = G__17109__0;
G__17109.cljs$core$IFn$_invoke$arity$1 = G__17109__1;
G__17109.cljs$core$IFn$_invoke$arity$2 = G__17109__2;
return G__17109;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__17107,seen__$1){
while(true){
var vec__17108 = p__17107;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17108,(0),null);
var xs__$1 = vec__17108;
var temp__4406__auto__ = cljs.core.seq(xs__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__17110 = cljs.core.rest(s);
var G__17111 = seen__$1;
p__17107 = G__17110;
seen__$1 = G__17111;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__17112 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__17113 = cljs.core.next(s__$1);
ret = G__17112;
s__$1 = G__17113;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__17115 = x;
if(G__17115){
var bit__11615__auto__ = (G__17115.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__11615__auto__) || (G__17115.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__17116 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__17117 = cljs.core.next(ks);
var G__17118 = cljs.core.next(vs);
map = G__17116;
ks = G__17117;
vs = G__17118;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__17129 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17129) : k.call(null,G__17129));
})() > (function (){var G__17130 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17130) : k.call(null,G__17130));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__17131__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17119_SHARP_,p2__17120_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__17119_SHARP_,p2__17120_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__17131 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__17132__i = 0, G__17132__a = new Array(arguments.length -  3);
while (G__17132__i < G__17132__a.length) {G__17132__a[G__17132__i] = arguments[G__17132__i + 3]; ++G__17132__i;}
  more = new cljs.core.IndexedSeq(G__17132__a,0);
} 
return G__17131__delegate.call(this,k,x,y,more);};
G__17131.cljs$lang$maxFixedArity = 3;
G__17131.cljs$lang$applyTo = (function (arglist__17133){
var k = cljs.core.first(arglist__17133);
arglist__17133 = cljs.core.next(arglist__17133);
var x = cljs.core.first(arglist__17133);
arglist__17133 = cljs.core.next(arglist__17133);
var y = cljs.core.first(arglist__17133);
var more = cljs.core.rest(arglist__17133);
return G__17131__delegate(k,x,y,more);
});
G__17131.cljs$core$IFn$_invoke$arity$variadic = G__17131__delegate;
return G__17131;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__17134 = null;
if (arguments.length > 3) {
var G__17135__i = 0, G__17135__a = new Array(arguments.length -  3);
while (G__17135__i < G__17135__a.length) {G__17135__a[G__17135__i] = arguments[G__17135__i + 3]; ++G__17135__i;}
G__17134 = new cljs.core.IndexedSeq(G__17135__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__17134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__17146 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17146) : k.call(null,G__17146));
})() < (function (){var G__17147 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17147) : k.call(null,G__17147));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__17148__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17136_SHARP_,p2__17137_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__17136_SHARP_,p2__17137_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__17148 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__17149__i = 0, G__17149__a = new Array(arguments.length -  3);
while (G__17149__i < G__17149__a.length) {G__17149__a[G__17149__i] = arguments[G__17149__i + 3]; ++G__17149__i;}
  more = new cljs.core.IndexedSeq(G__17149__a,0);
} 
return G__17148__delegate.call(this,k,x,y,more);};
G__17148.cljs$lang$maxFixedArity = 3;
G__17148.cljs$lang$applyTo = (function (arglist__17150){
var k = cljs.core.first(arglist__17150);
arglist__17150 = cljs.core.next(arglist__17150);
var x = cljs.core.first(arglist__17150);
arglist__17150 = cljs.core.next(arglist__17150);
var y = cljs.core.first(arglist__17150);
var more = cljs.core.rest(arglist__17150);
return G__17148__delegate(k,x,y,more);
});
G__17148.cljs$core$IFn$_invoke$arity$variadic = G__17148__delegate;
return G__17148;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__17151 = null;
if (arguments.length > 3) {
var G__17152__i = 0, G__17152__a = new Array(arguments.length -  3);
while (G__17152__i < G__17152__a.length) {G__17152__a[G__17152__i] = arguments[G__17152__i + 3]; ++G__17152__i;}
G__17151 = new cljs.core.IndexedSeq(G__17152__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__17151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__17169 = null;
var G__17169__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17169__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__17164 = result;
var G__17165 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17164,G__17165) : rf.call(null,G__17164,G__17165));
})());
})());
var G__17166 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17166) : rf.call(null,G__17166));
});
var G__17169__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__17167 = result;
var G__17168 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17167,G__17168) : rf.call(null,G__17167,G__17168));
} else {
return result;
}
});
G__17169 = function(result,input){
switch(arguments.length){
case 0:
return G__17169__0.call(this);
case 1:
return G__17169__1.call(this,result);
case 2:
return G__17169__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17169.cljs$core$IFn$_invoke$arity$0 = G__17169__0;
G__17169.cljs$core$IFn$_invoke$arity$1 = G__17169__1;
G__17169.cljs$core$IFn$_invoke$arity$2 = G__17169__2;
return G__17169;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__17182 = null;
var G__17182__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17182__1 = (function (result){
var G__17177 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17177) : rf.call(null,G__17177));
});
var G__17182__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__17178 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17178) : pred.call(null,G__17178));
})())){
var G__17179 = result;
var G__17180 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17179,G__17180) : rf.call(null,G__17179,G__17180));
} else {
return cljs.core.reduced(result);
}
});
G__17182 = function(result,input){
switch(arguments.length){
case 0:
return G__17182__0.call(this);
case 1:
return G__17182__1.call(this,result);
case 2:
return G__17182__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17182.cljs$core$IFn$_invoke$arity$0 = G__17182__0;
G__17182.cljs$core$IFn$_invoke$arity$1 = G__17182__1;
G__17182.cljs$core$IFn$_invoke$arity$2 = G__17182__2;
return G__17182;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.truth_((function (){var G__17181 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17181) : pred.call(null,G__17181));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__17187 = (function (){var G__17189 = cljs.core._entry_key(sc,e);
var G__17190 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17189,G__17190) : comp.call(null,G__17189,G__17190));
})();
var G__17188 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__17187,G__17188) : test.call(null,G__17187,G__17188));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__17194 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17194,(0),null);
var s = vec__17194;
if(cljs.core.truth_((function (){var G__17195 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17195) : include.call(null,G__17195));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__17196 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17196,(0),null);
var s = vec__17196;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__17200 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17200,(0),null);
var s = vec__17200;
if(cljs.core.truth_((function (){var G__17201 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17201) : include.call(null,G__17201));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__17202 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17202,(0),null);
var s = vec__17202;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__17203 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__17203) : Math.ceil.call(null,G__17203));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__17204 = ret;
var G__17205 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17204,G__17205) : f.call(null,G__17204,G__17205));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__17206 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17206) : cljs.core.deref.call(null,G__17206));
} else {
var G__17207 = (i + self__.step);
var G__17208 = ret__$1;
i = G__17207;
ret = G__17208;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__17226 = null;
var G__17226__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17226__1 = (function (result){
var G__17223 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17223) : rf.call(null,G__17223));
});
var G__17226__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__17224 = result;
var G__17225 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17224,G__17225) : rf.call(null,G__17224,G__17225));
} else {
return result;
}
});
G__17226 = function(result,input){
switch(arguments.length){
case 0:
return G__17226__0.call(this);
case 1:
return G__17226__1.call(this,result);
case 2:
return G__17226__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17226.cljs$core$IFn$_invoke$arity$0 = G__17226__0;
G__17226.cljs$core$IFn$_invoke$arity$1 = G__17226__1;
G__17226.cljs$core$IFn$_invoke$arity$2 = G__17226__2;
return G__17226;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__17248 = null;
var G__17248__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17248__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__17239 = result;
var G__17240 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17239,G__17240) : rf.call(null,G__17239,G__17240));
})());
})());
var G__17241 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17241) : rf.call(null,G__17241));
});
var G__17248__2 = (function (result,input){
var pval = (function (){var G__17242 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17242) : cljs.core.deref.call(null,G__17242));
})();
var val = (function (){var G__17243 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17243) : f.call(null,G__17243));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__17244 = result;
var G__17245 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17244,G__17245) : rf.call(null,G__17244,G__17245));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__17248 = function(result,input){
switch(arguments.length){
case 0:
return G__17248__0.call(this);
case 1:
return G__17248__1.call(this,result);
case 2:
return G__17248__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17248.cljs$core$IFn$_invoke$arity$0 = G__17248__0;
G__17248.cljs$core$IFn$_invoke$arity$1 = G__17248__1;
G__17248.cljs$core$IFn$_invoke$arity$2 = G__17248__2;
return G__17248;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__17246 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17246) : f.call(null,G__17246));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4406__auto__){
return (function (p1__17227_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__17247 = p1__17227_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17247) : f.call(null,G__17247));
})());
});})(fst,fv,s,temp__4406__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__17257 = init;
var G__17258 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17257,G__17258) : f.call(null,G__17257,G__17258));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__17353 = null;
var G__17353__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__17353__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17311 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17311) : f.call(null,G__17311));
})()],null));
});
var G__17353__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17312 = x;
var G__17313 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17312,G__17313) : f.call(null,G__17312,G__17313));
})()],null));
});
var G__17353__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17314 = x;
var G__17315 = y;
var G__17316 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17314,G__17315,G__17316) : f.call(null,G__17314,G__17315,G__17316));
})()],null));
});
var G__17353__4 = (function() { 
var G__17354__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__17354 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17355__i = 0, G__17355__a = new Array(arguments.length -  3);
while (G__17355__i < G__17355__a.length) {G__17355__a[G__17355__i] = arguments[G__17355__i + 3]; ++G__17355__i;}
  args = new cljs.core.IndexedSeq(G__17355__a,0);
} 
return G__17354__delegate.call(this,x,y,z,args);};
G__17354.cljs$lang$maxFixedArity = 3;
G__17354.cljs$lang$applyTo = (function (arglist__17356){
var x = cljs.core.first(arglist__17356);
arglist__17356 = cljs.core.next(arglist__17356);
var y = cljs.core.first(arglist__17356);
arglist__17356 = cljs.core.next(arglist__17356);
var z = cljs.core.first(arglist__17356);
var args = cljs.core.rest(arglist__17356);
return G__17354__delegate(x,y,z,args);
});
G__17354.cljs$core$IFn$_invoke$arity$variadic = G__17354__delegate;
return G__17354;
})()
;
G__17353 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17353__0.call(this);
case 1:
return G__17353__1.call(this,x);
case 2:
return G__17353__2.call(this,x,y);
case 3:
return G__17353__3.call(this,x,y,z);
default:
var G__17357 = null;
if (arguments.length > 3) {
var G__17358__i = 0, G__17358__a = new Array(arguments.length -  3);
while (G__17358__i < G__17358__a.length) {G__17358__a[G__17358__i] = arguments[G__17358__i + 3]; ++G__17358__i;}
G__17357 = new cljs.core.IndexedSeq(G__17358__a,0);
}
return G__17353__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17357);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17353.cljs$lang$maxFixedArity = 3;
G__17353.cljs$lang$applyTo = G__17353__4.cljs$lang$applyTo;
G__17353.cljs$core$IFn$_invoke$arity$0 = G__17353__0;
G__17353.cljs$core$IFn$_invoke$arity$1 = G__17353__1;
G__17353.cljs$core$IFn$_invoke$arity$2 = G__17353__2;
G__17353.cljs$core$IFn$_invoke$arity$3 = G__17353__3;
G__17353.cljs$core$IFn$_invoke$arity$variadic = G__17353__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17353;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__17359 = null;
var G__17359__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__17359__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17317 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17317) : f.call(null,G__17317));
})(),(function (){var G__17318 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17318) : g.call(null,G__17318));
})()],null));
});
var G__17359__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17319 = x;
var G__17320 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17319,G__17320) : f.call(null,G__17319,G__17320));
})(),(function (){var G__17321 = x;
var G__17322 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17321,G__17322) : g.call(null,G__17321,G__17322));
})()],null));
});
var G__17359__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17323 = x;
var G__17324 = y;
var G__17325 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17323,G__17324,G__17325) : f.call(null,G__17323,G__17324,G__17325));
})(),(function (){var G__17326 = x;
var G__17327 = y;
var G__17328 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17326,G__17327,G__17328) : g.call(null,G__17326,G__17327,G__17328));
})()],null));
});
var G__17359__4 = (function() { 
var G__17360__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__17360 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17361__i = 0, G__17361__a = new Array(arguments.length -  3);
while (G__17361__i < G__17361__a.length) {G__17361__a[G__17361__i] = arguments[G__17361__i + 3]; ++G__17361__i;}
  args = new cljs.core.IndexedSeq(G__17361__a,0);
} 
return G__17360__delegate.call(this,x,y,z,args);};
G__17360.cljs$lang$maxFixedArity = 3;
G__17360.cljs$lang$applyTo = (function (arglist__17362){
var x = cljs.core.first(arglist__17362);
arglist__17362 = cljs.core.next(arglist__17362);
var y = cljs.core.first(arglist__17362);
arglist__17362 = cljs.core.next(arglist__17362);
var z = cljs.core.first(arglist__17362);
var args = cljs.core.rest(arglist__17362);
return G__17360__delegate(x,y,z,args);
});
G__17360.cljs$core$IFn$_invoke$arity$variadic = G__17360__delegate;
return G__17360;
})()
;
G__17359 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17359__0.call(this);
case 1:
return G__17359__1.call(this,x);
case 2:
return G__17359__2.call(this,x,y);
case 3:
return G__17359__3.call(this,x,y,z);
default:
var G__17363 = null;
if (arguments.length > 3) {
var G__17364__i = 0, G__17364__a = new Array(arguments.length -  3);
while (G__17364__i < G__17364__a.length) {G__17364__a[G__17364__i] = arguments[G__17364__i + 3]; ++G__17364__i;}
G__17363 = new cljs.core.IndexedSeq(G__17364__a,0);
}
return G__17359__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17359.cljs$lang$maxFixedArity = 3;
G__17359.cljs$lang$applyTo = G__17359__4.cljs$lang$applyTo;
G__17359.cljs$core$IFn$_invoke$arity$0 = G__17359__0;
G__17359.cljs$core$IFn$_invoke$arity$1 = G__17359__1;
G__17359.cljs$core$IFn$_invoke$arity$2 = G__17359__2;
G__17359.cljs$core$IFn$_invoke$arity$3 = G__17359__3;
G__17359.cljs$core$IFn$_invoke$arity$variadic = G__17359__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17359;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__17365 = null;
var G__17365__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__17365__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17329 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17329) : f.call(null,G__17329));
})(),(function (){var G__17330 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17330) : g.call(null,G__17330));
})(),(function (){var G__17331 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__17331) : h.call(null,G__17331));
})()],null));
});
var G__17365__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17332 = x;
var G__17333 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17332,G__17333) : f.call(null,G__17332,G__17333));
})(),(function (){var G__17334 = x;
var G__17335 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17334,G__17335) : g.call(null,G__17334,G__17335));
})(),(function (){var G__17336 = x;
var G__17337 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__17336,G__17337) : h.call(null,G__17336,G__17337));
})()],null));
});
var G__17365__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17338 = x;
var G__17339 = y;
var G__17340 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17338,G__17339,G__17340) : f.call(null,G__17338,G__17339,G__17340));
})(),(function (){var G__17341 = x;
var G__17342 = y;
var G__17343 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17341,G__17342,G__17343) : g.call(null,G__17341,G__17342,G__17343));
})(),(function (){var G__17344 = x;
var G__17345 = y;
var G__17346 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__17344,G__17345,G__17346) : h.call(null,G__17344,G__17345,G__17346));
})()],null));
});
var G__17365__4 = (function() { 
var G__17366__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__17366 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17367__i = 0, G__17367__a = new Array(arguments.length -  3);
while (G__17367__i < G__17367__a.length) {G__17367__a[G__17367__i] = arguments[G__17367__i + 3]; ++G__17367__i;}
  args = new cljs.core.IndexedSeq(G__17367__a,0);
} 
return G__17366__delegate.call(this,x,y,z,args);};
G__17366.cljs$lang$maxFixedArity = 3;
G__17366.cljs$lang$applyTo = (function (arglist__17368){
var x = cljs.core.first(arglist__17368);
arglist__17368 = cljs.core.next(arglist__17368);
var y = cljs.core.first(arglist__17368);
arglist__17368 = cljs.core.next(arglist__17368);
var z = cljs.core.first(arglist__17368);
var args = cljs.core.rest(arglist__17368);
return G__17366__delegate(x,y,z,args);
});
G__17366.cljs$core$IFn$_invoke$arity$variadic = G__17366__delegate;
return G__17366;
})()
;
G__17365 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17365__0.call(this);
case 1:
return G__17365__1.call(this,x);
case 2:
return G__17365__2.call(this,x,y);
case 3:
return G__17365__3.call(this,x,y,z);
default:
var G__17369 = null;
if (arguments.length > 3) {
var G__17370__i = 0, G__17370__a = new Array(arguments.length -  3);
while (G__17370__i < G__17370__a.length) {G__17370__a[G__17370__i] = arguments[G__17370__i + 3]; ++G__17370__i;}
G__17369 = new cljs.core.IndexedSeq(G__17370__a,0);
}
return G__17365__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17365.cljs$lang$maxFixedArity = 3;
G__17365.cljs$lang$applyTo = G__17365__4.cljs$lang$applyTo;
G__17365.cljs$core$IFn$_invoke$arity$0 = G__17365__0;
G__17365.cljs$core$IFn$_invoke$arity$1 = G__17365__1;
G__17365.cljs$core$IFn$_invoke$arity$2 = G__17365__2;
G__17365.cljs$core$IFn$_invoke$arity$3 = G__17365__3;
G__17365.cljs$core$IFn$_invoke$arity$variadic = G__17365__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17365;
})()
});
var juxt__4 = (function() { 
var G__17371__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__17372 = null;
var G__17372__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17259_SHARP_,p2__17260_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17259_SHARP_,(function (){return (p2__17260_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__17260_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__17260_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17372__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17261_SHARP_,p2__17262_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17261_SHARP_,(function (){var G__17347 = x;
return (p2__17262_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__17262_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17347) : p2__17262_SHARP_.call(null,G__17347));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17372__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17263_SHARP_,p2__17264_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17263_SHARP_,(function (){var G__17348 = x;
var G__17349 = y;
return (p2__17264_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__17264_SHARP_.cljs$core$IFn$_invoke$arity$2(G__17348,G__17349) : p2__17264_SHARP_.call(null,G__17348,G__17349));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17372__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17265_SHARP_,p2__17266_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17265_SHARP_,(function (){var G__17350 = x;
var G__17351 = y;
var G__17352 = z;
return (p2__17266_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__17266_SHARP_.cljs$core$IFn$_invoke$arity$3(G__17350,G__17351,G__17352) : p2__17266_SHARP_.call(null,G__17350,G__17351,G__17352));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17372__4 = (function() { 
var G__17373__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17267_SHARP_,p2__17268_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17267_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__17268_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__17373 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17374__i = 0, G__17374__a = new Array(arguments.length -  3);
while (G__17374__i < G__17374__a.length) {G__17374__a[G__17374__i] = arguments[G__17374__i + 3]; ++G__17374__i;}
  args = new cljs.core.IndexedSeq(G__17374__a,0);
} 
return G__17373__delegate.call(this,x,y,z,args);};
G__17373.cljs$lang$maxFixedArity = 3;
G__17373.cljs$lang$applyTo = (function (arglist__17375){
var x = cljs.core.first(arglist__17375);
arglist__17375 = cljs.core.next(arglist__17375);
var y = cljs.core.first(arglist__17375);
arglist__17375 = cljs.core.next(arglist__17375);
var z = cljs.core.first(arglist__17375);
var args = cljs.core.rest(arglist__17375);
return G__17373__delegate(x,y,z,args);
});
G__17373.cljs$core$IFn$_invoke$arity$variadic = G__17373__delegate;
return G__17373;
})()
;
G__17372 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17372__0.call(this);
case 1:
return G__17372__1.call(this,x);
case 2:
return G__17372__2.call(this,x,y);
case 3:
return G__17372__3.call(this,x,y,z);
default:
var G__17376 = null;
if (arguments.length > 3) {
var G__17377__i = 0, G__17377__a = new Array(arguments.length -  3);
while (G__17377__i < G__17377__a.length) {G__17377__a[G__17377__i] = arguments[G__17377__i + 3]; ++G__17377__i;}
G__17376 = new cljs.core.IndexedSeq(G__17377__a,0);
}
return G__17372__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17372.cljs$lang$maxFixedArity = 3;
G__17372.cljs$lang$applyTo = G__17372__4.cljs$lang$applyTo;
G__17372.cljs$core$IFn$_invoke$arity$0 = G__17372__0;
G__17372.cljs$core$IFn$_invoke$arity$1 = G__17372__1;
G__17372.cljs$core$IFn$_invoke$arity$2 = G__17372__2;
G__17372.cljs$core$IFn$_invoke$arity$3 = G__17372__3;
G__17372.cljs$core$IFn$_invoke$arity$variadic = G__17372__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17372;
})()
;})(fs__$1))
};
var G__17371 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__17378__i = 0, G__17378__a = new Array(arguments.length -  3);
while (G__17378__i < G__17378__a.length) {G__17378__a[G__17378__i] = arguments[G__17378__i + 3]; ++G__17378__i;}
  fs = new cljs.core.IndexedSeq(G__17378__a,0);
} 
return G__17371__delegate.call(this,f,g,h,fs);};
G__17371.cljs$lang$maxFixedArity = 3;
G__17371.cljs$lang$applyTo = (function (arglist__17379){
var f = cljs.core.first(arglist__17379);
arglist__17379 = cljs.core.next(arglist__17379);
var g = cljs.core.first(arglist__17379);
arglist__17379 = cljs.core.next(arglist__17379);
var h = cljs.core.first(arglist__17379);
var fs = cljs.core.rest(arglist__17379);
return G__17371__delegate(f,g,h,fs);
});
G__17371.cljs$core$IFn$_invoke$arity$variadic = G__17371__delegate;
return G__17371;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__17380 = null;
if (arguments.length > 3) {
var G__17381__i = 0, G__17381__a = new Array(arguments.length -  3);
while (G__17381__i < G__17381__a.length) {G__17381__a[G__17381__i] = arguments[G__17381__i + 3]; ++G__17381__i;}
G__17380 = new cljs.core.IndexedSeq(G__17381__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__17380);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__17382 = cljs.core.next(coll);
coll = G__17382;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__17383 = (n - (1));
var G__17384 = cljs.core.next(coll);
n = G__17383;
coll = G__17384;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__17388 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17388,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17388,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17388,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_17396 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__17397_17403 = cljs.core.first(coll);
var G__17398_17404 = writer;
var G__17399_17405 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17397_17403,G__17398_17404,G__17399_17405) : print_one.call(null,G__17397_17403,G__17398_17404,G__17399_17405));
} else {
}

var coll_17406__$1 = cljs.core.next(coll);
var n_17407 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_17406__$1) && (((n_17407 == null)) || (!((n_17407 === (0)))))){
cljs.core._write(writer,sep);

var G__17400_17408 = cljs.core.first(coll_17406__$1);
var G__17401_17409 = writer;
var G__17402_17410 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17400_17408,G__17401_17409,G__17402_17410) : print_one.call(null,G__17400_17408,G__17401_17409,G__17402_17410));

var G__17411 = cljs.core.next(coll_17406__$1);
var G__17412 = (n_17407 - (1));
coll_17406__$1 = G__17411;
n_17407 = G__17412;
continue;
} else {
if((cljs.core.seq(coll_17406__$1)) && ((n_17407 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_17396;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__17417 = cljs.core.seq(ss);
var chunk__17418 = null;
var count__17419 = (0);
var i__17420 = (0);
while(true){
if((i__17420 < count__17419)){
var s = chunk__17418.cljs$core$IIndexed$_nth$arity$2(null,i__17420);
cljs.core._write(writer,s);

var G__17421 = seq__17417;
var G__17422 = chunk__17418;
var G__17423 = count__17419;
var G__17424 = (i__17420 + (1));
seq__17417 = G__17421;
chunk__17418 = G__17422;
count__17419 = G__17423;
i__17420 = G__17424;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__17417);
if(temp__4406__auto__){
var seq__17417__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17417__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__17417__$1);
var G__17425 = cljs.core.chunk_rest(seq__17417__$1);
var G__17426 = c__11728__auto__;
var G__17427 = cljs.core.count(c__11728__auto__);
var G__17428 = (0);
seq__17417 = G__17425;
chunk__17418 = G__17426;
count__17419 = G__17427;
i__17420 = G__17428;
continue;
} else {
var s = cljs.core.first(seq__17417__$1);
cljs.core._write(writer,s);

var G__17429 = cljs.core.next(seq__17417__$1);
var G__17430 = null;
var G__17431 = (0);
var G__17432 = (0);
seq__17417 = G__17429;
chunk__17418 = G__17430;
count__17419 = G__17431;
i__17420 = G__17432;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__17433__i = 0, G__17433__a = new Array(arguments.length -  1);
while (G__17433__i < G__17433__a.length) {G__17433__a[G__17433__i] = arguments[G__17433__i + 1]; ++G__17433__i;}
  ss = new cljs.core.IndexedSeq(G__17433__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__17434){
var writer = cljs.core.first(arglist__17434);
var ss = cljs.core.rest(arglist__17434);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj17436 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj17436;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__17439 = "[\\\\\"\b\f\n\r\t]";
var G__17440 = "g";
return RegExp(G__17439,G__17440);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__10929__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__17454 = obj;
if(G__17454){
var bit__11622__auto__ = (G__17454.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__11622__auto__) || (G__17454.cljs$core$IMeta$)){
return true;
} else {
if((!G__17454.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17454);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17454);
}
})();
if(and__10929__auto____$1){
return cljs.core.meta(obj);
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__17455 = obj;
if(G__17455){
var bit__11615__auto__ = (G__17455.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__11615__auto__) || (G__17455.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__17456 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__17457 = pr_writer;
var G__17458 = writer;
var G__17459 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__17456,G__17457,G__17458,G__17459) : cljs.core.print_map.call(null,G__17456,G__17457,G__17458,G__17459));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__17460 = obj;
return goog.isString(G__17460);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__17462 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__17462;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__17461 = obj;
if(G__17461){
var bit__11622__auto__ = (G__17461.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__11622__auto__) || (G__17461.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__17461.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17461);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17461);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__17467 = cljs.core.seq(cljs.core.next(objs));
var chunk__17468 = null;
var count__17469 = (0);
var i__17470 = (0);
while(true){
if((i__17470 < count__17469)){
var obj = chunk__17468.cljs$core$IIndexed$_nth$arity$2(null,i__17470);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17471 = seq__17467;
var G__17472 = chunk__17468;
var G__17473 = count__17469;
var G__17474 = (i__17470 + (1));
seq__17467 = G__17471;
chunk__17468 = G__17472;
count__17469 = G__17473;
i__17470 = G__17474;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__17467);
if(temp__4406__auto__){
var seq__17467__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17467__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__17467__$1);
var G__17475 = cljs.core.chunk_rest(seq__17467__$1);
var G__17476 = c__11728__auto__;
var G__17477 = cljs.core.count(c__11728__auto__);
var G__17478 = (0);
seq__17467 = G__17475;
chunk__17468 = G__17476;
count__17469 = G__17477;
i__17470 = G__17478;
continue;
} else {
var obj = cljs.core.first(seq__17467__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17479 = cljs.core.next(seq__17467__$1);
var G__17480 = null;
var G__17481 = (0);
var G__17482 = (0);
seq__17467 = G__17479;
chunk__17468 = G__17480;
count__17469 = G__17481;
i__17470 = G__17482;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17483__i = 0, G__17483__a = new Array(arguments.length -  0);
while (G__17483__i < G__17483__a.length) {G__17483__a[G__17483__i] = arguments[G__17483__i + 0]; ++G__17483__i;}
  objs = new cljs.core.IndexedSeq(G__17483__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__17484){
var objs = cljs.core.seq(arglist__17484);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17485__i = 0, G__17485__a = new Array(arguments.length -  0);
while (G__17485__i < G__17485__a.length) {G__17485__a[G__17485__i] = arguments[G__17485__i + 0]; ++G__17485__i;}
  objs = new cljs.core.IndexedSeq(G__17485__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__17486){
var objs = cljs.core.seq(arglist__17486);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17487__i = 0, G__17487__a = new Array(arguments.length -  0);
while (G__17487__i < G__17487__a.length) {G__17487__a[G__17487__i] = arguments[G__17487__i + 0]; ++G__17487__i;}
  objs = new cljs.core.IndexedSeq(G__17487__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__17488){
var objs = cljs.core.seq(arglist__17488);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17489__i = 0, G__17489__a = new Array(arguments.length -  0);
while (G__17489__i < G__17489__a.length) {G__17489__a[G__17489__i] = arguments[G__17489__i + 0]; ++G__17489__i;}
  objs = new cljs.core.IndexedSeq(G__17489__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__17490){
var objs = cljs.core.seq(arglist__17490);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17491__i = 0, G__17491__a = new Array(arguments.length -  0);
while (G__17491__i < G__17491__a.length) {G__17491__a[G__17491__i] = arguments[G__17491__i + 0]; ++G__17491__i;}
  objs = new cljs.core.IndexedSeq(G__17491__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__17492){
var objs = cljs.core.seq(arglist__17492);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17493__i = 0, G__17493__a = new Array(arguments.length -  0);
while (G__17493__i < G__17493__a.length) {G__17493__a[G__17493__i] = arguments[G__17493__i + 0]; ++G__17493__i;}
  objs = new cljs.core.IndexedSeq(G__17493__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__17494){
var objs = cljs.core.seq(arglist__17494);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17495__i = 0, G__17495__a = new Array(arguments.length -  0);
while (G__17495__i < G__17495__a.length) {G__17495__a[G__17495__i] = arguments[G__17495__i + 0]; ++G__17495__i;}
  objs = new cljs.core.IndexedSeq(G__17495__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__17496){
var objs = cljs.core.seq(arglist__17496);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17497__i = 0, G__17497__a = new Array(arguments.length -  0);
while (G__17497__i < G__17497__a.length) {G__17497__a[G__17497__i] = arguments[G__17497__i + 0]; ++G__17497__i;}
  objs = new cljs.core.IndexedSeq(G__17497__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__17498){
var objs = cljs.core.seq(arglist__17498);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__17505_17511 = cljs.core.key(e);
var G__17506_17512 = w;
var G__17507_17513 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17505_17511,G__17506_17512,G__17507_17513) : print_one.call(null,G__17505_17511,G__17506_17512,G__17507_17513));

cljs.core._write(w," ");

var G__17508 = cljs.core.val(e);
var G__17509 = w;
var G__17510 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17508,G__17509,G__17510) : print_one.call(null,G__17508,G__17509,G__17510));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__17514__i = 0, G__17514__a = new Array(arguments.length -  2);
while (G__17514__i < G__17514__a.length) {G__17514__a[G__17514__i] = arguments[G__17514__i + 2]; ++G__17514__i;}
  args = new cljs.core.IndexedSeq(G__17514__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__17515){
var iref = cljs.core.first(arglist__17515);
arglist__17515 = cljs.core.next(arglist__17515);
var f = cljs.core.first(arglist__17515);
var args = cljs.core.rest(arglist__17515);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__17518 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17518) : cljs.core.atom.call(null,G__17518));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__17520 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17520) : cljs.core.deref.call(null,G__17520));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__17521_SHARP_,p2__17522_SHARP_){
var ret = (function (){var G__17525 = p1__17521_SHARP_;
var G__17526 = p2__17522_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17525,G__17526) : rf.call(null,G__17525,G__17526));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__17529 = null;
var G__17529__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17529__1 = (function (result){
var G__17528 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17528) : rf.call(null,G__17528));
});
var G__17529__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__17529 = function(result,input){
switch(arguments.length){
case 0:
return G__17529__0.call(this);
case 1:
return G__17529__1.call(this,result);
case 2:
return G__17529__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17529.cljs$core$IFn$_invoke$arity$0 = G__17529__0;
G__17529.cljs$core$IFn$_invoke$arity$1 = G__17529__1;
G__17529.cljs$core$IFn$_invoke$arity$2 = G__17529__2;
return G__17529;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__17538 = null;
var G__17538__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17538__1 = (function (result){
var G__17534 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17534) : rf.call(null,G__17534));
});
var G__17538__2 = (function (result,input){
var prior = (function (){var G__17535 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17535) : cljs.core.deref.call(null,G__17535));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__17536 = result;
var G__17537 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17536,G__17537) : rf.call(null,G__17536,G__17537));
}
});
G__17538 = function(result,input){
switch(arguments.length){
case 0:
return G__17538__0.call(this);
case 1:
return G__17538__1.call(this,result);
case 2:
return G__17538__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17538.cljs$core$IFn$_invoke$arity$0 = G__17538__0;
G__17538.cljs$core$IFn$_invoke$arity$1 = G__17538__1;
G__17538.cljs$core$IFn$_invoke$arity$2 = G__17538__2;
return G__17538;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17540_SHARP_,p2__17539_SHARP_){
var G__17542 = p2__17539_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__17542) : proc.call(null,G__17542));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj17544 = {};
return obj17544;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._clj__GT_js[(function (){var G__17548 = x__11585__auto__;
return goog.typeOf(G__17548);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._key__GT_js[(function (){var G__17552 = x__11585__auto__;
return goog.typeOf(G__17552);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__17555 = k;
if(G__17555){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto__ = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return G__17555.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17555.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17555);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17555);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__17556 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__17556) : cljs.core.clj__GT_js.call(null,G__17556));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__17572 = x;
if(G__17572){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto__ = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return G__17572.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17572.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17572);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17572);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj17574 = {};
return obj17574;
})();
var seq__17575_17585 = cljs.core.seq(x);
var chunk__17576_17586 = null;
var count__17577_17587 = (0);
var i__17578_17588 = (0);
while(true){
if((i__17578_17588 < count__17577_17587)){
var vec__17579_17589 = chunk__17576_17586.cljs$core$IIndexed$_nth$arity$2(null,i__17578_17588);
var k_17590 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17579_17589,(0),null);
var v_17591 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17579_17589,(1),null);
(m[cljs.core.key__GT_js(k_17590)] = clj__GT_js(v_17591));

var G__17592 = seq__17575_17585;
var G__17593 = chunk__17576_17586;
var G__17594 = count__17577_17587;
var G__17595 = (i__17578_17588 + (1));
seq__17575_17585 = G__17592;
chunk__17576_17586 = G__17593;
count__17577_17587 = G__17594;
i__17578_17588 = G__17595;
continue;
} else {
var temp__4406__auto___17596 = cljs.core.seq(seq__17575_17585);
if(temp__4406__auto___17596){
var seq__17575_17597__$1 = temp__4406__auto___17596;
if(cljs.core.chunked_seq_QMARK_(seq__17575_17597__$1)){
var c__11728__auto___17598 = cljs.core.chunk_first(seq__17575_17597__$1);
var G__17599 = cljs.core.chunk_rest(seq__17575_17597__$1);
var G__17600 = c__11728__auto___17598;
var G__17601 = cljs.core.count(c__11728__auto___17598);
var G__17602 = (0);
seq__17575_17585 = G__17599;
chunk__17576_17586 = G__17600;
count__17577_17587 = G__17601;
i__17578_17588 = G__17602;
continue;
} else {
var vec__17580_17603 = cljs.core.first(seq__17575_17597__$1);
var k_17604 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17580_17603,(0),null);
var v_17605 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17580_17603,(1),null);
(m[cljs.core.key__GT_js(k_17604)] = clj__GT_js(v_17605));

var G__17606 = cljs.core.next(seq__17575_17597__$1);
var G__17607 = null;
var G__17608 = (0);
var G__17609 = (0);
seq__17575_17585 = G__17606;
chunk__17576_17586 = G__17607;
count__17577_17587 = G__17608;
i__17578_17588 = G__17609;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__17581_17610 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__17582_17611 = null;
var count__17583_17612 = (0);
var i__17584_17613 = (0);
while(true){
if((i__17584_17613 < count__17583_17612)){
var x_17614__$1 = chunk__17582_17611.cljs$core$IIndexed$_nth$arity$2(null,i__17584_17613);
arr.push(x_17614__$1);

var G__17615 = seq__17581_17610;
var G__17616 = chunk__17582_17611;
var G__17617 = count__17583_17612;
var G__17618 = (i__17584_17613 + (1));
seq__17581_17610 = G__17615;
chunk__17582_17611 = G__17616;
count__17583_17612 = G__17617;
i__17584_17613 = G__17618;
continue;
} else {
var temp__4406__auto___17619 = cljs.core.seq(seq__17581_17610);
if(temp__4406__auto___17619){
var seq__17581_17620__$1 = temp__4406__auto___17619;
if(cljs.core.chunked_seq_QMARK_(seq__17581_17620__$1)){
var c__11728__auto___17621 = cljs.core.chunk_first(seq__17581_17620__$1);
var G__17622 = cljs.core.chunk_rest(seq__17581_17620__$1);
var G__17623 = c__11728__auto___17621;
var G__17624 = cljs.core.count(c__11728__auto___17621);
var G__17625 = (0);
seq__17581_17610 = G__17622;
chunk__17582_17611 = G__17623;
count__17583_17612 = G__17624;
i__17584_17613 = G__17625;
continue;
} else {
var x_17626__$1 = cljs.core.first(seq__17581_17620__$1);
arr.push(x_17626__$1);

var G__17627 = cljs.core.next(seq__17581_17620__$1);
var G__17628 = null;
var G__17629 = (0);
var G__17630 = (0);
seq__17581_17610 = G__17627;
chunk__17582_17611 = G__17628;
count__17583_17612 = G__17629;
i__17584_17613 = G__17630;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj17632 = {};
return obj17632;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._js__GT_clj[(function (){var G__17636 = x__11585__auto__;
return goog.typeOf(G__17636);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__17693__delegate = function (x,opts){
var map__17666 = opts;
var map__17666__$1 = ((cljs.core.seq_QMARK_(map__17666))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__17666):map__17666);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17666__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__17666,map__17666__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__17682 = x__$1;
if(G__17682){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto__ = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return G__17682.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__17682.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__17682);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__17682);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__11697__auto__ = ((function (map__17666,map__17666__$1,keywordize_keys,keyfn){
return (function iter__17683(s__17684){
return (new cljs.core.LazySeq(null,((function (map__17666,map__17666__$1,keywordize_keys,keyfn){
return (function (){
var s__17684__$1 = s__17684;
while(true){
var temp__4406__auto__ = cljs.core.seq(s__17684__$1);
if(temp__4406__auto__){
var s__17684__$2 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s__17684__$2)){
var c__11695__auto__ = cljs.core.chunk_first(s__17684__$2);
var size__11696__auto__ = cljs.core.count(c__11695__auto__);
var b__17686 = cljs.core.chunk_buffer(size__11696__auto__);
if((function (){var i__17685 = (0);
while(true){
if((i__17685 < size__11696__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__11695__auto__,i__17685);
cljs.core.chunk_append(b__17686,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__17691 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17691) : keyfn.call(null,G__17691));
})(),thisfn((x__$1[k]))], null));

var G__17694 = (i__17685 + (1));
i__17685 = G__17694;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__17686),iter__17683(cljs.core.chunk_rest(s__17684__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__17686),null);
}
} else {
var k = cljs.core.first(s__17684__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__17692 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17692) : keyfn.call(null,G__17692));
})(),thisfn((x__$1[k]))], null),iter__17683(cljs.core.rest(s__17684__$2)));
}
} else {
return null;
}
break;
}
});})(map__17666,map__17666__$1,keywordize_keys,keyfn))
,null,null));
});})(map__17666,map__17666__$1,keywordize_keys,keyfn))
;
return iter__11697__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__17666,map__17666__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__17693 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__17695__i = 0, G__17695__a = new Array(arguments.length -  1);
while (G__17695__i < G__17695__a.length) {G__17695__a[G__17695__i] = arguments[G__17695__i + 1]; ++G__17695__i;}
  opts = new cljs.core.IndexedSeq(G__17695__a,0);
} 
return G__17693__delegate.call(this,x,opts);};
G__17693.cljs$lang$maxFixedArity = 1;
G__17693.cljs$lang$applyTo = (function (arglist__17696){
var x = cljs.core.first(arglist__17696);
var opts = cljs.core.rest(arglist__17696);
return G__17693__delegate(x,opts);
});
G__17693.cljs$core$IFn$_invoke$arity$variadic = G__17693__delegate;
return G__17693;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__17697 = null;
if (arguments.length > 1) {
var G__17698__i = 0, G__17698__a = new Array(arguments.length -  1);
while (G__17698__i < G__17698__a.length) {G__17698__a[G__17698__i] = arguments[G__17698__i + 1]; ++G__17698__i;}
G__17697 = new cljs.core.IndexedSeq(G__17698__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17697);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__17701 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17701) : cljs.core.atom.call(null,G__17701));
})();
return ((function (mem){
return (function() { 
var G__17703__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__17702 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17702) : cljs.core.deref.call(null,G__17702));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__17703 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17704__i = 0, G__17704__a = new Array(arguments.length -  0);
while (G__17704__i < G__17704__a.length) {G__17704__a[G__17704__i] = arguments[G__17704__i + 0]; ++G__17704__i;}
  args = new cljs.core.IndexedSeq(G__17704__a,0);
} 
return G__17703__delegate.call(this,args);};
G__17703.cljs$lang$maxFixedArity = 0;
G__17703.cljs$lang$applyTo = (function (arglist__17705){
var args = cljs.core.seq(arglist__17705);
return G__17703__delegate(args);
});
G__17703.cljs$core$IFn$_invoke$arity$variadic = G__17703__delegate;
return G__17703;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__17707 = ret;
f = G__17707;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__17708__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__17708 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__17709__i = 0, G__17709__a = new Array(arguments.length -  1);
while (G__17709__i < G__17709__a.length) {G__17709__a[G__17709__i] = arguments[G__17709__i + 1]; ++G__17709__i;}
  args = new cljs.core.IndexedSeq(G__17709__a,0);
} 
return G__17708__delegate.call(this,f,args);};
G__17708.cljs$lang$maxFixedArity = 1;
G__17708.cljs$lang$applyTo = (function (arglist__17710){
var f = cljs.core.first(arglist__17710);
var args = cljs.core.rest(arglist__17710);
return G__17708__delegate(f,args);
});
G__17708.cljs$core$IFn$_invoke$arity$variadic = G__17708__delegate;
return G__17708;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__17711 = null;
if (arguments.length > 1) {
var G__17712__i = 0, G__17712__a = new Array(arguments.length -  1);
while (G__17712__i < G__17712__a.length) {G__17712__a[G__17712__i] = arguments[G__17712__i + 1]; ++G__17712__i;}
G__17711 = new cljs.core.IndexedSeq(G__17712__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__17711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__17715 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17715) : Math.floor.call(null,G__17715));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__17717 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17717) : f.call(null,G__17717));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__17719 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17719) : cljs.core.atom.call(null,G__17719));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__17720__i = 0, G__17720__a = new Array(arguments.length -  1);
while (G__17720__i < G__17720__a.length) {G__17720__a[G__17720__i] = arguments[G__17720__i + 1]; ++G__17720__i;}
  args = new cljs.core.IndexedSeq(G__17720__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__17721){
var f = cljs.core.first(arglist__17721);
var args = cljs.core.rest(arglist__17721);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__17786 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17786) : cljs.core.deref.call(null,G__17786));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__10941__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
var and__10929__auto__ = cljs.core.vector_QMARK_(parent);
if(and__10929__auto__){
var and__10929__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__10929__auto____$1){
var and__10929__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__10929__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__17811 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__17809 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__17809) : child.call(null,G__17809));
})(),(function (){var G__17810 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__17810) : parent.call(null,G__17810));
})());
var G__17812 = (i + (1));
ret = G__17811;
i = G__17812;
continue;
}
break;
}
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__17816 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17816) : cljs.core.deref.call(null,G__17816));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__17820 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17820) : cljs.core.deref.call(null,G__17820));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__17824 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17824) : cljs.core.deref.call(null,G__17824));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__17833 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__17833) : targets.call(null,G__17833));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__17834 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__17834) : sources.call(null,G__17834));
})()));
});})(tp,td,ta))
;
var or__10941__auto__ = ((cljs.core.contains_QMARK_((function (){var G__17838 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__17838) : tp.call(null,G__17838));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__17839 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17839) : ta.call(null,G__17839));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__17840 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17840) : ta.call(null,G__17840));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__17847 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17847) : parentMap.call(null,G__17847));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__17848 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17848) : parentMap.call(null,G__17848));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__17841_SHARP_){
return cljs.core.cons(cljs.core.first(p1__17841_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__17841_SHARP_),cljs.core.second(p1__17841_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__17849 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17849) : parentMap.call(null,G__17849));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__17842_SHARP_,p2__17843_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__17842_SHARP_,p2__17843_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__17852 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17852) : cljs.core.deref.call(null,G__17852));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__17853 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17853) : cljs.core.deref.call(null,G__17853));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__17869 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17869) : cljs.core.deref.call(null,G__17869));
})().call(null,x);
var or__10941__auto__ = (cljs.core.truth_((function (){var and__10929__auto__ = xprefs;
if(cljs.core.truth_(and__10929__auto__)){
var G__17871 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__17871) : xprefs.call(null,G__17871));
} else {
return and__10929__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__17872 = cljs.core.rest(ps);
ps = G__17872;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__17873 = cljs.core.rest(ps);
ps = G__17873;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__10941__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__17887){
var vec__17888 = p__17887;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17888,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17888,(1),null);
var e = vec__17888;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__17889 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17889) : cljs.core.deref.call(null,G__17889));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__10941__auto__ = (be == null);
if(or__10941__auto__){
return or__10941__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__17890 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17890) : cljs.core.deref.call(null,G__17890));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17891 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17891) : cljs.core.deref.call(null,G__17891));
})(),(function (){var G__17892 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17892) : cljs.core.deref.call(null,G__17892));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj17894 = {};
return obj17894;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._reset[(function (){var G__17898 = x__11585__auto__;
return goog.typeOf(G__17898);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._reset["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._add_method[(function (){var G__17902 = x__11585__auto__;
return goog.typeOf(G__17902);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._add_method["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._remove_method[(function (){var G__17906 = x__11585__auto__;
return goog.typeOf(G__17906);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._remove_method["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._prefer_method[(function (){var G__17910 = x__11585__auto__;
return goog.typeOf(G__17910);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._get_method[(function (){var G__17914 = x__11585__auto__;
return goog.typeOf(G__17914);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._get_method["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._methods[(function (){var G__17918 = x__11585__auto__;
return goog.typeOf(G__17918);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._methods["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._prefers[(function (){var G__17922 = x__11585__auto__;
return goog.typeOf(G__17922);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._prefers["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17924 = this$__$1;
return goog.getUid(G__17924);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17925 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17925) : cljs.core.deref.call(null,G__17925));
})(),(function (){var G__17926 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17926) : cljs.core.deref.call(null,G__17926));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4404__auto__ = (function (){var G__17927 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17927) : cljs.core.deref.call(null,G__17927));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4404__auto__)){
var target_fn = temp__4404__auto__;
return target_fn;
} else {
var temp__4404__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4404__auto____$1)){
var target_fn = temp__4404__auto____$1;
return target_fn;
} else {
return (function (){var G__17928 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17928) : cljs.core.deref.call(null,G__17928));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17929 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17929) : cljs.core.deref.call(null,G__17929));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17930 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17930) : cljs.core.deref.call(null,G__17930));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__18771 = null;
var G__18771__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__18771__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17931 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17931) : self__.dispatch_fn.call(null,G__17931));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17932 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17932) : target_fn.call(null,G__17932));
});
var G__18771__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17933 = a;
var G__17934 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17933,G__17934) : self__.dispatch_fn.call(null,G__17933,G__17934));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17935 = a;
var G__17936 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17935,G__17936) : target_fn.call(null,G__17935,G__17936));
});
var G__18771__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17937 = a;
var G__17938 = b;
var G__17939 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17937,G__17938,G__17939) : self__.dispatch_fn.call(null,G__17937,G__17938,G__17939));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17940 = a;
var G__17941 = b;
var G__17942 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17940,G__17941,G__17942) : target_fn.call(null,G__17940,G__17941,G__17942));
});
var G__18771__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17943 = a;
var G__17944 = b;
var G__17945 = c;
var G__17946 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17943,G__17944,G__17945,G__17946) : self__.dispatch_fn.call(null,G__17943,G__17944,G__17945,G__17946));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17947 = a;
var G__17948 = b;
var G__17949 = c;
var G__17950 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17947,G__17948,G__17949,G__17950) : target_fn.call(null,G__17947,G__17948,G__17949,G__17950));
});
var G__18771__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17951 = a;
var G__17952 = b;
var G__17953 = c;
var G__17954 = d;
var G__17955 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17951,G__17952,G__17953,G__17954,G__17955) : self__.dispatch_fn.call(null,G__17951,G__17952,G__17953,G__17954,G__17955));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17956 = a;
var G__17957 = b;
var G__17958 = c;
var G__17959 = d;
var G__17960 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17956,G__17957,G__17958,G__17959,G__17960) : target_fn.call(null,G__17956,G__17957,G__17958,G__17959,G__17960));
});
var G__18771__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17961 = a;
var G__17962 = b;
var G__17963 = c;
var G__17964 = d;
var G__17965 = e;
var G__17966 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17961,G__17962,G__17963,G__17964,G__17965,G__17966) : self__.dispatch_fn.call(null,G__17961,G__17962,G__17963,G__17964,G__17965,G__17966));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17967 = a;
var G__17968 = b;
var G__17969 = c;
var G__17970 = d;
var G__17971 = e;
var G__17972 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17967,G__17968,G__17969,G__17970,G__17971,G__17972) : target_fn.call(null,G__17967,G__17968,G__17969,G__17970,G__17971,G__17972));
});
var G__18771__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17973 = a;
var G__17974 = b;
var G__17975 = c;
var G__17976 = d;
var G__17977 = e;
var G__17978 = f;
var G__17979 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17973,G__17974,G__17975,G__17976,G__17977,G__17978,G__17979) : self__.dispatch_fn.call(null,G__17973,G__17974,G__17975,G__17976,G__17977,G__17978,G__17979));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17980 = a;
var G__17981 = b;
var G__17982 = c;
var G__17983 = d;
var G__17984 = e;
var G__17985 = f;
var G__17986 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17980,G__17981,G__17982,G__17983,G__17984,G__17985,G__17986) : target_fn.call(null,G__17980,G__17981,G__17982,G__17983,G__17984,G__17985,G__17986));
});
var G__18771__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17987 = a;
var G__17988 = b;
var G__17989 = c;
var G__17990 = d;
var G__17991 = e;
var G__17992 = f;
var G__17993 = g;
var G__17994 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17987,G__17988,G__17989,G__17990,G__17991,G__17992,G__17993,G__17994) : self__.dispatch_fn.call(null,G__17987,G__17988,G__17989,G__17990,G__17991,G__17992,G__17993,G__17994));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17995 = a;
var G__17996 = b;
var G__17997 = c;
var G__17998 = d;
var G__17999 = e;
var G__18000 = f;
var G__18001 = g;
var G__18002 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17995,G__17996,G__17997,G__17998,G__17999,G__18000,G__18001,G__18002) : target_fn.call(null,G__17995,G__17996,G__17997,G__17998,G__17999,G__18000,G__18001,G__18002));
});
var G__18771__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18003 = a;
var G__18004 = b;
var G__18005 = c;
var G__18006 = d;
var G__18007 = e;
var G__18008 = f;
var G__18009 = g;
var G__18010 = h;
var G__18011 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18003,G__18004,G__18005,G__18006,G__18007,G__18008,G__18009,G__18010,G__18011) : self__.dispatch_fn.call(null,G__18003,G__18004,G__18005,G__18006,G__18007,G__18008,G__18009,G__18010,G__18011));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18012 = a;
var G__18013 = b;
var G__18014 = c;
var G__18015 = d;
var G__18016 = e;
var G__18017 = f;
var G__18018 = g;
var G__18019 = h;
var G__18020 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18012,G__18013,G__18014,G__18015,G__18016,G__18017,G__18018,G__18019,G__18020) : target_fn.call(null,G__18012,G__18013,G__18014,G__18015,G__18016,G__18017,G__18018,G__18019,G__18020));
});
var G__18771__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18021 = a;
var G__18022 = b;
var G__18023 = c;
var G__18024 = d;
var G__18025 = e;
var G__18026 = f;
var G__18027 = g;
var G__18028 = h;
var G__18029 = i;
var G__18030 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18021,G__18022,G__18023,G__18024,G__18025,G__18026,G__18027,G__18028,G__18029,G__18030) : self__.dispatch_fn.call(null,G__18021,G__18022,G__18023,G__18024,G__18025,G__18026,G__18027,G__18028,G__18029,G__18030));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18031 = a;
var G__18032 = b;
var G__18033 = c;
var G__18034 = d;
var G__18035 = e;
var G__18036 = f;
var G__18037 = g;
var G__18038 = h;
var G__18039 = i;
var G__18040 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18031,G__18032,G__18033,G__18034,G__18035,G__18036,G__18037,G__18038,G__18039,G__18040) : target_fn.call(null,G__18031,G__18032,G__18033,G__18034,G__18035,G__18036,G__18037,G__18038,G__18039,G__18040));
});
var G__18771__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18041 = a;
var G__18042 = b;
var G__18043 = c;
var G__18044 = d;
var G__18045 = e;
var G__18046 = f;
var G__18047 = g;
var G__18048 = h;
var G__18049 = i;
var G__18050 = j;
var G__18051 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18041,G__18042,G__18043,G__18044,G__18045,G__18046,G__18047,G__18048,G__18049,G__18050,G__18051) : self__.dispatch_fn.call(null,G__18041,G__18042,G__18043,G__18044,G__18045,G__18046,G__18047,G__18048,G__18049,G__18050,G__18051));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18052 = a;
var G__18053 = b;
var G__18054 = c;
var G__18055 = d;
var G__18056 = e;
var G__18057 = f;
var G__18058 = g;
var G__18059 = h;
var G__18060 = i;
var G__18061 = j;
var G__18062 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18052,G__18053,G__18054,G__18055,G__18056,G__18057,G__18058,G__18059,G__18060,G__18061,G__18062) : target_fn.call(null,G__18052,G__18053,G__18054,G__18055,G__18056,G__18057,G__18058,G__18059,G__18060,G__18061,G__18062));
});
var G__18771__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18063 = a;
var G__18064 = b;
var G__18065 = c;
var G__18066 = d;
var G__18067 = e;
var G__18068 = f;
var G__18069 = g;
var G__18070 = h;
var G__18071 = i;
var G__18072 = j;
var G__18073 = k;
var G__18074 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18063,G__18064,G__18065,G__18066,G__18067,G__18068,G__18069,G__18070,G__18071,G__18072,G__18073,G__18074) : self__.dispatch_fn.call(null,G__18063,G__18064,G__18065,G__18066,G__18067,G__18068,G__18069,G__18070,G__18071,G__18072,G__18073,G__18074));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18075 = a;
var G__18076 = b;
var G__18077 = c;
var G__18078 = d;
var G__18079 = e;
var G__18080 = f;
var G__18081 = g;
var G__18082 = h;
var G__18083 = i;
var G__18084 = j;
var G__18085 = k;
var G__18086 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18075,G__18076,G__18077,G__18078,G__18079,G__18080,G__18081,G__18082,G__18083,G__18084,G__18085,G__18086) : target_fn.call(null,G__18075,G__18076,G__18077,G__18078,G__18079,G__18080,G__18081,G__18082,G__18083,G__18084,G__18085,G__18086));
});
var G__18771__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18087 = a;
var G__18088 = b;
var G__18089 = c;
var G__18090 = d;
var G__18091 = e;
var G__18092 = f;
var G__18093 = g;
var G__18094 = h;
var G__18095 = i;
var G__18096 = j;
var G__18097 = k;
var G__18098 = l;
var G__18099 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18087,G__18088,G__18089,G__18090,G__18091,G__18092,G__18093,G__18094,G__18095,G__18096,G__18097,G__18098,G__18099) : self__.dispatch_fn.call(null,G__18087,G__18088,G__18089,G__18090,G__18091,G__18092,G__18093,G__18094,G__18095,G__18096,G__18097,G__18098,G__18099));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18100 = a;
var G__18101 = b;
var G__18102 = c;
var G__18103 = d;
var G__18104 = e;
var G__18105 = f;
var G__18106 = g;
var G__18107 = h;
var G__18108 = i;
var G__18109 = j;
var G__18110 = k;
var G__18111 = l;
var G__18112 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18100,G__18101,G__18102,G__18103,G__18104,G__18105,G__18106,G__18107,G__18108,G__18109,G__18110,G__18111,G__18112) : target_fn.call(null,G__18100,G__18101,G__18102,G__18103,G__18104,G__18105,G__18106,G__18107,G__18108,G__18109,G__18110,G__18111,G__18112));
});
var G__18771__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18113 = a;
var G__18114 = b;
var G__18115 = c;
var G__18116 = d;
var G__18117 = e;
var G__18118 = f;
var G__18119 = g;
var G__18120 = h;
var G__18121 = i;
var G__18122 = j;
var G__18123 = k;
var G__18124 = l;
var G__18125 = m;
var G__18126 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18113,G__18114,G__18115,G__18116,G__18117,G__18118,G__18119,G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126) : self__.dispatch_fn.call(null,G__18113,G__18114,G__18115,G__18116,G__18117,G__18118,G__18119,G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18127 = a;
var G__18128 = b;
var G__18129 = c;
var G__18130 = d;
var G__18131 = e;
var G__18132 = f;
var G__18133 = g;
var G__18134 = h;
var G__18135 = i;
var G__18136 = j;
var G__18137 = k;
var G__18138 = l;
var G__18139 = m;
var G__18140 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18127,G__18128,G__18129,G__18130,G__18131,G__18132,G__18133,G__18134,G__18135,G__18136,G__18137,G__18138,G__18139,G__18140) : target_fn.call(null,G__18127,G__18128,G__18129,G__18130,G__18131,G__18132,G__18133,G__18134,G__18135,G__18136,G__18137,G__18138,G__18139,G__18140));
});
var G__18771__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18141 = a;
var G__18142 = b;
var G__18143 = c;
var G__18144 = d;
var G__18145 = e;
var G__18146 = f;
var G__18147 = g;
var G__18148 = h;
var G__18149 = i;
var G__18150 = j;
var G__18151 = k;
var G__18152 = l;
var G__18153 = m;
var G__18154 = n;
var G__18155 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18141,G__18142,G__18143,G__18144,G__18145,G__18146,G__18147,G__18148,G__18149,G__18150,G__18151,G__18152,G__18153,G__18154,G__18155) : self__.dispatch_fn.call(null,G__18141,G__18142,G__18143,G__18144,G__18145,G__18146,G__18147,G__18148,G__18149,G__18150,G__18151,G__18152,G__18153,G__18154,G__18155));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18156 = a;
var G__18157 = b;
var G__18158 = c;
var G__18159 = d;
var G__18160 = e;
var G__18161 = f;
var G__18162 = g;
var G__18163 = h;
var G__18164 = i;
var G__18165 = j;
var G__18166 = k;
var G__18167 = l;
var G__18168 = m;
var G__18169 = n;
var G__18170 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18156,G__18157,G__18158,G__18159,G__18160,G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169,G__18170) : target_fn.call(null,G__18156,G__18157,G__18158,G__18159,G__18160,G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169,G__18170));
});
var G__18771__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18171 = a;
var G__18172 = b;
var G__18173 = c;
var G__18174 = d;
var G__18175 = e;
var G__18176 = f;
var G__18177 = g;
var G__18178 = h;
var G__18179 = i;
var G__18180 = j;
var G__18181 = k;
var G__18182 = l;
var G__18183 = m;
var G__18184 = n;
var G__18185 = o;
var G__18186 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18171,G__18172,G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180,G__18181,G__18182,G__18183,G__18184,G__18185,G__18186) : self__.dispatch_fn.call(null,G__18171,G__18172,G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180,G__18181,G__18182,G__18183,G__18184,G__18185,G__18186));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18187 = a;
var G__18188 = b;
var G__18189 = c;
var G__18190 = d;
var G__18191 = e;
var G__18192 = f;
var G__18193 = g;
var G__18194 = h;
var G__18195 = i;
var G__18196 = j;
var G__18197 = k;
var G__18198 = l;
var G__18199 = m;
var G__18200 = n;
var G__18201 = o;
var G__18202 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18187,G__18188,G__18189,G__18190,G__18191,G__18192,G__18193,G__18194,G__18195,G__18196,G__18197,G__18198,G__18199,G__18200,G__18201,G__18202) : target_fn.call(null,G__18187,G__18188,G__18189,G__18190,G__18191,G__18192,G__18193,G__18194,G__18195,G__18196,G__18197,G__18198,G__18199,G__18200,G__18201,G__18202));
});
var G__18771__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18203 = a;
var G__18204 = b;
var G__18205 = c;
var G__18206 = d;
var G__18207 = e;
var G__18208 = f;
var G__18209 = g;
var G__18210 = h;
var G__18211 = i;
var G__18212 = j;
var G__18213 = k;
var G__18214 = l;
var G__18215 = m;
var G__18216 = n;
var G__18217 = o;
var G__18218 = p;
var G__18219 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18203,G__18204,G__18205,G__18206,G__18207,G__18208,G__18209,G__18210,G__18211,G__18212,G__18213,G__18214,G__18215,G__18216,G__18217,G__18218,G__18219) : self__.dispatch_fn.call(null,G__18203,G__18204,G__18205,G__18206,G__18207,G__18208,G__18209,G__18210,G__18211,G__18212,G__18213,G__18214,G__18215,G__18216,G__18217,G__18218,G__18219));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18220 = a;
var G__18221 = b;
var G__18222 = c;
var G__18223 = d;
var G__18224 = e;
var G__18225 = f;
var G__18226 = g;
var G__18227 = h;
var G__18228 = i;
var G__18229 = j;
var G__18230 = k;
var G__18231 = l;
var G__18232 = m;
var G__18233 = n;
var G__18234 = o;
var G__18235 = p;
var G__18236 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18220,G__18221,G__18222,G__18223,G__18224,G__18225,G__18226,G__18227,G__18228,G__18229,G__18230,G__18231,G__18232,G__18233,G__18234,G__18235,G__18236) : target_fn.call(null,G__18220,G__18221,G__18222,G__18223,G__18224,G__18225,G__18226,G__18227,G__18228,G__18229,G__18230,G__18231,G__18232,G__18233,G__18234,G__18235,G__18236));
});
var G__18771__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18237 = a;
var G__18238 = b;
var G__18239 = c;
var G__18240 = d;
var G__18241 = e;
var G__18242 = f;
var G__18243 = g;
var G__18244 = h;
var G__18245 = i;
var G__18246 = j;
var G__18247 = k;
var G__18248 = l;
var G__18249 = m;
var G__18250 = n;
var G__18251 = o;
var G__18252 = p;
var G__18253 = q;
var G__18254 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18237,G__18238,G__18239,G__18240,G__18241,G__18242,G__18243,G__18244,G__18245,G__18246,G__18247,G__18248,G__18249,G__18250,G__18251,G__18252,G__18253,G__18254) : self__.dispatch_fn.call(null,G__18237,G__18238,G__18239,G__18240,G__18241,G__18242,G__18243,G__18244,G__18245,G__18246,G__18247,G__18248,G__18249,G__18250,G__18251,G__18252,G__18253,G__18254));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18255 = a;
var G__18256 = b;
var G__18257 = c;
var G__18258 = d;
var G__18259 = e;
var G__18260 = f;
var G__18261 = g;
var G__18262 = h;
var G__18263 = i;
var G__18264 = j;
var G__18265 = k;
var G__18266 = l;
var G__18267 = m;
var G__18268 = n;
var G__18269 = o;
var G__18270 = p;
var G__18271 = q;
var G__18272 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18255,G__18256,G__18257,G__18258,G__18259,G__18260,G__18261,G__18262,G__18263,G__18264,G__18265,G__18266,G__18267,G__18268,G__18269,G__18270,G__18271,G__18272) : target_fn.call(null,G__18255,G__18256,G__18257,G__18258,G__18259,G__18260,G__18261,G__18262,G__18263,G__18264,G__18265,G__18266,G__18267,G__18268,G__18269,G__18270,G__18271,G__18272));
});
var G__18771__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18273 = a;
var G__18274 = b;
var G__18275 = c;
var G__18276 = d;
var G__18277 = e;
var G__18278 = f;
var G__18279 = g;
var G__18280 = h;
var G__18281 = i;
var G__18282 = j;
var G__18283 = k;
var G__18284 = l;
var G__18285 = m;
var G__18286 = n;
var G__18287 = o;
var G__18288 = p;
var G__18289 = q;
var G__18290 = r;
var G__18291 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18273,G__18274,G__18275,G__18276,G__18277,G__18278,G__18279,G__18280,G__18281,G__18282,G__18283,G__18284,G__18285,G__18286,G__18287,G__18288,G__18289,G__18290,G__18291) : self__.dispatch_fn.call(null,G__18273,G__18274,G__18275,G__18276,G__18277,G__18278,G__18279,G__18280,G__18281,G__18282,G__18283,G__18284,G__18285,G__18286,G__18287,G__18288,G__18289,G__18290,G__18291));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18292 = a;
var G__18293 = b;
var G__18294 = c;
var G__18295 = d;
var G__18296 = e;
var G__18297 = f;
var G__18298 = g;
var G__18299 = h;
var G__18300 = i;
var G__18301 = j;
var G__18302 = k;
var G__18303 = l;
var G__18304 = m;
var G__18305 = n;
var G__18306 = o;
var G__18307 = p;
var G__18308 = q;
var G__18309 = r;
var G__18310 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18292,G__18293,G__18294,G__18295,G__18296,G__18297,G__18298,G__18299,G__18300,G__18301,G__18302,G__18303,G__18304,G__18305,G__18306,G__18307,G__18308,G__18309,G__18310) : target_fn.call(null,G__18292,G__18293,G__18294,G__18295,G__18296,G__18297,G__18298,G__18299,G__18300,G__18301,G__18302,G__18303,G__18304,G__18305,G__18306,G__18307,G__18308,G__18309,G__18310));
});
var G__18771__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18311 = a;
var G__18312 = b;
var G__18313 = c;
var G__18314 = d;
var G__18315 = e;
var G__18316 = f;
var G__18317 = g;
var G__18318 = h;
var G__18319 = i;
var G__18320 = j;
var G__18321 = k;
var G__18322 = l;
var G__18323 = m;
var G__18324 = n;
var G__18325 = o;
var G__18326 = p;
var G__18327 = q;
var G__18328 = r;
var G__18329 = s;
var G__18330 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18311,G__18312,G__18313,G__18314,G__18315,G__18316,G__18317,G__18318,G__18319,G__18320,G__18321,G__18322,G__18323,G__18324,G__18325,G__18326,G__18327,G__18328,G__18329,G__18330) : self__.dispatch_fn.call(null,G__18311,G__18312,G__18313,G__18314,G__18315,G__18316,G__18317,G__18318,G__18319,G__18320,G__18321,G__18322,G__18323,G__18324,G__18325,G__18326,G__18327,G__18328,G__18329,G__18330));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18331 = a;
var G__18332 = b;
var G__18333 = c;
var G__18334 = d;
var G__18335 = e;
var G__18336 = f;
var G__18337 = g;
var G__18338 = h;
var G__18339 = i;
var G__18340 = j;
var G__18341 = k;
var G__18342 = l;
var G__18343 = m;
var G__18344 = n;
var G__18345 = o;
var G__18346 = p;
var G__18347 = q;
var G__18348 = r;
var G__18349 = s;
var G__18350 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18331,G__18332,G__18333,G__18334,G__18335,G__18336,G__18337,G__18338,G__18339,G__18340,G__18341,G__18342,G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350) : target_fn.call(null,G__18331,G__18332,G__18333,G__18334,G__18335,G__18336,G__18337,G__18338,G__18339,G__18340,G__18341,G__18342,G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350));
});
var G__18771__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__18771 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18771__1.call(this,self__);
case 2:
return G__18771__2.call(this,self__,a);
case 3:
return G__18771__3.call(this,self__,a,b);
case 4:
return G__18771__4.call(this,self__,a,b,c);
case 5:
return G__18771__5.call(this,self__,a,b,c,d);
case 6:
return G__18771__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18771__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18771__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18771__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18771__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18771__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18771__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18771__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18771__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18771__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18771__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18771__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18771__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18771__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18771__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18771__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18771__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18771.cljs$core$IFn$_invoke$arity$1 = G__18771__1;
G__18771.cljs$core$IFn$_invoke$arity$2 = G__18771__2;
G__18771.cljs$core$IFn$_invoke$arity$3 = G__18771__3;
G__18771.cljs$core$IFn$_invoke$arity$4 = G__18771__4;
G__18771.cljs$core$IFn$_invoke$arity$5 = G__18771__5;
G__18771.cljs$core$IFn$_invoke$arity$6 = G__18771__6;
G__18771.cljs$core$IFn$_invoke$arity$7 = G__18771__7;
G__18771.cljs$core$IFn$_invoke$arity$8 = G__18771__8;
G__18771.cljs$core$IFn$_invoke$arity$9 = G__18771__9;
G__18771.cljs$core$IFn$_invoke$arity$10 = G__18771__10;
G__18771.cljs$core$IFn$_invoke$arity$11 = G__18771__11;
G__18771.cljs$core$IFn$_invoke$arity$12 = G__18771__12;
G__18771.cljs$core$IFn$_invoke$arity$13 = G__18771__13;
G__18771.cljs$core$IFn$_invoke$arity$14 = G__18771__14;
G__18771.cljs$core$IFn$_invoke$arity$15 = G__18771__15;
G__18771.cljs$core$IFn$_invoke$arity$16 = G__18771__16;
G__18771.cljs$core$IFn$_invoke$arity$17 = G__18771__17;
G__18771.cljs$core$IFn$_invoke$arity$18 = G__18771__18;
G__18771.cljs$core$IFn$_invoke$arity$19 = G__18771__19;
G__18771.cljs$core$IFn$_invoke$arity$20 = G__18771__20;
G__18771.cljs$core$IFn$_invoke$arity$21 = G__18771__21;
G__18771.cljs$core$IFn$_invoke$arity$22 = G__18771__22;
return G__18771;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args17923){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17923)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18351 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__18351) : self__.dispatch_fn.call(null,G__18351));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18352 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__18352) : target_fn.call(null,G__18352));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18353 = a;
var G__18354 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__18353,G__18354) : self__.dispatch_fn.call(null,G__18353,G__18354));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18355 = a;
var G__18356 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__18355,G__18356) : target_fn.call(null,G__18355,G__18356));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18357 = a;
var G__18358 = b;
var G__18359 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__18357,G__18358,G__18359) : self__.dispatch_fn.call(null,G__18357,G__18358,G__18359));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18360 = a;
var G__18361 = b;
var G__18362 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__18360,G__18361,G__18362) : target_fn.call(null,G__18360,G__18361,G__18362));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18363 = a;
var G__18364 = b;
var G__18365 = c;
var G__18366 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__18363,G__18364,G__18365,G__18366) : self__.dispatch_fn.call(null,G__18363,G__18364,G__18365,G__18366));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18367 = a;
var G__18368 = b;
var G__18369 = c;
var G__18370 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__18367,G__18368,G__18369,G__18370) : target_fn.call(null,G__18367,G__18368,G__18369,G__18370));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18371 = a;
var G__18372 = b;
var G__18373 = c;
var G__18374 = d;
var G__18375 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__18371,G__18372,G__18373,G__18374,G__18375) : self__.dispatch_fn.call(null,G__18371,G__18372,G__18373,G__18374,G__18375));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18376 = a;
var G__18377 = b;
var G__18378 = c;
var G__18379 = d;
var G__18380 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__18376,G__18377,G__18378,G__18379,G__18380) : target_fn.call(null,G__18376,G__18377,G__18378,G__18379,G__18380));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18381 = a;
var G__18382 = b;
var G__18383 = c;
var G__18384 = d;
var G__18385 = e;
var G__18386 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__18381,G__18382,G__18383,G__18384,G__18385,G__18386) : self__.dispatch_fn.call(null,G__18381,G__18382,G__18383,G__18384,G__18385,G__18386));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18387 = a;
var G__18388 = b;
var G__18389 = c;
var G__18390 = d;
var G__18391 = e;
var G__18392 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__18387,G__18388,G__18389,G__18390,G__18391,G__18392) : target_fn.call(null,G__18387,G__18388,G__18389,G__18390,G__18391,G__18392));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18393 = a;
var G__18394 = b;
var G__18395 = c;
var G__18396 = d;
var G__18397 = e;
var G__18398 = f;
var G__18399 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__18393,G__18394,G__18395,G__18396,G__18397,G__18398,G__18399) : self__.dispatch_fn.call(null,G__18393,G__18394,G__18395,G__18396,G__18397,G__18398,G__18399));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18400 = a;
var G__18401 = b;
var G__18402 = c;
var G__18403 = d;
var G__18404 = e;
var G__18405 = f;
var G__18406 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18400,G__18401,G__18402,G__18403,G__18404,G__18405,G__18406) : target_fn.call(null,G__18400,G__18401,G__18402,G__18403,G__18404,G__18405,G__18406));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18407 = a;
var G__18408 = b;
var G__18409 = c;
var G__18410 = d;
var G__18411 = e;
var G__18412 = f;
var G__18413 = g;
var G__18414 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18407,G__18408,G__18409,G__18410,G__18411,G__18412,G__18413,G__18414) : self__.dispatch_fn.call(null,G__18407,G__18408,G__18409,G__18410,G__18411,G__18412,G__18413,G__18414));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18415 = a;
var G__18416 = b;
var G__18417 = c;
var G__18418 = d;
var G__18419 = e;
var G__18420 = f;
var G__18421 = g;
var G__18422 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422) : target_fn.call(null,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18423 = a;
var G__18424 = b;
var G__18425 = c;
var G__18426 = d;
var G__18427 = e;
var G__18428 = f;
var G__18429 = g;
var G__18430 = h;
var G__18431 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430,G__18431) : self__.dispatch_fn.call(null,G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430,G__18431));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18432 = a;
var G__18433 = b;
var G__18434 = c;
var G__18435 = d;
var G__18436 = e;
var G__18437 = f;
var G__18438 = g;
var G__18439 = h;
var G__18440 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440) : target_fn.call(null,G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18441 = a;
var G__18442 = b;
var G__18443 = c;
var G__18444 = d;
var G__18445 = e;
var G__18446 = f;
var G__18447 = g;
var G__18448 = h;
var G__18449 = i;
var G__18450 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449,G__18450) : self__.dispatch_fn.call(null,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449,G__18450));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18451 = a;
var G__18452 = b;
var G__18453 = c;
var G__18454 = d;
var G__18455 = e;
var G__18456 = f;
var G__18457 = g;
var G__18458 = h;
var G__18459 = i;
var G__18460 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460) : target_fn.call(null,G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18461 = a;
var G__18462 = b;
var G__18463 = c;
var G__18464 = d;
var G__18465 = e;
var G__18466 = f;
var G__18467 = g;
var G__18468 = h;
var G__18469 = i;
var G__18470 = j;
var G__18471 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18461,G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468,G__18469,G__18470,G__18471) : self__.dispatch_fn.call(null,G__18461,G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468,G__18469,G__18470,G__18471));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18472 = a;
var G__18473 = b;
var G__18474 = c;
var G__18475 = d;
var G__18476 = e;
var G__18477 = f;
var G__18478 = g;
var G__18479 = h;
var G__18480 = i;
var G__18481 = j;
var G__18482 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482) : target_fn.call(null,G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18483 = a;
var G__18484 = b;
var G__18485 = c;
var G__18486 = d;
var G__18487 = e;
var G__18488 = f;
var G__18489 = g;
var G__18490 = h;
var G__18491 = i;
var G__18492 = j;
var G__18493 = k;
var G__18494 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489,G__18490,G__18491,G__18492,G__18493,G__18494) : self__.dispatch_fn.call(null,G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489,G__18490,G__18491,G__18492,G__18493,G__18494));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18495 = a;
var G__18496 = b;
var G__18497 = c;
var G__18498 = d;
var G__18499 = e;
var G__18500 = f;
var G__18501 = g;
var G__18502 = h;
var G__18503 = i;
var G__18504 = j;
var G__18505 = k;
var G__18506 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501,G__18502,G__18503,G__18504,G__18505,G__18506) : target_fn.call(null,G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501,G__18502,G__18503,G__18504,G__18505,G__18506));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18507 = a;
var G__18508 = b;
var G__18509 = c;
var G__18510 = d;
var G__18511 = e;
var G__18512 = f;
var G__18513 = g;
var G__18514 = h;
var G__18515 = i;
var G__18516 = j;
var G__18517 = k;
var G__18518 = l;
var G__18519 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519) : self__.dispatch_fn.call(null,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516,G__18517,G__18518,G__18519));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18520 = a;
var G__18521 = b;
var G__18522 = c;
var G__18523 = d;
var G__18524 = e;
var G__18525 = f;
var G__18526 = g;
var G__18527 = h;
var G__18528 = i;
var G__18529 = j;
var G__18530 = k;
var G__18531 = l;
var G__18532 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531,G__18532) : target_fn.call(null,G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531,G__18532));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18533 = a;
var G__18534 = b;
var G__18535 = c;
var G__18536 = d;
var G__18537 = e;
var G__18538 = f;
var G__18539 = g;
var G__18540 = h;
var G__18541 = i;
var G__18542 = j;
var G__18543 = k;
var G__18544 = l;
var G__18545 = m;
var G__18546 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18533,G__18534,G__18535,G__18536,G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545,G__18546) : self__.dispatch_fn.call(null,G__18533,G__18534,G__18535,G__18536,G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545,G__18546));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18547 = a;
var G__18548 = b;
var G__18549 = c;
var G__18550 = d;
var G__18551 = e;
var G__18552 = f;
var G__18553 = g;
var G__18554 = h;
var G__18555 = i;
var G__18556 = j;
var G__18557 = k;
var G__18558 = l;
var G__18559 = m;
var G__18560 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558,G__18559,G__18560) : target_fn.call(null,G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558,G__18559,G__18560));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18561 = a;
var G__18562 = b;
var G__18563 = c;
var G__18564 = d;
var G__18565 = e;
var G__18566 = f;
var G__18567 = g;
var G__18568 = h;
var G__18569 = i;
var G__18570 = j;
var G__18571 = k;
var G__18572 = l;
var G__18573 = m;
var G__18574 = n;
var G__18575 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575) : self__.dispatch_fn.call(null,G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18576 = a;
var G__18577 = b;
var G__18578 = c;
var G__18579 = d;
var G__18580 = e;
var G__18581 = f;
var G__18582 = g;
var G__18583 = h;
var G__18584 = i;
var G__18585 = j;
var G__18586 = k;
var G__18587 = l;
var G__18588 = m;
var G__18589 = n;
var G__18590 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585,G__18586,G__18587,G__18588,G__18589,G__18590) : target_fn.call(null,G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585,G__18586,G__18587,G__18588,G__18589,G__18590));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18591 = a;
var G__18592 = b;
var G__18593 = c;
var G__18594 = d;
var G__18595 = e;
var G__18596 = f;
var G__18597 = g;
var G__18598 = h;
var G__18599 = i;
var G__18600 = j;
var G__18601 = k;
var G__18602 = l;
var G__18603 = m;
var G__18604 = n;
var G__18605 = o;
var G__18606 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18591,G__18592,G__18593,G__18594,G__18595,G__18596,G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606) : self__.dispatch_fn.call(null,G__18591,G__18592,G__18593,G__18594,G__18595,G__18596,G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18607 = a;
var G__18608 = b;
var G__18609 = c;
var G__18610 = d;
var G__18611 = e;
var G__18612 = f;
var G__18613 = g;
var G__18614 = h;
var G__18615 = i;
var G__18616 = j;
var G__18617 = k;
var G__18618 = l;
var G__18619 = m;
var G__18620 = n;
var G__18621 = o;
var G__18622 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18607,G__18608,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621,G__18622) : target_fn.call(null,G__18607,G__18608,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621,G__18622));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18623 = a;
var G__18624 = b;
var G__18625 = c;
var G__18626 = d;
var G__18627 = e;
var G__18628 = f;
var G__18629 = g;
var G__18630 = h;
var G__18631 = i;
var G__18632 = j;
var G__18633 = k;
var G__18634 = l;
var G__18635 = m;
var G__18636 = n;
var G__18637 = o;
var G__18638 = p;
var G__18639 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639) : self__.dispatch_fn.call(null,G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18640 = a;
var G__18641 = b;
var G__18642 = c;
var G__18643 = d;
var G__18644 = e;
var G__18645 = f;
var G__18646 = g;
var G__18647 = h;
var G__18648 = i;
var G__18649 = j;
var G__18650 = k;
var G__18651 = l;
var G__18652 = m;
var G__18653 = n;
var G__18654 = o;
var G__18655 = p;
var G__18656 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18640,G__18641,G__18642,G__18643,G__18644,G__18645,G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656) : target_fn.call(null,G__18640,G__18641,G__18642,G__18643,G__18644,G__18645,G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18657 = a;
var G__18658 = b;
var G__18659 = c;
var G__18660 = d;
var G__18661 = e;
var G__18662 = f;
var G__18663 = g;
var G__18664 = h;
var G__18665 = i;
var G__18666 = j;
var G__18667 = k;
var G__18668 = l;
var G__18669 = m;
var G__18670 = n;
var G__18671 = o;
var G__18672 = p;
var G__18673 = q;
var G__18674 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18657,G__18658,G__18659,G__18660,G__18661,G__18662,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674) : self__.dispatch_fn.call(null,G__18657,G__18658,G__18659,G__18660,G__18661,G__18662,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18675 = a;
var G__18676 = b;
var G__18677 = c;
var G__18678 = d;
var G__18679 = e;
var G__18680 = f;
var G__18681 = g;
var G__18682 = h;
var G__18683 = i;
var G__18684 = j;
var G__18685 = k;
var G__18686 = l;
var G__18687 = m;
var G__18688 = n;
var G__18689 = o;
var G__18690 = p;
var G__18691 = q;
var G__18692 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18675,G__18676,G__18677,G__18678,G__18679,G__18680,G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692) : target_fn.call(null,G__18675,G__18676,G__18677,G__18678,G__18679,G__18680,G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18693 = a;
var G__18694 = b;
var G__18695 = c;
var G__18696 = d;
var G__18697 = e;
var G__18698 = f;
var G__18699 = g;
var G__18700 = h;
var G__18701 = i;
var G__18702 = j;
var G__18703 = k;
var G__18704 = l;
var G__18705 = m;
var G__18706 = n;
var G__18707 = o;
var G__18708 = p;
var G__18709 = q;
var G__18710 = r;
var G__18711 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711) : self__.dispatch_fn.call(null,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18712 = a;
var G__18713 = b;
var G__18714 = c;
var G__18715 = d;
var G__18716 = e;
var G__18717 = f;
var G__18718 = g;
var G__18719 = h;
var G__18720 = i;
var G__18721 = j;
var G__18722 = k;
var G__18723 = l;
var G__18724 = m;
var G__18725 = n;
var G__18726 = o;
var G__18727 = p;
var G__18728 = q;
var G__18729 = r;
var G__18730 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720,G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730) : target_fn.call(null,G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720,G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18731 = a;
var G__18732 = b;
var G__18733 = c;
var G__18734 = d;
var G__18735 = e;
var G__18736 = f;
var G__18737 = g;
var G__18738 = h;
var G__18739 = i;
var G__18740 = j;
var G__18741 = k;
var G__18742 = l;
var G__18743 = m;
var G__18744 = n;
var G__18745 = o;
var G__18746 = p;
var G__18747 = q;
var G__18748 = r;
var G__18749 = s;
var G__18750 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18731,G__18732,G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740,G__18741,G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748,G__18749,G__18750) : self__.dispatch_fn.call(null,G__18731,G__18732,G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740,G__18741,G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748,G__18749,G__18750));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18751 = a;
var G__18752 = b;
var G__18753 = c;
var G__18754 = d;
var G__18755 = e;
var G__18756 = f;
var G__18757 = g;
var G__18758 = h;
var G__18759 = i;
var G__18760 = j;
var G__18761 = k;
var G__18762 = l;
var G__18763 = m;
var G__18764 = n;
var G__18765 = o;
var G__18766 = p;
var G__18767 = q;
var G__18768 = r;
var G__18769 = s;
var G__18770 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18751,G__18752,G__18753,G__18754,G__18755,G__18756,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770) : target_fn.call(null,G__18751,G__18752,G__18753,G__18754,G__18755,G__18756,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__18772 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__18772);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__18777 = msg;
return Error(G__18777);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__18782 = x;
var G__18783 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18782,G__18783) : pred.call(null,G__18782,G__18783));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__18784 = y;
var G__18785 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18784,G__18785) : pred.call(null,G__18784,G__18785));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
