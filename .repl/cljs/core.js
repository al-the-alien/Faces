// Compiled by ClojureScript 0.0-2816 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__29728__delegate = function (args){
return console.log.apply(console,(function (){var G__29727 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__29727) : cljs.core.into_array.call(null,G__29727));
})());
};
var G__29728 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29729__i = 0, G__29729__a = new Array(arguments.length -  0);
while (G__29729__i < G__29729__a.length) {G__29729__a[G__29729__i] = arguments[G__29729__i + 0]; ++G__29729__i;}
  args = new cljs.core.IndexedSeq(G__29729__a,0);
} 
return G__29728__delegate.call(this,args);};
G__29728.cljs$lang$maxFixedArity = 0;
G__29728.cljs$lang$applyTo = (function (arglist__29730){
var args = cljs.core.seq(arglist__29730);
return G__29728__delegate(args);
});
G__29728.cljs$core$IFn$_invoke$arity$variadic = G__29728__delegate;
return G__29728;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__29732 = x;
return goog.isString(G__29732);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__29734 = x__$1;
return goog.typeOf(G__29734);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__10929__auto__ = ty;
if(cljs.core.truth_(and__10929__auto__)){
return ty.cljs$lang$type;
} else {
return and__10929__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__29736 = obj;
return goog.typeOf(G__29736);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4404__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4404__auto__)){
var s = temp__4404__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__29738 = Symbol;
return goog.typeOf(G__29738);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__11828__auto___29740 = len;
var i_29741 = (0);
while(true){
if((i_29741 < n__11828__auto___29740)){
(new_arr[i_29741] = (arr[i_29741]));

var G__29742 = (i_29741 + (1));
i_29741 = G__29742;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__29743 = (i + (1));
i = G__29743;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__29752__delegate = function (array,i,idxs){
var G__29749 = aget;
var G__29750 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__29751 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__29749,G__29750,G__29751) : cljs.core.apply.call(null,G__29749,G__29750,G__29751));
};
var G__29752 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__29753__i = 0, G__29753__a = new Array(arguments.length -  2);
while (G__29753__i < G__29753__a.length) {G__29753__a[G__29753__i] = arguments[G__29753__i + 2]; ++G__29753__i;}
  idxs = new cljs.core.IndexedSeq(G__29753__a,0);
} 
return G__29752__delegate.call(this,array,i,idxs);};
G__29752.cljs$lang$maxFixedArity = 2;
G__29752.cljs$lang$applyTo = (function (arglist__29754){
var array = cljs.core.first(arglist__29754);
arglist__29754 = cljs.core.next(arglist__29754);
var i = cljs.core.first(arglist__29754);
var idxs = cljs.core.rest(arglist__29754);
return G__29752__delegate(array,i,idxs);
});
G__29752.cljs$core$IFn$_invoke$arity$variadic = G__29752__delegate;
return G__29752;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__29755 = null;
if (arguments.length > 2) {
var G__29756__i = 0, G__29756__a = new Array(arguments.length -  2);
while (G__29756__i < G__29756__a.length) {G__29756__a[G__29756__i] = arguments[G__29756__i + 2]; ++G__29756__i;}
G__29755 = new cljs.core.IndexedSeq(G__29756__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__29755);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__29765__delegate = function (array,idx,idx2,idxv){
var G__29761 = aset;
var G__29762 = (array[idx]);
var G__29763 = idx2;
var G__29764 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__29761,G__29762,G__29763,G__29764) : cljs.core.apply.call(null,G__29761,G__29762,G__29763,G__29764));
};
var G__29765 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__29766__i = 0, G__29766__a = new Array(arguments.length -  3);
while (G__29766__i < G__29766__a.length) {G__29766__a[G__29766__i] = arguments[G__29766__i + 3]; ++G__29766__i;}
  idxv = new cljs.core.IndexedSeq(G__29766__a,0);
} 
return G__29765__delegate.call(this,array,idx,idx2,idxv);};
G__29765.cljs$lang$maxFixedArity = 3;
G__29765.cljs$lang$applyTo = (function (arglist__29767){
var array = cljs.core.first(arglist__29767);
arglist__29767 = cljs.core.next(arglist__29767);
var idx = cljs.core.first(arglist__29767);
arglist__29767 = cljs.core.next(arglist__29767);
var idx2 = cljs.core.first(arglist__29767);
var idxv = cljs.core.rest(arglist__29767);
return G__29765__delegate(array,idx,idx2,idxv);
});
G__29765.cljs$core$IFn$_invoke$arity$variadic = G__29765__delegate;
return G__29765;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__29768 = null;
if (arguments.length > 3) {
var G__29769__i = 0, G__29769__a = new Array(arguments.length -  3);
while (G__29769__i < G__29769__a.length) {G__29769__a[G__29769__i] = arguments[G__29769__i + 3]; ++G__29769__i;}
G__29768 = new cljs.core.IndexedSeq(G__29769__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__29768);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__29775 = (function (a,x){
a.push(x);

return a;
});
var G__29776 = [];
var G__29777 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__29775,G__29776,G__29777) : cljs.core.reduce.call(null,G__29775,G__29776,G__29777));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__29778__i = 0, G__29778__a = new Array(arguments.length -  2);
while (G__29778__i < G__29778__a.length) {G__29778__a[G__29778__i] = arguments[G__29778__i + 2]; ++G__29778__i;}
  args = new cljs.core.IndexedSeq(G__29778__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__29779){
var obj = cljs.core.first(arglist__29779);
arglist__29779 = cljs.core.next(arglist__29779);
var s = cljs.core.first(arglist__29779);
var args = cljs.core.rest(arglist__29779);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj29781 = {};
return obj29781;
})();


cljs.core.IFn = (function (){var obj29783 = {};
return obj29783;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29829 = x__11585__auto__;
return goog.typeOf(G__29829);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29831 = x__11585__auto__;
return goog.typeOf(G__29831);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29833 = x__11585__auto__;
return goog.typeOf(G__29833);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29835 = x__11585__auto__;
return goog.typeOf(G__29835);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29837 = x__11585__auto__;
return goog.typeOf(G__29837);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29839 = x__11585__auto__;
return goog.typeOf(G__29839);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29841 = x__11585__auto__;
return goog.typeOf(G__29841);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29843 = x__11585__auto__;
return goog.typeOf(G__29843);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29845 = x__11585__auto__;
return goog.typeOf(G__29845);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29847 = x__11585__auto__;
return goog.typeOf(G__29847);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29849 = x__11585__auto__;
return goog.typeOf(G__29849);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29851 = x__11585__auto__;
return goog.typeOf(G__29851);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29853 = x__11585__auto__;
return goog.typeOf(G__29853);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29855 = x__11585__auto__;
return goog.typeOf(G__29855);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29857 = x__11585__auto__;
return goog.typeOf(G__29857);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29859 = x__11585__auto__;
return goog.typeOf(G__29859);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29861 = x__11585__auto__;
return goog.typeOf(G__29861);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29863 = x__11585__auto__;
return goog.typeOf(G__29863);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29865 = x__11585__auto__;
return goog.typeOf(G__29865);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29867 = x__11585__auto__;
return goog.typeOf(G__29867);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29869 = x__11585__auto__;
return goog.typeOf(G__29869);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._invoke[(function (){var G__29871 = x__11585__auto__;
return goog.typeOf(G__29871);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._invoke["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj29873 = {};
return obj29873;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__10929__auto__ = value;
if(and__10929__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__10929__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__11585__auto__ = (((value == null))?null:value);
return (function (){var or__10941__auto__ = (cljs.core._clone[(function (){var G__29877 = x__11585__auto__;
return goog.typeOf(G__29877);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._clone["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj29879 = {};
return obj29879;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._count[(function (){var G__29883 = x__11585__auto__;
return goog.typeOf(G__29883);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._count["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj29885 = {};
return obj29885;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._empty[(function (){var G__29889 = x__11585__auto__;
return goog.typeOf(G__29889);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._empty["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj29891 = {};
return obj29891;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._conj[(function (){var G__29895 = x__11585__auto__;
return goog.typeOf(G__29895);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._conj["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj29897 = {};
return obj29897;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._nth[(function (){var G__29903 = x__11585__auto__;
return goog.typeOf(G__29903);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._nth["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._nth[(function (){var G__29905 = x__11585__auto__;
return goog.typeOf(G__29905);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._nth["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj29907 = {};
return obj29907;
})();


cljs.core.ISeq = (function (){var obj29909 = {};
return obj29909;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._first[(function (){var G__29913 = x__11585__auto__;
return goog.typeOf(G__29913);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._first["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._rest[(function (){var G__29917 = x__11585__auto__;
return goog.typeOf(G__29917);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._rest["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj29919 = {};
return obj29919;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._next[(function (){var G__29923 = x__11585__auto__;
return goog.typeOf(G__29923);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._next["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj29925 = {};
return obj29925;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._lookup[(function (){var G__29931 = x__11585__auto__;
return goog.typeOf(G__29931);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._lookup["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._lookup[(function (){var G__29933 = x__11585__auto__;
return goog.typeOf(G__29933);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._lookup["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj29935 = {};
return obj29935;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__29939 = x__11585__auto__;
return goog.typeOf(G__29939);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._assoc[(function (){var G__29943 = x__11585__auto__;
return goog.typeOf(G__29943);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._assoc["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj29945 = {};
return obj29945;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._dissoc[(function (){var G__29949 = x__11585__auto__;
return goog.typeOf(G__29949);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._dissoc["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj29951 = {};
return obj29951;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._key[(function (){var G__29955 = x__11585__auto__;
return goog.typeOf(G__29955);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._key["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._val[(function (){var G__29959 = x__11585__auto__;
return goog.typeOf(G__29959);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._val["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj29961 = {};
return obj29961;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._disjoin[(function (){var G__29965 = x__11585__auto__;
return goog.typeOf(G__29965);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._disjoin["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj29967 = {};
return obj29967;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._peek[(function (){var G__29971 = x__11585__auto__;
return goog.typeOf(G__29971);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._peek["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._pop[(function (){var G__29975 = x__11585__auto__;
return goog.typeOf(G__29975);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._pop["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj29977 = {};
return obj29977;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._assoc_n[(function (){var G__29981 = x__11585__auto__;
return goog.typeOf(G__29981);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj29983 = {};
return obj29983;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._deref[(function (){var G__29987 = x__11585__auto__;
return goog.typeOf(G__29987);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._deref["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj29989 = {};
return obj29989;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._deref_with_timeout[(function (){var G__29993 = x__11585__auto__;
return goog.typeOf(G__29993);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj29995 = {};
return obj29995;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._meta[(function (){var G__29999 = x__11585__auto__;
return goog.typeOf(G__29999);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._meta["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj30001 = {};
return obj30001;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._with_meta[(function (){var G__30005 = x__11585__auto__;
return goog.typeOf(G__30005);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._with_meta["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj30007 = {};
return obj30007;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._reduce[(function (){var G__30013 = x__11585__auto__;
return goog.typeOf(G__30013);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._reduce["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._reduce[(function (){var G__30015 = x__11585__auto__;
return goog.typeOf(G__30015);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._reduce["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj30017 = {};
return obj30017;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._kv_reduce[(function (){var G__30021 = x__11585__auto__;
return goog.typeOf(G__30021);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj30023 = {};
return obj30023;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._equiv[(function (){var G__30027 = x__11585__auto__;
return goog.typeOf(G__30027);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._equiv["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj30029 = {};
return obj30029;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._hash[(function (){var G__30033 = x__11585__auto__;
return goog.typeOf(G__30033);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._hash["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj30035 = {};
return obj30035;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._seq[(function (){var G__30039 = x__11585__auto__;
return goog.typeOf(G__30039);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._seq["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj30041 = {};
return obj30041;
})();


cljs.core.IList = (function (){var obj30043 = {};
return obj30043;
})();


cljs.core.IRecord = (function (){var obj30045 = {};
return obj30045;
})();


cljs.core.IReversible = (function (){var obj30047 = {};
return obj30047;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._rseq[(function (){var G__30051 = x__11585__auto__;
return goog.typeOf(G__30051);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._rseq["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj30053 = {};
return obj30053;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._sorted_seq[(function (){var G__30057 = x__11585__auto__;
return goog.typeOf(G__30057);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._sorted_seq_from[(function (){var G__30061 = x__11585__auto__;
return goog.typeOf(G__30061);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._entry_key[(function (){var G__30065 = x__11585__auto__;
return goog.typeOf(G__30065);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._entry_key["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._comparator[(function (){var G__30069 = x__11585__auto__;
return goog.typeOf(G__30069);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._comparator["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj30071 = {};
return obj30071;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__10929__auto__ = writer;
if(and__10929__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__10929__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__11585__auto__ = (((writer == null))?null:writer);
return (function (){var or__10941__auto__ = (cljs.core._write[(function (){var G__30075 = x__11585__auto__;
return goog.typeOf(G__30075);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._write["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__10929__auto__ = writer;
if(and__10929__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__10929__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__11585__auto__ = (((writer == null))?null:writer);
return (function (){var or__10941__auto__ = (cljs.core._flush[(function (){var G__30079 = x__11585__auto__;
return goog.typeOf(G__30079);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._flush["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj30081 = {};
return obj30081;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._pr_writer[(function (){var G__30085 = x__11585__auto__;
return goog.typeOf(G__30085);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj30087 = {};
return obj30087;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__10929__auto__ = d;
if(and__10929__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__10929__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__11585__auto__ = (((d == null))?null:d);
return (function (){var or__10941__auto__ = (cljs.core._realized_QMARK_[(function (){var G__30091 = x__11585__auto__;
return goog.typeOf(G__30091);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj30093 = {};
return obj30093;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._notify_watches[(function (){var G__30097 = x__11585__auto__;
return goog.typeOf(G__30097);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._add_watch[(function (){var G__30101 = x__11585__auto__;
return goog.typeOf(G__30101);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._add_watch["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__10929__auto__ = this$;
if(and__10929__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__10929__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__11585__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10941__auto__ = (cljs.core._remove_watch[(function (){var G__30105 = x__11585__auto__;
return goog.typeOf(G__30105);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj30107 = {};
return obj30107;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._as_transient[(function (){var G__30111 = x__11585__auto__;
return goog.typeOf(G__30111);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._as_transient["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj30113 = {};
return obj30113;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._conj_BANG_[(function (){var G__30117 = x__11585__auto__;
return goog.typeOf(G__30117);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._persistent_BANG_[(function (){var G__30121 = x__11585__auto__;
return goog.typeOf(G__30121);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj30123 = {};
return obj30123;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._assoc_BANG_[(function (){var G__30127 = x__11585__auto__;
return goog.typeOf(G__30127);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj30129 = {};
return obj30129;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__30133 = x__11585__auto__;
return goog.typeOf(G__30133);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj30135 = {};
return obj30135;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__30139 = x__11585__auto__;
return goog.typeOf(G__30139);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._pop_BANG_[(function (){var G__30143 = x__11585__auto__;
return goog.typeOf(G__30143);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj30145 = {};
return obj30145;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__10929__auto__ = tcoll;
if(and__10929__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__11585__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10941__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__30149 = x__11585__auto__;
return goog.typeOf(G__30149);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj30151 = {};
return obj30151;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._compare[(function (){var G__30155 = x__11585__auto__;
return goog.typeOf(G__30155);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._compare["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj30157 = {};
return obj30157;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._drop_first[(function (){var G__30161 = x__11585__auto__;
return goog.typeOf(G__30161);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._drop_first["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj30163 = {};
return obj30163;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._chunked_first[(function (){var G__30167 = x__11585__auto__;
return goog.typeOf(G__30167);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._chunked_rest[(function (){var G__30171 = x__11585__auto__;
return goog.typeOf(G__30171);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj30173 = {};
return obj30173;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._chunked_next[(function (){var G__30177 = x__11585__auto__;
return goog.typeOf(G__30177);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj30179 = {};
return obj30179;
})();

cljs.core._name = (function _name(x){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._name[(function (){var G__30183 = x__11585__auto__;
return goog.typeOf(G__30183);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._name["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._namespace[(function (){var G__30187 = x__11585__auto__;
return goog.typeOf(G__30187);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._namespace["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj30189 = {};
return obj30189;
})();


cljs.core.IReset = (function (){var obj30191 = {};
return obj30191;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._reset_BANG_[(function (){var G__30195 = x__11585__auto__;
return goog.typeOf(G__30195);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj30197 = {};
return obj30197;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._swap_BANG_[(function (){var G__30207 = x__11585__auto__;
return goog.typeOf(G__30207);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._swap_BANG_[(function (){var G__30209 = x__11585__auto__;
return goog.typeOf(G__30209);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._swap_BANG_[(function (){var G__30211 = x__11585__auto__;
return goog.typeOf(G__30211);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._swap_BANG_[(function (){var G__30213 = x__11585__auto__;
return goog.typeOf(G__30213);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj30215 = {};
return obj30215;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__10929__auto__ = o;
if(and__10929__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__10929__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__11585__auto__ = (((o == null))?null:o);
return (function (){var or__10941__auto__ = (cljs.core._vreset_BANG_[(function (){var G__30219 = x__11585__auto__;
return goog.typeOf(G__30219);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj30221 = {};
return obj30221;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__10929__auto__ = coll;
if(and__10929__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__10929__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__11585__auto__ = (((coll == null))?null:coll);
return (function (){var or__10941__auto__ = (cljs.core._iterator[(function (){var G__30225 = x__11585__auto__;
return goog.typeOf(G__30225);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._iterator["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__30228 = (4294967295);
var G__30229 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__30228,G__30229) : Math.imul.call(null,G__30228,G__30229));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__30232 = a;
var G__30233 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__30232,G__30233) : Math.imul.call(null,G__30232,G__30233));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__30234 = (i + (2));
var G__30235 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__30234;
h1 = G__30235;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj30237 = {};
return obj30237;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__30238 = (i + (1));
var G__30239 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__30238;
hash = G__30239;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj30243 = {};
return obj30243;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__30246 = o;
if(G__30246){
var bit__11615__auto__ = (G__30246.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__11615__auto__) || (G__30246.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__30247 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__30247) : Math.floor.call(null,G__30247));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__10929__auto__ = cljs.core.not(a.ns);
if(and__10929__auto__){
return b.ns;
} else {
return and__10929__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__30254 = a.ns;
var G__30255 = b.ns;
return goog.array.defaultCompare(G__30254,G__30255);
})();
if(((0) === nsc)){
var G__30256 = a.name;
var G__30257 = b.name;
return goog.array.defaultCompare(G__30256,G__30257);
} else {
return nsc;
}
}
} else {
var G__30258 = a.name;
var G__30259 = b.name;
return goog.array.defaultCompare(G__30258,G__30259);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__11362__auto__ = self__._hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__30261 = null;
var G__30261__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__30261__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__30261 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__30261__2.call(this,self__,coll);
case 3:
return G__30261__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30261.cljs$core$IFn$_invoke$arity$2 = G__30261__2;
G__30261.cljs$core$IFn$_invoke$arity$3 = G__30261__3;
return G__30261;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args30260){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30260)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__30309 = null;
var G__30309__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__30309__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__30309__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__30309__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__30309__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__30309__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__30309__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__30309__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__30309__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__30309__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__30309__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__30309__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__30309__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__30309__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__30309__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__30309__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__30309__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__30309__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__30309__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__30309__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__30309__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__30309__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30265 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__30266 = a;
var G__30267 = b;
var G__30268 = c;
var G__30269 = d;
var G__30270 = e;
var G__30271 = f;
var G__30272 = g;
var G__30273 = h;
var G__30274 = i;
var G__30275 = j;
var G__30276 = k;
var G__30277 = l;
var G__30278 = m;
var G__30279 = n;
var G__30280 = o;
var G__30281 = p;
var G__30282 = q;
var G__30283 = r;
var G__30284 = s;
var G__30285 = t;
var G__30286 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30265,G__30266,G__30267,G__30268,G__30269,G__30270,G__30271,G__30272,G__30273,G__30274,G__30275,G__30276,G__30277,G__30278,G__30279,G__30280,G__30281,G__30282,G__30283,G__30284,G__30285,G__30286) : cljs.core.apply.call(null,G__30265,G__30266,G__30267,G__30268,G__30269,G__30270,G__30271,G__30272,G__30273,G__30274,G__30275,G__30276,G__30277,G__30278,G__30279,G__30280,G__30281,G__30282,G__30283,G__30284,G__30285,G__30286));
});
G__30309 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__30309__1.call(this,self__);
case 2:
return G__30309__2.call(this,self__,a);
case 3:
return G__30309__3.call(this,self__,a,b);
case 4:
return G__30309__4.call(this,self__,a,b,c);
case 5:
return G__30309__5.call(this,self__,a,b,c,d);
case 6:
return G__30309__6.call(this,self__,a,b,c,d,e);
case 7:
return G__30309__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__30309__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__30309__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__30309__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__30309__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__30309__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__30309__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__30309__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__30309__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__30309__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__30309__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__30309__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__30309__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__30309__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__30309__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__30309__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30309.cljs$core$IFn$_invoke$arity$1 = G__30309__1;
G__30309.cljs$core$IFn$_invoke$arity$2 = G__30309__2;
G__30309.cljs$core$IFn$_invoke$arity$3 = G__30309__3;
G__30309.cljs$core$IFn$_invoke$arity$4 = G__30309__4;
G__30309.cljs$core$IFn$_invoke$arity$5 = G__30309__5;
G__30309.cljs$core$IFn$_invoke$arity$6 = G__30309__6;
G__30309.cljs$core$IFn$_invoke$arity$7 = G__30309__7;
G__30309.cljs$core$IFn$_invoke$arity$8 = G__30309__8;
G__30309.cljs$core$IFn$_invoke$arity$9 = G__30309__9;
G__30309.cljs$core$IFn$_invoke$arity$10 = G__30309__10;
G__30309.cljs$core$IFn$_invoke$arity$11 = G__30309__11;
G__30309.cljs$core$IFn$_invoke$arity$12 = G__30309__12;
G__30309.cljs$core$IFn$_invoke$arity$13 = G__30309__13;
G__30309.cljs$core$IFn$_invoke$arity$14 = G__30309__14;
G__30309.cljs$core$IFn$_invoke$arity$15 = G__30309__15;
G__30309.cljs$core$IFn$_invoke$arity$16 = G__30309__16;
G__30309.cljs$core$IFn$_invoke$arity$17 = G__30309__17;
G__30309.cljs$core$IFn$_invoke$arity$18 = G__30309__18;
G__30309.cljs$core$IFn$_invoke$arity$19 = G__30309__19;
G__30309.cljs$core$IFn$_invoke$arity$20 = G__30309__20;
G__30309.cljs$core$IFn$_invoke$arity$21 = G__30309__21;
G__30309.cljs$core$IFn$_invoke$arity$22 = G__30309__22;
return G__30309;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args30264){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30264)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__30287 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__30288 = a;
var G__30289 = b;
var G__30290 = c;
var G__30291 = d;
var G__30292 = e;
var G__30293 = f;
var G__30294 = g;
var G__30295 = h;
var G__30296 = i;
var G__30297 = j;
var G__30298 = k;
var G__30299 = l;
var G__30300 = m;
var G__30301 = n;
var G__30302 = o;
var G__30303 = p;
var G__30304 = q;
var G__30305 = r;
var G__30306 = s;
var G__30307 = t;
var G__30308 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30287,G__30288,G__30289,G__30290,G__30291,G__30292,G__30293,G__30294,G__30295,G__30296,G__30297,G__30298,G__30299,G__30300,G__30301,G__30302,G__30303,G__30304,G__30305,G__30306,G__30307,G__30308) : cljs.core.apply.call(null,G__30287,G__30288,G__30289,G__30290,G__30291,G__30292,G__30293,G__30294,G__30295,G__30296,G__30297,G__30298,G__30299,G__30300,G__30301,G__30302,G__30303,G__30304,G__30305,G__30306,G__30307,G__30308));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__30311 = x;
if(G__30311){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto__ = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return G__30311.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__30311.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__30311);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__30311);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__30313 = value;
if(G__30313){
var bit__11622__auto__ = (G__30313.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__11622__auto__) || (G__30313.cljs$core$ICloneable$)){
return true;
} else {
if((!G__30313.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__30313);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__30313);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__30315 = coll;
if(G__30315){
var bit__11615__auto__ = (G__30315.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__11615__auto__) || (G__30315.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__30317 = coll;
if(G__30317){
var bit__11615__auto__ = (G__30317.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11615__auto__) || (G__30317.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__30319 = coll;
if(G__30319){
var bit__11615__auto__ = (G__30319.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11615__auto__) || (G__30319.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__30321 = coll;
if(G__30321){
var bit__11615__auto__ = (G__30321.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11615__auto__) || (G__30321.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__30326__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__30327 = y;
var G__30328 = cljs.core.first(more);
var G__30329 = cljs.core.next(more);
x = G__30327;
y = G__30328;
more = G__30329;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30326 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30330__i = 0, G__30330__a = new Array(arguments.length -  2);
while (G__30330__i < G__30330__a.length) {G__30330__a[G__30330__i] = arguments[G__30330__i + 2]; ++G__30330__i;}
  more = new cljs.core.IndexedSeq(G__30330__a,0);
} 
return G__30326__delegate.call(this,x,y,more);};
G__30326.cljs$lang$maxFixedArity = 2;
G__30326.cljs$lang$applyTo = (function (arglist__30331){
var x = cljs.core.first(arglist__30331);
arglist__30331 = cljs.core.next(arglist__30331);
var y = cljs.core.first(arglist__30331);
var more = cljs.core.rest(arglist__30331);
return G__30326__delegate(x,y,more);
});
G__30326.cljs$core$IFn$_invoke$arity$variadic = G__30326__delegate;
return G__30326;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__30332 = null;
if (arguments.length > 2) {
var G__30333__i = 0, G__30333__a = new Array(arguments.length -  2);
while (G__30333__i < G__30333__a.length) {G__30333__a[G__30333__i] = arguments[G__30333__i + 2]; ++G__30333__i;}
G__30332 = new cljs.core.IndexedSeq(G__30333__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30332);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__30334 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__30334) : cljs.core.es6_iterator_seq.call(null,G__30334));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__30335 = (n + (1));
var G__30336 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__30337 = cljs.core.next(coll__$1);
n = G__30335;
hash_code = G__30336;
coll__$1 = G__30337;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__30338 = (n + (1));
var G__30339 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__30340 = cljs.core.next(coll__$1);
n = G__30338;
hash_code = G__30339;
coll__$1 = G__30340;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__30341 = o;
return goog.getUid(G__30341);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__30343 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30343) : cljs.core.deref.call(null,G__30343));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__30350 = val;
var G__30351 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30350,G__30351) : f.call(null,G__30350,G__30351));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30356 = nval;
var G__30357 = (n + (1));
val = G__30356;
n = G__30357;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__30352 = val__$1;
var G__30353 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30352,G__30353) : f.call(null,G__30352,G__30353));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30358 = nval;
var G__30359 = (n + (1));
val__$1 = G__30358;
n = G__30359;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__30354 = val__$1;
var G__30355 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30354,G__30355) : f.call(null,G__30354,G__30355));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30360 = nval;
var G__30361 = (n + (1));
val__$1 = G__30360;
n = G__30361;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__30368 = val;
var G__30369 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30368,G__30369) : f.call(null,G__30368,G__30369));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30374 = nval;
var G__30375 = (n + (1));
val = G__30374;
n = G__30375;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__30370 = val__$1;
var G__30371 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30370,G__30371) : f.call(null,G__30370,G__30371));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30376 = nval;
var G__30377 = (n + (1));
val__$1 = G__30376;
n = G__30377;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__30372 = val__$1;
var G__30373 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30372,G__30373) : f.call(null,G__30372,G__30373));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30378 = nval;
var G__30379 = (n + (1));
val__$1 = G__30378;
n = G__30379;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__30381 = x;
if(G__30381){
var bit__11622__auto__ = (G__30381.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__11622__auto__) || (G__30381.cljs$core$ICounted$)){
return true;
} else {
if((!G__30381.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__30381);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__30381);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__30383 = x;
if(G__30383){
var bit__11622__auto__ = (G__30383.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__11622__auto__) || (G__30383.cljs$core$IIndexed$)){
return true;
} else {
if((!G__30383.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__30383);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__30383);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__30384 = coll__$1;
var G__30385 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__30384,G__30385) : cljs.core.equiv_sequential.call(null,G__30384,G__30385));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__30386 = o;
var G__30387 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__30386,G__30387) : cljs.core.cons.call(null,G__30386,G__30387));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__30390 = coll__$1;
var G__30391 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__30390,G__30391) : cljs.core.equiv_sequential.call(null,G__30390,G__30391));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__30392 = cljs.core.List.EMPTY;
var G__30393 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__30392,G__30393) : cljs.core.with_meta.call(null,G__30392,G__30393));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__30394 = f;
var G__30395 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__30394,G__30395) : cljs.core.seq_reduce.call(null,G__30394,G__30395));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__30396 = f;
var G__30397 = start;
var G__30398 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__30396,G__30397,G__30398) : cljs.core.seq_reduce.call(null,G__30396,G__30397,G__30398));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__30399 = o;
var G__30400 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__30399,G__30400) : cljs.core.cons.call(null,G__30399,G__30400));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__30401 = sn;
s = G__30401;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__30406__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__30407 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__30408 = cljs.core.first(xs);
var G__30409 = cljs.core.next(xs);
coll = G__30407;
x = G__30408;
xs = G__30409;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__30406 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__30410__i = 0, G__30410__a = new Array(arguments.length -  2);
while (G__30410__i < G__30410__a.length) {G__30410__a[G__30410__i] = arguments[G__30410__i + 2]; ++G__30410__i;}
  xs = new cljs.core.IndexedSeq(G__30410__a,0);
} 
return G__30406__delegate.call(this,coll,x,xs);};
G__30406.cljs$lang$maxFixedArity = 2;
G__30406.cljs$lang$applyTo = (function (arglist__30411){
var coll = cljs.core.first(arglist__30411);
arglist__30411 = cljs.core.next(arglist__30411);
var x = cljs.core.first(arglist__30411);
var xs = cljs.core.rest(arglist__30411);
return G__30406__delegate(coll,x,xs);
});
G__30406.cljs$core$IFn$_invoke$arity$variadic = G__30406__delegate;
return G__30406;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__30412 = null;
if (arguments.length > 2) {
var G__30413__i = 0, G__30413__a = new Array(arguments.length -  2);
while (G__30413__i < G__30413__a.length) {G__30413__a[G__30413__i] = arguments[G__30413__i + 2]; ++G__30413__i;}
G__30412 = new cljs.core.IndexedSeq(G__30413__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__30412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__30414 = cljs.core.next(s);
var G__30415 = (acc + (1));
s = G__30414;
acc = G__30415;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__30417 = coll;
if(G__30417){
var bit__11615__auto__ = (G__30417.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__11615__auto__) || (G__30417.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__30418 = cljs.core.next(coll);
var G__30419 = (n - (1));
coll = G__30418;
n = G__30419;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__30420 = cljs.core.next(coll);
var G__30421 = (n - (1));
var G__30422 = not_found;
coll = G__30420;
n = G__30421;
not_found = G__30422;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__30427 = coll;
if(G__30427){
var bit__11615__auto__ = (G__30427.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__11615__auto__) || (G__30427.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__30428 = coll;
if(G__30428){
var bit__11622__auto__ = (G__30428.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11622__auto__) || (G__30428.cljs$core$ISeq$)){
return true;
} else {
if((!G__30428.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30428);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30428);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__30429 = coll;
if(G__30429){
var bit__11615__auto__ = (G__30429.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__11615__auto__) || (G__30429.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__30430 = coll;
if(G__30430){
var bit__11622__auto__ = (G__30430.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11622__auto__) || (G__30430.cljs$core$ISeq$)){
return true;
} else {
if((!G__30430.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30430);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30430);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__30431 = (n__$1 - (1));
var G__30432 = cljs.core.rest(xs);
n__$1 = G__30431;
xs = G__30432;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__30435 = o;
if(G__30435){
var bit__11615__auto__ = (G__30435.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__11615__auto__) || (G__30435.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__30436 = o;
if(G__30436){
var bit__11615__auto__ = (G__30436.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__11615__auto__) || (G__30436.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__30440__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__30441 = ret;
var G__30442 = cljs.core.first(kvs);
var G__30443 = cljs.core.second(kvs);
var G__30444 = cljs.core.nnext(kvs);
coll = G__30441;
k = G__30442;
v = G__30443;
kvs = G__30444;
continue;
} else {
return ret;
}
break;
}
};
var G__30440 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__30445__i = 0, G__30445__a = new Array(arguments.length -  3);
while (G__30445__i < G__30445__a.length) {G__30445__a[G__30445__i] = arguments[G__30445__i + 3]; ++G__30445__i;}
  kvs = new cljs.core.IndexedSeq(G__30445__a,0);
} 
return G__30440__delegate.call(this,coll,k,v,kvs);};
G__30440.cljs$lang$maxFixedArity = 3;
G__30440.cljs$lang$applyTo = (function (arglist__30446){
var coll = cljs.core.first(arglist__30446);
arglist__30446 = cljs.core.next(arglist__30446);
var k = cljs.core.first(arglist__30446);
arglist__30446 = cljs.core.next(arglist__30446);
var v = cljs.core.first(arglist__30446);
var kvs = cljs.core.rest(arglist__30446);
return G__30440__delegate(coll,k,v,kvs);
});
G__30440.cljs$core$IFn$_invoke$arity$variadic = G__30440__delegate;
return G__30440;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__30447 = null;
if (arguments.length > 3) {
var G__30448__i = 0, G__30448__a = new Array(arguments.length -  3);
while (G__30448__i < G__30448__a.length) {G__30448__a[G__30448__i] = arguments[G__30448__i + 3]; ++G__30448__i;}
G__30447 = new cljs.core.IndexedSeq(G__30448__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__30447);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__30451__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__30452 = ret;
var G__30453 = cljs.core.first(ks);
var G__30454 = cljs.core.next(ks);
coll = G__30452;
k = G__30453;
ks = G__30454;
continue;
} else {
return ret;
}
}
break;
}
};
var G__30451 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__30455__i = 0, G__30455__a = new Array(arguments.length -  2);
while (G__30455__i < G__30455__a.length) {G__30455__a[G__30455__i] = arguments[G__30455__i + 2]; ++G__30455__i;}
  ks = new cljs.core.IndexedSeq(G__30455__a,0);
} 
return G__30451__delegate.call(this,coll,k,ks);};
G__30451.cljs$lang$maxFixedArity = 2;
G__30451.cljs$lang$applyTo = (function (arglist__30456){
var coll = cljs.core.first(arglist__30456);
arglist__30456 = cljs.core.next(arglist__30456);
var k = cljs.core.first(arglist__30456);
var ks = cljs.core.rest(arglist__30456);
return G__30451__delegate(coll,k,ks);
});
G__30451.cljs$core$IFn$_invoke$arity$variadic = G__30451__delegate;
return G__30451;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__30457 = null;
if (arguments.length > 2) {
var G__30458__i = 0, G__30458__a = new Array(arguments.length -  2);
while (G__30458__i < G__30458__a.length) {G__30458__a[G__30458__i] = arguments[G__30458__i + 2]; ++G__30458__i;}
G__30457 = new cljs.core.IndexedSeq(G__30458__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__30457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__10941__auto__ = (function (){var G__30463 = f;
return goog.isFunction(G__30463);
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__30464 = f;
if(G__30464){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto____$1 = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
return G__30464.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__30464.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__30464);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__30464);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__30930 = null;
var G__30930__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__30930__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30466 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__30466) : self__.afn.call(null,G__30466));
});
var G__30930__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30467 = a;
var G__30468 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__30467,G__30468) : self__.afn.call(null,G__30467,G__30468));
});
var G__30930__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30469 = a;
var G__30470 = b;
var G__30471 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__30469,G__30470,G__30471) : self__.afn.call(null,G__30469,G__30470,G__30471));
});
var G__30930__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30472 = a;
var G__30473 = b;
var G__30474 = c;
var G__30475 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__30472,G__30473,G__30474,G__30475) : self__.afn.call(null,G__30472,G__30473,G__30474,G__30475));
});
var G__30930__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30476 = a;
var G__30477 = b;
var G__30478 = c;
var G__30479 = d;
var G__30480 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__30476,G__30477,G__30478,G__30479,G__30480) : self__.afn.call(null,G__30476,G__30477,G__30478,G__30479,G__30480));
});
var G__30930__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30481 = a;
var G__30482 = b;
var G__30483 = c;
var G__30484 = d;
var G__30485 = e;
var G__30486 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__30481,G__30482,G__30483,G__30484,G__30485,G__30486) : self__.afn.call(null,G__30481,G__30482,G__30483,G__30484,G__30485,G__30486));
});
var G__30930__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30487 = a;
var G__30488 = b;
var G__30489 = c;
var G__30490 = d;
var G__30491 = e;
var G__30492 = f;
var G__30493 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__30487,G__30488,G__30489,G__30490,G__30491,G__30492,G__30493) : self__.afn.call(null,G__30487,G__30488,G__30489,G__30490,G__30491,G__30492,G__30493));
});
var G__30930__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30494 = a;
var G__30495 = b;
var G__30496 = c;
var G__30497 = d;
var G__30498 = e;
var G__30499 = f;
var G__30500 = g;
var G__30501 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__30494,G__30495,G__30496,G__30497,G__30498,G__30499,G__30500,G__30501) : self__.afn.call(null,G__30494,G__30495,G__30496,G__30497,G__30498,G__30499,G__30500,G__30501));
});
var G__30930__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30502 = a;
var G__30503 = b;
var G__30504 = c;
var G__30505 = d;
var G__30506 = e;
var G__30507 = f;
var G__30508 = g;
var G__30509 = h;
var G__30510 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__30502,G__30503,G__30504,G__30505,G__30506,G__30507,G__30508,G__30509,G__30510) : self__.afn.call(null,G__30502,G__30503,G__30504,G__30505,G__30506,G__30507,G__30508,G__30509,G__30510));
});
var G__30930__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30511 = a;
var G__30512 = b;
var G__30513 = c;
var G__30514 = d;
var G__30515 = e;
var G__30516 = f;
var G__30517 = g;
var G__30518 = h;
var G__30519 = i;
var G__30520 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__30511,G__30512,G__30513,G__30514,G__30515,G__30516,G__30517,G__30518,G__30519,G__30520) : self__.afn.call(null,G__30511,G__30512,G__30513,G__30514,G__30515,G__30516,G__30517,G__30518,G__30519,G__30520));
});
var G__30930__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30521 = a;
var G__30522 = b;
var G__30523 = c;
var G__30524 = d;
var G__30525 = e;
var G__30526 = f;
var G__30527 = g;
var G__30528 = h;
var G__30529 = i;
var G__30530 = j;
var G__30531 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__30521,G__30522,G__30523,G__30524,G__30525,G__30526,G__30527,G__30528,G__30529,G__30530,G__30531) : self__.afn.call(null,G__30521,G__30522,G__30523,G__30524,G__30525,G__30526,G__30527,G__30528,G__30529,G__30530,G__30531));
});
var G__30930__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30532 = a;
var G__30533 = b;
var G__30534 = c;
var G__30535 = d;
var G__30536 = e;
var G__30537 = f;
var G__30538 = g;
var G__30539 = h;
var G__30540 = i;
var G__30541 = j;
var G__30542 = k;
var G__30543 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__30532,G__30533,G__30534,G__30535,G__30536,G__30537,G__30538,G__30539,G__30540,G__30541,G__30542,G__30543) : self__.afn.call(null,G__30532,G__30533,G__30534,G__30535,G__30536,G__30537,G__30538,G__30539,G__30540,G__30541,G__30542,G__30543));
});
var G__30930__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30544 = a;
var G__30545 = b;
var G__30546 = c;
var G__30547 = d;
var G__30548 = e;
var G__30549 = f;
var G__30550 = g;
var G__30551 = h;
var G__30552 = i;
var G__30553 = j;
var G__30554 = k;
var G__30555 = l;
var G__30556 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__30544,G__30545,G__30546,G__30547,G__30548,G__30549,G__30550,G__30551,G__30552,G__30553,G__30554,G__30555,G__30556) : self__.afn.call(null,G__30544,G__30545,G__30546,G__30547,G__30548,G__30549,G__30550,G__30551,G__30552,G__30553,G__30554,G__30555,G__30556));
});
var G__30930__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30557 = a;
var G__30558 = b;
var G__30559 = c;
var G__30560 = d;
var G__30561 = e;
var G__30562 = f;
var G__30563 = g;
var G__30564 = h;
var G__30565 = i;
var G__30566 = j;
var G__30567 = k;
var G__30568 = l;
var G__30569 = m;
var G__30570 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__30557,G__30558,G__30559,G__30560,G__30561,G__30562,G__30563,G__30564,G__30565,G__30566,G__30567,G__30568,G__30569,G__30570) : self__.afn.call(null,G__30557,G__30558,G__30559,G__30560,G__30561,G__30562,G__30563,G__30564,G__30565,G__30566,G__30567,G__30568,G__30569,G__30570));
});
var G__30930__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30571 = a;
var G__30572 = b;
var G__30573 = c;
var G__30574 = d;
var G__30575 = e;
var G__30576 = f;
var G__30577 = g;
var G__30578 = h;
var G__30579 = i;
var G__30580 = j;
var G__30581 = k;
var G__30582 = l;
var G__30583 = m;
var G__30584 = n;
var G__30585 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__30571,G__30572,G__30573,G__30574,G__30575,G__30576,G__30577,G__30578,G__30579,G__30580,G__30581,G__30582,G__30583,G__30584,G__30585) : self__.afn.call(null,G__30571,G__30572,G__30573,G__30574,G__30575,G__30576,G__30577,G__30578,G__30579,G__30580,G__30581,G__30582,G__30583,G__30584,G__30585));
});
var G__30930__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30586 = a;
var G__30587 = b;
var G__30588 = c;
var G__30589 = d;
var G__30590 = e;
var G__30591 = f;
var G__30592 = g;
var G__30593 = h;
var G__30594 = i;
var G__30595 = j;
var G__30596 = k;
var G__30597 = l;
var G__30598 = m;
var G__30599 = n;
var G__30600 = o;
var G__30601 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__30586,G__30587,G__30588,G__30589,G__30590,G__30591,G__30592,G__30593,G__30594,G__30595,G__30596,G__30597,G__30598,G__30599,G__30600,G__30601) : self__.afn.call(null,G__30586,G__30587,G__30588,G__30589,G__30590,G__30591,G__30592,G__30593,G__30594,G__30595,G__30596,G__30597,G__30598,G__30599,G__30600,G__30601));
});
var G__30930__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30602 = a;
var G__30603 = b;
var G__30604 = c;
var G__30605 = d;
var G__30606 = e;
var G__30607 = f;
var G__30608 = g;
var G__30609 = h;
var G__30610 = i;
var G__30611 = j;
var G__30612 = k;
var G__30613 = l;
var G__30614 = m;
var G__30615 = n;
var G__30616 = o;
var G__30617 = p;
var G__30618 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__30602,G__30603,G__30604,G__30605,G__30606,G__30607,G__30608,G__30609,G__30610,G__30611,G__30612,G__30613,G__30614,G__30615,G__30616,G__30617,G__30618) : self__.afn.call(null,G__30602,G__30603,G__30604,G__30605,G__30606,G__30607,G__30608,G__30609,G__30610,G__30611,G__30612,G__30613,G__30614,G__30615,G__30616,G__30617,G__30618));
});
var G__30930__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30619 = a;
var G__30620 = b;
var G__30621 = c;
var G__30622 = d;
var G__30623 = e;
var G__30624 = f;
var G__30625 = g;
var G__30626 = h;
var G__30627 = i;
var G__30628 = j;
var G__30629 = k;
var G__30630 = l;
var G__30631 = m;
var G__30632 = n;
var G__30633 = o;
var G__30634 = p;
var G__30635 = q;
var G__30636 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__30619,G__30620,G__30621,G__30622,G__30623,G__30624,G__30625,G__30626,G__30627,G__30628,G__30629,G__30630,G__30631,G__30632,G__30633,G__30634,G__30635,G__30636) : self__.afn.call(null,G__30619,G__30620,G__30621,G__30622,G__30623,G__30624,G__30625,G__30626,G__30627,G__30628,G__30629,G__30630,G__30631,G__30632,G__30633,G__30634,G__30635,G__30636));
});
var G__30930__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30637 = a;
var G__30638 = b;
var G__30639 = c;
var G__30640 = d;
var G__30641 = e;
var G__30642 = f;
var G__30643 = g;
var G__30644 = h;
var G__30645 = i;
var G__30646 = j;
var G__30647 = k;
var G__30648 = l;
var G__30649 = m;
var G__30650 = n;
var G__30651 = o;
var G__30652 = p;
var G__30653 = q;
var G__30654 = r;
var G__30655 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__30637,G__30638,G__30639,G__30640,G__30641,G__30642,G__30643,G__30644,G__30645,G__30646,G__30647,G__30648,G__30649,G__30650,G__30651,G__30652,G__30653,G__30654,G__30655) : self__.afn.call(null,G__30637,G__30638,G__30639,G__30640,G__30641,G__30642,G__30643,G__30644,G__30645,G__30646,G__30647,G__30648,G__30649,G__30650,G__30651,G__30652,G__30653,G__30654,G__30655));
});
var G__30930__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30656 = a;
var G__30657 = b;
var G__30658 = c;
var G__30659 = d;
var G__30660 = e;
var G__30661 = f;
var G__30662 = g;
var G__30663 = h;
var G__30664 = i;
var G__30665 = j;
var G__30666 = k;
var G__30667 = l;
var G__30668 = m;
var G__30669 = n;
var G__30670 = o;
var G__30671 = p;
var G__30672 = q;
var G__30673 = r;
var G__30674 = s;
var G__30675 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__30656,G__30657,G__30658,G__30659,G__30660,G__30661,G__30662,G__30663,G__30664,G__30665,G__30666,G__30667,G__30668,G__30669,G__30670,G__30671,G__30672,G__30673,G__30674,G__30675) : self__.afn.call(null,G__30656,G__30657,G__30658,G__30659,G__30660,G__30661,G__30662,G__30663,G__30664,G__30665,G__30666,G__30667,G__30668,G__30669,G__30670,G__30671,G__30672,G__30673,G__30674,G__30675));
});
var G__30930__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30676 = self__.afn;
var G__30677 = a;
var G__30678 = b;
var G__30679 = c;
var G__30680 = d;
var G__30681 = e;
var G__30682 = f;
var G__30683 = g;
var G__30684 = h;
var G__30685 = i;
var G__30686 = j;
var G__30687 = k;
var G__30688 = l;
var G__30689 = m;
var G__30690 = n;
var G__30691 = o;
var G__30692 = p;
var G__30693 = q;
var G__30694 = r;
var G__30695 = s;
var G__30696 = t;
var G__30697 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30676,G__30677,G__30678,G__30679,G__30680,G__30681,G__30682,G__30683,G__30684,G__30685,G__30686,G__30687,G__30688,G__30689,G__30690,G__30691,G__30692,G__30693,G__30694,G__30695,G__30696,G__30697) : cljs.core.apply.call(null,G__30676,G__30677,G__30678,G__30679,G__30680,G__30681,G__30682,G__30683,G__30684,G__30685,G__30686,G__30687,G__30688,G__30689,G__30690,G__30691,G__30692,G__30693,G__30694,G__30695,G__30696,G__30697));
});
G__30930 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__30930__1.call(this,self__);
case 2:
return G__30930__2.call(this,self__,a);
case 3:
return G__30930__3.call(this,self__,a,b);
case 4:
return G__30930__4.call(this,self__,a,b,c);
case 5:
return G__30930__5.call(this,self__,a,b,c,d);
case 6:
return G__30930__6.call(this,self__,a,b,c,d,e);
case 7:
return G__30930__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__30930__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__30930__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__30930__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__30930__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__30930__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__30930__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__30930__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__30930__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__30930__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__30930__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__30930__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__30930__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__30930__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__30930__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__30930__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30930.cljs$core$IFn$_invoke$arity$1 = G__30930__1;
G__30930.cljs$core$IFn$_invoke$arity$2 = G__30930__2;
G__30930.cljs$core$IFn$_invoke$arity$3 = G__30930__3;
G__30930.cljs$core$IFn$_invoke$arity$4 = G__30930__4;
G__30930.cljs$core$IFn$_invoke$arity$5 = G__30930__5;
G__30930.cljs$core$IFn$_invoke$arity$6 = G__30930__6;
G__30930.cljs$core$IFn$_invoke$arity$7 = G__30930__7;
G__30930.cljs$core$IFn$_invoke$arity$8 = G__30930__8;
G__30930.cljs$core$IFn$_invoke$arity$9 = G__30930__9;
G__30930.cljs$core$IFn$_invoke$arity$10 = G__30930__10;
G__30930.cljs$core$IFn$_invoke$arity$11 = G__30930__11;
G__30930.cljs$core$IFn$_invoke$arity$12 = G__30930__12;
G__30930.cljs$core$IFn$_invoke$arity$13 = G__30930__13;
G__30930.cljs$core$IFn$_invoke$arity$14 = G__30930__14;
G__30930.cljs$core$IFn$_invoke$arity$15 = G__30930__15;
G__30930.cljs$core$IFn$_invoke$arity$16 = G__30930__16;
G__30930.cljs$core$IFn$_invoke$arity$17 = G__30930__17;
G__30930.cljs$core$IFn$_invoke$arity$18 = G__30930__18;
G__30930.cljs$core$IFn$_invoke$arity$19 = G__30930__19;
G__30930.cljs$core$IFn$_invoke$arity$20 = G__30930__20;
G__30930.cljs$core$IFn$_invoke$arity$21 = G__30930__21;
G__30930.cljs$core$IFn$_invoke$arity$22 = G__30930__22;
return G__30930;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args30465){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30465)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__30698 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__30698) : self__.afn.call(null,G__30698));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__30699 = a;
var G__30700 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__30699,G__30700) : self__.afn.call(null,G__30699,G__30700));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__30701 = a;
var G__30702 = b;
var G__30703 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__30701,G__30702,G__30703) : self__.afn.call(null,G__30701,G__30702,G__30703));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__30704 = a;
var G__30705 = b;
var G__30706 = c;
var G__30707 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__30704,G__30705,G__30706,G__30707) : self__.afn.call(null,G__30704,G__30705,G__30706,G__30707));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__30708 = a;
var G__30709 = b;
var G__30710 = c;
var G__30711 = d;
var G__30712 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__30708,G__30709,G__30710,G__30711,G__30712) : self__.afn.call(null,G__30708,G__30709,G__30710,G__30711,G__30712));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__30713 = a;
var G__30714 = b;
var G__30715 = c;
var G__30716 = d;
var G__30717 = e;
var G__30718 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__30713,G__30714,G__30715,G__30716,G__30717,G__30718) : self__.afn.call(null,G__30713,G__30714,G__30715,G__30716,G__30717,G__30718));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__30719 = a;
var G__30720 = b;
var G__30721 = c;
var G__30722 = d;
var G__30723 = e;
var G__30724 = f;
var G__30725 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__30719,G__30720,G__30721,G__30722,G__30723,G__30724,G__30725) : self__.afn.call(null,G__30719,G__30720,G__30721,G__30722,G__30723,G__30724,G__30725));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__30726 = a;
var G__30727 = b;
var G__30728 = c;
var G__30729 = d;
var G__30730 = e;
var G__30731 = f;
var G__30732 = g;
var G__30733 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__30726,G__30727,G__30728,G__30729,G__30730,G__30731,G__30732,G__30733) : self__.afn.call(null,G__30726,G__30727,G__30728,G__30729,G__30730,G__30731,G__30732,G__30733));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__30734 = a;
var G__30735 = b;
var G__30736 = c;
var G__30737 = d;
var G__30738 = e;
var G__30739 = f;
var G__30740 = g;
var G__30741 = h;
var G__30742 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__30734,G__30735,G__30736,G__30737,G__30738,G__30739,G__30740,G__30741,G__30742) : self__.afn.call(null,G__30734,G__30735,G__30736,G__30737,G__30738,G__30739,G__30740,G__30741,G__30742));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__30743 = a;
var G__30744 = b;
var G__30745 = c;
var G__30746 = d;
var G__30747 = e;
var G__30748 = f;
var G__30749 = g;
var G__30750 = h;
var G__30751 = i;
var G__30752 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__30743,G__30744,G__30745,G__30746,G__30747,G__30748,G__30749,G__30750,G__30751,G__30752) : self__.afn.call(null,G__30743,G__30744,G__30745,G__30746,G__30747,G__30748,G__30749,G__30750,G__30751,G__30752));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__30753 = a;
var G__30754 = b;
var G__30755 = c;
var G__30756 = d;
var G__30757 = e;
var G__30758 = f;
var G__30759 = g;
var G__30760 = h;
var G__30761 = i;
var G__30762 = j;
var G__30763 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__30753,G__30754,G__30755,G__30756,G__30757,G__30758,G__30759,G__30760,G__30761,G__30762,G__30763) : self__.afn.call(null,G__30753,G__30754,G__30755,G__30756,G__30757,G__30758,G__30759,G__30760,G__30761,G__30762,G__30763));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__30764 = a;
var G__30765 = b;
var G__30766 = c;
var G__30767 = d;
var G__30768 = e;
var G__30769 = f;
var G__30770 = g;
var G__30771 = h;
var G__30772 = i;
var G__30773 = j;
var G__30774 = k;
var G__30775 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__30764,G__30765,G__30766,G__30767,G__30768,G__30769,G__30770,G__30771,G__30772,G__30773,G__30774,G__30775) : self__.afn.call(null,G__30764,G__30765,G__30766,G__30767,G__30768,G__30769,G__30770,G__30771,G__30772,G__30773,G__30774,G__30775));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__30776 = a;
var G__30777 = b;
var G__30778 = c;
var G__30779 = d;
var G__30780 = e;
var G__30781 = f;
var G__30782 = g;
var G__30783 = h;
var G__30784 = i;
var G__30785 = j;
var G__30786 = k;
var G__30787 = l;
var G__30788 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__30776,G__30777,G__30778,G__30779,G__30780,G__30781,G__30782,G__30783,G__30784,G__30785,G__30786,G__30787,G__30788) : self__.afn.call(null,G__30776,G__30777,G__30778,G__30779,G__30780,G__30781,G__30782,G__30783,G__30784,G__30785,G__30786,G__30787,G__30788));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__30789 = a;
var G__30790 = b;
var G__30791 = c;
var G__30792 = d;
var G__30793 = e;
var G__30794 = f;
var G__30795 = g;
var G__30796 = h;
var G__30797 = i;
var G__30798 = j;
var G__30799 = k;
var G__30800 = l;
var G__30801 = m;
var G__30802 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__30789,G__30790,G__30791,G__30792,G__30793,G__30794,G__30795,G__30796,G__30797,G__30798,G__30799,G__30800,G__30801,G__30802) : self__.afn.call(null,G__30789,G__30790,G__30791,G__30792,G__30793,G__30794,G__30795,G__30796,G__30797,G__30798,G__30799,G__30800,G__30801,G__30802));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__30803 = a;
var G__30804 = b;
var G__30805 = c;
var G__30806 = d;
var G__30807 = e;
var G__30808 = f;
var G__30809 = g;
var G__30810 = h;
var G__30811 = i;
var G__30812 = j;
var G__30813 = k;
var G__30814 = l;
var G__30815 = m;
var G__30816 = n;
var G__30817 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__30803,G__30804,G__30805,G__30806,G__30807,G__30808,G__30809,G__30810,G__30811,G__30812,G__30813,G__30814,G__30815,G__30816,G__30817) : self__.afn.call(null,G__30803,G__30804,G__30805,G__30806,G__30807,G__30808,G__30809,G__30810,G__30811,G__30812,G__30813,G__30814,G__30815,G__30816,G__30817));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__30818 = a;
var G__30819 = b;
var G__30820 = c;
var G__30821 = d;
var G__30822 = e;
var G__30823 = f;
var G__30824 = g;
var G__30825 = h;
var G__30826 = i;
var G__30827 = j;
var G__30828 = k;
var G__30829 = l;
var G__30830 = m;
var G__30831 = n;
var G__30832 = o;
var G__30833 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__30818,G__30819,G__30820,G__30821,G__30822,G__30823,G__30824,G__30825,G__30826,G__30827,G__30828,G__30829,G__30830,G__30831,G__30832,G__30833) : self__.afn.call(null,G__30818,G__30819,G__30820,G__30821,G__30822,G__30823,G__30824,G__30825,G__30826,G__30827,G__30828,G__30829,G__30830,G__30831,G__30832,G__30833));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__30834 = a;
var G__30835 = b;
var G__30836 = c;
var G__30837 = d;
var G__30838 = e;
var G__30839 = f;
var G__30840 = g;
var G__30841 = h;
var G__30842 = i;
var G__30843 = j;
var G__30844 = k;
var G__30845 = l;
var G__30846 = m;
var G__30847 = n;
var G__30848 = o;
var G__30849 = p;
var G__30850 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__30834,G__30835,G__30836,G__30837,G__30838,G__30839,G__30840,G__30841,G__30842,G__30843,G__30844,G__30845,G__30846,G__30847,G__30848,G__30849,G__30850) : self__.afn.call(null,G__30834,G__30835,G__30836,G__30837,G__30838,G__30839,G__30840,G__30841,G__30842,G__30843,G__30844,G__30845,G__30846,G__30847,G__30848,G__30849,G__30850));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__30851 = a;
var G__30852 = b;
var G__30853 = c;
var G__30854 = d;
var G__30855 = e;
var G__30856 = f;
var G__30857 = g;
var G__30858 = h;
var G__30859 = i;
var G__30860 = j;
var G__30861 = k;
var G__30862 = l;
var G__30863 = m;
var G__30864 = n;
var G__30865 = o;
var G__30866 = p;
var G__30867 = q;
var G__30868 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__30851,G__30852,G__30853,G__30854,G__30855,G__30856,G__30857,G__30858,G__30859,G__30860,G__30861,G__30862,G__30863,G__30864,G__30865,G__30866,G__30867,G__30868) : self__.afn.call(null,G__30851,G__30852,G__30853,G__30854,G__30855,G__30856,G__30857,G__30858,G__30859,G__30860,G__30861,G__30862,G__30863,G__30864,G__30865,G__30866,G__30867,G__30868));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__30869 = a;
var G__30870 = b;
var G__30871 = c;
var G__30872 = d;
var G__30873 = e;
var G__30874 = f;
var G__30875 = g;
var G__30876 = h;
var G__30877 = i;
var G__30878 = j;
var G__30879 = k;
var G__30880 = l;
var G__30881 = m;
var G__30882 = n;
var G__30883 = o;
var G__30884 = p;
var G__30885 = q;
var G__30886 = r;
var G__30887 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__30869,G__30870,G__30871,G__30872,G__30873,G__30874,G__30875,G__30876,G__30877,G__30878,G__30879,G__30880,G__30881,G__30882,G__30883,G__30884,G__30885,G__30886,G__30887) : self__.afn.call(null,G__30869,G__30870,G__30871,G__30872,G__30873,G__30874,G__30875,G__30876,G__30877,G__30878,G__30879,G__30880,G__30881,G__30882,G__30883,G__30884,G__30885,G__30886,G__30887));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__30888 = a;
var G__30889 = b;
var G__30890 = c;
var G__30891 = d;
var G__30892 = e;
var G__30893 = f;
var G__30894 = g;
var G__30895 = h;
var G__30896 = i;
var G__30897 = j;
var G__30898 = k;
var G__30899 = l;
var G__30900 = m;
var G__30901 = n;
var G__30902 = o;
var G__30903 = p;
var G__30904 = q;
var G__30905 = r;
var G__30906 = s;
var G__30907 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__30888,G__30889,G__30890,G__30891,G__30892,G__30893,G__30894,G__30895,G__30896,G__30897,G__30898,G__30899,G__30900,G__30901,G__30902,G__30903,G__30904,G__30905,G__30906,G__30907) : self__.afn.call(null,G__30888,G__30889,G__30890,G__30891,G__30892,G__30893,G__30894,G__30895,G__30896,G__30897,G__30898,G__30899,G__30900,G__30901,G__30902,G__30903,G__30904,G__30905,G__30906,G__30907));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__30908 = self__.afn;
var G__30909 = a;
var G__30910 = b;
var G__30911 = c;
var G__30912 = d;
var G__30913 = e;
var G__30914 = f;
var G__30915 = g;
var G__30916 = h;
var G__30917 = i;
var G__30918 = j;
var G__30919 = k;
var G__30920 = l;
var G__30921 = m;
var G__30922 = n;
var G__30923 = o;
var G__30924 = p;
var G__30925 = q;
var G__30926 = r;
var G__30927 = s;
var G__30928 = t;
var G__30929 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30908,G__30909,G__30910,G__30911,G__30912,G__30913,G__30914,G__30915,G__30916,G__30917,G__30918,G__30919,G__30920,G__30921,G__30922,G__30923,G__30924,G__30925,G__30926,G__30927,G__30928,G__30929) : cljs.core.apply.call(null,G__30908,G__30909,G__30910,G__30911,G__30912,G__30913,G__30914,G__30915,G__30916,G__30917,G__30918,G__30919,G__30920,G__30921,G__30922,G__30923,G__30924,G__30925,G__30926,G__30927,G__30928,G__30929));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__30934 = o;
if(G__30934){
var bit__11622__auto__ = (G__30934.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__11622__auto__) || (G__30934.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__30934.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__30934);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__30934);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__10929__auto__ = !((o == null));
if(and__10929__auto__){
var G__30938 = o;
if(G__30938){
var bit__11622__auto__ = (G__30938.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__11622__auto__) || (G__30938.cljs$core$IMeta$)){
return true;
} else {
if((!G__30938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30938);
}
} else {
return and__10929__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__30941__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__30942 = ret;
var G__30943 = cljs.core.first(ks);
var G__30944 = cljs.core.next(ks);
coll = G__30942;
k = G__30943;
ks = G__30944;
continue;
} else {
return ret;
}
}
break;
}
};
var G__30941 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__30945__i = 0, G__30945__a = new Array(arguments.length -  2);
while (G__30945__i < G__30945__a.length) {G__30945__a[G__30945__i] = arguments[G__30945__i + 2]; ++G__30945__i;}
  ks = new cljs.core.IndexedSeq(G__30945__a,0);
} 
return G__30941__delegate.call(this,coll,k,ks);};
G__30941.cljs$lang$maxFixedArity = 2;
G__30941.cljs$lang$applyTo = (function (arglist__30946){
var coll = cljs.core.first(arglist__30946);
arglist__30946 = cljs.core.next(arglist__30946);
var k = cljs.core.first(arglist__30946);
var ks = cljs.core.rest(arglist__30946);
return G__30941__delegate(coll,k,ks);
});
G__30941.cljs$core$IFn$_invoke$arity$variadic = G__30941__delegate;
return G__30941;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__30947 = null;
if (arguments.length > 2) {
var G__30948__i = 0, G__30948__a = new Array(arguments.length -  2);
while (G__30948__i < G__30948__a.length) {G__30948__a[G__30948__i] = arguments[G__30948__i + 2]; ++G__30948__i;}
G__30947 = new cljs.core.IndexedSeq(G__30948__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__30947);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__30950 = x;
if(G__30950){
var bit__11622__auto__ = (G__30950.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__11622__auto__) || (G__30950.cljs$core$ICollection$)){
return true;
} else {
if((!G__30950.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__30950);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__30950);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__30952 = x;
if(G__30952){
var bit__11622__auto__ = (G__30952.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__11622__auto__) || (G__30952.cljs$core$ISet$)){
return true;
} else {
if((!G__30952.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__30952);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__30952);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__30954 = x;
if(G__30954){
var bit__11622__auto__ = (G__30954.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__11622__auto__) || (G__30954.cljs$core$IAssociative$)){
return true;
} else {
if((!G__30954.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__30954);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__30954);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__30956 = x;
if(G__30956){
var bit__11622__auto__ = (G__30956.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__11622__auto__) || (G__30956.cljs$core$ISequential$)){
return true;
} else {
if((!G__30956.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__30956);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__30956);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__30958 = x;
if(G__30958){
var bit__11622__auto__ = (G__30958.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__11622__auto__) || (G__30958.cljs$core$ISorted$)){
return true;
} else {
if((!G__30958.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__30958);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__30958);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__30960 = x;
if(G__30960){
var bit__11622__auto__ = (G__30960.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__11622__auto__) || (G__30960.cljs$core$IReduce$)){
return true;
} else {
if((!G__30960.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__30960);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__30960);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__30962 = x;
if(G__30962){
var bit__11622__auto__ = (G__30962.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__11622__auto__) || (G__30962.cljs$core$IMap$)){
return true;
} else {
if((!G__30962.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__30962);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__30962);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__30964 = x;
if(G__30964){
var bit__11622__auto__ = (G__30964.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__11622__auto__) || (G__30964.cljs$core$IVector$)){
return true;
} else {
if((!G__30964.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__30964);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__30964);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__30966 = x;
if(G__30966){
var bit__11615__auto__ = (G__30966.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__11615__auto__) || (G__30966.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj30972 = {};
return obj30972;
});
var js_obj__1 = (function() { 
var G__30975__delegate = function (keyvals){
var G__30973 = goog.object.create;
var G__30974 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__30973,G__30974) : cljs.core.apply.call(null,G__30973,G__30974));
};
var G__30975 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30976__i = 0, G__30976__a = new Array(arguments.length -  0);
while (G__30976__i < G__30976__a.length) {G__30976__a[G__30976__i] = arguments[G__30976__i + 0]; ++G__30976__i;}
  keyvals = new cljs.core.IndexedSeq(G__30976__a,0);
} 
return G__30975__delegate.call(this,keyvals);};
G__30975.cljs$lang$maxFixedArity = 0;
G__30975.cljs$lang$applyTo = (function (arglist__30977){
var keyvals = cljs.core.seq(arglist__30977);
return G__30975__delegate(keyvals);
});
G__30975.cljs$core$IFn$_invoke$arity$variadic = G__30975__delegate;
return G__30975;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__30978 = null;
if (arguments.length > 0) {
var G__30979__i = 0, G__30979__a = new Array(arguments.length -  0);
while (G__30979__i < G__30979__a.length) {G__30979__a[G__30979__i] = arguments[G__30979__i + 0]; ++G__30979__i;}
G__30978 = new cljs.core.IndexedSeq(G__30979__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__30978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__30982_30984 = obj;
var G__30983_30985 = ((function (G__30982_30984,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__30982_30984,keys))
;
goog.object.forEach(G__30982_30984,G__30983_30985);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__30986 = (i__$1 + (1));
var G__30987 = (j__$1 + (1));
var G__30988 = (len__$1 - (1));
i__$1 = G__30986;
j__$1 = G__30987;
len__$1 = G__30988;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__30989 = (i__$1 - (1));
var G__30990 = (j__$1 - (1));
var G__30991 = (len__$1 - (1));
i__$1 = G__30989;
j__$1 = G__30990;
len__$1 = G__30991;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj30993 = {};
return obj30993;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__30995 = s;
if(G__30995){
var bit__11622__auto__ = (G__30995.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11622__auto__) || (G__30995.cljs$core$ISeq$)){
return true;
} else {
if((!G__30995.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30995);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__30997 = s;
if(G__30997){
var bit__11622__auto__ = (G__30997.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__11622__auto__) || (G__30997.cljs$core$ISeqable$)){
return true;
} else {
if((!G__30997.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__30997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__30997);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__10941__auto__ = cljs.core.fn_QMARK_(f);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var G__31001 = f;
if(G__31001){
var bit__11622__auto__ = (G__31001.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__11622__auto__) || (G__31001.cljs$core$IFn$)){
return true;
} else {
if((!G__31001.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__31001);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__31001);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__31014 = n;
return isNaN(G__31014);
})())) && (!((n === Infinity))) && (((function (){var G__31015 = n;
return parseFloat(G__31015);
})() === (function (){var G__31016 = n;
var G__31017 = (10);
return parseInt(G__31016,G__31017);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__31018__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__31019 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__31020 = etc;
s = G__31019;
xs = G__31020;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__31018 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31021__i = 0, G__31021__a = new Array(arguments.length -  2);
while (G__31021__i < G__31021__a.length) {G__31021__a[G__31021__i] = arguments[G__31021__i + 2]; ++G__31021__i;}
  more = new cljs.core.IndexedSeq(G__31021__a,0);
} 
return G__31018__delegate.call(this,x,y,more);};
G__31018.cljs$lang$maxFixedArity = 2;
G__31018.cljs$lang$applyTo = (function (arglist__31022){
var x = cljs.core.first(arglist__31022);
arglist__31022 = cljs.core.next(arglist__31022);
var y = cljs.core.first(arglist__31022);
var more = cljs.core.rest(arglist__31022);
return G__31018__delegate(x,y,more);
});
G__31018.cljs$core$IFn$_invoke$arity$variadic = G__31018__delegate;
return G__31018;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__31023 = null;
if (arguments.length > 2) {
var G__31024__i = 0, G__31024__a = new Array(arguments.length -  2);
while (G__31024__i < G__31024__a.length) {G__31024__a[G__31024__i] = arguments[G__31024__i + 2]; ++G__31024__i;}
G__31023 = new cljs.core.IndexedSeq(G__31024__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31023);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__31028 = x;
if(G__31028){
var bit__11615__auto__ = (G__31028.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__11615__auto__) || (G__31028.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__31029 = x;
var G__31030 = y;
return goog.array.defaultCompare(G__31029,G__31030);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__31035 = xs;
var G__31036 = ys;
var G__31037 = len;
var G__31038 = (n + (1));
xs = G__31035;
ys = G__31036;
len = G__31037;
n = G__31038;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__31043 = x;
var G__31044 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31043,G__31044) : f.call(null,G__31043,G__31044));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__31045 = y;
var G__31046 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31045,G__31046) : f.call(null,G__31045,G__31046));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__31052 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__31052) : cljs.core.to_array.call(null,G__31052));
})();
var G__31053_31055 = a;
var G__31054_31056 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__31053_31055,G__31054_31056);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__31062 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__31062) : keyfn.call(null,G__31062));
})(),(function (){var G__31063 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__31063) : keyfn.call(null,G__31063));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var G__31069 = f;
var G__31070 = cljs.core.first(s);
var G__31071 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__31069,G__31070,G__31071) : cljs.core.reduce.call(null,G__31069,G__31070,G__31071));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__31072 = val__$1;
var G__31073 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31072,G__31073) : f.call(null,G__31072,G__31073));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31074 = nval;
var G__31075 = cljs.core.next(coll__$1);
val__$1 = G__31074;
coll__$1 = G__31075;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__31079 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__31079) : cljs.core.to_array.call(null,G__31079));
})();
var G__31080_31082 = a;
goog.array.shuffle(G__31080_31082);

var G__31081 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__31081) : cljs.core.vec.call(null,G__31081));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__31085 = coll;
if(G__31085){
var bit__11615__auto__ = (G__31085.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__11615__auto__) || (G__31085.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__31086 = coll;
if(G__31086){
var bit__11615__auto__ = (G__31086.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__11615__auto__) || (G__31086.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__31095 = null;
var G__31095__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__31095__1 = (function (x){
var G__31092 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__31092) : cf.call(null,G__31092));
});
var G__31095__2 = (function (x,y){
var G__31093 = x;
var G__31094 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31093,G__31094) : f.call(null,G__31093,G__31094));
});
G__31095 = function(x,y){
switch(arguments.length){
case 0:
return G__31095__0.call(this);
case 1:
return G__31095__1.call(this,x);
case 2:
return G__31095__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31095.cljs$core$IFn$_invoke$arity$0 = G__31095__0;
G__31095.cljs$core$IFn$_invoke$arity$1 = G__31095__1;
G__31095.cljs$core$IFn$_invoke$arity$2 = G__31095__2;
return G__31095;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__31102 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__31102) : xform.call(null,G__31102));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__31103 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__31103) : f__$1.call(null,G__31103));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__31104__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__31104 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31105__i = 0, G__31105__a = new Array(arguments.length -  2);
while (G__31105__i < G__31105__a.length) {G__31105__a[G__31105__i] = arguments[G__31105__i + 2]; ++G__31105__i;}
  more = new cljs.core.IndexedSeq(G__31105__a,0);
} 
return G__31104__delegate.call(this,x,y,more);};
G__31104.cljs$lang$maxFixedArity = 2;
G__31104.cljs$lang$applyTo = (function (arglist__31106){
var x = cljs.core.first(arglist__31106);
arglist__31106 = cljs.core.next(arglist__31106);
var y = cljs.core.first(arglist__31106);
var more = cljs.core.rest(arglist__31106);
return G__31104__delegate(x,y,more);
});
G__31104.cljs$core$IFn$_invoke$arity$variadic = G__31104__delegate;
return G__31104;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__31107 = null;
if (arguments.length > 2) {
var G__31108__i = 0, G__31108__a = new Array(arguments.length -  2);
while (G__31108__i < G__31108__a.length) {G__31108__a[G__31108__i] = arguments[G__31108__i + 2]; ++G__31108__i;}
G__31107 = new cljs.core.IndexedSeq(G__31108__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31107);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__31109__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__31109 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31110__i = 0, G__31110__a = new Array(arguments.length -  2);
while (G__31110__i < G__31110__a.length) {G__31110__a[G__31110__i] = arguments[G__31110__i + 2]; ++G__31110__i;}
  more = new cljs.core.IndexedSeq(G__31110__a,0);
} 
return G__31109__delegate.call(this,x,y,more);};
G__31109.cljs$lang$maxFixedArity = 2;
G__31109.cljs$lang$applyTo = (function (arglist__31111){
var x = cljs.core.first(arglist__31111);
arglist__31111 = cljs.core.next(arglist__31111);
var y = cljs.core.first(arglist__31111);
var more = cljs.core.rest(arglist__31111);
return G__31109__delegate(x,y,more);
});
G__31109.cljs$core$IFn$_invoke$arity$variadic = G__31109__delegate;
return G__31109;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__31112 = null;
if (arguments.length > 2) {
var G__31113__i = 0, G__31113__a = new Array(arguments.length -  2);
while (G__31113__i < G__31113__a.length) {G__31113__a[G__31113__i] = arguments[G__31113__i + 2]; ++G__31113__i;}
G__31112 = new cljs.core.IndexedSeq(G__31113__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31112);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__31114__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__31114 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31115__i = 0, G__31115__a = new Array(arguments.length -  2);
while (G__31115__i < G__31115__a.length) {G__31115__a[G__31115__i] = arguments[G__31115__i + 2]; ++G__31115__i;}
  more = new cljs.core.IndexedSeq(G__31115__a,0);
} 
return G__31114__delegate.call(this,x,y,more);};
G__31114.cljs$lang$maxFixedArity = 2;
G__31114.cljs$lang$applyTo = (function (arglist__31116){
var x = cljs.core.first(arglist__31116);
arglist__31116 = cljs.core.next(arglist__31116);
var y = cljs.core.first(arglist__31116);
var more = cljs.core.rest(arglist__31116);
return G__31114__delegate(x,y,more);
});
G__31114.cljs$core$IFn$_invoke$arity$variadic = G__31114__delegate;
return G__31114;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__31117 = null;
if (arguments.length > 2) {
var G__31118__i = 0, G__31118__a = new Array(arguments.length -  2);
while (G__31118__i < G__31118__a.length) {G__31118__a[G__31118__i] = arguments[G__31118__i + 2]; ++G__31118__i;}
G__31117 = new cljs.core.IndexedSeq(G__31118__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31117);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__31123__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__31123 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31124__i = 0, G__31124__a = new Array(arguments.length -  2);
while (G__31124__i < G__31124__a.length) {G__31124__a[G__31124__i] = arguments[G__31124__i + 2]; ++G__31124__i;}
  more = new cljs.core.IndexedSeq(G__31124__a,0);
} 
return G__31123__delegate.call(this,x,y,more);};
G__31123.cljs$lang$maxFixedArity = 2;
G__31123.cljs$lang$applyTo = (function (arglist__31125){
var x = cljs.core.first(arglist__31125);
arglist__31125 = cljs.core.next(arglist__31125);
var y = cljs.core.first(arglist__31125);
var more = cljs.core.rest(arglist__31125);
return G__31123__delegate(x,y,more);
});
G__31123.cljs$core$IFn$_invoke$arity$variadic = G__31123__delegate;
return G__31123;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__31126 = null;
if (arguments.length > 2) {
var G__31127__i = 0, G__31127__a = new Array(arguments.length -  2);
while (G__31127__i < G__31127__a.length) {G__31127__a[G__31127__i] = arguments[G__31127__i + 2]; ++G__31127__i;}
G__31126 = new cljs.core.IndexedSeq(G__31127__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31126);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__31128__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__31129 = y;
var G__31130 = cljs.core.first(more);
var G__31131 = cljs.core.next(more);
x = G__31129;
y = G__31130;
more = G__31131;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31128 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31132__i = 0, G__31132__a = new Array(arguments.length -  2);
while (G__31132__i < G__31132__a.length) {G__31132__a[G__31132__i] = arguments[G__31132__i + 2]; ++G__31132__i;}
  more = new cljs.core.IndexedSeq(G__31132__a,0);
} 
return G__31128__delegate.call(this,x,y,more);};
G__31128.cljs$lang$maxFixedArity = 2;
G__31128.cljs$lang$applyTo = (function (arglist__31133){
var x = cljs.core.first(arglist__31133);
arglist__31133 = cljs.core.next(arglist__31133);
var y = cljs.core.first(arglist__31133);
var more = cljs.core.rest(arglist__31133);
return G__31128__delegate(x,y,more);
});
G__31128.cljs$core$IFn$_invoke$arity$variadic = G__31128__delegate;
return G__31128;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__31134 = null;
if (arguments.length > 2) {
var G__31135__i = 0, G__31135__a = new Array(arguments.length -  2);
while (G__31135__i < G__31135__a.length) {G__31135__a[G__31135__i] = arguments[G__31135__i + 2]; ++G__31135__i;}
G__31134 = new cljs.core.IndexedSeq(G__31135__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__31136__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__31137 = y;
var G__31138 = cljs.core.first(more);
var G__31139 = cljs.core.next(more);
x = G__31137;
y = G__31138;
more = G__31139;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31136 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31140__i = 0, G__31140__a = new Array(arguments.length -  2);
while (G__31140__i < G__31140__a.length) {G__31140__a[G__31140__i] = arguments[G__31140__i + 2]; ++G__31140__i;}
  more = new cljs.core.IndexedSeq(G__31140__a,0);
} 
return G__31136__delegate.call(this,x,y,more);};
G__31136.cljs$lang$maxFixedArity = 2;
G__31136.cljs$lang$applyTo = (function (arglist__31141){
var x = cljs.core.first(arglist__31141);
arglist__31141 = cljs.core.next(arglist__31141);
var y = cljs.core.first(arglist__31141);
var more = cljs.core.rest(arglist__31141);
return G__31136__delegate(x,y,more);
});
G__31136.cljs$core$IFn$_invoke$arity$variadic = G__31136__delegate;
return G__31136;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__31142 = null;
if (arguments.length > 2) {
var G__31143__i = 0, G__31143__a = new Array(arguments.length -  2);
while (G__31143__i < G__31143__a.length) {G__31143__a[G__31143__i] = arguments[G__31143__i + 2]; ++G__31143__i;}
G__31142 = new cljs.core.IndexedSeq(G__31143__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__31144__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__31145 = y;
var G__31146 = cljs.core.first(more);
var G__31147 = cljs.core.next(more);
x = G__31145;
y = G__31146;
more = G__31147;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31144 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31148__i = 0, G__31148__a = new Array(arguments.length -  2);
while (G__31148__i < G__31148__a.length) {G__31148__a[G__31148__i] = arguments[G__31148__i + 2]; ++G__31148__i;}
  more = new cljs.core.IndexedSeq(G__31148__a,0);
} 
return G__31144__delegate.call(this,x,y,more);};
G__31144.cljs$lang$maxFixedArity = 2;
G__31144.cljs$lang$applyTo = (function (arglist__31149){
var x = cljs.core.first(arglist__31149);
arglist__31149 = cljs.core.next(arglist__31149);
var y = cljs.core.first(arglist__31149);
var more = cljs.core.rest(arglist__31149);
return G__31144__delegate(x,y,more);
});
G__31144.cljs$core$IFn$_invoke$arity$variadic = G__31144__delegate;
return G__31144;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__31150 = null;
if (arguments.length > 2) {
var G__31151__i = 0, G__31151__a = new Array(arguments.length -  2);
while (G__31151__i < G__31151__a.length) {G__31151__a[G__31151__i] = arguments[G__31151__i + 2]; ++G__31151__i;}
G__31150 = new cljs.core.IndexedSeq(G__31151__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31150);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__31152__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__31153 = y;
var G__31154 = cljs.core.first(more);
var G__31155 = cljs.core.next(more);
x = G__31153;
y = G__31154;
more = G__31155;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31152 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31156__i = 0, G__31156__a = new Array(arguments.length -  2);
while (G__31156__i < G__31156__a.length) {G__31156__a[G__31156__i] = arguments[G__31156__i + 2]; ++G__31156__i;}
  more = new cljs.core.IndexedSeq(G__31156__a,0);
} 
return G__31152__delegate.call(this,x,y,more);};
G__31152.cljs$lang$maxFixedArity = 2;
G__31152.cljs$lang$applyTo = (function (arglist__31157){
var x = cljs.core.first(arglist__31157);
arglist__31157 = cljs.core.next(arglist__31157);
var y = cljs.core.first(arglist__31157);
var more = cljs.core.rest(arglist__31157);
return G__31152__delegate(x,y,more);
});
G__31152.cljs$core$IFn$_invoke$arity$variadic = G__31152__delegate;
return G__31152;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__31158 = null;
if (arguments.length > 2) {
var G__31159__i = 0, G__31159__a = new Array(arguments.length -  2);
while (G__31159__i < G__31159__a.length) {G__31159__a[G__31159__i] = arguments[G__31159__i + 2]; ++G__31159__i;}
G__31158 = new cljs.core.IndexedSeq(G__31159__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__11258__auto__ = x;
var y__11259__auto__ = y;
return ((x__11258__auto__ > y__11259__auto__) ? x__11258__auto__ : y__11259__auto__);
});
var max__3 = (function() { 
var G__31160__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__11258__auto__ = x;
var y__11259__auto__ = y;
return ((x__11258__auto__ > y__11259__auto__) ? x__11258__auto__ : y__11259__auto__);
})(),more);
};
var G__31160 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31161__i = 0, G__31161__a = new Array(arguments.length -  2);
while (G__31161__i < G__31161__a.length) {G__31161__a[G__31161__i] = arguments[G__31161__i + 2]; ++G__31161__i;}
  more = new cljs.core.IndexedSeq(G__31161__a,0);
} 
return G__31160__delegate.call(this,x,y,more);};
G__31160.cljs$lang$maxFixedArity = 2;
G__31160.cljs$lang$applyTo = (function (arglist__31162){
var x = cljs.core.first(arglist__31162);
arglist__31162 = cljs.core.next(arglist__31162);
var y = cljs.core.first(arglist__31162);
var more = cljs.core.rest(arglist__31162);
return G__31160__delegate(x,y,more);
});
G__31160.cljs$core$IFn$_invoke$arity$variadic = G__31160__delegate;
return G__31160;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__31163 = null;
if (arguments.length > 2) {
var G__31164__i = 0, G__31164__a = new Array(arguments.length -  2);
while (G__31164__i < G__31164__a.length) {G__31164__a[G__31164__i] = arguments[G__31164__i + 2]; ++G__31164__i;}
G__31163 = new cljs.core.IndexedSeq(G__31164__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__11265__auto__ = x;
var y__11266__auto__ = y;
return ((x__11265__auto__ < y__11266__auto__) ? x__11265__auto__ : y__11266__auto__);
});
var min__3 = (function() { 
var G__31165__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__11265__auto__ = x;
var y__11266__auto__ = y;
return ((x__11265__auto__ < y__11266__auto__) ? x__11265__auto__ : y__11266__auto__);
})(),more);
};
var G__31165 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31166__i = 0, G__31166__a = new Array(arguments.length -  2);
while (G__31166__i < G__31166__a.length) {G__31166__a[G__31166__i] = arguments[G__31166__i + 2]; ++G__31166__i;}
  more = new cljs.core.IndexedSeq(G__31166__a,0);
} 
return G__31165__delegate.call(this,x,y,more);};
G__31165.cljs$lang$maxFixedArity = 2;
G__31165.cljs$lang$applyTo = (function (arglist__31167){
var x = cljs.core.first(arglist__31167);
arglist__31167 = cljs.core.next(arglist__31167);
var y = cljs.core.first(arglist__31167);
var more = cljs.core.rest(arglist__31167);
return G__31165__delegate(x,y,more);
});
G__31165.cljs$core$IFn$_invoke$arity$variadic = G__31165__delegate;
return G__31165;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__31168 = null;
if (arguments.length > 2) {
var G__31169__i = 0, G__31169__a = new Array(arguments.length -  2);
while (G__31169__i < G__31169__a.length) {G__31169__a[G__31169__i] = arguments[G__31169__i + 2]; ++G__31169__i;}
G__31168 = new cljs.core.IndexedSeq(G__31169__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31168);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__31170__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__31170 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31171__i = 0, G__31171__a = new Array(arguments.length -  2);
while (G__31171__i < G__31171__a.length) {G__31171__a[G__31171__i] = arguments[G__31171__i + 2]; ++G__31171__i;}
  more = new cljs.core.IndexedSeq(G__31171__a,0);
} 
return G__31170__delegate.call(this,x,y,more);};
G__31170.cljs$lang$maxFixedArity = 2;
G__31170.cljs$lang$applyTo = (function (arglist__31172){
var x = cljs.core.first(arglist__31172);
arglist__31172 = cljs.core.next(arglist__31172);
var y = cljs.core.first(arglist__31172);
var more = cljs.core.rest(arglist__31172);
return G__31170__delegate(x,y,more);
});
G__31170.cljs$core$IFn$_invoke$arity$variadic = G__31170__delegate;
return G__31170;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__31173 = null;
if (arguments.length > 2) {
var G__31174__i = 0, G__31174__a = new Array(arguments.length -  2);
while (G__31174__i < G__31174__a.length) {G__31174__a[G__31174__i] = arguments[G__31174__i + 2]; ++G__31174__i;}
G__31173 = new cljs.core.IndexedSeq(G__31174__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__31175__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__31175 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31176__i = 0, G__31176__a = new Array(arguments.length -  2);
while (G__31176__i < G__31176__a.length) {G__31176__a[G__31176__i] = arguments[G__31176__i + 2]; ++G__31176__i;}
  more = new cljs.core.IndexedSeq(G__31176__a,0);
} 
return G__31175__delegate.call(this,x,y,more);};
G__31175.cljs$lang$maxFixedArity = 2;
G__31175.cljs$lang$applyTo = (function (arglist__31177){
var x = cljs.core.first(arglist__31177);
arglist__31177 = cljs.core.next(arglist__31177);
var y = cljs.core.first(arglist__31177);
var more = cljs.core.rest(arglist__31177);
return G__31175__delegate(x,y,more);
});
G__31175.cljs$core$IFn$_invoke$arity$variadic = G__31175__delegate;
return G__31175;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__31178 = null;
if (arguments.length > 2) {
var G__31179__i = 0, G__31179__a = new Array(arguments.length -  2);
while (G__31179__i < G__31179__a.length) {G__31179__a[G__31179__i] = arguments[G__31179__i + 2]; ++G__31179__i;}
G__31178 = new cljs.core.IndexedSeq(G__31179__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__31184__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__31184 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31185__i = 0, G__31185__a = new Array(arguments.length -  2);
while (G__31185__i < G__31185__a.length) {G__31185__a[G__31185__i] = arguments[G__31185__i + 2]; ++G__31185__i;}
  more = new cljs.core.IndexedSeq(G__31185__a,0);
} 
return G__31184__delegate.call(this,x,y,more);};
G__31184.cljs$lang$maxFixedArity = 2;
G__31184.cljs$lang$applyTo = (function (arglist__31186){
var x = cljs.core.first(arglist__31186);
arglist__31186 = cljs.core.next(arglist__31186);
var y = cljs.core.first(arglist__31186);
var more = cljs.core.rest(arglist__31186);
return G__31184__delegate(x,y,more);
});
G__31184.cljs$core$IFn$_invoke$arity$variadic = G__31184__delegate;
return G__31184;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__31187 = null;
if (arguments.length > 2) {
var G__31188__i = 0, G__31188__a = new Array(arguments.length -  2);
while (G__31188__i < G__31188__a.length) {G__31188__a[G__31188__i] = arguments[G__31188__i + 2]; ++G__31188__i;}
G__31187 = new cljs.core.IndexedSeq(G__31188__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__31189__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__31189 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31190__i = 0, G__31190__a = new Array(arguments.length -  2);
while (G__31190__i < G__31190__a.length) {G__31190__a[G__31190__i] = arguments[G__31190__i + 2]; ++G__31190__i;}
  more = new cljs.core.IndexedSeq(G__31190__a,0);
} 
return G__31189__delegate.call(this,x,y,more);};
G__31189.cljs$lang$maxFixedArity = 2;
G__31189.cljs$lang$applyTo = (function (arglist__31191){
var x = cljs.core.first(arglist__31191);
arglist__31191 = cljs.core.next(arglist__31191);
var y = cljs.core.first(arglist__31191);
var more = cljs.core.rest(arglist__31191);
return G__31189__delegate(x,y,more);
});
G__31189.cljs$core$IFn$_invoke$arity$variadic = G__31189__delegate;
return G__31189;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__31192 = null;
if (arguments.length > 2) {
var G__31193__i = 0, G__31193__a = new Array(arguments.length -  2);
while (G__31193__i < G__31193__a.length) {G__31193__a[G__31193__i] = arguments[G__31193__i + 2]; ++G__31193__i;}
G__31192 = new cljs.core.IndexedSeq(G__31193__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31192);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__31194__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__31194 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31195__i = 0, G__31195__a = new Array(arguments.length -  2);
while (G__31195__i < G__31195__a.length) {G__31195__a[G__31195__i] = arguments[G__31195__i + 2]; ++G__31195__i;}
  more = new cljs.core.IndexedSeq(G__31195__a,0);
} 
return G__31194__delegate.call(this,x,y,more);};
G__31194.cljs$lang$maxFixedArity = 2;
G__31194.cljs$lang$applyTo = (function (arglist__31196){
var x = cljs.core.first(arglist__31196);
arglist__31196 = cljs.core.next(arglist__31196);
var y = cljs.core.first(arglist__31196);
var more = cljs.core.rest(arglist__31196);
return G__31194__delegate(x,y,more);
});
G__31194.cljs$core$IFn$_invoke$arity$variadic = G__31194__delegate;
return G__31194;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__31197 = null;
if (arguments.length > 2) {
var G__31198__i = 0, G__31198__a = new Array(arguments.length -  2);
while (G__31198__i < G__31198__a.length) {G__31198__a[G__31198__i] = arguments[G__31198__i + 2]; ++G__31198__i;}
G__31197 = new cljs.core.IndexedSeq(G__31198__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31197);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__31201 = x;
var G__31202 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__31201,G__31202) : cljs.core.mod.call(null,G__31201,G__31202));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__31203__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__31203 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31204__i = 0, G__31204__a = new Array(arguments.length -  2);
while (G__31204__i < G__31204__a.length) {G__31204__a[G__31204__i] = arguments[G__31204__i + 2]; ++G__31204__i;}
  more = new cljs.core.IndexedSeq(G__31204__a,0);
} 
return G__31203__delegate.call(this,x,y,more);};
G__31203.cljs$lang$maxFixedArity = 2;
G__31203.cljs$lang$applyTo = (function (arglist__31205){
var x = cljs.core.first(arglist__31205);
arglist__31205 = cljs.core.next(arglist__31205);
var y = cljs.core.first(arglist__31205);
var more = cljs.core.rest(arglist__31205);
return G__31203__delegate(x,y,more);
});
G__31203.cljs$core$IFn$_invoke$arity$variadic = G__31203__delegate;
return G__31203;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__31206 = null;
if (arguments.length > 2) {
var G__31207__i = 0, G__31207__a = new Array(arguments.length -  2);
while (G__31207__i < G__31207__a.length) {G__31207__a[G__31207__i] = arguments[G__31207__i + 2]; ++G__31207__i;}
G__31206 = new cljs.core.IndexedSeq(G__31207__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__31208__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__31208 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31209__i = 0, G__31209__a = new Array(arguments.length -  2);
while (G__31209__i < G__31209__a.length) {G__31209__a[G__31209__i] = arguments[G__31209__i + 2]; ++G__31209__i;}
  more = new cljs.core.IndexedSeq(G__31209__a,0);
} 
return G__31208__delegate.call(this,x,y,more);};
G__31208.cljs$lang$maxFixedArity = 2;
G__31208.cljs$lang$applyTo = (function (arglist__31210){
var x = cljs.core.first(arglist__31210);
arglist__31210 = cljs.core.next(arglist__31210);
var y = cljs.core.first(arglist__31210);
var more = cljs.core.rest(arglist__31210);
return G__31208__delegate(x,y,more);
});
G__31208.cljs$core$IFn$_invoke$arity$variadic = G__31208__delegate;
return G__31208;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__31211 = null;
if (arguments.length > 2) {
var G__31212__i = 0, G__31212__a = new Array(arguments.length -  2);
while (G__31212__i < G__31212__a.length) {G__31212__a[G__31212__i] = arguments[G__31212__i + 2]; ++G__31212__i;}
G__31211 = new cljs.core.IndexedSeq(G__31212__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31211);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__31215 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__31215) : Math.floor.call(null,G__31215));
} else {
var G__31216 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__31216) : Math.ceil.call(null,G__31216));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__31217__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__31217 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31218__i = 0, G__31218__a = new Array(arguments.length -  2);
while (G__31218__i < G__31218__a.length) {G__31218__a[G__31218__i] = arguments[G__31218__i + 2]; ++G__31218__i;}
  more = new cljs.core.IndexedSeq(G__31218__a,0);
} 
return G__31217__delegate.call(this,x,y,more);};
G__31217.cljs$lang$maxFixedArity = 2;
G__31217.cljs$lang$applyTo = (function (arglist__31219){
var x = cljs.core.first(arglist__31219);
arglist__31219 = cljs.core.next(arglist__31219);
var y = cljs.core.first(arglist__31219);
var more = cljs.core.rest(arglist__31219);
return G__31217__delegate(x,y,more);
});
G__31217.cljs$core$IFn$_invoke$arity$variadic = G__31217__delegate;
return G__31217;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__31220 = null;
if (arguments.length > 2) {
var G__31221__i = 0, G__31221__a = new Array(arguments.length -  2);
while (G__31221__i < G__31221__a.length) {G__31221__a[G__31221__i] = arguments[G__31221__i + 2]; ++G__31221__i;}
G__31220 = new cljs.core.IndexedSeq(G__31221__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__31222__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__31222 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31223__i = 0, G__31223__a = new Array(arguments.length -  2);
while (G__31223__i < G__31223__a.length) {G__31223__a[G__31223__i] = arguments[G__31223__i + 2]; ++G__31223__i;}
  more = new cljs.core.IndexedSeq(G__31223__a,0);
} 
return G__31222__delegate.call(this,x,y,more);};
G__31222.cljs$lang$maxFixedArity = 2;
G__31222.cljs$lang$applyTo = (function (arglist__31224){
var x = cljs.core.first(arglist__31224);
arglist__31224 = cljs.core.next(arglist__31224);
var y = cljs.core.first(arglist__31224);
var more = cljs.core.rest(arglist__31224);
return G__31222__delegate(x,y,more);
});
G__31222.cljs$core$IFn$_invoke$arity$variadic = G__31222__delegate;
return G__31222;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__31225 = null;
if (arguments.length > 2) {
var G__31226__i = 0, G__31226__a = new Array(arguments.length -  2);
while (G__31226__i < G__31226__a.length) {G__31226__a[G__31226__i] = arguments[G__31226__i + 2]; ++G__31226__i;}
G__31225 = new cljs.core.IndexedSeq(G__31226__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31225);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__31227__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__31227 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31228__i = 0, G__31228__a = new Array(arguments.length -  2);
while (G__31228__i < G__31228__a.length) {G__31228__a[G__31228__i] = arguments[G__31228__i + 2]; ++G__31228__i;}
  more = new cljs.core.IndexedSeq(G__31228__a,0);
} 
return G__31227__delegate.call(this,x,y,more);};
G__31227.cljs$lang$maxFixedArity = 2;
G__31227.cljs$lang$applyTo = (function (arglist__31229){
var x = cljs.core.first(arglist__31229);
arglist__31229 = cljs.core.next(arglist__31229);
var y = cljs.core.first(arglist__31229);
var more = cljs.core.rest(arglist__31229);
return G__31227__delegate(x,y,more);
});
G__31227.cljs$core$IFn$_invoke$arity$variadic = G__31227__delegate;
return G__31227;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__31230 = null;
if (arguments.length > 2) {
var G__31231__i = 0, G__31231__a = new Array(arguments.length -  2);
while (G__31231__i < G__31231__a.length) {G__31231__a[G__31231__i] = arguments[G__31231__i + 2]; ++G__31231__i;}
G__31230 = new cljs.core.IndexedSeq(G__31231__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__31232__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__31232 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31233__i = 0, G__31233__a = new Array(arguments.length -  2);
while (G__31233__i < G__31233__a.length) {G__31233__a[G__31233__i] = arguments[G__31233__i + 2]; ++G__31233__i;}
  more = new cljs.core.IndexedSeq(G__31233__a,0);
} 
return G__31232__delegate.call(this,x,y,more);};
G__31232.cljs$lang$maxFixedArity = 2;
G__31232.cljs$lang$applyTo = (function (arglist__31234){
var x = cljs.core.first(arglist__31234);
arglist__31234 = cljs.core.next(arglist__31234);
var y = cljs.core.first(arglist__31234);
var more = cljs.core.rest(arglist__31234);
return G__31232__delegate(x,y,more);
});
G__31232.cljs$core$IFn$_invoke$arity$variadic = G__31232__delegate;
return G__31232;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__31235 = null;
if (arguments.length > 2) {
var G__31236__i = 0, G__31236__a = new Array(arguments.length -  2);
while (G__31236__i < G__31236__a.length) {G__31236__a[G__31236__i] = arguments[G__31236__i + 2]; ++G__31236__i;}
G__31235 = new cljs.core.IndexedSeq(G__31236__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__31241__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__31242 = y;
var G__31243 = cljs.core.first(more);
var G__31244 = cljs.core.next(more);
x = G__31242;
y = G__31243;
more = G__31244;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31241 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31245__i = 0, G__31245__a = new Array(arguments.length -  2);
while (G__31245__i < G__31245__a.length) {G__31245__a[G__31245__i] = arguments[G__31245__i + 2]; ++G__31245__i;}
  more = new cljs.core.IndexedSeq(G__31245__a,0);
} 
return G__31241__delegate.call(this,x,y,more);};
G__31241.cljs$lang$maxFixedArity = 2;
G__31241.cljs$lang$applyTo = (function (arglist__31246){
var x = cljs.core.first(arglist__31246);
arglist__31246 = cljs.core.next(arglist__31246);
var y = cljs.core.first(arglist__31246);
var more = cljs.core.rest(arglist__31246);
return G__31241__delegate(x,y,more);
});
G__31241.cljs$core$IFn$_invoke$arity$variadic = G__31241__delegate;
return G__31241;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__31247 = null;
if (arguments.length > 2) {
var G__31248__i = 0, G__31248__a = new Array(arguments.length -  2);
while (G__31248__i < G__31248__a.length) {G__31248__a[G__31248__i] = arguments[G__31248__i + 2]; ++G__31248__i;}
G__31247 = new cljs.core.IndexedSeq(G__31248__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__31249 = (n__$1 - (1));
var G__31250 = cljs.core.next(xs);
n__$1 = G__31249;
xs = G__31250;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__31254 = x;
return goog.string.buildString(G__31254);
}
});
var str__2 = (function() { 
var G__31255__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__31256 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__31257 = cljs.core.next(more);
sb = G__31256;
more = G__31257;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__31255 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__31258__i = 0, G__31258__a = new Array(arguments.length -  1);
while (G__31258__i < G__31258__a.length) {G__31258__a[G__31258__i] = arguments[G__31258__i + 1]; ++G__31258__i;}
  ys = new cljs.core.IndexedSeq(G__31258__a,0);
} 
return G__31255__delegate.call(this,x,ys);};
G__31255.cljs$lang$maxFixedArity = 1;
G__31255.cljs$lang$applyTo = (function (arglist__31259){
var x = cljs.core.first(arglist__31259);
var ys = cljs.core.rest(arglist__31259);
return G__31255__delegate(x,ys);
});
G__31255.cljs$core$IFn$_invoke$arity$variadic = G__31255__delegate;
return G__31255;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__31260 = null;
if (arguments.length > 1) {
var G__31261__i = 0, G__31261__a = new Array(arguments.length -  1);
while (G__31261__i < G__31261__a.length) {G__31261__a[G__31261__i] = arguments[G__31261__i + 1]; ++G__31261__i;}
G__31260 = new cljs.core.IndexedSeq(G__31261__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__31260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__31262 = cljs.core.next(xs);
var G__31263 = cljs.core.next(ys);
xs = G__31262;
ys = G__31263;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__31264 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__31265 = cljs.core.next(s);
res = G__31264;
s = G__31265;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__31270 = ((h + (cljs.core.hash((function (){var G__31268 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31268) : cljs.core.key.call(null,G__31268));
})()) ^ cljs.core.hash((function (){var G__31269 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31269) : cljs.core.val.call(null,G__31269));
})()))) % (4503599627370496));
var G__31271 = cljs.core.next(s);
h = G__31270;
s = G__31271;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__31272 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__31273 = cljs.core.next(s__$1);
h = G__31272;
s__$1 = G__31273;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__31284_31294 = cljs.core.seq(fn_map);
var chunk__31285_31295 = null;
var count__31286_31296 = (0);
var i__31287_31297 = (0);
while(true){
if((i__31287_31297 < count__31286_31296)){
var vec__31288_31298 = chunk__31285_31295.cljs$core$IIndexed$_nth$arity$2(null,i__31287_31297);
var key_name_31299 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31288_31298,(0),null);
var f_31300 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31288_31298,(1),null);
var str_name_31301 = (function (){var G__31289 = key_name_31299;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__31289) : cljs.core.name.call(null,G__31289));
})();
(obj[str_name_31301] = f_31300);

var G__31302 = seq__31284_31294;
var G__31303 = chunk__31285_31295;
var G__31304 = count__31286_31296;
var G__31305 = (i__31287_31297 + (1));
seq__31284_31294 = G__31302;
chunk__31285_31295 = G__31303;
count__31286_31296 = G__31304;
i__31287_31297 = G__31305;
continue;
} else {
var temp__4406__auto___31306 = cljs.core.seq(seq__31284_31294);
if(temp__4406__auto___31306){
var seq__31284_31307__$1 = temp__4406__auto___31306;
if(cljs.core.chunked_seq_QMARK_(seq__31284_31307__$1)){
var c__11728__auto___31308 = (function (){var G__31290 = seq__31284_31307__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__31290) : cljs.core.chunk_first.call(null,G__31290));
})();
var G__31309 = (function (){var G__31291 = seq__31284_31307__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__31291) : cljs.core.chunk_rest.call(null,G__31291));
})();
var G__31310 = c__11728__auto___31308;
var G__31311 = cljs.core.count(c__11728__auto___31308);
var G__31312 = (0);
seq__31284_31294 = G__31309;
chunk__31285_31295 = G__31310;
count__31286_31296 = G__31311;
i__31287_31297 = G__31312;
continue;
} else {
var vec__31292_31313 = cljs.core.first(seq__31284_31307__$1);
var key_name_31314 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31292_31313,(0),null);
var f_31315 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31292_31313,(1),null);
var str_name_31316 = (function (){var G__31293 = key_name_31314;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__31293) : cljs.core.name.call(null,G__31293));
})();
(obj[str_name_31316] = f_31315);

var G__31317 = cljs.core.next(seq__31284_31307__$1);
var G__31318 = null;
var G__31319 = (0);
var G__31320 = (0);
seq__31284_31294 = G__31317;
chunk__31285_31295 = G__31318;
count__31286_31296 = G__31319;
i__31287_31297 = G__31320;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__31322 = coll;
if(G__31322){
var bit__11622__auto__ = (G__31322.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__11622__auto__) || (G__31322.cljs$core$IReversible$)){
return true;
} else {
if((!G__31322.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__31322);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__31322);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__31323 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__31323;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__31324 = (i - (1));
var G__31325 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__31324;
r = G__31325;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__31326__i = 0, G__31326__a = new Array(arguments.length -  0);
while (G__31326__i < G__31326__a.length) {G__31326__a[G__31326__i] = arguments[G__31326__i + 0]; ++G__31326__i;}
  xs = new cljs.core.IndexedSeq(G__31326__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__31327){
var xs = cljs.core.seq(arglist__31327);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__10941__auto__ = (coll == null);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var G__31331 = coll;
if(G__31331){
var bit__11615__auto__ = (G__31331.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11615__auto__) || (G__31331.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__31333 = x;
if(G__31333){
var bit__11622__auto__ = (G__31333.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__11622__auto__) || (G__31333.cljs$core$IList$)){
return true;
} else {
if((!G__31333.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__31333);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__31333);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__10929__auto__ = cljs.core.not(a.ns);
if(and__10929__auto__){
return b.ns;
} else {
return and__10929__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__31340 = a.ns;
var G__31341 = b.ns;
return goog.array.defaultCompare(G__31340,G__31341);
})();
if(((0) === nsc)){
var G__31342 = a.name;
var G__31343 = b.name;
return goog.array.defaultCompare(G__31342,G__31343);
} else {
return nsc;
}
}
} else {
var G__31344 = a.name;
var G__31345 = b.name;
return goog.array.defaultCompare(G__31344,G__31345);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__11362__auto__ = self__._hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__31347 = null;
var G__31347__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__31347__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__31347 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__31347__2.call(this,self__,coll);
case 3:
return G__31347__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31347.cljs$core$IFn$_invoke$arity$2 = G__31347__2;
G__31347.cljs$core$IFn$_invoke$arity$3 = G__31347__3;
return G__31347;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args31346){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31346)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__31349 = x;
if(G__31349){
var bit__11615__auto__ = (G__31349.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__11615__auto__) || (G__31349.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__31351 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__31351) : cljs.core.name.call(null,G__31351));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__31352 = ls.sval();
ls = G__31352;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__31354 = s;
if(G__31354){
var bit__11615__auto__ = (G__31354.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__11615__auto__) || (G__31354.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__31355 = cljs.core.next(s__$1);
s__$1 = G__31355;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_31356 = (0);
var xs_31357 = cljs.core.seq(coll);
while(true){
if(xs_31357){
(ret[i_31356] = cljs.core.to_array(cljs.core.first(xs_31357)));

var G__31358 = (i_31356 + (1));
var G__31359 = cljs.core.next(xs_31357);
i_31356 = G__31358;
xs_31357 = G__31359;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31362 = (i + (1));
var G__31363 = cljs.core.next(s__$1);
i = G__31362;
s__$1 = G__31363;
continue;
} else {
return a;
}
break;
}
} else {
var n__11828__auto___31364 = size;
var i_31365 = (0);
while(true){
if((i_31365 < n__11828__auto___31364)){
(a[i_31365] = init_val_or_seq);

var G__31366 = (i_31365 + (1));
i_31365 = G__31366;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31369 = (i + (1));
var G__31370 = cljs.core.next(s__$1);
i = G__31369;
s__$1 = G__31370;
continue;
} else {
return a;
}
break;
}
} else {
var n__11828__auto___31371 = size;
var i_31372 = (0);
while(true){
if((i_31372 < n__11828__auto___31371)){
(a[i_31372] = init_val_or_seq);

var G__31373 = (i_31372 + (1));
i_31372 = G__31373;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31376 = (i + (1));
var G__31377 = cljs.core.next(s__$1);
i = G__31376;
s__$1 = G__31377;
continue;
} else {
return a;
}
break;
}
} else {
var n__11828__auto___31378 = size;
var i_31379 = (0);
while(true){
if((i_31379 < n__11828__auto___31378)){
(a[i_31379] = init_val_or_seq);

var G__31380 = (i_31379 + (1));
i_31379 = G__31380;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31383 = (i + (1));
var G__31384 = cljs.core.next(s__$1);
i = G__31383;
s__$1 = G__31384;
continue;
} else {
return a;
}
break;
}
} else {
var n__11828__auto___31385 = size;
var i_31386 = (0);
while(true){
if((i_31386 < n__11828__auto___31385)){
(a[i_31386] = init_val_or_seq);

var G__31387 = (i_31386 + (1));
i_31386 = G__31387;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__31388 = cljs.core.next(s__$1);
var G__31389 = (i - (1));
var G__31390 = (sum + (1));
s__$1 = G__31388;
i = G__31389;
sum = G__31390;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__31410__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__31410 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__31411__i = 0, G__31411__a = new Array(arguments.length -  2);
while (G__31411__i < G__31411__a.length) {G__31411__a[G__31411__i] = arguments[G__31411__i + 2]; ++G__31411__i;}
  zs = new cljs.core.IndexedSeq(G__31411__a,0);
} 
return G__31410__delegate.call(this,x,y,zs);};
G__31410.cljs$lang$maxFixedArity = 2;
G__31410.cljs$lang$applyTo = (function (arglist__31412){
var x = cljs.core.first(arglist__31412);
arglist__31412 = cljs.core.next(arglist__31412);
var y = cljs.core.first(arglist__31412);
var zs = cljs.core.rest(arglist__31412);
return G__31410__delegate(x,y,zs);
});
G__31410.cljs$core$IFn$_invoke$arity$variadic = G__31410__delegate;
return G__31410;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__31413 = null;
if (arguments.length > 2) {
var G__31414__i = 0, G__31414__a = new Array(arguments.length -  2);
while (G__31414__i < G__31414__a.length) {G__31414__a[G__31414__i] = arguments[G__31414__i + 2]; ++G__31414__i;}
G__31413 = new cljs.core.IndexedSeq(G__31414__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31413);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__31415__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__31415 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__31416__i = 0, G__31416__a = new Array(arguments.length -  4);
while (G__31416__i < G__31416__a.length) {G__31416__a[G__31416__i] = arguments[G__31416__i + 4]; ++G__31416__i;}
  more = new cljs.core.IndexedSeq(G__31416__a,0);
} 
return G__31415__delegate.call(this,a,b,c,d,more);};
G__31415.cljs$lang$maxFixedArity = 4;
G__31415.cljs$lang$applyTo = (function (arglist__31417){
var a = cljs.core.first(arglist__31417);
arglist__31417 = cljs.core.next(arglist__31417);
var b = cljs.core.first(arglist__31417);
arglist__31417 = cljs.core.next(arglist__31417);
var c = cljs.core.first(arglist__31417);
arglist__31417 = cljs.core.next(arglist__31417);
var d = cljs.core.first(arglist__31417);
var more = cljs.core.rest(arglist__31417);
return G__31415__delegate(a,b,c,d,more);
});
G__31415.cljs$core$IFn$_invoke$arity$variadic = G__31415__delegate;
return G__31415;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__31418 = null;
if (arguments.length > 4) {
var G__31419__i = 0, G__31419__a = new Array(arguments.length -  4);
while (G__31419__i < G__31419__a.length) {G__31419__a[G__31419__i] = arguments[G__31419__i + 4]; ++G__31419__i;}
G__31418 = new cljs.core.IndexedSeq(G__31419__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__31418);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__31420__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__31421 = ntcoll;
var G__31422 = cljs.core.first(vals);
var G__31423 = cljs.core.next(vals);
tcoll = G__31421;
val = G__31422;
vals = G__31423;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31420 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__31424__i = 0, G__31424__a = new Array(arguments.length -  2);
while (G__31424__i < G__31424__a.length) {G__31424__a[G__31424__i] = arguments[G__31424__i + 2]; ++G__31424__i;}
  vals = new cljs.core.IndexedSeq(G__31424__a,0);
} 
return G__31420__delegate.call(this,tcoll,val,vals);};
G__31420.cljs$lang$maxFixedArity = 2;
G__31420.cljs$lang$applyTo = (function (arglist__31425){
var tcoll = cljs.core.first(arglist__31425);
arglist__31425 = cljs.core.next(arglist__31425);
var val = cljs.core.first(arglist__31425);
var vals = cljs.core.rest(arglist__31425);
return G__31420__delegate(tcoll,val,vals);
});
G__31420.cljs$core$IFn$_invoke$arity$variadic = G__31420__delegate;
return G__31420;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__31426 = null;
if (arguments.length > 2) {
var G__31427__i = 0, G__31427__a = new Array(arguments.length -  2);
while (G__31427__i < G__31427__a.length) {G__31427__a[G__31427__i] = arguments[G__31427__i + 2]; ++G__31427__i;}
G__31426 = new cljs.core.IndexedSeq(G__31427__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__31426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__31428__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__31429 = ntcoll;
var G__31430 = cljs.core.first(kvs);
var G__31431 = cljs.core.second(kvs);
var G__31432 = cljs.core.nnext(kvs);
tcoll = G__31429;
key = G__31430;
val = G__31431;
kvs = G__31432;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31428 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__31433__i = 0, G__31433__a = new Array(arguments.length -  3);
while (G__31433__i < G__31433__a.length) {G__31433__a[G__31433__i] = arguments[G__31433__i + 3]; ++G__31433__i;}
  kvs = new cljs.core.IndexedSeq(G__31433__a,0);
} 
return G__31428__delegate.call(this,tcoll,key,val,kvs);};
G__31428.cljs$lang$maxFixedArity = 3;
G__31428.cljs$lang$applyTo = (function (arglist__31434){
var tcoll = cljs.core.first(arglist__31434);
arglist__31434 = cljs.core.next(arglist__31434);
var key = cljs.core.first(arglist__31434);
arglist__31434 = cljs.core.next(arglist__31434);
var val = cljs.core.first(arglist__31434);
var kvs = cljs.core.rest(arglist__31434);
return G__31428__delegate(tcoll,key,val,kvs);
});
G__31428.cljs$core$IFn$_invoke$arity$variadic = G__31428__delegate;
return G__31428;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__31435 = null;
if (arguments.length > 3) {
var G__31436__i = 0, G__31436__a = new Array(arguments.length -  3);
while (G__31436__i < G__31436__a.length) {G__31436__a[G__31436__i] = arguments[G__31436__i + 3]; ++G__31436__i;}
G__31435 = new cljs.core.IndexedSeq(G__31436__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__31435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__31437__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__31438 = ntcoll;
var G__31439 = cljs.core.first(ks);
var G__31440 = cljs.core.next(ks);
tcoll = G__31438;
key = G__31439;
ks = G__31440;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31437 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__31441__i = 0, G__31441__a = new Array(arguments.length -  2);
while (G__31441__i < G__31441__a.length) {G__31441__a[G__31441__i] = arguments[G__31441__i + 2]; ++G__31441__i;}
  ks = new cljs.core.IndexedSeq(G__31441__a,0);
} 
return G__31437__delegate.call(this,tcoll,key,ks);};
G__31437.cljs$lang$maxFixedArity = 2;
G__31437.cljs$lang$applyTo = (function (arglist__31442){
var tcoll = cljs.core.first(arglist__31442);
arglist__31442 = cljs.core.next(arglist__31442);
var key = cljs.core.first(arglist__31442);
var ks = cljs.core.rest(arglist__31442);
return G__31437__delegate(tcoll,key,ks);
});
G__31437.cljs$core$IFn$_invoke$arity$variadic = G__31437__delegate;
return G__31437;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__31443 = null;
if (arguments.length > 2) {
var G__31444__i = 0, G__31444__a = new Array(arguments.length -  2);
while (G__31444__i < G__31444__a.length) {G__31444__a[G__31444__i] = arguments[G__31444__i + 2]; ++G__31444__i;}
G__31443 = new cljs.core.IndexedSeq(G__31444__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__31443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__31445__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__31446 = ntcoll;
var G__31447 = cljs.core.first(vals);
var G__31448 = cljs.core.next(vals);
tcoll = G__31446;
val = G__31447;
vals = G__31448;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31445 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__31449__i = 0, G__31449__a = new Array(arguments.length -  2);
while (G__31449__i < G__31449__a.length) {G__31449__a[G__31449__i] = arguments[G__31449__i + 2]; ++G__31449__i;}
  vals = new cljs.core.IndexedSeq(G__31449__a,0);
} 
return G__31445__delegate.call(this,tcoll,val,vals);};
G__31445.cljs$lang$maxFixedArity = 2;
G__31445.cljs$lang$applyTo = (function (arglist__31450){
var tcoll = cljs.core.first(arglist__31450);
arglist__31450 = cljs.core.next(arglist__31450);
var val = cljs.core.first(arglist__31450);
var vals = cljs.core.rest(arglist__31450);
return G__31445__delegate(tcoll,val,vals);
});
G__31445.cljs$core$IFn$_invoke$arity$variadic = G__31445__delegate;
return G__31445;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__31451 = null;
if (arguments.length > 2) {
var G__31452__i = 0, G__31452__a = new Array(arguments.length -  2);
while (G__31452__i < G__31452__a.length) {G__31452__a[G__31452__i] = arguments[G__31452__i + 2]; ++G__31452__i;}
G__31451 = new cljs.core.IndexedSeq(G__31452__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__31451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a11872 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a11872);
} else {
var G__31663 = a11872;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31663) : f.call(null,G__31663));
}
} else {
var b11873 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a11872,b11873);
} else {
var G__31664 = a11872;
var G__31665 = b11873;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31664,G__31665) : f.call(null,G__31664,G__31665));
}
} else {
var c11874 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a11872,b11873,c11874);
} else {
var G__31666 = a11872;
var G__31667 = b11873;
var G__31668 = c11874;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31666,G__31667,G__31668) : f.call(null,G__31666,G__31667,G__31668));
}
} else {
var d11875 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a11872,b11873,c11874,d11875);
} else {
var G__31669 = a11872;
var G__31670 = b11873;
var G__31671 = c11874;
var G__31672 = d11875;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31669,G__31670,G__31671,G__31672) : f.call(null,G__31669,G__31670,G__31671,G__31672));
}
} else {
var e11876 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a11872,b11873,c11874,d11875,e11876);
} else {
var G__31673 = a11872;
var G__31674 = b11873;
var G__31675 = c11874;
var G__31676 = d11875;
var G__31677 = e11876;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__31673,G__31674,G__31675,G__31676,G__31677) : f.call(null,G__31673,G__31674,G__31675,G__31676,G__31677));
}
} else {
var f11877 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a11872,b11873,c11874,d11875,e11876,f11877);
} else {
var G__31678 = a11872;
var G__31679 = b11873;
var G__31680 = c11874;
var G__31681 = d11875;
var G__31682 = e11876;
var G__31683 = f11877;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__31678,G__31679,G__31680,G__31681,G__31682,G__31683) : f.call(null,G__31678,G__31679,G__31680,G__31681,G__31682,G__31683));
}
} else {
var g11878 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a11872,b11873,c11874,d11875,e11876,f11877,g11878);
} else {
var G__31684 = a11872;
var G__31685 = b11873;
var G__31686 = c11874;
var G__31687 = d11875;
var G__31688 = e11876;
var G__31689 = f11877;
var G__31690 = g11878;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__31684,G__31685,G__31686,G__31687,G__31688,G__31689,G__31690) : f.call(null,G__31684,G__31685,G__31686,G__31687,G__31688,G__31689,G__31690));
}
} else {
var h11879 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879);
} else {
var G__31691 = a11872;
var G__31692 = b11873;
var G__31693 = c11874;
var G__31694 = d11875;
var G__31695 = e11876;
var G__31696 = f11877;
var G__31697 = g11878;
var G__31698 = h11879;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__31691,G__31692,G__31693,G__31694,G__31695,G__31696,G__31697,G__31698) : f.call(null,G__31691,G__31692,G__31693,G__31694,G__31695,G__31696,G__31697,G__31698));
}
} else {
var i11880 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880);
} else {
var G__31699 = a11872;
var G__31700 = b11873;
var G__31701 = c11874;
var G__31702 = d11875;
var G__31703 = e11876;
var G__31704 = f11877;
var G__31705 = g11878;
var G__31706 = h11879;
var G__31707 = i11880;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__31699,G__31700,G__31701,G__31702,G__31703,G__31704,G__31705,G__31706,G__31707) : f.call(null,G__31699,G__31700,G__31701,G__31702,G__31703,G__31704,G__31705,G__31706,G__31707));
}
} else {
var j11881 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881);
} else {
var G__31708 = a11872;
var G__31709 = b11873;
var G__31710 = c11874;
var G__31711 = d11875;
var G__31712 = e11876;
var G__31713 = f11877;
var G__31714 = g11878;
var G__31715 = h11879;
var G__31716 = i11880;
var G__31717 = j11881;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__31708,G__31709,G__31710,G__31711,G__31712,G__31713,G__31714,G__31715,G__31716,G__31717) : f.call(null,G__31708,G__31709,G__31710,G__31711,G__31712,G__31713,G__31714,G__31715,G__31716,G__31717));
}
} else {
var k11882 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882);
} else {
var G__31718 = a11872;
var G__31719 = b11873;
var G__31720 = c11874;
var G__31721 = d11875;
var G__31722 = e11876;
var G__31723 = f11877;
var G__31724 = g11878;
var G__31725 = h11879;
var G__31726 = i11880;
var G__31727 = j11881;
var G__31728 = k11882;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726,G__31727,G__31728) : f.call(null,G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726,G__31727,G__31728));
}
} else {
var l11883 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883);
} else {
var G__31729 = a11872;
var G__31730 = b11873;
var G__31731 = c11874;
var G__31732 = d11875;
var G__31733 = e11876;
var G__31734 = f11877;
var G__31735 = g11878;
var G__31736 = h11879;
var G__31737 = i11880;
var G__31738 = j11881;
var G__31739 = k11882;
var G__31740 = l11883;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737,G__31738,G__31739,G__31740) : f.call(null,G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737,G__31738,G__31739,G__31740));
}
} else {
var m11884 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884);
} else {
var G__31741 = a11872;
var G__31742 = b11873;
var G__31743 = c11874;
var G__31744 = d11875;
var G__31745 = e11876;
var G__31746 = f11877;
var G__31747 = g11878;
var G__31748 = h11879;
var G__31749 = i11880;
var G__31750 = j11881;
var G__31751 = k11882;
var G__31752 = l11883;
var G__31753 = m11884;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749,G__31750,G__31751,G__31752,G__31753) : f.call(null,G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749,G__31750,G__31751,G__31752,G__31753));
}
} else {
var n11885 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885);
} else {
var G__31754 = a11872;
var G__31755 = b11873;
var G__31756 = c11874;
var G__31757 = d11875;
var G__31758 = e11876;
var G__31759 = f11877;
var G__31760 = g11878;
var G__31761 = h11879;
var G__31762 = i11880;
var G__31763 = j11881;
var G__31764 = k11882;
var G__31765 = l11883;
var G__31766 = m11884;
var G__31767 = n11885;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__31754,G__31755,G__31756,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767) : f.call(null,G__31754,G__31755,G__31756,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767));
}
} else {
var o11886 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886);
} else {
var G__31768 = a11872;
var G__31769 = b11873;
var G__31770 = c11874;
var G__31771 = d11875;
var G__31772 = e11876;
var G__31773 = f11877;
var G__31774 = g11878;
var G__31775 = h11879;
var G__31776 = i11880;
var G__31777 = j11881;
var G__31778 = k11882;
var G__31779 = l11883;
var G__31780 = m11884;
var G__31781 = n11885;
var G__31782 = o11886;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__31768,G__31769,G__31770,G__31771,G__31772,G__31773,G__31774,G__31775,G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782) : f.call(null,G__31768,G__31769,G__31770,G__31771,G__31772,G__31773,G__31774,G__31775,G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782));
}
} else {
var p11887 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887);
} else {
var G__31783 = a11872;
var G__31784 = b11873;
var G__31785 = c11874;
var G__31786 = d11875;
var G__31787 = e11876;
var G__31788 = f11877;
var G__31789 = g11878;
var G__31790 = h11879;
var G__31791 = i11880;
var G__31792 = j11881;
var G__31793 = k11882;
var G__31794 = l11883;
var G__31795 = m11884;
var G__31796 = n11885;
var G__31797 = o11886;
var G__31798 = p11887;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789,G__31790,G__31791,G__31792,G__31793,G__31794,G__31795,G__31796,G__31797,G__31798) : f.call(null,G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789,G__31790,G__31791,G__31792,G__31793,G__31794,G__31795,G__31796,G__31797,G__31798));
}
} else {
var q11888 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887,q11888);
} else {
var G__31799 = a11872;
var G__31800 = b11873;
var G__31801 = c11874;
var G__31802 = d11875;
var G__31803 = e11876;
var G__31804 = f11877;
var G__31805 = g11878;
var G__31806 = h11879;
var G__31807 = i11880;
var G__31808 = j11881;
var G__31809 = k11882;
var G__31810 = l11883;
var G__31811 = m11884;
var G__31812 = n11885;
var G__31813 = o11886;
var G__31814 = p11887;
var G__31815 = q11888;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__31799,G__31800,G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807,G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815) : f.call(null,G__31799,G__31800,G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807,G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815));
}
} else {
var r11889 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887,q11888,r11889);
} else {
var G__31816 = a11872;
var G__31817 = b11873;
var G__31818 = c11874;
var G__31819 = d11875;
var G__31820 = e11876;
var G__31821 = f11877;
var G__31822 = g11878;
var G__31823 = h11879;
var G__31824 = i11880;
var G__31825 = j11881;
var G__31826 = k11882;
var G__31827 = l11883;
var G__31828 = m11884;
var G__31829 = n11885;
var G__31830 = o11886;
var G__31831 = p11887;
var G__31832 = q11888;
var G__31833 = r11889;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__31816,G__31817,G__31818,G__31819,G__31820,G__31821,G__31822,G__31823,G__31824,G__31825,G__31826,G__31827,G__31828,G__31829,G__31830,G__31831,G__31832,G__31833) : f.call(null,G__31816,G__31817,G__31818,G__31819,G__31820,G__31821,G__31822,G__31823,G__31824,G__31825,G__31826,G__31827,G__31828,G__31829,G__31830,G__31831,G__31832,G__31833));
}
} else {
var s11890 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887,q11888,r11889,s11890);
} else {
var G__31834 = a11872;
var G__31835 = b11873;
var G__31836 = c11874;
var G__31837 = d11875;
var G__31838 = e11876;
var G__31839 = f11877;
var G__31840 = g11878;
var G__31841 = h11879;
var G__31842 = i11880;
var G__31843 = j11881;
var G__31844 = k11882;
var G__31845 = l11883;
var G__31846 = m11884;
var G__31847 = n11885;
var G__31848 = o11886;
var G__31849 = p11887;
var G__31850 = q11888;
var G__31851 = r11889;
var G__31852 = s11890;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__31834,G__31835,G__31836,G__31837,G__31838,G__31839,G__31840,G__31841,G__31842,G__31843,G__31844,G__31845,G__31846,G__31847,G__31848,G__31849,G__31850,G__31851,G__31852) : f.call(null,G__31834,G__31835,G__31836,G__31837,G__31838,G__31839,G__31840,G__31841,G__31842,G__31843,G__31844,G__31845,G__31846,G__31847,G__31848,G__31849,G__31850,G__31851,G__31852));
}
} else {
var t11891 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a11872,b11873,c11874,d11875,e11876,f11877,g11878,h11879,i11880,j11881,k11882,l11883,m11884,n11885,o11886,p11887,q11888,r11889,s11890,t11891);
} else {
var G__31853 = a11872;
var G__31854 = b11873;
var G__31855 = c11874;
var G__31856 = d11875;
var G__31857 = e11876;
var G__31858 = f11877;
var G__31859 = g11878;
var G__31860 = h11879;
var G__31861 = i11880;
var G__31862 = j11881;
var G__31863 = k11882;
var G__31864 = l11883;
var G__31865 = m11884;
var G__31866 = n11885;
var G__31867 = o11886;
var G__31868 = p11887;
var G__31869 = q11888;
var G__31870 = r11889;
var G__31871 = s11890;
var G__31872 = t11891;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__31853,G__31854,G__31855,G__31856,G__31857,G__31858,G__31859,G__31860,G__31861,G__31862,G__31863,G__31864,G__31865,G__31866,G__31867,G__31868,G__31869,G__31870,G__31871,G__31872) : f.call(null,G__31853,G__31854,G__31855,G__31856,G__31857,G__31858,G__31859,G__31860,G__31861,G__31862,G__31863,G__31864,G__31865,G__31866,G__31867,G__31868,G__31869,G__31870,G__31871,G__31872));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__31873__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__31873 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__31874__i = 0, G__31874__a = new Array(arguments.length -  5);
while (G__31874__i < G__31874__a.length) {G__31874__a[G__31874__i] = arguments[G__31874__i + 5]; ++G__31874__i;}
  args = new cljs.core.IndexedSeq(G__31874__a,0);
} 
return G__31873__delegate.call(this,f,a,b,c,d,args);};
G__31873.cljs$lang$maxFixedArity = 5;
G__31873.cljs$lang$applyTo = (function (arglist__31875){
var f = cljs.core.first(arglist__31875);
arglist__31875 = cljs.core.next(arglist__31875);
var a = cljs.core.first(arglist__31875);
arglist__31875 = cljs.core.next(arglist__31875);
var b = cljs.core.first(arglist__31875);
arglist__31875 = cljs.core.next(arglist__31875);
var c = cljs.core.first(arglist__31875);
arglist__31875 = cljs.core.next(arglist__31875);
var d = cljs.core.first(arglist__31875);
var args = cljs.core.rest(arglist__31875);
return G__31873__delegate(f,a,b,c,d,args);
});
G__31873.cljs$core$IFn$_invoke$arity$variadic = G__31873__delegate;
return G__31873;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__31876 = null;
if (arguments.length > 5) {
var G__31877__i = 0, G__31877__a = new Array(arguments.length -  5);
while (G__31877__i < G__31877__a.length) {G__31877__a[G__31877__i] = arguments[G__31877__i + 5]; ++G__31877__i;}
G__31876 = new cljs.core.IndexedSeq(G__31877__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__31876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__31893 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31893) : f.call(null,G__31893));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__31894 = cljs.core.meta(obj);
var G__31895 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31894,G__31895) : f.call(null,G__31894,G__31895));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__31896 = cljs.core.meta(obj);
var G__31897 = a;
var G__31898 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31896,G__31897,G__31898) : f.call(null,G__31896,G__31897,G__31898));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__31899 = cljs.core.meta(obj);
var G__31900 = a;
var G__31901 = b;
var G__31902 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31899,G__31900,G__31901,G__31902) : f.call(null,G__31899,G__31900,G__31901,G__31902));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__31903 = cljs.core.meta(obj);
var G__31904 = a;
var G__31905 = b;
var G__31906 = c;
var G__31907 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__31903,G__31904,G__31905,G__31906,G__31907) : f.call(null,G__31903,G__31904,G__31905,G__31906,G__31907));
})());
});
var vary_meta__7 = (function() { 
var G__31908__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__31908 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__31909__i = 0, G__31909__a = new Array(arguments.length -  6);
while (G__31909__i < G__31909__a.length) {G__31909__a[G__31909__i] = arguments[G__31909__i + 6]; ++G__31909__i;}
  args = new cljs.core.IndexedSeq(G__31909__a,0);
} 
return G__31908__delegate.call(this,obj,f,a,b,c,d,args);};
G__31908.cljs$lang$maxFixedArity = 6;
G__31908.cljs$lang$applyTo = (function (arglist__31910){
var obj = cljs.core.first(arglist__31910);
arglist__31910 = cljs.core.next(arglist__31910);
var f = cljs.core.first(arglist__31910);
arglist__31910 = cljs.core.next(arglist__31910);
var a = cljs.core.first(arglist__31910);
arglist__31910 = cljs.core.next(arglist__31910);
var b = cljs.core.first(arglist__31910);
arglist__31910 = cljs.core.next(arglist__31910);
var c = cljs.core.first(arglist__31910);
arglist__31910 = cljs.core.next(arglist__31910);
var d = cljs.core.first(arglist__31910);
var args = cljs.core.rest(arglist__31910);
return G__31908__delegate(obj,f,a,b,c,d,args);
});
G__31908.cljs$core$IFn$_invoke$arity$variadic = G__31908__delegate;
return G__31908;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__31911 = null;
if (arguments.length > 6) {
var G__31912__i = 0, G__31912__a = new Array(arguments.length -  6);
while (G__31912__i < G__31912__a.length) {G__31912__a[G__31912__i] = arguments[G__31912__i + 6]; ++G__31912__i;}
G__31911 = new cljs.core.IndexedSeq(G__31912__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__31911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__31913__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__31913 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31914__i = 0, G__31914__a = new Array(arguments.length -  2);
while (G__31914__i < G__31914__a.length) {G__31914__a[G__31914__i] = arguments[G__31914__i + 2]; ++G__31914__i;}
  more = new cljs.core.IndexedSeq(G__31914__a,0);
} 
return G__31913__delegate.call(this,x,y,more);};
G__31913.cljs$lang$maxFixedArity = 2;
G__31913.cljs$lang$applyTo = (function (arglist__31915){
var x = cljs.core.first(arglist__31915);
arglist__31915 = cljs.core.next(arglist__31915);
var y = cljs.core.first(arglist__31915);
var more = cljs.core.rest(arglist__31915);
return G__31913__delegate(x,y,more);
});
G__31913.cljs$core$IFn$_invoke$arity$variadic = G__31913__delegate;
return G__31913;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__31916 = null;
if (arguments.length > 2) {
var G__31917__i = 0, G__31917__a = new Array(arguments.length -  2);
while (G__31917__i < G__31917__a.length) {G__31917__a[G__31917__i] = arguments[G__31917__i + 2]; ++G__31917__i;}
G__31916 = new cljs.core.IndexedSeq(G__31917__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31916);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t31921 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t31921 = (function (nil_iter,meta31922){
this.nil_iter = nil_iter;
this.meta31922 = meta31922;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t31921.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t31921.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t31921.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t31921.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_31923){
var self__ = this;
var _31923__$1 = this;
return self__.meta31922;
});

cljs.core.t31921.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_31923,meta31922__$1){
var self__ = this;
var _31923__$1 = this;
return (new cljs.core.t31921(self__.nil_iter,meta31922__$1));
});

cljs.core.t31921.cljs$lang$type = true;

cljs.core.t31921.cljs$lang$ctorStr = "cljs.core/t31921";

cljs.core.t31921.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/t31921");
});

cljs.core.__GT_t31921 = (function __GT_t31921(nil_iter__$1,meta31922){
return (new cljs.core.t31921(nil_iter__$1,meta31922));
});

}

return (new cljs.core.t31921(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__10929__auto__ = !((lt.stepper == null));
if(and__10929__auto__){
return self__.iter.hasNext();
} else {
return and__10929__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__31924 = lt;
var G__31925 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__31924,G__31925) : self__.xform.call(null,G__31924,G__31925));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__31926 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__31926) : self__.xform.call(null,G__31926));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__31928 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__31928) : xform.call(null,G__31928));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__31930 = cljs.core.next(iters__$1);
iters__$1 = G__31930;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__11828__auto___31931 = self__.iters.length;
var i_31932 = (0);
while(true){
if((i_31932 < n__11828__auto___31931)){
(self__.nexts[i_31932] = (self__.iters[i_31932]).next());

var G__31933 = (i_31932 + (1));
i_31932 = G__31933;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__10929__auto__ = !((lt.stepper == null));
if(and__10929__auto__){
return this$.hasNext();
} else {
return and__10929__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__31929 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__31929) : self__.xform.call(null,G__31929));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__31938 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__31938) : xform.call(null,G__31938));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__31939_31943 = cljs.core.seq(colls);
var chunk__31940_31944 = null;
var count__31941_31945 = (0);
var i__31942_31946 = (0);
while(true){
if((i__31942_31946 < count__31941_31945)){
var coll_31947 = chunk__31940_31944.cljs$core$IIndexed$_nth$arity$2(null,i__31942_31946);
iters.push(cljs.core.iter(coll_31947));

var G__31948 = seq__31939_31943;
var G__31949 = chunk__31940_31944;
var G__31950 = count__31941_31945;
var G__31951 = (i__31942_31946 + (1));
seq__31939_31943 = G__31948;
chunk__31940_31944 = G__31949;
count__31941_31945 = G__31950;
i__31942_31946 = G__31951;
continue;
} else {
var temp__4406__auto___31952 = cljs.core.seq(seq__31939_31943);
if(temp__4406__auto___31952){
var seq__31939_31953__$1 = temp__4406__auto___31952;
if(cljs.core.chunked_seq_QMARK_(seq__31939_31953__$1)){
var c__11728__auto___31954 = cljs.core.chunk_first(seq__31939_31953__$1);
var G__31955 = cljs.core.chunk_rest(seq__31939_31953__$1);
var G__31956 = c__11728__auto___31954;
var G__31957 = cljs.core.count(c__11728__auto___31954);
var G__31958 = (0);
seq__31939_31943 = G__31955;
chunk__31940_31944 = G__31956;
count__31941_31945 = G__31957;
i__31942_31946 = G__31958;
continue;
} else {
var coll_31959 = cljs.core.first(seq__31939_31953__$1);
iters.push(cljs.core.iter(coll_31959));

var G__31960 = cljs.core.next(seq__31939_31953__$1);
var G__31961 = null;
var G__31962 = (0);
var G__31963 = (0);
seq__31939_31943 = G__31960;
chunk__31940_31944 = G__31961;
count__31941_31945 = G__31962;
i__31942_31946 = G__31963;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__10941__auto__ = cljs.core.seq(coll);
if(or__10941__auto__){
return or__10941__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__31964__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__31964 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__31965__i = 0, G__31965__a = new Array(arguments.length -  2);
while (G__31965__i < G__31965__a.length) {G__31965__a[G__31965__i] = arguments[G__31965__i + 2]; ++G__31965__i;}
  colls = new cljs.core.IndexedSeq(G__31965__a,0);
} 
return G__31964__delegate.call(this,xform,coll,colls);};
G__31964.cljs$lang$maxFixedArity = 2;
G__31964.cljs$lang$applyTo = (function (arglist__31966){
var xform = cljs.core.first(arglist__31966);
arglist__31966 = cljs.core.next(arglist__31966);
var coll = cljs.core.first(arglist__31966);
var colls = cljs.core.rest(arglist__31966);
return G__31964__delegate(xform,coll,colls);
});
G__31964.cljs$core$IFn$_invoke$arity$variadic = G__31964__delegate;
return G__31964;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__31967 = null;
if (arguments.length > 2) {
var G__31968__i = 0, G__31968__a = new Array(arguments.length -  2);
while (G__31968__i < G__31968__a.length) {G__31968__a[G__31968__i] = arguments[G__31968__i + 2]; ++G__31968__i;}
G__31967 = new cljs.core.IndexedSeq(G__31968__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__31967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__31970 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31970) : pred.call(null,G__31970));
})())){
var G__31971 = pred;
var G__31972 = cljs.core.next(coll);
pred = G__31971;
coll = G__31972;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__10941__auto__ = (function (){var G__31976 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31976) : pred.call(null,G__31976));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__31977 = pred;
var G__31978 = cljs.core.next(coll);
pred = G__31977;
coll = G__31978;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__31985 = null;
var G__31985__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__31985__1 = (function (x){
return cljs.core.not((function (){var G__31982 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31982) : f.call(null,G__31982));
})());
});
var G__31985__2 = (function (x,y){
return cljs.core.not((function (){var G__31983 = x;
var G__31984 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31983,G__31984) : f.call(null,G__31983,G__31984));
})());
});
var G__31985__3 = (function() { 
var G__31986__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__31986 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__31987__i = 0, G__31987__a = new Array(arguments.length -  2);
while (G__31987__i < G__31987__a.length) {G__31987__a[G__31987__i] = arguments[G__31987__i + 2]; ++G__31987__i;}
  zs = new cljs.core.IndexedSeq(G__31987__a,0);
} 
return G__31986__delegate.call(this,x,y,zs);};
G__31986.cljs$lang$maxFixedArity = 2;
G__31986.cljs$lang$applyTo = (function (arglist__31988){
var x = cljs.core.first(arglist__31988);
arglist__31988 = cljs.core.next(arglist__31988);
var y = cljs.core.first(arglist__31988);
var zs = cljs.core.rest(arglist__31988);
return G__31986__delegate(x,y,zs);
});
G__31986.cljs$core$IFn$_invoke$arity$variadic = G__31986__delegate;
return G__31986;
})()
;
G__31985 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__31985__0.call(this);
case 1:
return G__31985__1.call(this,x);
case 2:
return G__31985__2.call(this,x,y);
default:
var G__31989 = null;
if (arguments.length > 2) {
var G__31990__i = 0, G__31990__a = new Array(arguments.length -  2);
while (G__31990__i < G__31990__a.length) {G__31990__a[G__31990__i] = arguments[G__31990__i + 2]; ++G__31990__i;}
G__31989 = new cljs.core.IndexedSeq(G__31990__a,0);
}
return G__31985__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31989);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31985.cljs$lang$maxFixedArity = 2;
G__31985.cljs$lang$applyTo = G__31985__3.cljs$lang$applyTo;
G__31985.cljs$core$IFn$_invoke$arity$0 = G__31985__0;
G__31985.cljs$core$IFn$_invoke$arity$1 = G__31985__1;
G__31985.cljs$core$IFn$_invoke$arity$2 = G__31985__2;
G__31985.cljs$core$IFn$_invoke$arity$variadic = G__31985__3.cljs$core$IFn$_invoke$arity$variadic;
return G__31985;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__31991__delegate = function (args){
return x;
};
var G__31991 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31992__i = 0, G__31992__a = new Array(arguments.length -  0);
while (G__31992__i < G__31992__a.length) {G__31992__a[G__31992__i] = arguments[G__31992__i + 0]; ++G__31992__i;}
  args = new cljs.core.IndexedSeq(G__31992__a,0);
} 
return G__31991__delegate.call(this,args);};
G__31991.cljs$lang$maxFixedArity = 0;
G__31991.cljs$lang$applyTo = (function (arglist__31993){
var args = cljs.core.seq(arglist__31993);
return G__31991__delegate(args);
});
G__31991.cljs$core$IFn$_invoke$arity$variadic = G__31991__delegate;
return G__31991;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__32048 = null;
var G__32048__0 = (function (){
var G__32021 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32021) : f.call(null,G__32021));
});
var G__32048__1 = (function (x){
var G__32022 = (function (){var G__32023 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32023) : g.call(null,G__32023));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32022) : f.call(null,G__32022));
});
var G__32048__2 = (function (x,y){
var G__32024 = (function (){var G__32025 = x;
var G__32026 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__32025,G__32026) : g.call(null,G__32025,G__32026));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32024) : f.call(null,G__32024));
});
var G__32048__3 = (function (x,y,z){
var G__32027 = (function (){var G__32028 = x;
var G__32029 = y;
var G__32030 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__32028,G__32029,G__32030) : g.call(null,G__32028,G__32029,G__32030));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32027) : f.call(null,G__32027));
});
var G__32048__4 = (function() { 
var G__32049__delegate = function (x,y,z,args){
var G__32031 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32031) : f.call(null,G__32031));
};
var G__32049 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32050__i = 0, G__32050__a = new Array(arguments.length -  3);
while (G__32050__i < G__32050__a.length) {G__32050__a[G__32050__i] = arguments[G__32050__i + 3]; ++G__32050__i;}
  args = new cljs.core.IndexedSeq(G__32050__a,0);
} 
return G__32049__delegate.call(this,x,y,z,args);};
G__32049.cljs$lang$maxFixedArity = 3;
G__32049.cljs$lang$applyTo = (function (arglist__32051){
var x = cljs.core.first(arglist__32051);
arglist__32051 = cljs.core.next(arglist__32051);
var y = cljs.core.first(arglist__32051);
arglist__32051 = cljs.core.next(arglist__32051);
var z = cljs.core.first(arglist__32051);
var args = cljs.core.rest(arglist__32051);
return G__32049__delegate(x,y,z,args);
});
G__32049.cljs$core$IFn$_invoke$arity$variadic = G__32049__delegate;
return G__32049;
})()
;
G__32048 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32048__0.call(this);
case 1:
return G__32048__1.call(this,x);
case 2:
return G__32048__2.call(this,x,y);
case 3:
return G__32048__3.call(this,x,y,z);
default:
var G__32052 = null;
if (arguments.length > 3) {
var G__32053__i = 0, G__32053__a = new Array(arguments.length -  3);
while (G__32053__i < G__32053__a.length) {G__32053__a[G__32053__i] = arguments[G__32053__i + 3]; ++G__32053__i;}
G__32052 = new cljs.core.IndexedSeq(G__32053__a,0);
}
return G__32048__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32048.cljs$lang$maxFixedArity = 3;
G__32048.cljs$lang$applyTo = G__32048__4.cljs$lang$applyTo;
G__32048.cljs$core$IFn$_invoke$arity$0 = G__32048__0;
G__32048.cljs$core$IFn$_invoke$arity$1 = G__32048__1;
G__32048.cljs$core$IFn$_invoke$arity$2 = G__32048__2;
G__32048.cljs$core$IFn$_invoke$arity$3 = G__32048__3;
G__32048.cljs$core$IFn$_invoke$arity$variadic = G__32048__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32048;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__32054 = null;
var G__32054__0 = (function (){
var G__32032 = (function (){var G__32033 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32033) : g.call(null,G__32033));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32032) : f.call(null,G__32032));
});
var G__32054__1 = (function (x){
var G__32034 = (function (){var G__32035 = (function (){var G__32036 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__32036) : h.call(null,G__32036));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32035) : g.call(null,G__32035));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32034) : f.call(null,G__32034));
});
var G__32054__2 = (function (x,y){
var G__32037 = (function (){var G__32038 = (function (){var G__32039 = x;
var G__32040 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__32039,G__32040) : h.call(null,G__32039,G__32040));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32038) : g.call(null,G__32038));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32037) : f.call(null,G__32037));
});
var G__32054__3 = (function (x,y,z){
var G__32041 = (function (){var G__32042 = (function (){var G__32043 = x;
var G__32044 = y;
var G__32045 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__32043,G__32044,G__32045) : h.call(null,G__32043,G__32044,G__32045));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32042) : g.call(null,G__32042));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32041) : f.call(null,G__32041));
});
var G__32054__4 = (function() { 
var G__32055__delegate = function (x,y,z,args){
var G__32046 = (function (){var G__32047 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32047) : g.call(null,G__32047));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32046) : f.call(null,G__32046));
};
var G__32055 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32056__i = 0, G__32056__a = new Array(arguments.length -  3);
while (G__32056__i < G__32056__a.length) {G__32056__a[G__32056__i] = arguments[G__32056__i + 3]; ++G__32056__i;}
  args = new cljs.core.IndexedSeq(G__32056__a,0);
} 
return G__32055__delegate.call(this,x,y,z,args);};
G__32055.cljs$lang$maxFixedArity = 3;
G__32055.cljs$lang$applyTo = (function (arglist__32057){
var x = cljs.core.first(arglist__32057);
arglist__32057 = cljs.core.next(arglist__32057);
var y = cljs.core.first(arglist__32057);
arglist__32057 = cljs.core.next(arglist__32057);
var z = cljs.core.first(arglist__32057);
var args = cljs.core.rest(arglist__32057);
return G__32055__delegate(x,y,z,args);
});
G__32055.cljs$core$IFn$_invoke$arity$variadic = G__32055__delegate;
return G__32055;
})()
;
G__32054 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32054__0.call(this);
case 1:
return G__32054__1.call(this,x);
case 2:
return G__32054__2.call(this,x,y);
case 3:
return G__32054__3.call(this,x,y,z);
default:
var G__32058 = null;
if (arguments.length > 3) {
var G__32059__i = 0, G__32059__a = new Array(arguments.length -  3);
while (G__32059__i < G__32059__a.length) {G__32059__a[G__32059__i] = arguments[G__32059__i + 3]; ++G__32059__i;}
G__32058 = new cljs.core.IndexedSeq(G__32059__a,0);
}
return G__32054__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32054.cljs$lang$maxFixedArity = 3;
G__32054.cljs$lang$applyTo = G__32054__4.cljs$lang$applyTo;
G__32054.cljs$core$IFn$_invoke$arity$0 = G__32054__0;
G__32054.cljs$core$IFn$_invoke$arity$1 = G__32054__1;
G__32054.cljs$core$IFn$_invoke$arity$2 = G__32054__2;
G__32054.cljs$core$IFn$_invoke$arity$3 = G__32054__3;
G__32054.cljs$core$IFn$_invoke$arity$variadic = G__32054__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32054;
})()
});
var comp__4 = (function() { 
var G__32060__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__32061__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__32062 = cljs.core.first(fs__$2).call(null,ret);
var G__32063 = cljs.core.next(fs__$2);
ret = G__32062;
fs__$2 = G__32063;
continue;
} else {
return ret;
}
break;
}
};
var G__32061 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32064__i = 0, G__32064__a = new Array(arguments.length -  0);
while (G__32064__i < G__32064__a.length) {G__32064__a[G__32064__i] = arguments[G__32064__i + 0]; ++G__32064__i;}
  args = new cljs.core.IndexedSeq(G__32064__a,0);
} 
return G__32061__delegate.call(this,args);};
G__32061.cljs$lang$maxFixedArity = 0;
G__32061.cljs$lang$applyTo = (function (arglist__32065){
var args = cljs.core.seq(arglist__32065);
return G__32061__delegate(args);
});
G__32061.cljs$core$IFn$_invoke$arity$variadic = G__32061__delegate;
return G__32061;
})()
;
;})(fs__$1))
};
var G__32060 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__32066__i = 0, G__32066__a = new Array(arguments.length -  3);
while (G__32066__i < G__32066__a.length) {G__32066__a[G__32066__i] = arguments[G__32066__i + 3]; ++G__32066__i;}
  fs = new cljs.core.IndexedSeq(G__32066__a,0);
} 
return G__32060__delegate.call(this,f1,f2,f3,fs);};
G__32060.cljs$lang$maxFixedArity = 3;
G__32060.cljs$lang$applyTo = (function (arglist__32067){
var f1 = cljs.core.first(arglist__32067);
arglist__32067 = cljs.core.next(arglist__32067);
var f2 = cljs.core.first(arglist__32067);
arglist__32067 = cljs.core.next(arglist__32067);
var f3 = cljs.core.first(arglist__32067);
var fs = cljs.core.rest(arglist__32067);
return G__32060__delegate(f1,f2,f3,fs);
});
G__32060.cljs$core$IFn$_invoke$arity$variadic = G__32060__delegate;
return G__32060;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__32068 = null;
if (arguments.length > 3) {
var G__32069__i = 0, G__32069__a = new Array(arguments.length -  3);
while (G__32069__i < G__32069__a.length) {G__32069__a[G__32069__i] = arguments[G__32069__i + 3]; ++G__32069__i;}
G__32068 = new cljs.core.IndexedSeq(G__32069__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__32068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__32154 = null;
var G__32154__0 = (function (){
var G__32112 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32112) : f.call(null,G__32112));
});
var G__32154__1 = (function (x){
var G__32113 = arg1;
var G__32114 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32113,G__32114) : f.call(null,G__32113,G__32114));
});
var G__32154__2 = (function (x,y){
var G__32115 = arg1;
var G__32116 = x;
var G__32117 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32115,G__32116,G__32117) : f.call(null,G__32115,G__32116,G__32117));
});
var G__32154__3 = (function (x,y,z){
var G__32118 = arg1;
var G__32119 = x;
var G__32120 = y;
var G__32121 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32118,G__32119,G__32120,G__32121) : f.call(null,G__32118,G__32119,G__32120,G__32121));
});
var G__32154__4 = (function() { 
var G__32155__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__32155 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32156__i = 0, G__32156__a = new Array(arguments.length -  3);
while (G__32156__i < G__32156__a.length) {G__32156__a[G__32156__i] = arguments[G__32156__i + 3]; ++G__32156__i;}
  args = new cljs.core.IndexedSeq(G__32156__a,0);
} 
return G__32155__delegate.call(this,x,y,z,args);};
G__32155.cljs$lang$maxFixedArity = 3;
G__32155.cljs$lang$applyTo = (function (arglist__32157){
var x = cljs.core.first(arglist__32157);
arglist__32157 = cljs.core.next(arglist__32157);
var y = cljs.core.first(arglist__32157);
arglist__32157 = cljs.core.next(arglist__32157);
var z = cljs.core.first(arglist__32157);
var args = cljs.core.rest(arglist__32157);
return G__32155__delegate(x,y,z,args);
});
G__32155.cljs$core$IFn$_invoke$arity$variadic = G__32155__delegate;
return G__32155;
})()
;
G__32154 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32154__0.call(this);
case 1:
return G__32154__1.call(this,x);
case 2:
return G__32154__2.call(this,x,y);
case 3:
return G__32154__3.call(this,x,y,z);
default:
var G__32158 = null;
if (arguments.length > 3) {
var G__32159__i = 0, G__32159__a = new Array(arguments.length -  3);
while (G__32159__i < G__32159__a.length) {G__32159__a[G__32159__i] = arguments[G__32159__i + 3]; ++G__32159__i;}
G__32158 = new cljs.core.IndexedSeq(G__32159__a,0);
}
return G__32154__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32154.cljs$lang$maxFixedArity = 3;
G__32154.cljs$lang$applyTo = G__32154__4.cljs$lang$applyTo;
G__32154.cljs$core$IFn$_invoke$arity$0 = G__32154__0;
G__32154.cljs$core$IFn$_invoke$arity$1 = G__32154__1;
G__32154.cljs$core$IFn$_invoke$arity$2 = G__32154__2;
G__32154.cljs$core$IFn$_invoke$arity$3 = G__32154__3;
G__32154.cljs$core$IFn$_invoke$arity$variadic = G__32154__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32154;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__32160 = null;
var G__32160__0 = (function (){
var G__32122 = arg1;
var G__32123 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32122,G__32123) : f.call(null,G__32122,G__32123));
});
var G__32160__1 = (function (x){
var G__32124 = arg1;
var G__32125 = arg2;
var G__32126 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32124,G__32125,G__32126) : f.call(null,G__32124,G__32125,G__32126));
});
var G__32160__2 = (function (x,y){
var G__32127 = arg1;
var G__32128 = arg2;
var G__32129 = x;
var G__32130 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32127,G__32128,G__32129,G__32130) : f.call(null,G__32127,G__32128,G__32129,G__32130));
});
var G__32160__3 = (function (x,y,z){
var G__32131 = arg1;
var G__32132 = arg2;
var G__32133 = x;
var G__32134 = y;
var G__32135 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32131,G__32132,G__32133,G__32134,G__32135) : f.call(null,G__32131,G__32132,G__32133,G__32134,G__32135));
});
var G__32160__4 = (function() { 
var G__32161__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__32161 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32162__i = 0, G__32162__a = new Array(arguments.length -  3);
while (G__32162__i < G__32162__a.length) {G__32162__a[G__32162__i] = arguments[G__32162__i + 3]; ++G__32162__i;}
  args = new cljs.core.IndexedSeq(G__32162__a,0);
} 
return G__32161__delegate.call(this,x,y,z,args);};
G__32161.cljs$lang$maxFixedArity = 3;
G__32161.cljs$lang$applyTo = (function (arglist__32163){
var x = cljs.core.first(arglist__32163);
arglist__32163 = cljs.core.next(arglist__32163);
var y = cljs.core.first(arglist__32163);
arglist__32163 = cljs.core.next(arglist__32163);
var z = cljs.core.first(arglist__32163);
var args = cljs.core.rest(arglist__32163);
return G__32161__delegate(x,y,z,args);
});
G__32161.cljs$core$IFn$_invoke$arity$variadic = G__32161__delegate;
return G__32161;
})()
;
G__32160 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32160__0.call(this);
case 1:
return G__32160__1.call(this,x);
case 2:
return G__32160__2.call(this,x,y);
case 3:
return G__32160__3.call(this,x,y,z);
default:
var G__32164 = null;
if (arguments.length > 3) {
var G__32165__i = 0, G__32165__a = new Array(arguments.length -  3);
while (G__32165__i < G__32165__a.length) {G__32165__a[G__32165__i] = arguments[G__32165__i + 3]; ++G__32165__i;}
G__32164 = new cljs.core.IndexedSeq(G__32165__a,0);
}
return G__32160__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32164);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32160.cljs$lang$maxFixedArity = 3;
G__32160.cljs$lang$applyTo = G__32160__4.cljs$lang$applyTo;
G__32160.cljs$core$IFn$_invoke$arity$0 = G__32160__0;
G__32160.cljs$core$IFn$_invoke$arity$1 = G__32160__1;
G__32160.cljs$core$IFn$_invoke$arity$2 = G__32160__2;
G__32160.cljs$core$IFn$_invoke$arity$3 = G__32160__3;
G__32160.cljs$core$IFn$_invoke$arity$variadic = G__32160__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32160;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__32166 = null;
var G__32166__0 = (function (){
var G__32136 = arg1;
var G__32137 = arg2;
var G__32138 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32136,G__32137,G__32138) : f.call(null,G__32136,G__32137,G__32138));
});
var G__32166__1 = (function (x){
var G__32139 = arg1;
var G__32140 = arg2;
var G__32141 = arg3;
var G__32142 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32139,G__32140,G__32141,G__32142) : f.call(null,G__32139,G__32140,G__32141,G__32142));
});
var G__32166__2 = (function (x,y){
var G__32143 = arg1;
var G__32144 = arg2;
var G__32145 = arg3;
var G__32146 = x;
var G__32147 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32143,G__32144,G__32145,G__32146,G__32147) : f.call(null,G__32143,G__32144,G__32145,G__32146,G__32147));
});
var G__32166__3 = (function (x,y,z){
var G__32148 = arg1;
var G__32149 = arg2;
var G__32150 = arg3;
var G__32151 = x;
var G__32152 = y;
var G__32153 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__32148,G__32149,G__32150,G__32151,G__32152,G__32153) : f.call(null,G__32148,G__32149,G__32150,G__32151,G__32152,G__32153));
});
var G__32166__4 = (function() { 
var G__32167__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__32167 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32168__i = 0, G__32168__a = new Array(arguments.length -  3);
while (G__32168__i < G__32168__a.length) {G__32168__a[G__32168__i] = arguments[G__32168__i + 3]; ++G__32168__i;}
  args = new cljs.core.IndexedSeq(G__32168__a,0);
} 
return G__32167__delegate.call(this,x,y,z,args);};
G__32167.cljs$lang$maxFixedArity = 3;
G__32167.cljs$lang$applyTo = (function (arglist__32169){
var x = cljs.core.first(arglist__32169);
arglist__32169 = cljs.core.next(arglist__32169);
var y = cljs.core.first(arglist__32169);
arglist__32169 = cljs.core.next(arglist__32169);
var z = cljs.core.first(arglist__32169);
var args = cljs.core.rest(arglist__32169);
return G__32167__delegate(x,y,z,args);
});
G__32167.cljs$core$IFn$_invoke$arity$variadic = G__32167__delegate;
return G__32167;
})()
;
G__32166 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32166__0.call(this);
case 1:
return G__32166__1.call(this,x);
case 2:
return G__32166__2.call(this,x,y);
case 3:
return G__32166__3.call(this,x,y,z);
default:
var G__32170 = null;
if (arguments.length > 3) {
var G__32171__i = 0, G__32171__a = new Array(arguments.length -  3);
while (G__32171__i < G__32171__a.length) {G__32171__a[G__32171__i] = arguments[G__32171__i + 3]; ++G__32171__i;}
G__32170 = new cljs.core.IndexedSeq(G__32171__a,0);
}
return G__32166__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32170);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32166.cljs$lang$maxFixedArity = 3;
G__32166.cljs$lang$applyTo = G__32166__4.cljs$lang$applyTo;
G__32166.cljs$core$IFn$_invoke$arity$0 = G__32166__0;
G__32166.cljs$core$IFn$_invoke$arity$1 = G__32166__1;
G__32166.cljs$core$IFn$_invoke$arity$2 = G__32166__2;
G__32166.cljs$core$IFn$_invoke$arity$3 = G__32166__3;
G__32166.cljs$core$IFn$_invoke$arity$variadic = G__32166__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32166;
})()
});
var partial__5 = (function() { 
var G__32172__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__32173__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__32173 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32174__i = 0, G__32174__a = new Array(arguments.length -  0);
while (G__32174__i < G__32174__a.length) {G__32174__a[G__32174__i] = arguments[G__32174__i + 0]; ++G__32174__i;}
  args = new cljs.core.IndexedSeq(G__32174__a,0);
} 
return G__32173__delegate.call(this,args);};
G__32173.cljs$lang$maxFixedArity = 0;
G__32173.cljs$lang$applyTo = (function (arglist__32175){
var args = cljs.core.seq(arglist__32175);
return G__32173__delegate(args);
});
G__32173.cljs$core$IFn$_invoke$arity$variadic = G__32173__delegate;
return G__32173;
})()
;
};
var G__32172 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__32176__i = 0, G__32176__a = new Array(arguments.length -  4);
while (G__32176__i < G__32176__a.length) {G__32176__a[G__32176__i] = arguments[G__32176__i + 4]; ++G__32176__i;}
  more = new cljs.core.IndexedSeq(G__32176__a,0);
} 
return G__32172__delegate.call(this,f,arg1,arg2,arg3,more);};
G__32172.cljs$lang$maxFixedArity = 4;
G__32172.cljs$lang$applyTo = (function (arglist__32177){
var f = cljs.core.first(arglist__32177);
arglist__32177 = cljs.core.next(arglist__32177);
var arg1 = cljs.core.first(arglist__32177);
arglist__32177 = cljs.core.next(arglist__32177);
var arg2 = cljs.core.first(arglist__32177);
arglist__32177 = cljs.core.next(arglist__32177);
var arg3 = cljs.core.first(arglist__32177);
var more = cljs.core.rest(arglist__32177);
return G__32172__delegate(f,arg1,arg2,arg3,more);
});
G__32172.cljs$core$IFn$_invoke$arity$variadic = G__32172__delegate;
return G__32172;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__32178 = null;
if (arguments.length > 4) {
var G__32179__i = 0, G__32179__a = new Array(arguments.length -  4);
while (G__32179__i < G__32179__a.length) {G__32179__a[G__32179__i] = arguments[G__32179__i + 4]; ++G__32179__i;}
G__32178 = new cljs.core.IndexedSeq(G__32179__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__32178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__32212 = null;
var G__32212__1 = (function (a){
var G__32196 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32196) : f.call(null,G__32196));
});
var G__32212__2 = (function (a,b){
var G__32197 = (((a == null))?x:a);
var G__32198 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32197,G__32198) : f.call(null,G__32197,G__32198));
});
var G__32212__3 = (function (a,b,c){
var G__32199 = (((a == null))?x:a);
var G__32200 = b;
var G__32201 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32199,G__32200,G__32201) : f.call(null,G__32199,G__32200,G__32201));
});
var G__32212__4 = (function() { 
var G__32213__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__32213 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__32214__i = 0, G__32214__a = new Array(arguments.length -  3);
while (G__32214__i < G__32214__a.length) {G__32214__a[G__32214__i] = arguments[G__32214__i + 3]; ++G__32214__i;}
  ds = new cljs.core.IndexedSeq(G__32214__a,0);
} 
return G__32213__delegate.call(this,a,b,c,ds);};
G__32213.cljs$lang$maxFixedArity = 3;
G__32213.cljs$lang$applyTo = (function (arglist__32215){
var a = cljs.core.first(arglist__32215);
arglist__32215 = cljs.core.next(arglist__32215);
var b = cljs.core.first(arglist__32215);
arglist__32215 = cljs.core.next(arglist__32215);
var c = cljs.core.first(arglist__32215);
var ds = cljs.core.rest(arglist__32215);
return G__32213__delegate(a,b,c,ds);
});
G__32213.cljs$core$IFn$_invoke$arity$variadic = G__32213__delegate;
return G__32213;
})()
;
G__32212 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__32212__1.call(this,a);
case 2:
return G__32212__2.call(this,a,b);
case 3:
return G__32212__3.call(this,a,b,c);
default:
var G__32216 = null;
if (arguments.length > 3) {
var G__32217__i = 0, G__32217__a = new Array(arguments.length -  3);
while (G__32217__i < G__32217__a.length) {G__32217__a[G__32217__i] = arguments[G__32217__i + 3]; ++G__32217__i;}
G__32216 = new cljs.core.IndexedSeq(G__32217__a,0);
}
return G__32212__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__32216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32212.cljs$lang$maxFixedArity = 3;
G__32212.cljs$lang$applyTo = G__32212__4.cljs$lang$applyTo;
G__32212.cljs$core$IFn$_invoke$arity$1 = G__32212__1;
G__32212.cljs$core$IFn$_invoke$arity$2 = G__32212__2;
G__32212.cljs$core$IFn$_invoke$arity$3 = G__32212__3;
G__32212.cljs$core$IFn$_invoke$arity$variadic = G__32212__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32212;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__32218 = null;
var G__32218__2 = (function (a,b){
var G__32202 = (((a == null))?x:a);
var G__32203 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32202,G__32203) : f.call(null,G__32202,G__32203));
});
var G__32218__3 = (function (a,b,c){
var G__32204 = (((a == null))?x:a);
var G__32205 = (((b == null))?y:b);
var G__32206 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32204,G__32205,G__32206) : f.call(null,G__32204,G__32205,G__32206));
});
var G__32218__4 = (function() { 
var G__32219__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__32219 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__32220__i = 0, G__32220__a = new Array(arguments.length -  3);
while (G__32220__i < G__32220__a.length) {G__32220__a[G__32220__i] = arguments[G__32220__i + 3]; ++G__32220__i;}
  ds = new cljs.core.IndexedSeq(G__32220__a,0);
} 
return G__32219__delegate.call(this,a,b,c,ds);};
G__32219.cljs$lang$maxFixedArity = 3;
G__32219.cljs$lang$applyTo = (function (arglist__32221){
var a = cljs.core.first(arglist__32221);
arglist__32221 = cljs.core.next(arglist__32221);
var b = cljs.core.first(arglist__32221);
arglist__32221 = cljs.core.next(arglist__32221);
var c = cljs.core.first(arglist__32221);
var ds = cljs.core.rest(arglist__32221);
return G__32219__delegate(a,b,c,ds);
});
G__32219.cljs$core$IFn$_invoke$arity$variadic = G__32219__delegate;
return G__32219;
})()
;
G__32218 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__32218__2.call(this,a,b);
case 3:
return G__32218__3.call(this,a,b,c);
default:
var G__32222 = null;
if (arguments.length > 3) {
var G__32223__i = 0, G__32223__a = new Array(arguments.length -  3);
while (G__32223__i < G__32223__a.length) {G__32223__a[G__32223__i] = arguments[G__32223__i + 3]; ++G__32223__i;}
G__32222 = new cljs.core.IndexedSeq(G__32223__a,0);
}
return G__32218__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__32222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32218.cljs$lang$maxFixedArity = 3;
G__32218.cljs$lang$applyTo = G__32218__4.cljs$lang$applyTo;
G__32218.cljs$core$IFn$_invoke$arity$2 = G__32218__2;
G__32218.cljs$core$IFn$_invoke$arity$3 = G__32218__3;
G__32218.cljs$core$IFn$_invoke$arity$variadic = G__32218__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32218;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__32224 = null;
var G__32224__2 = (function (a,b){
var G__32207 = (((a == null))?x:a);
var G__32208 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32207,G__32208) : f.call(null,G__32207,G__32208));
});
var G__32224__3 = (function (a,b,c){
var G__32209 = (((a == null))?x:a);
var G__32210 = (((b == null))?y:b);
var G__32211 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32209,G__32210,G__32211) : f.call(null,G__32209,G__32210,G__32211));
});
var G__32224__4 = (function() { 
var G__32225__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__32225 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__32226__i = 0, G__32226__a = new Array(arguments.length -  3);
while (G__32226__i < G__32226__a.length) {G__32226__a[G__32226__i] = arguments[G__32226__i + 3]; ++G__32226__i;}
  ds = new cljs.core.IndexedSeq(G__32226__a,0);
} 
return G__32225__delegate.call(this,a,b,c,ds);};
G__32225.cljs$lang$maxFixedArity = 3;
G__32225.cljs$lang$applyTo = (function (arglist__32227){
var a = cljs.core.first(arglist__32227);
arglist__32227 = cljs.core.next(arglist__32227);
var b = cljs.core.first(arglist__32227);
arglist__32227 = cljs.core.next(arglist__32227);
var c = cljs.core.first(arglist__32227);
var ds = cljs.core.rest(arglist__32227);
return G__32225__delegate(a,b,c,ds);
});
G__32225.cljs$core$IFn$_invoke$arity$variadic = G__32225__delegate;
return G__32225;
})()
;
G__32224 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__32224__2.call(this,a,b);
case 3:
return G__32224__3.call(this,a,b,c);
default:
var G__32228 = null;
if (arguments.length > 3) {
var G__32229__i = 0, G__32229__a = new Array(arguments.length -  3);
while (G__32229__i < G__32229__a.length) {G__32229__a[G__32229__i] = arguments[G__32229__i + 3]; ++G__32229__i;}
G__32228 = new cljs.core.IndexedSeq(G__32229__a,0);
}
return G__32224__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__32228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32224.cljs$lang$maxFixedArity = 3;
G__32224.cljs$lang$applyTo = G__32224__4.cljs$lang$applyTo;
G__32224.cljs$core$IFn$_invoke$arity$2 = G__32224__2;
G__32224.cljs$core$IFn$_invoke$arity$3 = G__32224__3;
G__32224.cljs$core$IFn$_invoke$arity$variadic = G__32224__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32224;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__32260 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__32260) : cljs.core.volatile_BANG_.call(null,G__32260));
})();
return ((function (i){
return (function() {
var G__32290 = null;
var G__32290__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32290__1 = (function (result){
var G__32261 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32261) : rf.call(null,G__32261));
});
var G__32290__2 = (function (result,input){
var G__32262 = result;
var G__32263 = (function (){var G__32264 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__32265 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32264,G__32265) : f.call(null,G__32264,G__32265));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32262,G__32263) : rf.call(null,G__32262,G__32263));
});
G__32290 = function(result,input){
switch(arguments.length){
case 0:
return G__32290__0.call(this);
case 1:
return G__32290__1.call(this,result);
case 2:
return G__32290__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32290.cljs$core$IFn$_invoke$arity$0 = G__32290__0;
G__32290.cljs$core$IFn$_invoke$arity$1 = G__32290__1;
G__32290.cljs$core$IFn$_invoke$arity$2 = G__32290__2;
return G__32290;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___32291 = size;
var i_32292 = (0);
while(true){
if((i_32292 < n__11828__auto___32291)){
cljs.core.chunk_append(b,(function (){var G__32286 = (idx + i_32292);
var G__32287 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32292);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32286,G__32287) : f.call(null,G__32286,G__32287));
})());

var G__32293 = (i_32292 + (1));
i_32292 = G__32293;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__32288 = idx;
var G__32289 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32288,G__32289) : f.call(null,G__32288,G__32289));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__32312 = null;
var G__32312__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32312__1 = (function (result){
var G__32306 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32306) : rf.call(null,G__32306));
});
var G__32312__2 = (function (result,input){
var v = (function (){var G__32307 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32307) : f.call(null,G__32307));
})();
if((v == null)){
return result;
} else {
var G__32308 = result;
var G__32309 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32308,G__32309) : rf.call(null,G__32308,G__32309));
}
});
G__32312 = function(result,input){
switch(arguments.length){
case 0:
return G__32312__0.call(this);
case 1:
return G__32312__1.call(this,result);
case 2:
return G__32312__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32312.cljs$core$IFn$_invoke$arity$0 = G__32312__0;
G__32312.cljs$core$IFn$_invoke$arity$1 = G__32312__1;
G__32312.cljs$core$IFn$_invoke$arity$2 = G__32312__2;
return G__32312;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___32313 = size;
var i_32314 = (0);
while(true){
if((i_32314 < n__11828__auto___32313)){
var x_32315 = (function (){var G__32310 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32314);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32310) : f.call(null,G__32310));
})();
if((x_32315 == null)){
} else {
cljs.core.chunk_append(b,x_32315);
}

var G__32316 = (i_32314 + (1));
i_32314 = G__32316;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__32311 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32311) : f.call(null,G__32311));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__32317 = this$__$1;
return goog.getUid(G__32317);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__32318 = cljs.core.seq(self__.watches);
var chunk__32319 = null;
var count__32320 = (0);
var i__32321 = (0);
while(true){
if((i__32321 < count__32320)){
var vec__32322 = chunk__32319.cljs$core$IIndexed$_nth$arity$2(null,i__32321);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32322,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32322,(1),null);
var G__32323_32332 = key;
var G__32324_32333 = this$__$1;
var G__32325_32334 = oldval;
var G__32326_32335 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32323_32332,G__32324_32333,G__32325_32334,G__32326_32335) : f.call(null,G__32323_32332,G__32324_32333,G__32325_32334,G__32326_32335));

var G__32336 = seq__32318;
var G__32337 = chunk__32319;
var G__32338 = count__32320;
var G__32339 = (i__32321 + (1));
seq__32318 = G__32336;
chunk__32319 = G__32337;
count__32320 = G__32338;
i__32321 = G__32339;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__32318);
if(temp__4406__auto__){
var seq__32318__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__32318__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__32318__$1);
var G__32340 = cljs.core.chunk_rest(seq__32318__$1);
var G__32341 = c__11728__auto__;
var G__32342 = cljs.core.count(c__11728__auto__);
var G__32343 = (0);
seq__32318 = G__32340;
chunk__32319 = G__32341;
count__32320 = G__32342;
i__32321 = G__32343;
continue;
} else {
var vec__32327 = cljs.core.first(seq__32318__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32327,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32327,(1),null);
var G__32328_32344 = key;
var G__32329_32345 = this$__$1;
var G__32330_32346 = oldval;
var G__32331_32347 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32328_32344,G__32329_32345,G__32330_32346,G__32331_32347) : f.call(null,G__32328_32344,G__32329_32345,G__32330_32346,G__32331_32347));

var G__32348 = cljs.core.next(seq__32318__$1);
var G__32349 = null;
var G__32350 = (0);
var G__32351 = (0);
seq__32318 = G__32348;
chunk__32319 = G__32349;
count__32320 = G__32350;
i__32321 = G__32351;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__32355__delegate = function (x,p__32352){
var map__32354 = p__32352;
var map__32354__$1 = ((cljs.core.seq_QMARK_(map__32354))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32354):map__32354);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32354__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32354__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__32355 = function (x,var_args){
var p__32352 = null;
if (arguments.length > 1) {
var G__32356__i = 0, G__32356__a = new Array(arguments.length -  1);
while (G__32356__i < G__32356__a.length) {G__32356__a[G__32356__i] = arguments[G__32356__i + 1]; ++G__32356__i;}
  p__32352 = new cljs.core.IndexedSeq(G__32356__a,0);
} 
return G__32355__delegate.call(this,x,p__32352);};
G__32355.cljs$lang$maxFixedArity = 1;
G__32355.cljs$lang$applyTo = (function (arglist__32357){
var x = cljs.core.first(arglist__32357);
var p__32352 = cljs.core.rest(arglist__32357);
return G__32355__delegate(x,p__32352);
});
G__32355.cljs$core$IFn$_invoke$arity$variadic = G__32355__delegate;
return G__32355;
})()
;
atom = function(x,var_args){
var p__32352 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__32358 = null;
if (arguments.length > 1) {
var G__32359__i = 0, G__32359__a = new Array(arguments.length -  1);
while (G__32359__i < G__32359__a.length) {G__32359__a[G__32359__i] = arguments[G__32359__i + 1]; ++G__32359__i;}
G__32358 = new cljs.core.IndexedSeq(G__32359__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__32358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__32362 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__32362) : validate.call(null,G__32362));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__32363 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__32363) : cljs.core.pr_str.call(null,G__32363));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__32370 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32370) : f.call(null,G__32370));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__32371 = a.state;
var G__32372 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32371,G__32372) : f.call(null,G__32371,G__32372));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__32373 = a.state;
var G__32374 = x;
var G__32375 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32373,G__32374,G__32375) : f.call(null,G__32373,G__32374,G__32375));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__32376__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__32376 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__32377__i = 0, G__32377__a = new Array(arguments.length -  4);
while (G__32377__i < G__32377__a.length) {G__32377__a[G__32377__i] = arguments[G__32377__i + 4]; ++G__32377__i;}
  more = new cljs.core.IndexedSeq(G__32377__a,0);
} 
return G__32376__delegate.call(this,a,f,x,y,more);};
G__32376.cljs$lang$maxFixedArity = 4;
G__32376.cljs$lang$applyTo = (function (arglist__32378){
var a = cljs.core.first(arglist__32378);
arglist__32378 = cljs.core.next(arglist__32378);
var f = cljs.core.first(arglist__32378);
arglist__32378 = cljs.core.next(arglist__32378);
var x = cljs.core.first(arglist__32378);
arglist__32378 = cljs.core.next(arglist__32378);
var y = cljs.core.first(arglist__32378);
var more = cljs.core.rest(arglist__32378);
return G__32376__delegate(a,f,x,y,more);
});
G__32376.cljs$core$IFn$_invoke$arity$variadic = G__32376__delegate;
return G__32376;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__32379 = null;
if (arguments.length > 4) {
var G__32380__i = 0, G__32380__a = new Array(arguments.length -  4);
while (G__32380__i < G__32380__a.length) {G__32380__a[G__32380__i] = arguments[G__32380__i + 4]; ++G__32380__i;}
G__32379 = new cljs.core.IndexedSeq(G__32380__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__32379);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__32447 = null;
var G__32447__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32447__1 = (function (result){
var G__32414 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32414) : rf.call(null,G__32414));
});
var G__32447__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__32415 = i;
var G__32416 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32415,G__32416) : f.call(null,G__32415,G__32416));
})();
if((v == null)){
return result;
} else {
var G__32417 = result;
var G__32418 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32417,G__32418) : rf.call(null,G__32417,G__32418));
}
});
G__32447 = function(result,input){
switch(arguments.length){
case 0:
return G__32447__0.call(this);
case 1:
return G__32447__1.call(this,result);
case 2:
return G__32447__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32447.cljs$core$IFn$_invoke$arity$0 = G__32447__0;
G__32447.cljs$core$IFn$_invoke$arity$1 = G__32447__1;
G__32447.cljs$core$IFn$_invoke$arity$2 = G__32447__2;
return G__32447;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___32448 = size;
var i_32449 = (0);
while(true){
if((i_32449 < n__11828__auto___32448)){
var x_32450 = (function (){var G__32443 = (idx + i_32449);
var G__32444 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32449);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32443,G__32444) : f.call(null,G__32443,G__32444));
})();
if((x_32450 == null)){
} else {
cljs.core.chunk_append(b,x_32450);
}

var G__32451 = (i_32449 + (1));
i_32449 = G__32451;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__32445 = idx;
var G__32446 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32445,G__32446) : f.call(null,G__32445,G__32446));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__32665 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32665) : p.call(null,G__32665));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__32667 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32667) : p.call(null,G__32667));
})();
if(cljs.core.truth_(and__10929__auto__)){
var G__32668 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32668) : p.call(null,G__32668));
} else {
return and__10929__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__32670 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32670) : p.call(null,G__32670));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__32672 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32672) : p.call(null,G__32672));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var G__32673 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32673) : p.call(null,G__32673));
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__32842__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__32842 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32843__i = 0, G__32843__a = new Array(arguments.length -  3);
while (G__32843__i < G__32843__a.length) {G__32843__a[G__32843__i] = arguments[G__32843__i + 3]; ++G__32843__i;}
  args = new cljs.core.IndexedSeq(G__32843__a,0);
} 
return G__32842__delegate.call(this,x,y,z,args);};
G__32842.cljs$lang$maxFixedArity = 3;
G__32842.cljs$lang$applyTo = (function (arglist__32844){
var x = cljs.core.first(arglist__32844);
arglist__32844 = cljs.core.next(arglist__32844);
var y = cljs.core.first(arglist__32844);
arglist__32844 = cljs.core.next(arglist__32844);
var z = cljs.core.first(arglist__32844);
var args = cljs.core.rest(arglist__32844);
return G__32842__delegate(x,y,z,args);
});
G__32842.cljs$core$IFn$_invoke$arity$variadic = G__32842__delegate;
return G__32842;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__32845 = null;
if (arguments.length > 3) {
var G__32846__i = 0, G__32846__a = new Array(arguments.length -  3);
while (G__32846__i < G__32846__a.length) {G__32846__a[G__32846__i] = arguments[G__32846__i + 3]; ++G__32846__i;}
G__32845 = new cljs.core.IndexedSeq(G__32846__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32845);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__32705 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32705) : p1.call(null,G__32705));
})();
if(cljs.core.truth_(and__10929__auto__)){
var G__32706 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32706) : p2.call(null,G__32706));
} else {
return and__10929__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__32708 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32708) : p1.call(null,G__32708));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__32710 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32710) : p1.call(null,G__32710));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var and__10929__auto____$2 = (function (){var G__32712 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32712) : p2.call(null,G__32712));
})();
if(cljs.core.truth_(and__10929__auto____$2)){
var G__32713 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32713) : p2.call(null,G__32713));
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__32715 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32715) : p1.call(null,G__32715));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__32717 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32717) : p1.call(null,G__32717));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var and__10929__auto____$2 = (function (){var G__32719 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32719) : p1.call(null,G__32719));
})();
if(cljs.core.truth_(and__10929__auto____$2)){
var and__10929__auto____$3 = (function (){var G__32721 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32721) : p2.call(null,G__32721));
})();
if(cljs.core.truth_(and__10929__auto____$3)){
var and__10929__auto____$4 = (function (){var G__32723 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32723) : p2.call(null,G__32723));
})();
if(cljs.core.truth_(and__10929__auto____$4)){
var G__32724 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32724) : p2.call(null,G__32724));
} else {
return and__10929__auto____$4;
}
} else {
return and__10929__auto____$3;
}
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__32847__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__32452_SHARP_){
var and__10929__auto__ = (function (){var G__32729 = p1__32452_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32729) : p1.call(null,G__32729));
})();
if(cljs.core.truth_(and__10929__auto__)){
var G__32730 = p1__32452_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32730) : p2.call(null,G__32730));
} else {
return and__10929__auto__;
}
}),args)));
};
var G__32847 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32848__i = 0, G__32848__a = new Array(arguments.length -  3);
while (G__32848__i < G__32848__a.length) {G__32848__a[G__32848__i] = arguments[G__32848__i + 3]; ++G__32848__i;}
  args = new cljs.core.IndexedSeq(G__32848__a,0);
} 
return G__32847__delegate.call(this,x,y,z,args);};
G__32847.cljs$lang$maxFixedArity = 3;
G__32847.cljs$lang$applyTo = (function (arglist__32849){
var x = cljs.core.first(arglist__32849);
arglist__32849 = cljs.core.next(arglist__32849);
var y = cljs.core.first(arglist__32849);
arglist__32849 = cljs.core.next(arglist__32849);
var z = cljs.core.first(arglist__32849);
var args = cljs.core.rest(arglist__32849);
return G__32847__delegate(x,y,z,args);
});
G__32847.cljs$core$IFn$_invoke$arity$variadic = G__32847__delegate;
return G__32847;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__32850 = null;
if (arguments.length > 3) {
var G__32851__i = 0, G__32851__a = new Array(arguments.length -  3);
while (G__32851__i < G__32851__a.length) {G__32851__a[G__32851__i] = arguments[G__32851__i + 3]; ++G__32851__i;}
G__32850 = new cljs.core.IndexedSeq(G__32851__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32850);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__32776 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32776) : p1.call(null,G__32776));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__32778 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32778) : p2.call(null,G__32778));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var G__32779 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32779) : p3.call(null,G__32779));
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__32781 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32781) : p1.call(null,G__32781));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__32783 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32783) : p2.call(null,G__32783));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var and__10929__auto____$2 = (function (){var G__32785 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32785) : p3.call(null,G__32785));
})();
if(cljs.core.truth_(and__10929__auto____$2)){
var and__10929__auto____$3 = (function (){var G__32787 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32787) : p1.call(null,G__32787));
})();
if(cljs.core.truth_(and__10929__auto____$3)){
var and__10929__auto____$4 = (function (){var G__32789 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32789) : p2.call(null,G__32789));
})();
if(cljs.core.truth_(and__10929__auto____$4)){
var G__32790 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32790) : p3.call(null,G__32790));
} else {
return and__10929__auto____$4;
}
} else {
return and__10929__auto____$3;
}
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__10929__auto__ = (function (){var G__32792 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32792) : p1.call(null,G__32792));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__32794 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32794) : p2.call(null,G__32794));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var and__10929__auto____$2 = (function (){var G__32796 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32796) : p3.call(null,G__32796));
})();
if(cljs.core.truth_(and__10929__auto____$2)){
var and__10929__auto____$3 = (function (){var G__32798 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32798) : p1.call(null,G__32798));
})();
if(cljs.core.truth_(and__10929__auto____$3)){
var and__10929__auto____$4 = (function (){var G__32800 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32800) : p2.call(null,G__32800));
})();
if(cljs.core.truth_(and__10929__auto____$4)){
var and__10929__auto____$5 = (function (){var G__32802 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32802) : p3.call(null,G__32802));
})();
if(cljs.core.truth_(and__10929__auto____$5)){
var and__10929__auto____$6 = (function (){var G__32804 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32804) : p1.call(null,G__32804));
})();
if(cljs.core.truth_(and__10929__auto____$6)){
var and__10929__auto____$7 = (function (){var G__32806 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32806) : p2.call(null,G__32806));
})();
if(cljs.core.truth_(and__10929__auto____$7)){
var G__32807 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32807) : p3.call(null,G__32807));
} else {
return and__10929__auto____$7;
}
} else {
return and__10929__auto____$6;
}
} else {
return and__10929__auto____$5;
}
} else {
return and__10929__auto____$4;
}
} else {
return and__10929__auto____$3;
}
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__32852__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__32453_SHARP_){
var and__10929__auto__ = (function (){var G__32814 = p1__32453_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32814) : p1.call(null,G__32814));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__32816 = p1__32453_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32816) : p2.call(null,G__32816));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var G__32817 = p1__32453_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32817) : p3.call(null,G__32817));
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
}),args)));
};
var G__32852 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32853__i = 0, G__32853__a = new Array(arguments.length -  3);
while (G__32853__i < G__32853__a.length) {G__32853__a[G__32853__i] = arguments[G__32853__i + 3]; ++G__32853__i;}
  args = new cljs.core.IndexedSeq(G__32853__a,0);
} 
return G__32852__delegate.call(this,x,y,z,args);};
G__32852.cljs$lang$maxFixedArity = 3;
G__32852.cljs$lang$applyTo = (function (arglist__32854){
var x = cljs.core.first(arglist__32854);
arglist__32854 = cljs.core.next(arglist__32854);
var y = cljs.core.first(arglist__32854);
arglist__32854 = cljs.core.next(arglist__32854);
var z = cljs.core.first(arglist__32854);
var args = cljs.core.rest(arglist__32854);
return G__32852__delegate(x,y,z,args);
});
G__32852.cljs$core$IFn$_invoke$arity$variadic = G__32852__delegate;
return G__32852;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__32855 = null;
if (arguments.length > 3) {
var G__32856__i = 0, G__32856__a = new Array(arguments.length -  3);
while (G__32856__i < G__32856__a.length) {G__32856__a[G__32856__i] = arguments[G__32856__i + 3]; ++G__32856__i;}
G__32855 = new cljs.core.IndexedSeq(G__32856__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32855);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__32857__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32454_SHARP_){
var G__32833 = x;
return (p1__32454_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32454_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32833) : p1__32454_SHARP_.call(null,G__32833));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32455_SHARP_){
var and__10929__auto__ = (function (){var G__32835 = x;
return (p1__32455_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32455_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32835) : p1__32455_SHARP_.call(null,G__32835));
})();
if(cljs.core.truth_(and__10929__auto__)){
var G__32836 = y;
return (p1__32455_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32455_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32836) : p1__32455_SHARP_.call(null,G__32836));
} else {
return and__10929__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32456_SHARP_){
var and__10929__auto__ = (function (){var G__32838 = x;
return (p1__32456_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32456_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32838) : p1__32456_SHARP_.call(null,G__32838));
})();
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__32840 = y;
return (p1__32456_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32456_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32840) : p1__32456_SHARP_.call(null,G__32840));
})();
if(cljs.core.truth_(and__10929__auto____$1)){
var G__32841 = z;
return (p1__32456_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32456_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32841) : p1__32456_SHARP_.call(null,G__32841));
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__32858__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32457_SHARP_){
return cljs.core.every_QMARK_(p1__32457_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__32858 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32859__i = 0, G__32859__a = new Array(arguments.length -  3);
while (G__32859__i < G__32859__a.length) {G__32859__a[G__32859__i] = arguments[G__32859__i + 3]; ++G__32859__i;}
  args = new cljs.core.IndexedSeq(G__32859__a,0);
} 
return G__32858__delegate.call(this,x,y,z,args);};
G__32858.cljs$lang$maxFixedArity = 3;
G__32858.cljs$lang$applyTo = (function (arglist__32860){
var x = cljs.core.first(arglist__32860);
arglist__32860 = cljs.core.next(arglist__32860);
var y = cljs.core.first(arglist__32860);
arglist__32860 = cljs.core.next(arglist__32860);
var z = cljs.core.first(arglist__32860);
var args = cljs.core.rest(arglist__32860);
return G__32858__delegate(x,y,z,args);
});
G__32858.cljs$core$IFn$_invoke$arity$variadic = G__32858__delegate;
return G__32858;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__32861 = null;
if (arguments.length > 3) {
var G__32862__i = 0, G__32862__a = new Array(arguments.length -  3);
while (G__32862__i < G__32862__a.length) {G__32862__a[G__32862__i] = arguments[G__32862__i + 3]; ++G__32862__i;}
G__32861 = new cljs.core.IndexedSeq(G__32862__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__32857 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__32863__i = 0, G__32863__a = new Array(arguments.length -  3);
while (G__32863__i < G__32863__a.length) {G__32863__a[G__32863__i] = arguments[G__32863__i + 3]; ++G__32863__i;}
  ps = new cljs.core.IndexedSeq(G__32863__a,0);
} 
return G__32857__delegate.call(this,p1,p2,p3,ps);};
G__32857.cljs$lang$maxFixedArity = 3;
G__32857.cljs$lang$applyTo = (function (arglist__32864){
var p1 = cljs.core.first(arglist__32864);
arglist__32864 = cljs.core.next(arglist__32864);
var p2 = cljs.core.first(arglist__32864);
arglist__32864 = cljs.core.next(arglist__32864);
var p3 = cljs.core.first(arglist__32864);
var ps = cljs.core.rest(arglist__32864);
return G__32857__delegate(p1,p2,p3,ps);
});
G__32857.cljs$core$IFn$_invoke$arity$variadic = G__32857__delegate;
return G__32857;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__32865 = null;
if (arguments.length > 3) {
var G__32866__i = 0, G__32866__a = new Array(arguments.length -  3);
while (G__32866__i < G__32866__a.length) {G__32866__a[G__32866__i] = arguments[G__32866__i + 3]; ++G__32866__i;}
G__32865 = new cljs.core.IndexedSeq(G__32866__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__32865);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__33072 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33072) : p.call(null,G__33072));
});
var sp1__2 = (function (x,y){
var or__10941__auto__ = (function (){var G__33074 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33074) : p.call(null,G__33074));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__33075 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33075) : p.call(null,G__33075));
}
});
var sp1__3 = (function (x,y,z){
var or__10941__auto__ = (function (){var G__33077 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33077) : p.call(null,G__33077));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__33079 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33079) : p.call(null,G__33079));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var G__33080 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33080) : p.call(null,G__33080));
}
}
});
var sp1__4 = (function() { 
var G__33241__delegate = function (x,y,z,args){
var or__10941__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__33241 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33242__i = 0, G__33242__a = new Array(arguments.length -  3);
while (G__33242__i < G__33242__a.length) {G__33242__a[G__33242__i] = arguments[G__33242__i + 3]; ++G__33242__i;}
  args = new cljs.core.IndexedSeq(G__33242__a,0);
} 
return G__33241__delegate.call(this,x,y,z,args);};
G__33241.cljs$lang$maxFixedArity = 3;
G__33241.cljs$lang$applyTo = (function (arglist__33243){
var x = cljs.core.first(arglist__33243);
arglist__33243 = cljs.core.next(arglist__33243);
var y = cljs.core.first(arglist__33243);
arglist__33243 = cljs.core.next(arglist__33243);
var z = cljs.core.first(arglist__33243);
var args = cljs.core.rest(arglist__33243);
return G__33241__delegate(x,y,z,args);
});
G__33241.cljs$core$IFn$_invoke$arity$variadic = G__33241__delegate;
return G__33241;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__33244 = null;
if (arguments.length > 3) {
var G__33245__i = 0, G__33245__a = new Array(arguments.length -  3);
while (G__33245__i < G__33245__a.length) {G__33245__a[G__33245__i] = arguments[G__33245__i + 3]; ++G__33245__i;}
G__33244 = new cljs.core.IndexedSeq(G__33245__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33244);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__10941__auto__ = (function (){var G__33112 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33112) : p1.call(null,G__33112));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__33113 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33113) : p2.call(null,G__33113));
}
});
var sp2__2 = (function (x,y){
var or__10941__auto__ = (function (){var G__33115 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33115) : p1.call(null,G__33115));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__33117 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33117) : p1.call(null,G__33117));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__33119 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33119) : p2.call(null,G__33119));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var G__33120 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33120) : p2.call(null,G__33120));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__10941__auto__ = (function (){var G__33122 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33122) : p1.call(null,G__33122));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__33124 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33124) : p1.call(null,G__33124));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__33126 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33126) : p1.call(null,G__33126));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var or__10941__auto____$3 = (function (){var G__33128 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33128) : p2.call(null,G__33128));
})();
if(cljs.core.truth_(or__10941__auto____$3)){
return or__10941__auto____$3;
} else {
var or__10941__auto____$4 = (function (){var G__33130 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33130) : p2.call(null,G__33130));
})();
if(cljs.core.truth_(or__10941__auto____$4)){
return or__10941__auto____$4;
} else {
var G__33131 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33131) : p2.call(null,G__33131));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__33246__delegate = function (x,y,z,args){
var or__10941__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.some(((function (or__10941__auto__){
return (function (p1__32867_SHARP_){
var or__10941__auto____$1 = (function (){var G__33133 = p1__32867_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33133) : p1.call(null,G__33133));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var G__33134 = p1__32867_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33134) : p2.call(null,G__33134));
}
});})(or__10941__auto__))
,args);
}
};
var G__33246 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33247__i = 0, G__33247__a = new Array(arguments.length -  3);
while (G__33247__i < G__33247__a.length) {G__33247__a[G__33247__i] = arguments[G__33247__i + 3]; ++G__33247__i;}
  args = new cljs.core.IndexedSeq(G__33247__a,0);
} 
return G__33246__delegate.call(this,x,y,z,args);};
G__33246.cljs$lang$maxFixedArity = 3;
G__33246.cljs$lang$applyTo = (function (arglist__33248){
var x = cljs.core.first(arglist__33248);
arglist__33248 = cljs.core.next(arglist__33248);
var y = cljs.core.first(arglist__33248);
arglist__33248 = cljs.core.next(arglist__33248);
var z = cljs.core.first(arglist__33248);
var args = cljs.core.rest(arglist__33248);
return G__33246__delegate(x,y,z,args);
});
G__33246.cljs$core$IFn$_invoke$arity$variadic = G__33246__delegate;
return G__33246;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__33249 = null;
if (arguments.length > 3) {
var G__33250__i = 0, G__33250__a = new Array(arguments.length -  3);
while (G__33250__i < G__33250__a.length) {G__33250__a[G__33250__i] = arguments[G__33250__i + 3]; ++G__33250__i;}
G__33249 = new cljs.core.IndexedSeq(G__33250__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__10941__auto__ = (function (){var G__33180 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33180) : p1.call(null,G__33180));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__33182 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33182) : p2.call(null,G__33182));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var G__33183 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33183) : p3.call(null,G__33183));
}
}
});
var sp3__2 = (function (x,y){
var or__10941__auto__ = (function (){var G__33185 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33185) : p1.call(null,G__33185));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__33187 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33187) : p2.call(null,G__33187));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__33189 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33189) : p3.call(null,G__33189));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var or__10941__auto____$3 = (function (){var G__33191 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33191) : p1.call(null,G__33191));
})();
if(cljs.core.truth_(or__10941__auto____$3)){
return or__10941__auto____$3;
} else {
var or__10941__auto____$4 = (function (){var G__33193 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33193) : p2.call(null,G__33193));
})();
if(cljs.core.truth_(or__10941__auto____$4)){
return or__10941__auto____$4;
} else {
var G__33194 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33194) : p3.call(null,G__33194));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__10941__auto__ = (function (){var G__33196 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33196) : p1.call(null,G__33196));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__33198 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33198) : p2.call(null,G__33198));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__33200 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33200) : p3.call(null,G__33200));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var or__10941__auto____$3 = (function (){var G__33202 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33202) : p1.call(null,G__33202));
})();
if(cljs.core.truth_(or__10941__auto____$3)){
return or__10941__auto____$3;
} else {
var or__10941__auto____$4 = (function (){var G__33204 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33204) : p2.call(null,G__33204));
})();
if(cljs.core.truth_(or__10941__auto____$4)){
return or__10941__auto____$4;
} else {
var or__10941__auto____$5 = (function (){var G__33206 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33206) : p3.call(null,G__33206));
})();
if(cljs.core.truth_(or__10941__auto____$5)){
return or__10941__auto____$5;
} else {
var or__10941__auto____$6 = (function (){var G__33208 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33208) : p1.call(null,G__33208));
})();
if(cljs.core.truth_(or__10941__auto____$6)){
return or__10941__auto____$6;
} else {
var or__10941__auto____$7 = (function (){var G__33210 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33210) : p2.call(null,G__33210));
})();
if(cljs.core.truth_(or__10941__auto____$7)){
return or__10941__auto____$7;
} else {
var G__33211 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33211) : p3.call(null,G__33211));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__33251__delegate = function (x,y,z,args){
var or__10941__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.some(((function (or__10941__auto__){
return (function (p1__32868_SHARP_){
var or__10941__auto____$1 = (function (){var G__33213 = p1__32868_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33213) : p1.call(null,G__33213));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var G__33215 = p1__32868_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33215) : p2.call(null,G__33215));
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
var G__33216 = p1__32868_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33216) : p3.call(null,G__33216));
}
}
});})(or__10941__auto__))
,args);
}
};
var G__33251 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33252__i = 0, G__33252__a = new Array(arguments.length -  3);
while (G__33252__i < G__33252__a.length) {G__33252__a[G__33252__i] = arguments[G__33252__i + 3]; ++G__33252__i;}
  args = new cljs.core.IndexedSeq(G__33252__a,0);
} 
return G__33251__delegate.call(this,x,y,z,args);};
G__33251.cljs$lang$maxFixedArity = 3;
G__33251.cljs$lang$applyTo = (function (arglist__33253){
var x = cljs.core.first(arglist__33253);
arglist__33253 = cljs.core.next(arglist__33253);
var y = cljs.core.first(arglist__33253);
arglist__33253 = cljs.core.next(arglist__33253);
var z = cljs.core.first(arglist__33253);
var args = cljs.core.rest(arglist__33253);
return G__33251__delegate(x,y,z,args);
});
G__33251.cljs$core$IFn$_invoke$arity$variadic = G__33251__delegate;
return G__33251;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__33254 = null;
if (arguments.length > 3) {
var G__33255__i = 0, G__33255__a = new Array(arguments.length -  3);
while (G__33255__i < G__33255__a.length) {G__33255__a[G__33255__i] = arguments[G__33255__i + 3]; ++G__33255__i;}
G__33254 = new cljs.core.IndexedSeq(G__33255__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33254);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__33256__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__32869_SHARP_){
var G__33232 = x;
return (p1__32869_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32869_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33232) : p1__32869_SHARP_.call(null,G__33232));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__32870_SHARP_){
var or__10941__auto__ = (function (){var G__33234 = x;
return (p1__32870_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32870_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33234) : p1__32870_SHARP_.call(null,G__33234));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var G__33235 = y;
return (p1__32870_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32870_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33235) : p1__32870_SHARP_.call(null,G__33235));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__32871_SHARP_){
var or__10941__auto__ = (function (){var G__33237 = x;
return (p1__32871_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32871_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33237) : p1__32871_SHARP_.call(null,G__33237));
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var G__33239 = y;
return (p1__32871_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32871_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33239) : p1__32871_SHARP_.call(null,G__33239));
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var G__33240 = z;
return (p1__32871_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32871_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33240) : p1__32871_SHARP_.call(null,G__33240));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__33257__delegate = function (x,y,z,args){
var or__10941__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.some(((function (or__10941__auto__,ps__$1){
return (function (p1__32872_SHARP_){
return cljs.core.some(p1__32872_SHARP_,args);
});})(or__10941__auto__,ps__$1))
,ps__$1);
}
};
var G__33257 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33258__i = 0, G__33258__a = new Array(arguments.length -  3);
while (G__33258__i < G__33258__a.length) {G__33258__a[G__33258__i] = arguments[G__33258__i + 3]; ++G__33258__i;}
  args = new cljs.core.IndexedSeq(G__33258__a,0);
} 
return G__33257__delegate.call(this,x,y,z,args);};
G__33257.cljs$lang$maxFixedArity = 3;
G__33257.cljs$lang$applyTo = (function (arglist__33259){
var x = cljs.core.first(arglist__33259);
arglist__33259 = cljs.core.next(arglist__33259);
var y = cljs.core.first(arglist__33259);
arglist__33259 = cljs.core.next(arglist__33259);
var z = cljs.core.first(arglist__33259);
var args = cljs.core.rest(arglist__33259);
return G__33257__delegate(x,y,z,args);
});
G__33257.cljs$core$IFn$_invoke$arity$variadic = G__33257__delegate;
return G__33257;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__33260 = null;
if (arguments.length > 3) {
var G__33261__i = 0, G__33261__a = new Array(arguments.length -  3);
while (G__33261__i < G__33261__a.length) {G__33261__a[G__33261__i] = arguments[G__33261__i + 3]; ++G__33261__i;}
G__33260 = new cljs.core.IndexedSeq(G__33261__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__33256 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__33262__i = 0, G__33262__a = new Array(arguments.length -  3);
while (G__33262__i < G__33262__a.length) {G__33262__a[G__33262__i] = arguments[G__33262__i + 3]; ++G__33262__i;}
  ps = new cljs.core.IndexedSeq(G__33262__a,0);
} 
return G__33256__delegate.call(this,p1,p2,p3,ps);};
G__33256.cljs$lang$maxFixedArity = 3;
G__33256.cljs$lang$applyTo = (function (arglist__33263){
var p1 = cljs.core.first(arglist__33263);
arglist__33263 = cljs.core.next(arglist__33263);
var p2 = cljs.core.first(arglist__33263);
arglist__33263 = cljs.core.next(arglist__33263);
var p3 = cljs.core.first(arglist__33263);
var ps = cljs.core.rest(arglist__33263);
return G__33256__delegate(p1,p2,p3,ps);
});
G__33256.cljs$core$IFn$_invoke$arity$variadic = G__33256__delegate;
return G__33256;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__33264 = null;
if (arguments.length > 3) {
var G__33265__i = 0, G__33265__a = new Array(arguments.length -  3);
while (G__33265__i < G__33265__a.length) {G__33265__a[G__33265__i] = arguments[G__33265__i + 3]; ++G__33265__i;}
G__33264 = new cljs.core.IndexedSeq(G__33265__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__33264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__33320 = null;
var G__33320__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33320__1 = (function (result){
var G__33306 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33306) : rf.call(null,G__33306));
});
var G__33320__2 = (function (result,input){
var G__33307 = result;
var G__33308 = (function (){var G__33309 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33309) : f.call(null,G__33309));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33307,G__33308) : rf.call(null,G__33307,G__33308));
});
var G__33320__3 = (function() { 
var G__33321__delegate = function (result,input,inputs){
var G__33310 = result;
var G__33311 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33310,G__33311) : rf.call(null,G__33310,G__33311));
};
var G__33321 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__33322__i = 0, G__33322__a = new Array(arguments.length -  2);
while (G__33322__i < G__33322__a.length) {G__33322__a[G__33322__i] = arguments[G__33322__i + 2]; ++G__33322__i;}
  inputs = new cljs.core.IndexedSeq(G__33322__a,0);
} 
return G__33321__delegate.call(this,result,input,inputs);};
G__33321.cljs$lang$maxFixedArity = 2;
G__33321.cljs$lang$applyTo = (function (arglist__33323){
var result = cljs.core.first(arglist__33323);
arglist__33323 = cljs.core.next(arglist__33323);
var input = cljs.core.first(arglist__33323);
var inputs = cljs.core.rest(arglist__33323);
return G__33321__delegate(result,input,inputs);
});
G__33321.cljs$core$IFn$_invoke$arity$variadic = G__33321__delegate;
return G__33321;
})()
;
G__33320 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__33320__0.call(this);
case 1:
return G__33320__1.call(this,result);
case 2:
return G__33320__2.call(this,result,input);
default:
var G__33324 = null;
if (arguments.length > 2) {
var G__33325__i = 0, G__33325__a = new Array(arguments.length -  2);
while (G__33325__i < G__33325__a.length) {G__33325__a[G__33325__i] = arguments[G__33325__i + 2]; ++G__33325__i;}
G__33324 = new cljs.core.IndexedSeq(G__33325__a,0);
}
return G__33320__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__33324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33320.cljs$lang$maxFixedArity = 2;
G__33320.cljs$lang$applyTo = G__33320__3.cljs$lang$applyTo;
G__33320.cljs$core$IFn$_invoke$arity$0 = G__33320__0;
G__33320.cljs$core$IFn$_invoke$arity$1 = G__33320__1;
G__33320.cljs$core$IFn$_invoke$arity$2 = G__33320__2;
G__33320.cljs$core$IFn$_invoke$arity$variadic = G__33320__3.cljs$core$IFn$_invoke$arity$variadic;
return G__33320;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___33326 = size;
var i_33327 = (0);
while(true){
if((i_33327 < n__11828__auto___33326)){
cljs.core.chunk_append(b,(function (){var G__33312 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33327);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33312) : f.call(null,G__33312));
})());

var G__33328 = (i_33327 + (1));
i_33327 = G__33328;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__33313 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33313) : f.call(null,G__33313));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__33314 = cljs.core.first(s1);
var G__33315 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33314,G__33315) : f.call(null,G__33314,G__33315));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__33316 = cljs.core.first(s1);
var G__33317 = cljs.core.first(s2);
var G__33318 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33316,G__33317,G__33318) : f.call(null,G__33316,G__33317,G__33318));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__33329__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__33266_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__33266_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__33329 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__33330__i = 0, G__33330__a = new Array(arguments.length -  4);
while (G__33330__i < G__33330__a.length) {G__33330__a[G__33330__i] = arguments[G__33330__i + 4]; ++G__33330__i;}
  colls = new cljs.core.IndexedSeq(G__33330__a,0);
} 
return G__33329__delegate.call(this,f,c1,c2,c3,colls);};
G__33329.cljs$lang$maxFixedArity = 4;
G__33329.cljs$lang$applyTo = (function (arglist__33331){
var f = cljs.core.first(arglist__33331);
arglist__33331 = cljs.core.next(arglist__33331);
var c1 = cljs.core.first(arglist__33331);
arglist__33331 = cljs.core.next(arglist__33331);
var c2 = cljs.core.first(arglist__33331);
arglist__33331 = cljs.core.next(arglist__33331);
var c3 = cljs.core.first(arglist__33331);
var colls = cljs.core.rest(arglist__33331);
return G__33329__delegate(f,c1,c2,c3,colls);
});
G__33329.cljs$core$IFn$_invoke$arity$variadic = G__33329__delegate;
return G__33329;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__33332 = null;
if (arguments.length > 4) {
var G__33333__i = 0, G__33333__a = new Array(arguments.length -  4);
while (G__33333__i < G__33333__a.length) {G__33333__a[G__33333__i] = arguments[G__33333__i + 4]; ++G__33333__i;}
G__33332 = new cljs.core.IndexedSeq(G__33333__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__33332);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__33342 = null;
var G__33342__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33342__1 = (function (result){
var G__33339 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33339) : rf.call(null,G__33339));
});
var G__33342__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__33340 = result;
var G__33341 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33340,G__33341) : rf.call(null,G__33340,G__33341));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__33342 = function(result,input){
switch(arguments.length){
case 0:
return G__33342__0.call(this);
case 1:
return G__33342__1.call(this,result);
case 2:
return G__33342__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33342.cljs$core$IFn$_invoke$arity$0 = G__33342__0;
G__33342.cljs$core$IFn$_invoke$arity$1 = G__33342__1;
G__33342.cljs$core$IFn$_invoke$arity$2 = G__33342__2;
return G__33342;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__33349 = null;
var G__33349__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33349__1 = (function (result){
var G__33346 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33346) : rf.call(null,G__33346));
});
var G__33349__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__33347 = result;
var G__33348 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33347,G__33348) : rf.call(null,G__33347,G__33348));
}
});
G__33349 = function(result,input){
switch(arguments.length){
case 0:
return G__33349__0.call(this);
case 1:
return G__33349__1.call(this,result);
case 2:
return G__33349__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33349.cljs$core$IFn$_invoke$arity$0 = G__33349__0;
G__33349.cljs$core$IFn$_invoke$arity$1 = G__33349__1;
G__33349.cljs$core$IFn$_invoke$arity$2 = G__33349__2;
return G__33349;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__33350 = (n__$1 - (1));
var G__33351 = cljs.core.rest(s);
n__$1 = G__33350;
coll__$1 = G__33351;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__33354 = cljs.core.next(s);
var G__33355 = cljs.core.next(lead);
s = G__33354;
lead = G__33355;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__33368 = null;
var G__33368__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33368__1 = (function (result){
var G__33362 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33362) : rf.call(null,G__33362));
});
var G__33368__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__10929__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__10929__auto__)){
var G__33363 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33363) : pred.call(null,G__33363));
} else {
return and__10929__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__33364 = result;
var G__33365 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33364,G__33365) : rf.call(null,G__33364,G__33365));
}
});
G__33368 = function(result,input){
switch(arguments.length){
case 0:
return G__33368__0.call(this);
case 1:
return G__33368__1.call(this,result);
case 2:
return G__33368__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33368.cljs$core$IFn$_invoke$arity$0 = G__33368__0;
G__33368.cljs$core$IFn$_invoke$arity$1 = G__33368__1;
G__33368.cljs$core$IFn$_invoke$arity$2 = G__33368__2;
return G__33368;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__10929__auto__ = s;
if(and__10929__auto__){
var G__33367 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__33367) : pred__$1.call(null,G__33367));
} else {
return and__10929__auto__;
}
})())){
var G__33369 = pred__$1;
var G__33370 = cljs.core.rest(s);
pred__$1 = G__33369;
coll__$1 = G__33370;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__33379 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33379) : f.call(null,G__33379));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__33382__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__33382 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__33383__i = 0, G__33383__a = new Array(arguments.length -  2);
while (G__33383__i < G__33383__a.length) {G__33383__a[G__33383__i] = arguments[G__33383__i + 2]; ++G__33383__i;}
  colls = new cljs.core.IndexedSeq(G__33383__a,0);
} 
return G__33382__delegate.call(this,c1,c2,colls);};
G__33382.cljs$lang$maxFixedArity = 2;
G__33382.cljs$lang$applyTo = (function (arglist__33384){
var c1 = cljs.core.first(arglist__33384);
arglist__33384 = cljs.core.next(arglist__33384);
var c2 = cljs.core.first(arglist__33384);
var colls = cljs.core.rest(arglist__33384);
return G__33382__delegate(c1,c2,colls);
});
G__33382.cljs$core$IFn$_invoke$arity$variadic = G__33382__delegate;
return G__33382;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__33385 = null;
if (arguments.length > 2) {
var G__33386__i = 0, G__33386__a = new Array(arguments.length -  2);
while (G__33386__i < G__33386__a.length) {G__33386__a[G__33386__i] = arguments[G__33386__i + 2]; ++G__33386__i;}
G__33385 = new cljs.core.IndexedSeq(G__33386__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__33385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__33401 = null;
var G__33401__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33401__1 = (function (result){
var G__33394 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33394) : rf.call(null,G__33394));
});
var G__33401__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__33395 = result;
var G__33396 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33395,G__33396) : rf.call(null,G__33395,G__33396));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__33397 = sepr;
var G__33398 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33397,G__33398) : rf.call(null,G__33397,G__33398));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__33399 = result;
var G__33400 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33399,G__33400) : rf.call(null,G__33399,G__33400));
}
});
G__33401 = function(result,input){
switch(arguments.length){
case 0:
return G__33401__0.call(this);
case 1:
return G__33401__1.call(this,result);
case 2:
return G__33401__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33401.cljs$core$IFn$_invoke$arity$0 = G__33401__0;
G__33401.cljs$core$IFn$_invoke$arity$1 = G__33401__1;
G__33401.cljs$core$IFn$_invoke$arity$2 = G__33401__2;
return G__33401;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var coll__$1 = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__33410__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__33410 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__33411__i = 0, G__33411__a = new Array(arguments.length -  1);
while (G__33411__i < G__33411__a.length) {G__33411__a[G__33411__i] = arguments[G__33411__i + 1]; ++G__33411__i;}
  colls = new cljs.core.IndexedSeq(G__33411__a,0);
} 
return G__33410__delegate.call(this,f,colls);};
G__33410.cljs$lang$maxFixedArity = 1;
G__33410.cljs$lang$applyTo = (function (arglist__33412){
var f = cljs.core.first(arglist__33412);
var colls = cljs.core.rest(arglist__33412);
return G__33410__delegate(f,colls);
});
G__33410.cljs$core$IFn$_invoke$arity$variadic = G__33410__delegate;
return G__33410;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__33413 = null;
if (arguments.length > 1) {
var G__33414__i = 0, G__33414__a = new Array(arguments.length -  1);
while (G__33414__i < G__33414__a.length) {G__33414__a[G__33414__i] = arguments[G__33414__i + 1]; ++G__33414__i;}
G__33413 = new cljs.core.IndexedSeq(G__33414__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__33413);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__33433 = null;
var G__33433__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33433__1 = (function (result){
var G__33427 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33427) : rf.call(null,G__33427));
});
var G__33433__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__33428 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33428) : pred.call(null,G__33428));
})())){
var G__33429 = result;
var G__33430 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33429,G__33430) : rf.call(null,G__33429,G__33430));
} else {
return result;
}
});
G__33433 = function(result,input){
switch(arguments.length){
case 0:
return G__33433__0.call(this);
case 1:
return G__33433__1.call(this,result);
case 2:
return G__33433__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33433.cljs$core$IFn$_invoke$arity$0 = G__33433__0;
G__33433.cljs$core$IFn$_invoke$arity$1 = G__33433__1;
G__33433.cljs$core$IFn$_invoke$arity$2 = G__33433__2;
return G__33433;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11828__auto___33434 = size;
var i_33435 = (0);
while(true){
if((i_33435 < n__11828__auto___33434)){
if(cljs.core.truth_((function (){var G__33431 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33435);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33431) : pred.call(null,G__33431));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33435));
} else {
}

var G__33436 = (i_33435 + (1));
i_33435 = G__33436;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__33432 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33432) : pred.call(null,G__33432));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__33443 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__33443) : branch_QMARK_.call(null,G__33443));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__33444 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__33444) : children.call(null,G__33444));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__33445_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__33445_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__33448 = to;
if(G__33448){
var bit__11615__auto__ = (G__33448.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__11615__auto__) || (G__33448.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__33449 = to;
if(G__33449){
var bit__11615__auto__ = (G__33449.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__11615__auto__) || (G__33449.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__33451 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33451) : f.call(null,G__33451));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__33452__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__33452 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__33453__i = 0, G__33453__a = new Array(arguments.length -  4);
while (G__33453__i < G__33453__a.length) {G__33453__a[G__33453__i] = arguments[G__33453__i + 4]; ++G__33453__i;}
  colls = new cljs.core.IndexedSeq(G__33453__a,0);
} 
return G__33452__delegate.call(this,f,c1,c2,c3,colls);};
G__33452.cljs$lang$maxFixedArity = 4;
G__33452.cljs$lang$applyTo = (function (arglist__33454){
var f = cljs.core.first(arglist__33454);
arglist__33454 = cljs.core.next(arglist__33454);
var c1 = cljs.core.first(arglist__33454);
arglist__33454 = cljs.core.next(arglist__33454);
var c2 = cljs.core.first(arglist__33454);
arglist__33454 = cljs.core.next(arglist__33454);
var c3 = cljs.core.first(arglist__33454);
var colls = cljs.core.rest(arglist__33454);
return G__33452__delegate(f,c1,c2,c3,colls);
});
G__33452.cljs$core$IFn$_invoke$arity$variadic = G__33452__delegate;
return G__33452;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__33455 = null;
if (arguments.length > 4) {
var G__33456__i = 0, G__33456__a = new Array(arguments.length -  4);
while (G__33456__i < G__33456__a.length) {G__33456__a[G__33456__i] = arguments[G__33456__i + 4]; ++G__33456__i;}
G__33455 = new cljs.core.IndexedSeq(G__33456__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__33455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__33458 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33458) : pred.call(null,G__33458));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__33473 = m__$1;
if(G__33473){
var bit__11622__auto__ = (G__33473.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__11622__auto__) || (G__33473.cljs$core$ILookup$)){
return true;
} else {
if((!G__33473.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__33473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__33473);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__33474 = sentinel;
var G__33475 = m__$2;
var G__33476 = cljs.core.next(ks__$1);
sentinel = G__33474;
m__$1 = G__33475;
ks__$1 = G__33476;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__33477,v){
var vec__33482 = p__33477;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33482,(0),null);
var ks = cljs.core.nthnext(vec__33482,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__33483,f){
var vec__33521 = p__33483;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33521,(0),null);
var ks = cljs.core.nthnext(vec__33521,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33522 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33522) : f.call(null,G__33522));
})());
}
});
var update_in__4 = (function (m,p__33484,f,a){
var vec__33523 = p__33484;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33523,(0),null);
var ks = cljs.core.nthnext(vec__33523,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33524 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33525 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33524,G__33525) : f.call(null,G__33524,G__33525));
})());
}
});
var update_in__5 = (function (m,p__33485,f,a,b){
var vec__33526 = p__33485;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33526,(0),null);
var ks = cljs.core.nthnext(vec__33526,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33527 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33528 = a;
var G__33529 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33527,G__33528,G__33529) : f.call(null,G__33527,G__33528,G__33529));
})());
}
});
var update_in__6 = (function (m,p__33486,f,a,b,c){
var vec__33530 = p__33486;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33530,(0),null);
var ks = cljs.core.nthnext(vec__33530,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33531 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33532 = a;
var G__33533 = b;
var G__33534 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33531,G__33532,G__33533,G__33534) : f.call(null,G__33531,G__33532,G__33533,G__33534));
})());
}
});
var update_in__7 = (function() { 
var G__33536__delegate = function (m,p__33487,f,a,b,c,args){
var vec__33535 = p__33487;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33535,(0),null);
var ks = cljs.core.nthnext(vec__33535,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__33536 = function (m,p__33487,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__33537__i = 0, G__33537__a = new Array(arguments.length -  6);
while (G__33537__i < G__33537__a.length) {G__33537__a[G__33537__i] = arguments[G__33537__i + 6]; ++G__33537__i;}
  args = new cljs.core.IndexedSeq(G__33537__a,0);
} 
return G__33536__delegate.call(this,m,p__33487,f,a,b,c,args);};
G__33536.cljs$lang$maxFixedArity = 6;
G__33536.cljs$lang$applyTo = (function (arglist__33538){
var m = cljs.core.first(arglist__33538);
arglist__33538 = cljs.core.next(arglist__33538);
var p__33487 = cljs.core.first(arglist__33538);
arglist__33538 = cljs.core.next(arglist__33538);
var f = cljs.core.first(arglist__33538);
arglist__33538 = cljs.core.next(arglist__33538);
var a = cljs.core.first(arglist__33538);
arglist__33538 = cljs.core.next(arglist__33538);
var b = cljs.core.first(arglist__33538);
arglist__33538 = cljs.core.next(arglist__33538);
var c = cljs.core.first(arglist__33538);
var args = cljs.core.rest(arglist__33538);
return G__33536__delegate(m,p__33487,f,a,b,c,args);
});
G__33536.cljs$core$IFn$_invoke$arity$variadic = G__33536__delegate;
return G__33536;
})()
;
update_in = function(m,p__33487,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__33487,f);
case 4:
return update_in__4.call(this,m,p__33487,f,a);
case 5:
return update_in__5.call(this,m,p__33487,f,a,b);
case 6:
return update_in__6.call(this,m,p__33487,f,a,b,c);
default:
var G__33539 = null;
if (arguments.length > 6) {
var G__33540__i = 0, G__33540__a = new Array(arguments.length -  6);
while (G__33540__i < G__33540__a.length) {G__33540__a[G__33540__i] = arguments[G__33540__i + 6]; ++G__33540__i;}
G__33539 = new cljs.core.IndexedSeq(G__33540__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__33487,f,a,b,c, G__33539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33551 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33551) : f.call(null,G__33551));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33552 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33553 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33552,G__33553) : f.call(null,G__33552,G__33553));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33554 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33555 = x;
var G__33556 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33554,G__33555,G__33556) : f.call(null,G__33554,G__33555,G__33556));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33557 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33558 = x;
var G__33559 = y;
var G__33560 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33557,G__33558,G__33559,G__33560) : f.call(null,G__33557,G__33558,G__33559,G__33560));
})());
});
var update__7 = (function() { 
var G__33561__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__33561 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__33562__i = 0, G__33562__a = new Array(arguments.length -  6);
while (G__33562__i < G__33562__a.length) {G__33562__a[G__33562__i] = arguments[G__33562__i + 6]; ++G__33562__i;}
  more = new cljs.core.IndexedSeq(G__33562__a,0);
} 
return G__33561__delegate.call(this,m,k,f,x,y,z,more);};
G__33561.cljs$lang$maxFixedArity = 6;
G__33561.cljs$lang$applyTo = (function (arglist__33563){
var m = cljs.core.first(arglist__33563);
arglist__33563 = cljs.core.next(arglist__33563);
var k = cljs.core.first(arglist__33563);
arglist__33563 = cljs.core.next(arglist__33563);
var f = cljs.core.first(arglist__33563);
arglist__33563 = cljs.core.next(arglist__33563);
var x = cljs.core.first(arglist__33563);
arglist__33563 = cljs.core.next(arglist__33563);
var y = cljs.core.first(arglist__33563);
arglist__33563 = cljs.core.next(arglist__33563);
var z = cljs.core.first(arglist__33563);
var more = cljs.core.rest(arglist__33563);
return G__33561__delegate(m,k,f,x,y,z,more);
});
G__33561.cljs$core$IFn$_invoke$arity$variadic = G__33561__delegate;
return G__33561;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__33564 = null;
if (arguments.length > 6) {
var G__33565__i = 0, G__33565__a = new Array(arguments.length -  6);
while (G__33565__i < G__33565__a.length) {G__33565__a[G__33565__i] = arguments[G__33565__i + 6]; ++G__33565__i;}
G__33564 = new cljs.core.IndexedSeq(G__33565__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__33564);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__33566 = (ll - (5));
var G__33567 = r;
ll = G__33566;
ret = G__33567;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__33572 = cljs.core.pv_aget(node,(0));
var G__33573 = (level - (5));
node = G__33572;
level = G__33573;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__33574 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__33575 = (level - (5));
node = G__33574;
level = G__33575;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__33585 = init__$2;
var G__33586 = (j + i);
var G__33587 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33585,G__33586,G__33587) : f.call(null,G__33585,G__33586,G__33587));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__33598 = (j + (1));
var G__33599 = init__$3;
j = G__33598;
init__$2 = G__33599;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33588 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33588) : cljs.core.deref.call(null,G__33588));
} else {
var G__33600 = (i + len);
var G__33601 = init__$2;
i = G__33600;
init__$1 = G__33601;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__33589 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__33589) : cljs.core.tv_editable_root.call(null,G__33589));
})(),(function (){var G__33590 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__33590) : cljs.core.tv_editable_tail.call(null,G__33590));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__33591 = init__$2;
var G__33592 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33591,G__33592) : f.call(null,G__33591,G__33592));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__33602 = (j + (1));
var G__33603 = init__$3;
j = G__33602;
init__$2 = G__33603;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33593 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33593) : cljs.core.deref.call(null,G__33593));
} else {
var G__33604 = (i + len);
var G__33605 = init__$2;
i = G__33604;
init__$1 = G__33605;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__33594 = coll__$1;
var G__33595 = cljs.core.first_array_for_longvec(coll__$1);
var G__33596 = (0);
var G__33597 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33594,G__33595,G__33596,G__33597) : cljs.core.chunked_seq.call(null,G__33594,G__33595,G__33596,G__33597));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__11828__auto___33606 = len;
var i_33607 = (0);
while(true){
if((i_33607 < n__11828__auto___33606)){
(new_tail[i_33607] = (self__.tail[i_33607]));

var G__33608 = (i_33607 + (1));
i_33607 = G__33608;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__33609 = null;
var G__33609__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__33609__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__33609 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33609__2.call(this,self__,k);
case 3:
return G__33609__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33609.cljs$core$IFn$_invoke$arity$2 = G__33609__2;
G__33609.cljs$core$IFn$_invoke$arity$3 = G__33609__3;
return G__33609;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args33584){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33584)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__33610 = (i + (1));
var G__33611 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__33610;
out = G__33611;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33612__i = 0, G__33612__a = new Array(arguments.length -  0);
while (G__33612__i < G__33612__a.length) {G__33612__a[G__33612__i] = arguments[G__33612__i + 0]; ++G__33612__i;}
  args = new cljs.core.IndexedSeq(G__33612__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__33613){
var args = cljs.core.seq(arglist__33613);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__33614 = self__.vec;
var G__33615 = self__.node;
var G__33616 = self__.i;
var G__33617 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33614,G__33615,G__33616,G__33617) : cljs.core.chunked_seq.call(null,G__33614,G__33615,G__33616,G__33617));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__33618 = self__.vec;
var G__33619 = (self__.i + self__.off);
var G__33620 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__33618,G__33619,G__33620) : cljs.core.subvec.call(null,G__33618,G__33619,G__33620));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__33621 = self__.vec;
var G__33622 = (self__.i + self__.off);
var G__33623 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__33621,G__33622,G__33623) : cljs.core.subvec.call(null,G__33621,G__33622,G__33623));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__33624 = self__.vec;
var G__33625 = self__.node;
var G__33626 = self__.i;
var G__33627 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33624,G__33625,G__33626,G__33627) : cljs.core.chunked_seq.call(null,G__33624,G__33625,G__33626,G__33627));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__33628 = self__.vec;
var G__33629 = cljs.core.unchecked_array_for(self__.vec,end);
var G__33630 = end;
var G__33631 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33628,G__33629,G__33630,G__33631) : cljs.core.chunked_seq.call(null,G__33628,G__33629,G__33630,G__33631));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__33632 = self__.vec;
var G__33633 = self__.node;
var G__33634 = self__.i;
var G__33635 = self__.off;
var G__33636 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__33632,G__33633,G__33634,G__33635,G__33636) : cljs.core.chunked_seq.call(null,G__33632,G__33633,G__33634,G__33635,G__33636));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__33637 = self__.vec;
var G__33638 = cljs.core.unchecked_array_for(self__.vec,end);
var G__33639 = end;
var G__33640 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__33637,G__33638,G__33639,G__33640) : cljs.core.chunked_seq.call(null,G__33637,G__33638,G__33639,G__33640));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__33642 = self__.meta;
var G__33643 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__33644 = self__.start;
var G__33645 = (function (){var x__11258__auto__ = self__.end;
var y__11259__auto__ = (v_pos + (1));
return ((x__11258__auto__ > y__11259__auto__) ? x__11258__auto__ : y__11259__auto__);
})();
var G__33646 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__33642,G__33643,G__33644,G__33645,G__33646) : cljs.core.build_subvec.call(null,G__33642,G__33643,G__33644,G__33645,G__33646));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__33647 = self__.meta;
var G__33648 = self__.v;
var G__33649 = self__.start;
var G__33650 = (self__.end - (1));
var G__33651 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__33647,G__33648,G__33649,G__33650,G__33651) : cljs.core.build_subvec.call(null,G__33647,G__33648,G__33649,G__33650,G__33651));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__33653 = meta__$1;
var G__33654 = self__.v;
var G__33655 = self__.start;
var G__33656 = self__.end;
var G__33657 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__33653,G__33654,G__33655,G__33656,G__33657) : cljs.core.build_subvec.call(null,G__33653,G__33654,G__33655,G__33656,G__33657));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__33658 = self__.meta;
var G__33659 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__33660 = self__.start;
var G__33661 = (self__.end + (1));
var G__33662 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__33658,G__33659,G__33660,G__33661,G__33662) : cljs.core.build_subvec.call(null,G__33658,G__33659,G__33660,G__33661,G__33662));
});

cljs.core.Subvec.prototype.call = (function() {
var G__33663 = null;
var G__33663__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__33663__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__33663 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33663__2.call(this,self__,k);
case 3:
return G__33663__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33663.cljs$core$IFn$_invoke$arity$2 = G__33663__2;
G__33663.cljs$core$IFn$_invoke$arity$3 = G__33663__3;
return G__33663;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args33641){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33641)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__33664 = meta;
var G__33665 = v.v;
var G__33666 = (v.start + start);
var G__33667 = (v.start + end);
var G__33668 = __hash;
meta = G__33664;
v = G__33665;
start = G__33666;
end = G__33667;
__hash = G__33668;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj33675 = {};
return obj33675;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__33683 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__33684 = (level - (5));
node = G__33683;
level = G__33684;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__33688 = null;
var G__33688__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33688__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33688 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33688__2.call(this,self__,k);
case 3:
return G__33688__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33688.cljs$core$IFn$_invoke$arity$2 = G__33688__2;
G__33688.cljs$core$IFn$_invoke$arity$3 = G__33688__3;
return G__33688;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args33685){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33685)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__10941__auto__ = self__.front;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__10941__auto__ = self__.rear;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__33689 = (i + incr);
i = G__33689;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__33690 = (i + (1));
var G__33691 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__33690;
out = G__33691;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj33695 = {};
return obj33695;
})();
var l = ks.length;
var i_33696 = (0);
while(true){
if((i_33696 < l)){
var k_33697 = (ks[i_33696]);
(new_obj[k_33697] = (obj[k_33697]));

var G__33698 = (i_33696 + (1));
i_33696 = G__33698;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__10929__auto__ = (function (){var G__33702 = k;
return goog.isString(G__33702);
})();
if(cljs.core.truth_(and__10929__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__10929__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__33703 = init__$1;
var G__33704 = k;
var G__33705 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33703,G__33704,G__33705) : f.call(null,G__33703,G__33704,G__33705));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33706 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33706) : cljs.core.deref.call(null,G__33706));
} else {
var G__33712 = cljs.core.rest(keys__$1);
var G__33713 = init__$2;
keys__$1 = G__33712;
init__$1 = G__33713;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__10929__auto__ = (function (){var G__33708 = k;
return goog.isString(G__33708);
})();
if(cljs.core.truth_(and__10929__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__10929__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__33709 = k;
return goog.isString(G__33709);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__10929__auto__ = (function (){var G__33711 = k;
return goog.isString(G__33711);
})();
if(cljs.core.truth_(and__10929__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__10929__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__33699_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__33699_SHARP_,(self__.strobj[p1__33699_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__33714 = null;
var G__33714__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33714__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33714 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33714__2.call(this,self__,k);
case 3:
return G__33714__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33714.cljs$core$IFn$_invoke$arity$2 = G__33714__2;
G__33714.cljs$core$IFn$_invoke$arity$3 = G__33714__3;
return G__33714;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args33700){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33700)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj33716 = {};
return obj33716;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__33717 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33717,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33717,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__33718 = (i + (2));
i = G__33718;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__33719 = (i + (2));
i = G__33719;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__33720 = (i + (2));
i = G__33720;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__33721 = (i + (2));
i = G__33721;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__33722 = (i + (2));
i = G__33722;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__10941__auto__ = (function (){var G__33726 = k;
return goog.isString(G__33726);
})();
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_33727 = (0);
while(true){
if((i_33727 < l)){
(narr[i_33727] = (arr[i_33727]));

var G__33728 = (i_33727 + (1));
i_33727 = G__33728;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33730 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__33730) : cljs.core.keys.call(null,G__33730));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33731 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__33731) : cljs.core.vals.call(null,G__33731));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33732 = cljs.core.seq(coll);
var chunk__33733 = null;
var count__33734 = (0);
var i__33735 = (0);
while(true){
if((i__33735 < count__33734)){
var vec__33736 = chunk__33733.cljs$core$IIndexed$_nth$arity$2(null,i__33735);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33736,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33736,(1),null);
var G__33737_33750 = v;
var G__33738_33751 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33737_33750,G__33738_33751) : f.call(null,G__33737_33750,G__33738_33751));

var G__33752 = seq__33732;
var G__33753 = chunk__33733;
var G__33754 = count__33734;
var G__33755 = (i__33735 + (1));
seq__33732 = G__33752;
chunk__33733 = G__33753;
count__33734 = G__33754;
i__33735 = G__33755;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__33732);
if(temp__4406__auto__){
var seq__33732__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33732__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__33732__$1);
var G__33756 = cljs.core.chunk_rest(seq__33732__$1);
var G__33757 = c__11728__auto__;
var G__33758 = cljs.core.count(c__11728__auto__);
var G__33759 = (0);
seq__33732 = G__33756;
chunk__33733 = G__33757;
count__33734 = G__33758;
i__33735 = G__33759;
continue;
} else {
var vec__33739 = cljs.core.first(seq__33732__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33739,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33739,(1),null);
var G__33740_33760 = v;
var G__33741_33761 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33740_33760,G__33741_33761) : f.call(null,G__33740_33760,G__33741_33761));

var G__33762 = cljs.core.next(seq__33732__$1);
var G__33763 = null;
var G__33764 = (0);
var G__33765 = (0);
seq__33732 = G__33762;
chunk__33733 = G__33763;
count__33734 = G__33764;
i__33735 = G__33765;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__33742 = init__$1;
var G__33743 = (self__.arr[i]);
var G__33744 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33742,G__33743,G__33744) : f.call(null,G__33742,G__33743,G__33744));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33745 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33745) : cljs.core.deref.call(null,G__33745));
} else {
var G__33766 = (i + (2));
var G__33767 = init__$2;
i = G__33766;
init__$1 = G__33767;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__33746 = other;
if(G__33746){
var bit__11615__auto__ = (G__33746.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__11615__auto__) || (G__33746.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__33768 = (i + (2));
i = G__33768;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj33748 = {};
return obj33748;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__33769 = (s + (2));
var G__33770 = d;
s = G__33769;
d = G__33770;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__33771 = (s + (2));
var G__33772 = (d + (2));
s = G__33771;
d = G__33772;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__33749 = cljs.core.aclone(self__.arr);
(G__33749[(idx + (1))] = v);

return G__33749;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__33773 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__33774 = cljs.core.next(es);
ret = G__33773;
es = G__33774;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__33775 = null;
var G__33775__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33775__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33775 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33775__2.call(this,self__,k);
case 3:
return G__33775__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33775.cljs$core$IFn$_invoke$arity$2 = G__33775__2;
G__33775.cljs$core$IFn$_invoke$arity$3 = G__33775__3;
return G__33775;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args33729){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33729)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__33776 = (i + (2));
var G__33777 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__33776;
ret = G__33777;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__33778_33786 = self__.arr;
G__33778_33786.pop();

G__33778_33786.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__33779 = self__.len;
var G__33780 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__33779,G__33780) : cljs.core.array__GT_transient_hash_map.call(null,G__33779,G__33780));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__33781 = o;
if(G__33781){
var bit__11622__auto__ = (G__33781.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__11622__auto__) || (G__33781.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__33781.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33781);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33781);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__33782 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33782) : cljs.core.key.call(null,G__33782));
})(),(function (){var G__33783 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33783) : cljs.core.val.call(null,G__33783));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__33787 = cljs.core.next(es);
var G__33788 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__33784 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33784) : cljs.core.key.call(null,G__33784));
})(),(function (){var G__33785 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33785) : cljs.core.val.call(null,G__33785));
})());
es = G__33787;
tcoll__$2 = G__33788;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__33789 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__33790 = (i + (2));
out = G__33789;
i = G__33790;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__33793 = cljs.core.aclone(arr);
(G__33793[i] = a);

return G__33793;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__33794 = cljs.core.aclone(arr);
(G__33794[i] = a);

(G__33794[j] = b);

return G__33794;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__33799 = init__$1;
var G__33800 = k;
var G__33801 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33799,G__33800,G__33801) : f.call(null,G__33799,G__33800,G__33801));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33802 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33802) : cljs.core.deref.call(null,G__33802));
} else {
var G__33803 = (i + (2));
var G__33804 = init__$2;
i = G__33803;
init__$1 = G__33804;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__33805 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__33805) : cljs.core.create_inode_seq.call(null,G__33805));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_33819 = (0);
var j_33820 = (0);
while(true){
if((i_33819 < (32))){
if((((self__.bitmap >>> i_33819) & (1)) === (0))){
var G__33821 = (i_33819 + (1));
var G__33822 = j_33820;
i_33819 = G__33821;
j_33820 = G__33822;
continue;
} else {
(nodes[i_33819] = ((!(((self__.arr[j_33820]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_33820])),(self__.arr[j_33820]),(self__.arr[(j_33820 + (1))]),added_leaf_QMARK_):(self__.arr[(j_33820 + (1))])));

var G__33823 = (i_33819 + (1));
var G__33824 = (j_33820 + (2));
i_33819 = G__33823;
j_33820 = G__33824;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__33806 = edit__$1;
var G__33807 = (shift + (5));
var G__33808 = key_or_nil;
var G__33809 = val_or_node;
var G__33810 = hash;
var G__33811 = key;
var G__33812 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__33806,G__33807,G__33808,G__33809,G__33810,G__33811,G__33812) : cljs.core.create_node.call(null,G__33806,G__33807,G__33808,G__33809,G__33810,G__33811,G__33812));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_33825 = (0);
var j_33826 = (0);
while(true){
if((i_33825 < (32))){
if((((self__.bitmap >>> i_33825) & (1)) === (0))){
var G__33827 = (i_33825 + (1));
var G__33828 = j_33826;
i_33825 = G__33827;
j_33826 = G__33828;
continue;
} else {
(nodes[i_33825] = ((!(((self__.arr[j_33826]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_33826])),(self__.arr[j_33826]),(self__.arr[(j_33826 + (1))]),added_leaf_QMARK_):(self__.arr[(j_33826 + (1))])));

var G__33829 = (i_33825 + (1));
var G__33830 = (j_33826 + (2));
i_33825 = G__33829;
j_33826 = G__33830;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__33813 = (shift + (5));
var G__33814 = key_or_nil;
var G__33815 = val_or_node;
var G__33816 = hash;
var G__33817 = key;
var G__33818 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__33813,G__33814,G__33815,G__33816,G__33817,G__33818) : cljs.core.create_node.call(null,G__33813,G__33814,G__33815,G__33816,G__33817,G__33818));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__33831 = (i + (1));
var G__33832 = (j + (2));
var G__33833 = (bitmap | ((1) << i));
i = G__33831;
j = G__33832;
bitmap = G__33833;
continue;
} else {
var G__33834 = (i + (1));
var G__33835 = j;
var G__33836 = bitmap;
i = G__33834;
j = G__33835;
bitmap = G__33836;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__33837 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__33837) : cljs.core.create_array_node_seq.call(null,G__33837));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33838 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33838) : cljs.core.deref.call(null,G__33838));
} else {
var G__33839 = (i + (1));
var G__33840 = init__$2;
i = G__33839;
init__$1 = G__33840;
continue;
}
} else {
var G__33841 = (i + (1));
var G__33842 = init__$1;
i = G__33841;
init__$1 = G__33842;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__33843 = (i + (2));
i = G__33843;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__33844 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__33844) : cljs.core.create_inode_seq.call(null,G__33844));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__33845 = self__.nodes;
var G__33846 = (self__.i + (2));
var G__33847 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__33845,G__33846,G__33847) : cljs.core.create_inode_seq.call(null,G__33845,G__33846,G__33847));
} else {
var G__33848 = self__.nodes;
var G__33849 = self__.i;
var G__33850 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__33848,G__33849,G__33850) : cljs.core.create_inode_seq.call(null,G__33848,G__33849,G__33850));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4404__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4404__auto__)){
var node = temp__4404__auto__;
var temp__4404__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var node_seq = temp__4404__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__33854 = (j + (2));
j = G__33854;
continue;
}
} else {
var G__33855 = (j + (2));
j = G__33855;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__33856 = null;
var G__33857 = self__.nodes;
var G__33858 = self__.i;
var G__33859 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__33856,G__33857,G__33858,G__33859) : cljs.core.create_array_node_seq.call(null,G__33856,G__33857,G__33858,G__33859));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4404__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4404__auto__)){
var nj = temp__4404__auto__;
var temp__4404__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var ns = temp__4404__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__33864 = (j + (1));
j = G__33864;
continue;
}
} else {
var G__33865 = (j + (1));
j = G__33865;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33867 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__33867) : cljs.core.keys.call(null,G__33867));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33868 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__33868) : cljs.core.vals.call(null,G__33868));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33869 = cljs.core.seq(coll);
var chunk__33870 = null;
var count__33871 = (0);
var i__33872 = (0);
while(true){
if((i__33872 < count__33871)){
var vec__33873 = chunk__33870.cljs$core$IIndexed$_nth$arity$2(null,i__33872);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33873,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33873,(1),null);
var G__33874_33885 = v;
var G__33875_33886 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33874_33885,G__33875_33886) : f.call(null,G__33874_33885,G__33875_33886));

var G__33887 = seq__33869;
var G__33888 = chunk__33870;
var G__33889 = count__33871;
var G__33890 = (i__33872 + (1));
seq__33869 = G__33887;
chunk__33870 = G__33888;
count__33871 = G__33889;
i__33872 = G__33890;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__33869);
if(temp__4406__auto__){
var seq__33869__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33869__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__33869__$1);
var G__33891 = cljs.core.chunk_rest(seq__33869__$1);
var G__33892 = c__11728__auto__;
var G__33893 = cljs.core.count(c__11728__auto__);
var G__33894 = (0);
seq__33869 = G__33891;
chunk__33870 = G__33892;
count__33871 = G__33893;
i__33872 = G__33894;
continue;
} else {
var vec__33876 = cljs.core.first(seq__33869__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33876,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33876,(1),null);
var G__33877_33895 = v;
var G__33878_33896 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33877_33895,G__33878_33896) : f.call(null,G__33877_33895,G__33878_33896));

var G__33897 = cljs.core.next(seq__33869__$1);
var G__33898 = null;
var G__33899 = (0);
var G__33900 = (0);
seq__33869 = G__33897;
chunk__33870 = G__33898;
count__33871 = G__33899;
i__33872 = G__33900;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__33879 = init;
var G__33880 = null;
var G__33881 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33879,G__33880,G__33881) : f.call(null,G__33879,G__33880,G__33881));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__33882 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33882) : cljs.core.deref.call(null,G__33882));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj33884 = {};
return obj33884;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__33901 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__33902 = cljs.core.next(es);
ret = G__33901;
es = G__33902;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__33903 = null;
var G__33903__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33903__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33903 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33903__2.call(this,self__,k);
case 3:
return G__33903__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33903.cljs$core$IFn$_invoke$arity$2 = G__33903__2;
G__33903.cljs$core$IFn$_invoke$arity$3 = G__33903__3;
return G__33903;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args33866){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33866)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__33904 = (i + (2));
var G__33905 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__33904;
ret = G__33905;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__33906 = (i + (1));
var G__33907 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__33906;
out = G__33907;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__33908 = o;
if(G__33908){
var bit__11622__auto__ = (G__33908.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__11622__auto__) || (G__33908.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__33908.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33908);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33908);
}
})()){
return tcoll.assoc_BANG_((function (){var G__33909 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33909) : cljs.core.key.call(null,G__33909));
})(),(function (){var G__33910 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33910) : cljs.core.val.call(null,G__33910));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__33913 = cljs.core.next(es);
var G__33914 = tcoll__$1.assoc_BANG_((function (){var G__33911 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33911) : cljs.core.key.call(null,G__33911));
})(),(function (){var G__33912 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33912) : cljs.core.val.call(null,G__33912));
})());
es = G__33913;
tcoll__$1 = G__33914;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__33915 = ((ascending_QMARK_)?t.left:t.right);
var G__33916 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__33915;
stack__$1 = G__33916;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__33929 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33929) : cljs.core.deref.call(null,G__33929));
} else {
var init__$2 = (function (){var G__33930 = init__$1;
var G__33931 = node.key;
var G__33932 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33930,G__33931,G__33932) : f.call(null,G__33930,G__33931,G__33932));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33933 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33933) : cljs.core.deref.call(null,G__33933));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__33934 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33934) : cljs.core.deref.call(null,G__33934));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__33936 = null;
var G__33936__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33936__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33936 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33936__2.call(this,self__,k);
case 3:
return G__33936__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33936.cljs$core$IFn$_invoke$arity$2 = G__33936__2;
G__33936.cljs$core$IFn$_invoke$arity$3 = G__33936__3;
return G__33936;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args33935){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33935)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__33938 = null;
var G__33938__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33938__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33938 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33938__2.call(this,self__,k);
case 3:
return G__33938__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33938.cljs$core$IFn$_invoke$arity$2 = G__33938__2;
G__33938.cljs$core$IFn$_invoke$arity$3 = G__33938__3;
return G__33938;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args33937){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33937)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__33951 = k;
var G__33952 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33951,G__33952) : comp.call(null,G__33951,G__33952));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__33971 = k;
var G__33972 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33971,G__33972) : comp.call(null,G__33971,G__33972));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__33983 = k;
var G__33984 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33983,G__33984) : comp.call(null,G__33983,G__33984));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33986 = cljs.core.seq(coll);
var chunk__33987 = null;
var count__33988 = (0);
var i__33989 = (0);
while(true){
if((i__33989 < count__33988)){
var vec__33990 = chunk__33987.cljs$core$IIndexed$_nth$arity$2(null,i__33989);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33990,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33990,(1),null);
var G__33991_34003 = v;
var G__33992_34004 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33991_34003,G__33992_34004) : f.call(null,G__33991_34003,G__33992_34004));

var G__34005 = seq__33986;
var G__34006 = chunk__33987;
var G__34007 = count__33988;
var G__34008 = (i__33989 + (1));
seq__33986 = G__34005;
chunk__33987 = G__34006;
count__33988 = G__34007;
i__33989 = G__34008;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__33986);
if(temp__4406__auto__){
var seq__33986__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33986__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__33986__$1);
var G__34009 = cljs.core.chunk_rest(seq__33986__$1);
var G__34010 = c__11728__auto__;
var G__34011 = cljs.core.count(c__11728__auto__);
var G__34012 = (0);
seq__33986 = G__34009;
chunk__33987 = G__34010;
count__33988 = G__34011;
i__33989 = G__34012;
continue;
} else {
var vec__33993 = cljs.core.first(seq__33986__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33993,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33993,(1),null);
var G__33994_34013 = v;
var G__33995_34014 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33994_34013,G__33995_34014) : f.call(null,G__33994_34013,G__33995_34014));

var G__34015 = cljs.core.next(seq__33986__$1);
var G__34016 = null;
var G__34017 = (0);
var G__34018 = (0);
seq__33986 = G__34015;
chunk__33987 = G__34016;
count__33988 = G__34017;
i__33989 = G__34018;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33996 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__33996) : cljs.core.keys.call(null,G__33996));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33997 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__33997) : cljs.core.vals.call(null,G__33997));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__33998 = k;
var G__33999 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__33998,G__33999) : self__.comp.call(null,G__33998,G__33999));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__34019 = t.left;
t = G__34019;
continue;
} else {
var G__34020 = t.right;
t = G__34020;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__34021 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__34022 = cljs.core.next(es);
ret = G__34021;
es = G__34022;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__34023 = null;
var G__34023__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34023__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34023 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34023__2.call(this,self__,k);
case 3:
return G__34023__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34023.cljs$core$IFn$_invoke$arity$2 = G__34023__2;
G__34023.cljs$core$IFn$_invoke$arity$3 = G__34023__3;
return G__34023;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args33985){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33985)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__34000 = k;
var G__34001 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__34000,G__34001) : self__.comp.call(null,G__34000,G__34001));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__34024 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__34025 = t.left;
stack = G__34024;
t = G__34025;
continue;
} else {
var G__34026 = stack;
var G__34027 = t.right;
stack = G__34026;
t = G__34027;
continue;
}
} else {
if((c > (0))){
var G__34028 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__34029 = t.right;
stack = G__34028;
t = G__34029;
continue;
} else {
var G__34030 = stack;
var G__34031 = t.left;
stack = G__34030;
t = G__34031;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__34002 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34002) : cljs.core.key.call(null,G__34002));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__34032 = cljs.core.nnext(in$);
var G__34033 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__34032;
out = G__34033;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34034__i = 0, G__34034__a = new Array(arguments.length -  0);
while (G__34034__i < G__34034__a.length) {G__34034__a[G__34034__i] = arguments[G__34034__i + 0]; ++G__34034__i;}
  keyvals = new cljs.core.IndexedSeq(G__34034__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__34035){
var keyvals = cljs.core.seq(arglist__34035);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34036__i = 0, G__34036__a = new Array(arguments.length -  0);
while (G__34036__i < G__34036__a.length) {G__34036__a[G__34036__i] = arguments[G__34036__i + 0]; ++G__34036__i;}
  keyvals = new cljs.core.IndexedSeq(G__34036__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__34037){
var keyvals = cljs.core.seq(arglist__34037);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj34041 = {};
return obj34041;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__34042 = cljs.core.nnext(kvs);
kvs = G__34042;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34043__i = 0, G__34043__a = new Array(arguments.length -  0);
while (G__34043__i < G__34043__a.length) {G__34043__a[G__34043__i] = arguments[G__34043__i + 0]; ++G__34043__i;}
  keyvals = new cljs.core.IndexedSeq(G__34043__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__34044){
var keyvals = cljs.core.seq(arglist__34044);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__34045 = cljs.core.nnext(in$);
var G__34046 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__34045;
out = G__34046;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34047__i = 0, G__34047__a = new Array(arguments.length -  0);
while (G__34047__i < G__34047__a.length) {G__34047__a[G__34047__i] = arguments[G__34047__i + 0]; ++G__34047__i;}
  keyvals = new cljs.core.IndexedSeq(G__34047__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__34048){
var keyvals = cljs.core.seq(arglist__34048);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__34049 = cljs.core.nnext(in$);
var G__34050 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__34049;
out = G__34050;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__34051__i = 0, G__34051__a = new Array(arguments.length -  1);
while (G__34051__i < G__34051__a.length) {G__34051__a[G__34051__i] = arguments[G__34051__i + 1]; ++G__34051__i;}
  keyvals = new cljs.core.IndexedSeq(G__34051__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__34052){
var comparator = cljs.core.first(arglist__34052);
var keyvals = cljs.core.rest(arglist__34052);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__34053 = self__.mseq;
if(G__34053){
var bit__11622__auto__ = (G__34053.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11622__auto__) || (G__34053.cljs$core$INext$)){
return true;
} else {
if((!G__34053.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34053);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34053);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__34054 = self__.mseq;
if(G__34054){
var bit__11622__auto__ = (G__34054.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11622__auto__) || (G__34054.cljs$core$INext$)){
return true;
} else {
if((!G__34054.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34054);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34054);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__34055 = self__.mseq;
if(G__34055){
var bit__11622__auto__ = (G__34055.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11622__auto__) || (G__34055.cljs$core$INext$)){
return true;
} else {
if((!G__34055.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34055);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34055);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__34056 = self__.mseq;
if(G__34056){
var bit__11622__auto__ = (G__34056.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11622__auto__) || (G__34056.cljs$core$INext$)){
return true;
} else {
if((!G__34056.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34056);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34056);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__34057_SHARP_,p2__34058_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__10941__auto__ = p1__34057_SHARP_;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__34058_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__34059__i = 0, G__34059__a = new Array(arguments.length -  0);
while (G__34059__i < G__34059__a.length) {G__34059__a[G__34059__i] = arguments[G__34059__i + 0]; ++G__34059__i;}
  maps = new cljs.core.IndexedSeq(G__34059__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__34060){
var maps = cljs.core.seq(arglist__34060);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34063 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34064 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34063,G__34064) : f.call(null,G__34063,G__34064));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__10941__auto__ = m1;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__34065__i = 0, G__34065__a = new Array(arguments.length -  1);
while (G__34065__i < G__34065__a.length) {G__34065__a[G__34065__i] = arguments[G__34065__i + 1]; ++G__34065__i;}
  maps = new cljs.core.IndexedSeq(G__34065__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__34066){
var f = cljs.core.first(arglist__34066);
var maps = cljs.core.rest(arglist__34066);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__34067 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__34068 = cljs.core.next(keys);
ret = G__34067;
keys = G__34068;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34071 = cljs.core.seq(coll);
var chunk__34072 = null;
var count__34073 = (0);
var i__34074 = (0);
while(true){
if((i__34074 < count__34073)){
var vec__34075 = chunk__34072.cljs$core$IIndexed$_nth$arity$2(null,i__34074);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34075,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34075,(1),null);
var G__34076_34081 = v;
var G__34077_34082 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34076_34081,G__34077_34082) : f.call(null,G__34076_34081,G__34077_34082));

var G__34083 = seq__34071;
var G__34084 = chunk__34072;
var G__34085 = count__34073;
var G__34086 = (i__34074 + (1));
seq__34071 = G__34083;
chunk__34072 = G__34084;
count__34073 = G__34085;
i__34074 = G__34086;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__34071);
if(temp__4406__auto__){
var seq__34071__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34071__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__34071__$1);
var G__34087 = cljs.core.chunk_rest(seq__34071__$1);
var G__34088 = c__11728__auto__;
var G__34089 = cljs.core.count(c__11728__auto__);
var G__34090 = (0);
seq__34071 = G__34087;
chunk__34072 = G__34088;
count__34073 = G__34089;
i__34074 = G__34090;
continue;
} else {
var vec__34078 = cljs.core.first(seq__34071__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34078,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34078,(1),null);
var G__34079_34091 = v;
var G__34080_34092 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34079_34091,G__34080_34092) : f.call(null,G__34079_34091,G__34080_34092));

var G__34093 = cljs.core.next(seq__34071__$1);
var G__34094 = null;
var G__34095 = (0);
var G__34096 = (0);
seq__34071 = G__34093;
chunk__34072 = G__34094;
count__34073 = G__34095;
i__34074 = G__34096;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__34069_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__34069_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__34097 = null;
var G__34097__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34097__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34097 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34097__2.call(this,self__,k);
case 3:
return G__34097__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34097.cljs$core$IFn$_invoke$arity$2 = G__34097__2;
G__34097.cljs$core$IFn$_invoke$arity$3 = G__34097__3;
return G__34097;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args34070){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34070)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__34098 = (i + (1));
var G__34099 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__34098;
out = G__34099;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__34100 = (i + (1));
var G__34101 = cljs.core._conj_BANG_(out,(items[i]));
i = G__34100;
out = G__34101;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__34103 = null;
var G__34103__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__34103__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__34103 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34103__2.call(this,self__,k);
case 3:
return G__34103__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34103.cljs$core$IFn$_invoke$arity$2 = G__34103__2;
G__34103.cljs$core$IFn$_invoke$arity$3 = G__34103__3;
return G__34103;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args34102){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34102)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34106 = cljs.core.seq(coll);
var chunk__34107 = null;
var count__34108 = (0);
var i__34109 = (0);
while(true){
if((i__34109 < count__34108)){
var vec__34110 = chunk__34107.cljs$core$IIndexed$_nth$arity$2(null,i__34109);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34110,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34110,(1),null);
var G__34111_34116 = v;
var G__34112_34117 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34111_34116,G__34112_34117) : f.call(null,G__34111_34116,G__34112_34117));

var G__34118 = seq__34106;
var G__34119 = chunk__34107;
var G__34120 = count__34108;
var G__34121 = (i__34109 + (1));
seq__34106 = G__34118;
chunk__34107 = G__34119;
count__34108 = G__34120;
i__34109 = G__34121;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__34106);
if(temp__4406__auto__){
var seq__34106__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34106__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__34106__$1);
var G__34122 = cljs.core.chunk_rest(seq__34106__$1);
var G__34123 = c__11728__auto__;
var G__34124 = cljs.core.count(c__11728__auto__);
var G__34125 = (0);
seq__34106 = G__34122;
chunk__34107 = G__34123;
count__34108 = G__34124;
i__34109 = G__34125;
continue;
} else {
var vec__34113 = cljs.core.first(seq__34106__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34113,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34113,(1),null);
var G__34114_34126 = v;
var G__34115_34127 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34114_34126,G__34115_34127) : f.call(null,G__34114_34126,G__34115_34127));

var G__34128 = cljs.core.next(seq__34106__$1);
var G__34129 = null;
var G__34130 = (0);
var G__34131 = (0);
seq__34106 = G__34128;
chunk__34107 = G__34129;
count__34108 = G__34130;
i__34109 = G__34131;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__34104_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__34104_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__34132 = null;
var G__34132__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34132__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34132 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34132__2.call(this,self__,k);
case 3:
return G__34132__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34132.cljs$core$IFn$_invoke$arity$2 = G__34132__2;
G__34132.cljs$core$IFn$_invoke$arity$3 = G__34132__3;
return G__34132;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args34105){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34105)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__11822__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__11822__auto__.length)){
var G__34133 = (i + (1));
var G__34134 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__34133;
res = G__34134;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__34135 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__34136 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__34135;
out = G__34136;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__34137__delegate = function (keys){
return cljs.core.set(keys);
};
var G__34137 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__34138__i = 0, G__34138__a = new Array(arguments.length -  0);
while (G__34138__i < G__34138__a.length) {G__34138__a[G__34138__i] = arguments[G__34138__i + 0]; ++G__34138__i;}
  keys = new cljs.core.IndexedSeq(G__34138__a,0);
} 
return G__34137__delegate.call(this,keys);};
G__34137.cljs$lang$maxFixedArity = 0;
G__34137.cljs$lang$applyTo = (function (arglist__34139){
var keys = cljs.core.seq(arglist__34139);
return G__34137__delegate(keys);
});
G__34137.cljs$core$IFn$_invoke$arity$variadic = G__34137__delegate;
return G__34137;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__34140 = null;
if (arguments.length > 0) {
var G__34141__i = 0, G__34141__a = new Array(arguments.length -  0);
while (G__34141__i < G__34141__a.length) {G__34141__a[G__34141__i] = arguments[G__34141__i + 0]; ++G__34141__i;}
G__34140 = new cljs.core.IndexedSeq(G__34141__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__34140);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__34142__i = 0, G__34142__a = new Array(arguments.length -  0);
while (G__34142__i < G__34142__a.length) {G__34142__a[G__34142__i] = arguments[G__34142__i + 0]; ++G__34142__i;}
  keys = new cljs.core.IndexedSeq(G__34142__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__34143){
var keys = cljs.core.seq(arglist__34143);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__34144__i = 0, G__34144__a = new Array(arguments.length -  1);
while (G__34144__i < G__34144__a.length) {G__34144__a[G__34144__i] = arguments[G__34144__i + 1]; ++G__34144__i;}
  keys = new cljs.core.IndexedSeq(G__34144__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__34145){
var comparator = cljs.core.first(arglist__34145);
var keys = cljs.core.rest(arglist__34145);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__34146_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__34146_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.val(e);
} else {
return p1__34146_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4404__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__34147_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__34147_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.second(e);
} else {
return p1__34147_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__34168 = null;
var G__34168__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34168__1 = (function (result){
var G__34158 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34158) : rf.call(null,G__34158));
});
var G__34168__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__34159 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34159) : cljs.core.deref.call(null,G__34159));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__34160 = result;
var G__34161 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34160,G__34161) : rf.call(null,G__34160,G__34161));
}
});
G__34168 = function(result,input){
switch(arguments.length){
case 0:
return G__34168__0.call(this);
case 1:
return G__34168__1.call(this,result);
case 2:
return G__34168__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34168.cljs$core$IFn$_invoke$arity$0 = G__34168__0;
G__34168.cljs$core$IFn$_invoke$arity$1 = G__34168__1;
G__34168.cljs$core$IFn$_invoke$arity$2 = G__34168__2;
return G__34168;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__34166,seen__$1){
while(true){
var vec__34167 = p__34166;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34167,(0),null);
var xs__$1 = vec__34167;
var temp__4406__auto__ = cljs.core.seq(xs__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__34169 = cljs.core.rest(s);
var G__34170 = seen__$1;
p__34166 = G__34169;
seen__$1 = G__34170;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__34171 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__34172 = cljs.core.next(s__$1);
ret = G__34171;
s__$1 = G__34172;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__34174 = x;
if(G__34174){
var bit__11615__auto__ = (G__34174.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__11615__auto__) || (G__34174.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__34175 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__34176 = cljs.core.next(ks);
var G__34177 = cljs.core.next(vs);
map = G__34175;
ks = G__34176;
vs = G__34177;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__34188 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34188) : k.call(null,G__34188));
})() > (function (){var G__34189 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34189) : k.call(null,G__34189));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__34190__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__34178_SHARP_,p2__34179_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__34178_SHARP_,p2__34179_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__34190 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__34191__i = 0, G__34191__a = new Array(arguments.length -  3);
while (G__34191__i < G__34191__a.length) {G__34191__a[G__34191__i] = arguments[G__34191__i + 3]; ++G__34191__i;}
  more = new cljs.core.IndexedSeq(G__34191__a,0);
} 
return G__34190__delegate.call(this,k,x,y,more);};
G__34190.cljs$lang$maxFixedArity = 3;
G__34190.cljs$lang$applyTo = (function (arglist__34192){
var k = cljs.core.first(arglist__34192);
arglist__34192 = cljs.core.next(arglist__34192);
var x = cljs.core.first(arglist__34192);
arglist__34192 = cljs.core.next(arglist__34192);
var y = cljs.core.first(arglist__34192);
var more = cljs.core.rest(arglist__34192);
return G__34190__delegate(k,x,y,more);
});
G__34190.cljs$core$IFn$_invoke$arity$variadic = G__34190__delegate;
return G__34190;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__34193 = null;
if (arguments.length > 3) {
var G__34194__i = 0, G__34194__a = new Array(arguments.length -  3);
while (G__34194__i < G__34194__a.length) {G__34194__a[G__34194__i] = arguments[G__34194__i + 3]; ++G__34194__i;}
G__34193 = new cljs.core.IndexedSeq(G__34194__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__34193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__34205 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34205) : k.call(null,G__34205));
})() < (function (){var G__34206 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34206) : k.call(null,G__34206));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__34207__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__34195_SHARP_,p2__34196_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__34195_SHARP_,p2__34196_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__34207 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__34208__i = 0, G__34208__a = new Array(arguments.length -  3);
while (G__34208__i < G__34208__a.length) {G__34208__a[G__34208__i] = arguments[G__34208__i + 3]; ++G__34208__i;}
  more = new cljs.core.IndexedSeq(G__34208__a,0);
} 
return G__34207__delegate.call(this,k,x,y,more);};
G__34207.cljs$lang$maxFixedArity = 3;
G__34207.cljs$lang$applyTo = (function (arglist__34209){
var k = cljs.core.first(arglist__34209);
arglist__34209 = cljs.core.next(arglist__34209);
var x = cljs.core.first(arglist__34209);
arglist__34209 = cljs.core.next(arglist__34209);
var y = cljs.core.first(arglist__34209);
var more = cljs.core.rest(arglist__34209);
return G__34207__delegate(k,x,y,more);
});
G__34207.cljs$core$IFn$_invoke$arity$variadic = G__34207__delegate;
return G__34207;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__34210 = null;
if (arguments.length > 3) {
var G__34211__i = 0, G__34211__a = new Array(arguments.length -  3);
while (G__34211__i < G__34211__a.length) {G__34211__a[G__34211__i] = arguments[G__34211__i + 3]; ++G__34211__i;}
G__34210 = new cljs.core.IndexedSeq(G__34211__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__34210);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__34228 = null;
var G__34228__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34228__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__34223 = result;
var G__34224 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34223,G__34224) : rf.call(null,G__34223,G__34224));
})());
})());
var G__34225 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34225) : rf.call(null,G__34225));
});
var G__34228__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__34226 = result;
var G__34227 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34226,G__34227) : rf.call(null,G__34226,G__34227));
} else {
return result;
}
});
G__34228 = function(result,input){
switch(arguments.length){
case 0:
return G__34228__0.call(this);
case 1:
return G__34228__1.call(this,result);
case 2:
return G__34228__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34228.cljs$core$IFn$_invoke$arity$0 = G__34228__0;
G__34228.cljs$core$IFn$_invoke$arity$1 = G__34228__1;
G__34228.cljs$core$IFn$_invoke$arity$2 = G__34228__2;
return G__34228;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__34241 = null;
var G__34241__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34241__1 = (function (result){
var G__34236 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34236) : rf.call(null,G__34236));
});
var G__34241__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__34237 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34237) : pred.call(null,G__34237));
})())){
var G__34238 = result;
var G__34239 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34238,G__34239) : rf.call(null,G__34238,G__34239));
} else {
return cljs.core.reduced(result);
}
});
G__34241 = function(result,input){
switch(arguments.length){
case 0:
return G__34241__0.call(this);
case 1:
return G__34241__1.call(this,result);
case 2:
return G__34241__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34241.cljs$core$IFn$_invoke$arity$0 = G__34241__0;
G__34241.cljs$core$IFn$_invoke$arity$1 = G__34241__1;
G__34241.cljs$core$IFn$_invoke$arity$2 = G__34241__2;
return G__34241;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.truth_((function (){var G__34240 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34240) : pred.call(null,G__34240));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__34246 = (function (){var G__34248 = cljs.core._entry_key(sc,e);
var G__34249 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34248,G__34249) : comp.call(null,G__34248,G__34249));
})();
var G__34247 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__34246,G__34247) : test.call(null,G__34246,G__34247));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__34253 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34253,(0),null);
var s = vec__34253;
if(cljs.core.truth_((function (){var G__34254 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__34254) : include.call(null,G__34254));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__34255 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34255,(0),null);
var s = vec__34255;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__34259 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34259,(0),null);
var s = vec__34259;
if(cljs.core.truth_((function (){var G__34260 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__34260) : include.call(null,G__34260));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__34261 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34261,(0),null);
var s = vec__34261;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__34262 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__34262) : Math.ceil.call(null,G__34262));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__11362__auto__ = self__.__hash;
if(!((h__11362__auto__ == null))){
return h__11362__auto__;
} else {
var h__11362__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__11362__auto____$1;

return h__11362__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__34263 = ret;
var G__34264 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34263,G__34264) : f.call(null,G__34263,G__34264));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__34265 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34265) : cljs.core.deref.call(null,G__34265));
} else {
var G__34266 = (i + self__.step);
var G__34267 = ret__$1;
i = G__34266;
ret = G__34267;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__34285 = null;
var G__34285__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34285__1 = (function (result){
var G__34282 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34282) : rf.call(null,G__34282));
});
var G__34285__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__34283 = result;
var G__34284 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34283,G__34284) : rf.call(null,G__34283,G__34284));
} else {
return result;
}
});
G__34285 = function(result,input){
switch(arguments.length){
case 0:
return G__34285__0.call(this);
case 1:
return G__34285__1.call(this,result);
case 2:
return G__34285__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34285.cljs$core$IFn$_invoke$arity$0 = G__34285__0;
G__34285.cljs$core$IFn$_invoke$arity$1 = G__34285__1;
G__34285.cljs$core$IFn$_invoke$arity$2 = G__34285__2;
return G__34285;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__34307 = null;
var G__34307__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34307__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__34298 = result;
var G__34299 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34298,G__34299) : rf.call(null,G__34298,G__34299));
})());
})());
var G__34300 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34300) : rf.call(null,G__34300));
});
var G__34307__2 = (function (result,input){
var pval = (function (){var G__34301 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34301) : cljs.core.deref.call(null,G__34301));
})();
var val = (function (){var G__34302 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34302) : f.call(null,G__34302));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__34303 = result;
var G__34304 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34303,G__34304) : rf.call(null,G__34303,G__34304));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__34307 = function(result,input){
switch(arguments.length){
case 0:
return G__34307__0.call(this);
case 1:
return G__34307__1.call(this,result);
case 2:
return G__34307__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34307.cljs$core$IFn$_invoke$arity$0 = G__34307__0;
G__34307.cljs$core$IFn$_invoke$arity$1 = G__34307__1;
G__34307.cljs$core$IFn$_invoke$arity$2 = G__34307__2;
return G__34307;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__34305 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34305) : f.call(null,G__34305));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4406__auto__){
return (function (p1__34286_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__34306 = p1__34286_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34306) : f.call(null,G__34306));
})());
});})(fst,fv,s,temp__4406__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__34316 = init;
var G__34317 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34316,G__34317) : f.call(null,G__34316,G__34317));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__34412 = null;
var G__34412__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__34412__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34370 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34370) : f.call(null,G__34370));
})()],null));
});
var G__34412__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34371 = x;
var G__34372 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34371,G__34372) : f.call(null,G__34371,G__34372));
})()],null));
});
var G__34412__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34373 = x;
var G__34374 = y;
var G__34375 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34373,G__34374,G__34375) : f.call(null,G__34373,G__34374,G__34375));
})()],null));
});
var G__34412__4 = (function() { 
var G__34413__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__34413 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34414__i = 0, G__34414__a = new Array(arguments.length -  3);
while (G__34414__i < G__34414__a.length) {G__34414__a[G__34414__i] = arguments[G__34414__i + 3]; ++G__34414__i;}
  args = new cljs.core.IndexedSeq(G__34414__a,0);
} 
return G__34413__delegate.call(this,x,y,z,args);};
G__34413.cljs$lang$maxFixedArity = 3;
G__34413.cljs$lang$applyTo = (function (arglist__34415){
var x = cljs.core.first(arglist__34415);
arglist__34415 = cljs.core.next(arglist__34415);
var y = cljs.core.first(arglist__34415);
arglist__34415 = cljs.core.next(arglist__34415);
var z = cljs.core.first(arglist__34415);
var args = cljs.core.rest(arglist__34415);
return G__34413__delegate(x,y,z,args);
});
G__34413.cljs$core$IFn$_invoke$arity$variadic = G__34413__delegate;
return G__34413;
})()
;
G__34412 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34412__0.call(this);
case 1:
return G__34412__1.call(this,x);
case 2:
return G__34412__2.call(this,x,y);
case 3:
return G__34412__3.call(this,x,y,z);
default:
var G__34416 = null;
if (arguments.length > 3) {
var G__34417__i = 0, G__34417__a = new Array(arguments.length -  3);
while (G__34417__i < G__34417__a.length) {G__34417__a[G__34417__i] = arguments[G__34417__i + 3]; ++G__34417__i;}
G__34416 = new cljs.core.IndexedSeq(G__34417__a,0);
}
return G__34412__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34412.cljs$lang$maxFixedArity = 3;
G__34412.cljs$lang$applyTo = G__34412__4.cljs$lang$applyTo;
G__34412.cljs$core$IFn$_invoke$arity$0 = G__34412__0;
G__34412.cljs$core$IFn$_invoke$arity$1 = G__34412__1;
G__34412.cljs$core$IFn$_invoke$arity$2 = G__34412__2;
G__34412.cljs$core$IFn$_invoke$arity$3 = G__34412__3;
G__34412.cljs$core$IFn$_invoke$arity$variadic = G__34412__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34412;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__34418 = null;
var G__34418__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__34418__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34376 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34376) : f.call(null,G__34376));
})(),(function (){var G__34377 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34377) : g.call(null,G__34377));
})()],null));
});
var G__34418__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34378 = x;
var G__34379 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34378,G__34379) : f.call(null,G__34378,G__34379));
})(),(function (){var G__34380 = x;
var G__34381 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__34380,G__34381) : g.call(null,G__34380,G__34381));
})()],null));
});
var G__34418__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34382 = x;
var G__34383 = y;
var G__34384 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34382,G__34383,G__34384) : f.call(null,G__34382,G__34383,G__34384));
})(),(function (){var G__34385 = x;
var G__34386 = y;
var G__34387 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__34385,G__34386,G__34387) : g.call(null,G__34385,G__34386,G__34387));
})()],null));
});
var G__34418__4 = (function() { 
var G__34419__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__34419 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34420__i = 0, G__34420__a = new Array(arguments.length -  3);
while (G__34420__i < G__34420__a.length) {G__34420__a[G__34420__i] = arguments[G__34420__i + 3]; ++G__34420__i;}
  args = new cljs.core.IndexedSeq(G__34420__a,0);
} 
return G__34419__delegate.call(this,x,y,z,args);};
G__34419.cljs$lang$maxFixedArity = 3;
G__34419.cljs$lang$applyTo = (function (arglist__34421){
var x = cljs.core.first(arglist__34421);
arglist__34421 = cljs.core.next(arglist__34421);
var y = cljs.core.first(arglist__34421);
arglist__34421 = cljs.core.next(arglist__34421);
var z = cljs.core.first(arglist__34421);
var args = cljs.core.rest(arglist__34421);
return G__34419__delegate(x,y,z,args);
});
G__34419.cljs$core$IFn$_invoke$arity$variadic = G__34419__delegate;
return G__34419;
})()
;
G__34418 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34418__0.call(this);
case 1:
return G__34418__1.call(this,x);
case 2:
return G__34418__2.call(this,x,y);
case 3:
return G__34418__3.call(this,x,y,z);
default:
var G__34422 = null;
if (arguments.length > 3) {
var G__34423__i = 0, G__34423__a = new Array(arguments.length -  3);
while (G__34423__i < G__34423__a.length) {G__34423__a[G__34423__i] = arguments[G__34423__i + 3]; ++G__34423__i;}
G__34422 = new cljs.core.IndexedSeq(G__34423__a,0);
}
return G__34418__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34422);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34418.cljs$lang$maxFixedArity = 3;
G__34418.cljs$lang$applyTo = G__34418__4.cljs$lang$applyTo;
G__34418.cljs$core$IFn$_invoke$arity$0 = G__34418__0;
G__34418.cljs$core$IFn$_invoke$arity$1 = G__34418__1;
G__34418.cljs$core$IFn$_invoke$arity$2 = G__34418__2;
G__34418.cljs$core$IFn$_invoke$arity$3 = G__34418__3;
G__34418.cljs$core$IFn$_invoke$arity$variadic = G__34418__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34418;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__34424 = null;
var G__34424__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__34424__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34388 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34388) : f.call(null,G__34388));
})(),(function (){var G__34389 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34389) : g.call(null,G__34389));
})(),(function (){var G__34390 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__34390) : h.call(null,G__34390));
})()],null));
});
var G__34424__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34391 = x;
var G__34392 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34391,G__34392) : f.call(null,G__34391,G__34392));
})(),(function (){var G__34393 = x;
var G__34394 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__34393,G__34394) : g.call(null,G__34393,G__34394));
})(),(function (){var G__34395 = x;
var G__34396 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__34395,G__34396) : h.call(null,G__34395,G__34396));
})()],null));
});
var G__34424__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34397 = x;
var G__34398 = y;
var G__34399 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34397,G__34398,G__34399) : f.call(null,G__34397,G__34398,G__34399));
})(),(function (){var G__34400 = x;
var G__34401 = y;
var G__34402 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__34400,G__34401,G__34402) : g.call(null,G__34400,G__34401,G__34402));
})(),(function (){var G__34403 = x;
var G__34404 = y;
var G__34405 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__34403,G__34404,G__34405) : h.call(null,G__34403,G__34404,G__34405));
})()],null));
});
var G__34424__4 = (function() { 
var G__34425__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__34425 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34426__i = 0, G__34426__a = new Array(arguments.length -  3);
while (G__34426__i < G__34426__a.length) {G__34426__a[G__34426__i] = arguments[G__34426__i + 3]; ++G__34426__i;}
  args = new cljs.core.IndexedSeq(G__34426__a,0);
} 
return G__34425__delegate.call(this,x,y,z,args);};
G__34425.cljs$lang$maxFixedArity = 3;
G__34425.cljs$lang$applyTo = (function (arglist__34427){
var x = cljs.core.first(arglist__34427);
arglist__34427 = cljs.core.next(arglist__34427);
var y = cljs.core.first(arglist__34427);
arglist__34427 = cljs.core.next(arglist__34427);
var z = cljs.core.first(arglist__34427);
var args = cljs.core.rest(arglist__34427);
return G__34425__delegate(x,y,z,args);
});
G__34425.cljs$core$IFn$_invoke$arity$variadic = G__34425__delegate;
return G__34425;
})()
;
G__34424 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34424__0.call(this);
case 1:
return G__34424__1.call(this,x);
case 2:
return G__34424__2.call(this,x,y);
case 3:
return G__34424__3.call(this,x,y,z);
default:
var G__34428 = null;
if (arguments.length > 3) {
var G__34429__i = 0, G__34429__a = new Array(arguments.length -  3);
while (G__34429__i < G__34429__a.length) {G__34429__a[G__34429__i] = arguments[G__34429__i + 3]; ++G__34429__i;}
G__34428 = new cljs.core.IndexedSeq(G__34429__a,0);
}
return G__34424__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34428);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34424.cljs$lang$maxFixedArity = 3;
G__34424.cljs$lang$applyTo = G__34424__4.cljs$lang$applyTo;
G__34424.cljs$core$IFn$_invoke$arity$0 = G__34424__0;
G__34424.cljs$core$IFn$_invoke$arity$1 = G__34424__1;
G__34424.cljs$core$IFn$_invoke$arity$2 = G__34424__2;
G__34424.cljs$core$IFn$_invoke$arity$3 = G__34424__3;
G__34424.cljs$core$IFn$_invoke$arity$variadic = G__34424__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34424;
})()
});
var juxt__4 = (function() { 
var G__34430__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__34431 = null;
var G__34431__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34318_SHARP_,p2__34319_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34318_SHARP_,(function (){return (p2__34319_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__34319_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__34319_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34431__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34320_SHARP_,p2__34321_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34320_SHARP_,(function (){var G__34406 = x;
return (p2__34321_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__34321_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34406) : p2__34321_SHARP_.call(null,G__34406));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34431__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34322_SHARP_,p2__34323_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34322_SHARP_,(function (){var G__34407 = x;
var G__34408 = y;
return (p2__34323_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__34323_SHARP_.cljs$core$IFn$_invoke$arity$2(G__34407,G__34408) : p2__34323_SHARP_.call(null,G__34407,G__34408));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34431__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34324_SHARP_,p2__34325_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34324_SHARP_,(function (){var G__34409 = x;
var G__34410 = y;
var G__34411 = z;
return (p2__34325_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__34325_SHARP_.cljs$core$IFn$_invoke$arity$3(G__34409,G__34410,G__34411) : p2__34325_SHARP_.call(null,G__34409,G__34410,G__34411));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34431__4 = (function() { 
var G__34432__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34326_SHARP_,p2__34327_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34326_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__34327_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__34432 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34433__i = 0, G__34433__a = new Array(arguments.length -  3);
while (G__34433__i < G__34433__a.length) {G__34433__a[G__34433__i] = arguments[G__34433__i + 3]; ++G__34433__i;}
  args = new cljs.core.IndexedSeq(G__34433__a,0);
} 
return G__34432__delegate.call(this,x,y,z,args);};
G__34432.cljs$lang$maxFixedArity = 3;
G__34432.cljs$lang$applyTo = (function (arglist__34434){
var x = cljs.core.first(arglist__34434);
arglist__34434 = cljs.core.next(arglist__34434);
var y = cljs.core.first(arglist__34434);
arglist__34434 = cljs.core.next(arglist__34434);
var z = cljs.core.first(arglist__34434);
var args = cljs.core.rest(arglist__34434);
return G__34432__delegate(x,y,z,args);
});
G__34432.cljs$core$IFn$_invoke$arity$variadic = G__34432__delegate;
return G__34432;
})()
;
G__34431 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34431__0.call(this);
case 1:
return G__34431__1.call(this,x);
case 2:
return G__34431__2.call(this,x,y);
case 3:
return G__34431__3.call(this,x,y,z);
default:
var G__34435 = null;
if (arguments.length > 3) {
var G__34436__i = 0, G__34436__a = new Array(arguments.length -  3);
while (G__34436__i < G__34436__a.length) {G__34436__a[G__34436__i] = arguments[G__34436__i + 3]; ++G__34436__i;}
G__34435 = new cljs.core.IndexedSeq(G__34436__a,0);
}
return G__34431__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34431.cljs$lang$maxFixedArity = 3;
G__34431.cljs$lang$applyTo = G__34431__4.cljs$lang$applyTo;
G__34431.cljs$core$IFn$_invoke$arity$0 = G__34431__0;
G__34431.cljs$core$IFn$_invoke$arity$1 = G__34431__1;
G__34431.cljs$core$IFn$_invoke$arity$2 = G__34431__2;
G__34431.cljs$core$IFn$_invoke$arity$3 = G__34431__3;
G__34431.cljs$core$IFn$_invoke$arity$variadic = G__34431__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34431;
})()
;})(fs__$1))
};
var G__34430 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__34437__i = 0, G__34437__a = new Array(arguments.length -  3);
while (G__34437__i < G__34437__a.length) {G__34437__a[G__34437__i] = arguments[G__34437__i + 3]; ++G__34437__i;}
  fs = new cljs.core.IndexedSeq(G__34437__a,0);
} 
return G__34430__delegate.call(this,f,g,h,fs);};
G__34430.cljs$lang$maxFixedArity = 3;
G__34430.cljs$lang$applyTo = (function (arglist__34438){
var f = cljs.core.first(arglist__34438);
arglist__34438 = cljs.core.next(arglist__34438);
var g = cljs.core.first(arglist__34438);
arglist__34438 = cljs.core.next(arglist__34438);
var h = cljs.core.first(arglist__34438);
var fs = cljs.core.rest(arglist__34438);
return G__34430__delegate(f,g,h,fs);
});
G__34430.cljs$core$IFn$_invoke$arity$variadic = G__34430__delegate;
return G__34430;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__34439 = null;
if (arguments.length > 3) {
var G__34440__i = 0, G__34440__a = new Array(arguments.length -  3);
while (G__34440__i < G__34440__a.length) {G__34440__a[G__34440__i] = arguments[G__34440__i + 3]; ++G__34440__i;}
G__34439 = new cljs.core.IndexedSeq(G__34440__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__34439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__34441 = cljs.core.next(coll);
coll = G__34441;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__34442 = (n - (1));
var G__34443 = cljs.core.next(coll);
n = G__34442;
coll = G__34443;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__34447 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34447,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34447,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34447,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_34455 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__34456_34462 = cljs.core.first(coll);
var G__34457_34463 = writer;
var G__34458_34464 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34456_34462,G__34457_34463,G__34458_34464) : print_one.call(null,G__34456_34462,G__34457_34463,G__34458_34464));
} else {
}

var coll_34465__$1 = cljs.core.next(coll);
var n_34466 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_34465__$1) && (((n_34466 == null)) || (!((n_34466 === (0)))))){
cljs.core._write(writer,sep);

var G__34459_34467 = cljs.core.first(coll_34465__$1);
var G__34460_34468 = writer;
var G__34461_34469 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34459_34467,G__34460_34468,G__34461_34469) : print_one.call(null,G__34459_34467,G__34460_34468,G__34461_34469));

var G__34470 = cljs.core.next(coll_34465__$1);
var G__34471 = (n_34466 - (1));
coll_34465__$1 = G__34470;
n_34466 = G__34471;
continue;
} else {
if((cljs.core.seq(coll_34465__$1)) && ((n_34466 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_34455;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__34476 = cljs.core.seq(ss);
var chunk__34477 = null;
var count__34478 = (0);
var i__34479 = (0);
while(true){
if((i__34479 < count__34478)){
var s = chunk__34477.cljs$core$IIndexed$_nth$arity$2(null,i__34479);
cljs.core._write(writer,s);

var G__34480 = seq__34476;
var G__34481 = chunk__34477;
var G__34482 = count__34478;
var G__34483 = (i__34479 + (1));
seq__34476 = G__34480;
chunk__34477 = G__34481;
count__34478 = G__34482;
i__34479 = G__34483;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__34476);
if(temp__4406__auto__){
var seq__34476__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34476__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__34476__$1);
var G__34484 = cljs.core.chunk_rest(seq__34476__$1);
var G__34485 = c__11728__auto__;
var G__34486 = cljs.core.count(c__11728__auto__);
var G__34487 = (0);
seq__34476 = G__34484;
chunk__34477 = G__34485;
count__34478 = G__34486;
i__34479 = G__34487;
continue;
} else {
var s = cljs.core.first(seq__34476__$1);
cljs.core._write(writer,s);

var G__34488 = cljs.core.next(seq__34476__$1);
var G__34489 = null;
var G__34490 = (0);
var G__34491 = (0);
seq__34476 = G__34488;
chunk__34477 = G__34489;
count__34478 = G__34490;
i__34479 = G__34491;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__34492__i = 0, G__34492__a = new Array(arguments.length -  1);
while (G__34492__i < G__34492__a.length) {G__34492__a[G__34492__i] = arguments[G__34492__i + 1]; ++G__34492__i;}
  ss = new cljs.core.IndexedSeq(G__34492__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__34493){
var writer = cljs.core.first(arglist__34493);
var ss = cljs.core.rest(arglist__34493);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj34495 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj34495;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__34498 = "[\\\\\"\b\f\n\r\t]";
var G__34499 = "g";
return RegExp(G__34498,G__34499);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__10929__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__10929__auto__)){
var and__10929__auto____$1 = (function (){var G__34513 = obj;
if(G__34513){
var bit__11622__auto__ = (G__34513.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__11622__auto__) || (G__34513.cljs$core$IMeta$)){
return true;
} else {
if((!G__34513.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__34513);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__34513);
}
})();
if(and__10929__auto____$1){
return cljs.core.meta(obj);
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__34514 = obj;
if(G__34514){
var bit__11615__auto__ = (G__34514.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__11615__auto__) || (G__34514.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__34515 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__34516 = pr_writer;
var G__34517 = writer;
var G__34518 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__34515,G__34516,G__34517,G__34518) : cljs.core.print_map.call(null,G__34515,G__34516,G__34517,G__34518));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__34519 = obj;
return goog.isString(G__34519);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__34521 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__34521;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__34520 = obj;
if(G__34520){
var bit__11622__auto__ = (G__34520.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__11622__auto__) || (G__34520.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__34520.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__34520);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__34520);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__34526 = cljs.core.seq(cljs.core.next(objs));
var chunk__34527 = null;
var count__34528 = (0);
var i__34529 = (0);
while(true){
if((i__34529 < count__34528)){
var obj = chunk__34527.cljs$core$IIndexed$_nth$arity$2(null,i__34529);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__34530 = seq__34526;
var G__34531 = chunk__34527;
var G__34532 = count__34528;
var G__34533 = (i__34529 + (1));
seq__34526 = G__34530;
chunk__34527 = G__34531;
count__34528 = G__34532;
i__34529 = G__34533;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__34526);
if(temp__4406__auto__){
var seq__34526__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34526__$1)){
var c__11728__auto__ = cljs.core.chunk_first(seq__34526__$1);
var G__34534 = cljs.core.chunk_rest(seq__34526__$1);
var G__34535 = c__11728__auto__;
var G__34536 = cljs.core.count(c__11728__auto__);
var G__34537 = (0);
seq__34526 = G__34534;
chunk__34527 = G__34535;
count__34528 = G__34536;
i__34529 = G__34537;
continue;
} else {
var obj = cljs.core.first(seq__34526__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__34538 = cljs.core.next(seq__34526__$1);
var G__34539 = null;
var G__34540 = (0);
var G__34541 = (0);
seq__34526 = G__34538;
chunk__34527 = G__34539;
count__34528 = G__34540;
i__34529 = G__34541;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34542__i = 0, G__34542__a = new Array(arguments.length -  0);
while (G__34542__i < G__34542__a.length) {G__34542__a[G__34542__i] = arguments[G__34542__i + 0]; ++G__34542__i;}
  objs = new cljs.core.IndexedSeq(G__34542__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__34543){
var objs = cljs.core.seq(arglist__34543);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34544__i = 0, G__34544__a = new Array(arguments.length -  0);
while (G__34544__i < G__34544__a.length) {G__34544__a[G__34544__i] = arguments[G__34544__i + 0]; ++G__34544__i;}
  objs = new cljs.core.IndexedSeq(G__34544__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__34545){
var objs = cljs.core.seq(arglist__34545);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34546__i = 0, G__34546__a = new Array(arguments.length -  0);
while (G__34546__i < G__34546__a.length) {G__34546__a[G__34546__i] = arguments[G__34546__i + 0]; ++G__34546__i;}
  objs = new cljs.core.IndexedSeq(G__34546__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__34547){
var objs = cljs.core.seq(arglist__34547);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34548__i = 0, G__34548__a = new Array(arguments.length -  0);
while (G__34548__i < G__34548__a.length) {G__34548__a[G__34548__i] = arguments[G__34548__i + 0]; ++G__34548__i;}
  objs = new cljs.core.IndexedSeq(G__34548__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__34549){
var objs = cljs.core.seq(arglist__34549);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34550__i = 0, G__34550__a = new Array(arguments.length -  0);
while (G__34550__i < G__34550__a.length) {G__34550__a[G__34550__i] = arguments[G__34550__i + 0]; ++G__34550__i;}
  objs = new cljs.core.IndexedSeq(G__34550__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__34551){
var objs = cljs.core.seq(arglist__34551);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34552__i = 0, G__34552__a = new Array(arguments.length -  0);
while (G__34552__i < G__34552__a.length) {G__34552__a[G__34552__i] = arguments[G__34552__i + 0]; ++G__34552__i;}
  objs = new cljs.core.IndexedSeq(G__34552__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__34553){
var objs = cljs.core.seq(arglist__34553);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34554__i = 0, G__34554__a = new Array(arguments.length -  0);
while (G__34554__i < G__34554__a.length) {G__34554__a[G__34554__i] = arguments[G__34554__i + 0]; ++G__34554__i;}
  objs = new cljs.core.IndexedSeq(G__34554__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__34555){
var objs = cljs.core.seq(arglist__34555);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__34556__i = 0, G__34556__a = new Array(arguments.length -  0);
while (G__34556__i < G__34556__a.length) {G__34556__a[G__34556__i] = arguments[G__34556__i + 0]; ++G__34556__i;}
  objs = new cljs.core.IndexedSeq(G__34556__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__34557){
var objs = cljs.core.seq(arglist__34557);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__34564_34570 = cljs.core.key(e);
var G__34565_34571 = w;
var G__34566_34572 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34564_34570,G__34565_34571,G__34566_34572) : print_one.call(null,G__34564_34570,G__34565_34571,G__34566_34572));

cljs.core._write(w," ");

var G__34567 = cljs.core.val(e);
var G__34568 = w;
var G__34569 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34567,G__34568,G__34569) : print_one.call(null,G__34567,G__34568,G__34569));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__34573__i = 0, G__34573__a = new Array(arguments.length -  2);
while (G__34573__i < G__34573__a.length) {G__34573__a[G__34573__i] = arguments[G__34573__i + 2]; ++G__34573__i;}
  args = new cljs.core.IndexedSeq(G__34573__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__34574){
var iref = cljs.core.first(arglist__34574);
arglist__34574 = cljs.core.next(arglist__34574);
var f = cljs.core.first(arglist__34574);
var args = cljs.core.rest(arglist__34574);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__34577 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__34577) : cljs.core.atom.call(null,G__34577));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__34579 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34579) : cljs.core.deref.call(null,G__34579));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__34580_SHARP_,p2__34581_SHARP_){
var ret = (function (){var G__34584 = p1__34580_SHARP_;
var G__34585 = p2__34581_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34584,G__34585) : rf.call(null,G__34584,G__34585));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__34588 = null;
var G__34588__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34588__1 = (function (result){
var G__34587 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34587) : rf.call(null,G__34587));
});
var G__34588__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__34588 = function(result,input){
switch(arguments.length){
case 0:
return G__34588__0.call(this);
case 1:
return G__34588__1.call(this,result);
case 2:
return G__34588__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34588.cljs$core$IFn$_invoke$arity$0 = G__34588__0;
G__34588.cljs$core$IFn$_invoke$arity$1 = G__34588__1;
G__34588.cljs$core$IFn$_invoke$arity$2 = G__34588__2;
return G__34588;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__34597 = null;
var G__34597__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34597__1 = (function (result){
var G__34593 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34593) : rf.call(null,G__34593));
});
var G__34597__2 = (function (result,input){
var prior = (function (){var G__34594 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34594) : cljs.core.deref.call(null,G__34594));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__34595 = result;
var G__34596 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34595,G__34596) : rf.call(null,G__34595,G__34596));
}
});
G__34597 = function(result,input){
switch(arguments.length){
case 0:
return G__34597__0.call(this);
case 1:
return G__34597__1.call(this,result);
case 2:
return G__34597__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34597.cljs$core$IFn$_invoke$arity$0 = G__34597__0;
G__34597.cljs$core$IFn$_invoke$arity$1 = G__34597__1;
G__34597.cljs$core$IFn$_invoke$arity$2 = G__34597__2;
return G__34597;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11919__auto__ = this;
return cljs.core.es6_iterator(this__11919__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__34599_SHARP_,p2__34598_SHARP_){
var G__34601 = p2__34598_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__34601) : proc.call(null,G__34601));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj34603 = {};
return obj34603;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._clj__GT_js[(function (){var G__34607 = x__11585__auto__;
return goog.typeOf(G__34607);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._key__GT_js[(function (){var G__34611 = x__11585__auto__;
return goog.typeOf(G__34611);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__34614 = k;
if(G__34614){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto__ = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return G__34614.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__34614.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__34614);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__34614);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__34615 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__34615) : cljs.core.clj__GT_js.call(null,G__34615));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__34631 = x;
if(G__34631){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto__ = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return G__34631.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__34631.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__34631);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__34631);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj34633 = {};
return obj34633;
})();
var seq__34634_34644 = cljs.core.seq(x);
var chunk__34635_34645 = null;
var count__34636_34646 = (0);
var i__34637_34647 = (0);
while(true){
if((i__34637_34647 < count__34636_34646)){
var vec__34638_34648 = chunk__34635_34645.cljs$core$IIndexed$_nth$arity$2(null,i__34637_34647);
var k_34649 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34638_34648,(0),null);
var v_34650 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34638_34648,(1),null);
(m[cljs.core.key__GT_js(k_34649)] = clj__GT_js(v_34650));

var G__34651 = seq__34634_34644;
var G__34652 = chunk__34635_34645;
var G__34653 = count__34636_34646;
var G__34654 = (i__34637_34647 + (1));
seq__34634_34644 = G__34651;
chunk__34635_34645 = G__34652;
count__34636_34646 = G__34653;
i__34637_34647 = G__34654;
continue;
} else {
var temp__4406__auto___34655 = cljs.core.seq(seq__34634_34644);
if(temp__4406__auto___34655){
var seq__34634_34656__$1 = temp__4406__auto___34655;
if(cljs.core.chunked_seq_QMARK_(seq__34634_34656__$1)){
var c__11728__auto___34657 = cljs.core.chunk_first(seq__34634_34656__$1);
var G__34658 = cljs.core.chunk_rest(seq__34634_34656__$1);
var G__34659 = c__11728__auto___34657;
var G__34660 = cljs.core.count(c__11728__auto___34657);
var G__34661 = (0);
seq__34634_34644 = G__34658;
chunk__34635_34645 = G__34659;
count__34636_34646 = G__34660;
i__34637_34647 = G__34661;
continue;
} else {
var vec__34639_34662 = cljs.core.first(seq__34634_34656__$1);
var k_34663 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34639_34662,(0),null);
var v_34664 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34639_34662,(1),null);
(m[cljs.core.key__GT_js(k_34663)] = clj__GT_js(v_34664));

var G__34665 = cljs.core.next(seq__34634_34656__$1);
var G__34666 = null;
var G__34667 = (0);
var G__34668 = (0);
seq__34634_34644 = G__34665;
chunk__34635_34645 = G__34666;
count__34636_34646 = G__34667;
i__34637_34647 = G__34668;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__34640_34669 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__34641_34670 = null;
var count__34642_34671 = (0);
var i__34643_34672 = (0);
while(true){
if((i__34643_34672 < count__34642_34671)){
var x_34673__$1 = chunk__34641_34670.cljs$core$IIndexed$_nth$arity$2(null,i__34643_34672);
arr.push(x_34673__$1);

var G__34674 = seq__34640_34669;
var G__34675 = chunk__34641_34670;
var G__34676 = count__34642_34671;
var G__34677 = (i__34643_34672 + (1));
seq__34640_34669 = G__34674;
chunk__34641_34670 = G__34675;
count__34642_34671 = G__34676;
i__34643_34672 = G__34677;
continue;
} else {
var temp__4406__auto___34678 = cljs.core.seq(seq__34640_34669);
if(temp__4406__auto___34678){
var seq__34640_34679__$1 = temp__4406__auto___34678;
if(cljs.core.chunked_seq_QMARK_(seq__34640_34679__$1)){
var c__11728__auto___34680 = cljs.core.chunk_first(seq__34640_34679__$1);
var G__34681 = cljs.core.chunk_rest(seq__34640_34679__$1);
var G__34682 = c__11728__auto___34680;
var G__34683 = cljs.core.count(c__11728__auto___34680);
var G__34684 = (0);
seq__34640_34669 = G__34681;
chunk__34641_34670 = G__34682;
count__34642_34671 = G__34683;
i__34643_34672 = G__34684;
continue;
} else {
var x_34685__$1 = cljs.core.first(seq__34640_34679__$1);
arr.push(x_34685__$1);

var G__34686 = cljs.core.next(seq__34640_34679__$1);
var G__34687 = null;
var G__34688 = (0);
var G__34689 = (0);
seq__34640_34669 = G__34686;
chunk__34641_34670 = G__34687;
count__34642_34671 = G__34688;
i__34643_34672 = G__34689;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj34691 = {};
return obj34691;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__10929__auto__ = x;
if(and__10929__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__10929__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__11585__auto__ = (((x == null))?null:x);
return (function (){var or__10941__auto__ = (cljs.core._js__GT_clj[(function (){var G__34695 = x__11585__auto__;
return goog.typeOf(G__34695);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__34752__delegate = function (x,opts){
var map__34725 = opts;
var map__34725__$1 = ((cljs.core.seq_QMARK_(map__34725))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__34725):map__34725);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__34725__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__34725,map__34725__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__34741 = x__$1;
if(G__34741){
var bit__11622__auto__ = null;
if(cljs.core.truth_((function (){var or__10941__auto__ = bit__11622__auto__;
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return G__34741.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__34741.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__34741);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__34741);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__11697__auto__ = ((function (map__34725,map__34725__$1,keywordize_keys,keyfn){
return (function iter__34742(s__34743){
return (new cljs.core.LazySeq(null,((function (map__34725,map__34725__$1,keywordize_keys,keyfn){
return (function (){
var s__34743__$1 = s__34743;
while(true){
var temp__4406__auto__ = cljs.core.seq(s__34743__$1);
if(temp__4406__auto__){
var s__34743__$2 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s__34743__$2)){
var c__11695__auto__ = cljs.core.chunk_first(s__34743__$2);
var size__11696__auto__ = cljs.core.count(c__11695__auto__);
var b__34745 = cljs.core.chunk_buffer(size__11696__auto__);
if((function (){var i__34744 = (0);
while(true){
if((i__34744 < size__11696__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__11695__auto__,i__34744);
cljs.core.chunk_append(b__34745,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__34750 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__34750) : keyfn.call(null,G__34750));
})(),thisfn((x__$1[k]))], null));

var G__34753 = (i__34744 + (1));
i__34744 = G__34753;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__34745),iter__34742(cljs.core.chunk_rest(s__34743__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__34745),null);
}
} else {
var k = cljs.core.first(s__34743__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__34751 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__34751) : keyfn.call(null,G__34751));
})(),thisfn((x__$1[k]))], null),iter__34742(cljs.core.rest(s__34743__$2)));
}
} else {
return null;
}
break;
}
});})(map__34725,map__34725__$1,keywordize_keys,keyfn))
,null,null));
});})(map__34725,map__34725__$1,keywordize_keys,keyfn))
;
return iter__11697__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__34725,map__34725__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__34752 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__34754__i = 0, G__34754__a = new Array(arguments.length -  1);
while (G__34754__i < G__34754__a.length) {G__34754__a[G__34754__i] = arguments[G__34754__i + 1]; ++G__34754__i;}
  opts = new cljs.core.IndexedSeq(G__34754__a,0);
} 
return G__34752__delegate.call(this,x,opts);};
G__34752.cljs$lang$maxFixedArity = 1;
G__34752.cljs$lang$applyTo = (function (arglist__34755){
var x = cljs.core.first(arglist__34755);
var opts = cljs.core.rest(arglist__34755);
return G__34752__delegate(x,opts);
});
G__34752.cljs$core$IFn$_invoke$arity$variadic = G__34752__delegate;
return G__34752;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__34756 = null;
if (arguments.length > 1) {
var G__34757__i = 0, G__34757__a = new Array(arguments.length -  1);
while (G__34757__i < G__34757__a.length) {G__34757__a[G__34757__i] = arguments[G__34757__i + 1]; ++G__34757__i;}
G__34756 = new cljs.core.IndexedSeq(G__34757__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__34756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__34760 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__34760) : cljs.core.atom.call(null,G__34760));
})();
return ((function (mem){
return (function() { 
var G__34762__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__34761 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34761) : cljs.core.deref.call(null,G__34761));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__34762 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34763__i = 0, G__34763__a = new Array(arguments.length -  0);
while (G__34763__i < G__34763__a.length) {G__34763__a[G__34763__i] = arguments[G__34763__i + 0]; ++G__34763__i;}
  args = new cljs.core.IndexedSeq(G__34763__a,0);
} 
return G__34762__delegate.call(this,args);};
G__34762.cljs$lang$maxFixedArity = 0;
G__34762.cljs$lang$applyTo = (function (arglist__34764){
var args = cljs.core.seq(arglist__34764);
return G__34762__delegate(args);
});
G__34762.cljs$core$IFn$_invoke$arity$variadic = G__34762__delegate;
return G__34762;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__34766 = ret;
f = G__34766;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__34767__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__34767 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__34768__i = 0, G__34768__a = new Array(arguments.length -  1);
while (G__34768__i < G__34768__a.length) {G__34768__a[G__34768__i] = arguments[G__34768__i + 1]; ++G__34768__i;}
  args = new cljs.core.IndexedSeq(G__34768__a,0);
} 
return G__34767__delegate.call(this,f,args);};
G__34767.cljs$lang$maxFixedArity = 1;
G__34767.cljs$lang$applyTo = (function (arglist__34769){
var f = cljs.core.first(arglist__34769);
var args = cljs.core.rest(arglist__34769);
return G__34767__delegate(f,args);
});
G__34767.cljs$core$IFn$_invoke$arity$variadic = G__34767__delegate;
return G__34767;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__34770 = null;
if (arguments.length > 1) {
var G__34771__i = 0, G__34771__a = new Array(arguments.length -  1);
while (G__34771__i < G__34771__a.length) {G__34771__a[G__34771__i] = arguments[G__34771__i + 1]; ++G__34771__i;}
G__34770 = new cljs.core.IndexedSeq(G__34771__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__34770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__34774 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__34774) : Math.floor.call(null,G__34774));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__34776 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34776) : f.call(null,G__34776));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__34778 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__34778) : cljs.core.atom.call(null,G__34778));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__34779__i = 0, G__34779__a = new Array(arguments.length -  1);
while (G__34779__i < G__34779__a.length) {G__34779__a[G__34779__i] = arguments[G__34779__i + 1]; ++G__34779__i;}
  args = new cljs.core.IndexedSeq(G__34779__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__34780){
var f = cljs.core.first(arglist__34780);
var args = cljs.core.rest(arglist__34780);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__34845 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34845) : cljs.core.deref.call(null,G__34845));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__10941__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
var and__10929__auto__ = cljs.core.vector_QMARK_(parent);
if(and__10929__auto__){
var and__10929__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__10929__auto____$1){
var and__10929__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__10929__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__34870 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__34868 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__34868) : child.call(null,G__34868));
})(),(function (){var G__34869 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__34869) : parent.call(null,G__34869));
})());
var G__34871 = (i + (1));
ret = G__34870;
i = G__34871;
continue;
}
break;
}
} else {
return and__10929__auto____$2;
}
} else {
return and__10929__auto____$1;
}
} else {
return and__10929__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__34875 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34875) : cljs.core.deref.call(null,G__34875));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__34879 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34879) : cljs.core.deref.call(null,G__34879));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__34883 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34883) : cljs.core.deref.call(null,G__34883));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__34892 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__34892) : targets.call(null,G__34892));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__34893 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__34893) : sources.call(null,G__34893));
})()));
});})(tp,td,ta))
;
var or__10941__auto__ = ((cljs.core.contains_QMARK_((function (){var G__34897 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__34897) : tp.call(null,G__34897));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__34898 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__34898) : ta.call(null,G__34898));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__34899 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__34899) : ta.call(null,G__34899));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__34906 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__34906) : parentMap.call(null,G__34906));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__34907 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__34907) : parentMap.call(null,G__34907));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__34900_SHARP_){
return cljs.core.cons(cljs.core.first(p1__34900_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__34900_SHARP_),cljs.core.second(p1__34900_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__34908 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__34908) : parentMap.call(null,G__34908));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__34901_SHARP_,p2__34902_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__34901_SHARP_,p2__34902_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__34911 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34911) : cljs.core.deref.call(null,G__34911));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__34912 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34912) : cljs.core.deref.call(null,G__34912));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__34928 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34928) : cljs.core.deref.call(null,G__34928));
})().call(null,x);
var or__10941__auto__ = (cljs.core.truth_((function (){var and__10929__auto__ = xprefs;
if(cljs.core.truth_(and__10929__auto__)){
var G__34930 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__34930) : xprefs.call(null,G__34930));
} else {
return and__10929__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__34931 = cljs.core.rest(ps);
ps = G__34931;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__10941__auto____$1)){
return or__10941__auto____$1;
} else {
var or__10941__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__34932 = cljs.core.rest(ps);
ps = G__34932;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__10941__auto____$2)){
return or__10941__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__10941__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__10941__auto__)){
return or__10941__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__34946){
var vec__34947 = p__34946;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34947,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34947,(1),null);
var e = vec__34947;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__34948 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34948) : cljs.core.deref.call(null,G__34948));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__10941__auto__ = (be == null);
if(or__10941__auto__){
return or__10941__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__34949 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34949) : cljs.core.deref.call(null,G__34949));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__34950 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34950) : cljs.core.deref.call(null,G__34950));
})(),(function (){var G__34951 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34951) : cljs.core.deref.call(null,G__34951));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj34953 = {};
return obj34953;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._reset[(function (){var G__34957 = x__11585__auto__;
return goog.typeOf(G__34957);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._reset["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._add_method[(function (){var G__34961 = x__11585__auto__;
return goog.typeOf(G__34961);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._add_method["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._remove_method[(function (){var G__34965 = x__11585__auto__;
return goog.typeOf(G__34965);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._remove_method["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._prefer_method[(function (){var G__34969 = x__11585__auto__;
return goog.typeOf(G__34969);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._get_method[(function (){var G__34973 = x__11585__auto__;
return goog.typeOf(G__34973);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._get_method["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._methods[(function (){var G__34977 = x__11585__auto__;
return goog.typeOf(G__34977);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._methods["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__10929__auto__ = mf;
if(and__10929__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__10929__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__11585__auto__ = (((mf == null))?null:mf);
return (function (){var or__10941__auto__ = (cljs.core._prefers[(function (){var G__34981 = x__11585__auto__;
return goog.typeOf(G__34981);
})()]);
if(or__10941__auto__){
return or__10941__auto__;
} else {
var or__10941__auto____$1 = (cljs.core._prefers["_"]);
if(or__10941__auto____$1){
return or__10941__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__34983 = this$__$1;
return goog.getUid(G__34983);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__34984 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34984) : cljs.core.deref.call(null,G__34984));
})(),(function (){var G__34985 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34985) : cljs.core.deref.call(null,G__34985));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4404__auto__ = (function (){var G__34986 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34986) : cljs.core.deref.call(null,G__34986));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4404__auto__)){
var target_fn = temp__4404__auto__;
return target_fn;
} else {
var temp__4404__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4404__auto____$1)){
var target_fn = temp__4404__auto____$1;
return target_fn;
} else {
return (function (){var G__34987 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34987) : cljs.core.deref.call(null,G__34987));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__34988 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34988) : cljs.core.deref.call(null,G__34988));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__34989 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34989) : cljs.core.deref.call(null,G__34989));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__35830 = null;
var G__35830__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__35830__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34990 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__34990) : self__.dispatch_fn.call(null,G__34990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34991 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__34991) : target_fn.call(null,G__34991));
});
var G__35830__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34992 = a;
var G__34993 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__34992,G__34993) : self__.dispatch_fn.call(null,G__34992,G__34993));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34994 = a;
var G__34995 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__34994,G__34995) : target_fn.call(null,G__34994,G__34995));
});
var G__35830__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34996 = a;
var G__34997 = b;
var G__34998 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__34996,G__34997,G__34998) : self__.dispatch_fn.call(null,G__34996,G__34997,G__34998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34999 = a;
var G__35000 = b;
var G__35001 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__34999,G__35000,G__35001) : target_fn.call(null,G__34999,G__35000,G__35001));
});
var G__35830__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35002 = a;
var G__35003 = b;
var G__35004 = c;
var G__35005 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__35002,G__35003,G__35004,G__35005) : self__.dispatch_fn.call(null,G__35002,G__35003,G__35004,G__35005));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35006 = a;
var G__35007 = b;
var G__35008 = c;
var G__35009 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__35006,G__35007,G__35008,G__35009) : target_fn.call(null,G__35006,G__35007,G__35008,G__35009));
});
var G__35830__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35010 = a;
var G__35011 = b;
var G__35012 = c;
var G__35013 = d;
var G__35014 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__35010,G__35011,G__35012,G__35013,G__35014) : self__.dispatch_fn.call(null,G__35010,G__35011,G__35012,G__35013,G__35014));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35015 = a;
var G__35016 = b;
var G__35017 = c;
var G__35018 = d;
var G__35019 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__35015,G__35016,G__35017,G__35018,G__35019) : target_fn.call(null,G__35015,G__35016,G__35017,G__35018,G__35019));
});
var G__35830__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35020 = a;
var G__35021 = b;
var G__35022 = c;
var G__35023 = d;
var G__35024 = e;
var G__35025 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__35020,G__35021,G__35022,G__35023,G__35024,G__35025) : self__.dispatch_fn.call(null,G__35020,G__35021,G__35022,G__35023,G__35024,G__35025));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35026 = a;
var G__35027 = b;
var G__35028 = c;
var G__35029 = d;
var G__35030 = e;
var G__35031 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__35026,G__35027,G__35028,G__35029,G__35030,G__35031) : target_fn.call(null,G__35026,G__35027,G__35028,G__35029,G__35030,G__35031));
});
var G__35830__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35032 = a;
var G__35033 = b;
var G__35034 = c;
var G__35035 = d;
var G__35036 = e;
var G__35037 = f;
var G__35038 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__35032,G__35033,G__35034,G__35035,G__35036,G__35037,G__35038) : self__.dispatch_fn.call(null,G__35032,G__35033,G__35034,G__35035,G__35036,G__35037,G__35038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35039 = a;
var G__35040 = b;
var G__35041 = c;
var G__35042 = d;
var G__35043 = e;
var G__35044 = f;
var G__35045 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__35039,G__35040,G__35041,G__35042,G__35043,G__35044,G__35045) : target_fn.call(null,G__35039,G__35040,G__35041,G__35042,G__35043,G__35044,G__35045));
});
var G__35830__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35046 = a;
var G__35047 = b;
var G__35048 = c;
var G__35049 = d;
var G__35050 = e;
var G__35051 = f;
var G__35052 = g;
var G__35053 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__35046,G__35047,G__35048,G__35049,G__35050,G__35051,G__35052,G__35053) : self__.dispatch_fn.call(null,G__35046,G__35047,G__35048,G__35049,G__35050,G__35051,G__35052,G__35053));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35054 = a;
var G__35055 = b;
var G__35056 = c;
var G__35057 = d;
var G__35058 = e;
var G__35059 = f;
var G__35060 = g;
var G__35061 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__35054,G__35055,G__35056,G__35057,G__35058,G__35059,G__35060,G__35061) : target_fn.call(null,G__35054,G__35055,G__35056,G__35057,G__35058,G__35059,G__35060,G__35061));
});
var G__35830__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35062 = a;
var G__35063 = b;
var G__35064 = c;
var G__35065 = d;
var G__35066 = e;
var G__35067 = f;
var G__35068 = g;
var G__35069 = h;
var G__35070 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__35062,G__35063,G__35064,G__35065,G__35066,G__35067,G__35068,G__35069,G__35070) : self__.dispatch_fn.call(null,G__35062,G__35063,G__35064,G__35065,G__35066,G__35067,G__35068,G__35069,G__35070));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35071 = a;
var G__35072 = b;
var G__35073 = c;
var G__35074 = d;
var G__35075 = e;
var G__35076 = f;
var G__35077 = g;
var G__35078 = h;
var G__35079 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__35071,G__35072,G__35073,G__35074,G__35075,G__35076,G__35077,G__35078,G__35079) : target_fn.call(null,G__35071,G__35072,G__35073,G__35074,G__35075,G__35076,G__35077,G__35078,G__35079));
});
var G__35830__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35080 = a;
var G__35081 = b;
var G__35082 = c;
var G__35083 = d;
var G__35084 = e;
var G__35085 = f;
var G__35086 = g;
var G__35087 = h;
var G__35088 = i;
var G__35089 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__35080,G__35081,G__35082,G__35083,G__35084,G__35085,G__35086,G__35087,G__35088,G__35089) : self__.dispatch_fn.call(null,G__35080,G__35081,G__35082,G__35083,G__35084,G__35085,G__35086,G__35087,G__35088,G__35089));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35090 = a;
var G__35091 = b;
var G__35092 = c;
var G__35093 = d;
var G__35094 = e;
var G__35095 = f;
var G__35096 = g;
var G__35097 = h;
var G__35098 = i;
var G__35099 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__35090,G__35091,G__35092,G__35093,G__35094,G__35095,G__35096,G__35097,G__35098,G__35099) : target_fn.call(null,G__35090,G__35091,G__35092,G__35093,G__35094,G__35095,G__35096,G__35097,G__35098,G__35099));
});
var G__35830__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35100 = a;
var G__35101 = b;
var G__35102 = c;
var G__35103 = d;
var G__35104 = e;
var G__35105 = f;
var G__35106 = g;
var G__35107 = h;
var G__35108 = i;
var G__35109 = j;
var G__35110 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__35100,G__35101,G__35102,G__35103,G__35104,G__35105,G__35106,G__35107,G__35108,G__35109,G__35110) : self__.dispatch_fn.call(null,G__35100,G__35101,G__35102,G__35103,G__35104,G__35105,G__35106,G__35107,G__35108,G__35109,G__35110));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35111 = a;
var G__35112 = b;
var G__35113 = c;
var G__35114 = d;
var G__35115 = e;
var G__35116 = f;
var G__35117 = g;
var G__35118 = h;
var G__35119 = i;
var G__35120 = j;
var G__35121 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__35111,G__35112,G__35113,G__35114,G__35115,G__35116,G__35117,G__35118,G__35119,G__35120,G__35121) : target_fn.call(null,G__35111,G__35112,G__35113,G__35114,G__35115,G__35116,G__35117,G__35118,G__35119,G__35120,G__35121));
});
var G__35830__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35122 = a;
var G__35123 = b;
var G__35124 = c;
var G__35125 = d;
var G__35126 = e;
var G__35127 = f;
var G__35128 = g;
var G__35129 = h;
var G__35130 = i;
var G__35131 = j;
var G__35132 = k;
var G__35133 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__35122,G__35123,G__35124,G__35125,G__35126,G__35127,G__35128,G__35129,G__35130,G__35131,G__35132,G__35133) : self__.dispatch_fn.call(null,G__35122,G__35123,G__35124,G__35125,G__35126,G__35127,G__35128,G__35129,G__35130,G__35131,G__35132,G__35133));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35134 = a;
var G__35135 = b;
var G__35136 = c;
var G__35137 = d;
var G__35138 = e;
var G__35139 = f;
var G__35140 = g;
var G__35141 = h;
var G__35142 = i;
var G__35143 = j;
var G__35144 = k;
var G__35145 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__35134,G__35135,G__35136,G__35137,G__35138,G__35139,G__35140,G__35141,G__35142,G__35143,G__35144,G__35145) : target_fn.call(null,G__35134,G__35135,G__35136,G__35137,G__35138,G__35139,G__35140,G__35141,G__35142,G__35143,G__35144,G__35145));
});
var G__35830__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35146 = a;
var G__35147 = b;
var G__35148 = c;
var G__35149 = d;
var G__35150 = e;
var G__35151 = f;
var G__35152 = g;
var G__35153 = h;
var G__35154 = i;
var G__35155 = j;
var G__35156 = k;
var G__35157 = l;
var G__35158 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__35146,G__35147,G__35148,G__35149,G__35150,G__35151,G__35152,G__35153,G__35154,G__35155,G__35156,G__35157,G__35158) : self__.dispatch_fn.call(null,G__35146,G__35147,G__35148,G__35149,G__35150,G__35151,G__35152,G__35153,G__35154,G__35155,G__35156,G__35157,G__35158));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35159 = a;
var G__35160 = b;
var G__35161 = c;
var G__35162 = d;
var G__35163 = e;
var G__35164 = f;
var G__35165 = g;
var G__35166 = h;
var G__35167 = i;
var G__35168 = j;
var G__35169 = k;
var G__35170 = l;
var G__35171 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__35159,G__35160,G__35161,G__35162,G__35163,G__35164,G__35165,G__35166,G__35167,G__35168,G__35169,G__35170,G__35171) : target_fn.call(null,G__35159,G__35160,G__35161,G__35162,G__35163,G__35164,G__35165,G__35166,G__35167,G__35168,G__35169,G__35170,G__35171));
});
var G__35830__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35172 = a;
var G__35173 = b;
var G__35174 = c;
var G__35175 = d;
var G__35176 = e;
var G__35177 = f;
var G__35178 = g;
var G__35179 = h;
var G__35180 = i;
var G__35181 = j;
var G__35182 = k;
var G__35183 = l;
var G__35184 = m;
var G__35185 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__35172,G__35173,G__35174,G__35175,G__35176,G__35177,G__35178,G__35179,G__35180,G__35181,G__35182,G__35183,G__35184,G__35185) : self__.dispatch_fn.call(null,G__35172,G__35173,G__35174,G__35175,G__35176,G__35177,G__35178,G__35179,G__35180,G__35181,G__35182,G__35183,G__35184,G__35185));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35186 = a;
var G__35187 = b;
var G__35188 = c;
var G__35189 = d;
var G__35190 = e;
var G__35191 = f;
var G__35192 = g;
var G__35193 = h;
var G__35194 = i;
var G__35195 = j;
var G__35196 = k;
var G__35197 = l;
var G__35198 = m;
var G__35199 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__35186,G__35187,G__35188,G__35189,G__35190,G__35191,G__35192,G__35193,G__35194,G__35195,G__35196,G__35197,G__35198,G__35199) : target_fn.call(null,G__35186,G__35187,G__35188,G__35189,G__35190,G__35191,G__35192,G__35193,G__35194,G__35195,G__35196,G__35197,G__35198,G__35199));
});
var G__35830__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35200 = a;
var G__35201 = b;
var G__35202 = c;
var G__35203 = d;
var G__35204 = e;
var G__35205 = f;
var G__35206 = g;
var G__35207 = h;
var G__35208 = i;
var G__35209 = j;
var G__35210 = k;
var G__35211 = l;
var G__35212 = m;
var G__35213 = n;
var G__35214 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__35200,G__35201,G__35202,G__35203,G__35204,G__35205,G__35206,G__35207,G__35208,G__35209,G__35210,G__35211,G__35212,G__35213,G__35214) : self__.dispatch_fn.call(null,G__35200,G__35201,G__35202,G__35203,G__35204,G__35205,G__35206,G__35207,G__35208,G__35209,G__35210,G__35211,G__35212,G__35213,G__35214));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35215 = a;
var G__35216 = b;
var G__35217 = c;
var G__35218 = d;
var G__35219 = e;
var G__35220 = f;
var G__35221 = g;
var G__35222 = h;
var G__35223 = i;
var G__35224 = j;
var G__35225 = k;
var G__35226 = l;
var G__35227 = m;
var G__35228 = n;
var G__35229 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__35215,G__35216,G__35217,G__35218,G__35219,G__35220,G__35221,G__35222,G__35223,G__35224,G__35225,G__35226,G__35227,G__35228,G__35229) : target_fn.call(null,G__35215,G__35216,G__35217,G__35218,G__35219,G__35220,G__35221,G__35222,G__35223,G__35224,G__35225,G__35226,G__35227,G__35228,G__35229));
});
var G__35830__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35230 = a;
var G__35231 = b;
var G__35232 = c;
var G__35233 = d;
var G__35234 = e;
var G__35235 = f;
var G__35236 = g;
var G__35237 = h;
var G__35238 = i;
var G__35239 = j;
var G__35240 = k;
var G__35241 = l;
var G__35242 = m;
var G__35243 = n;
var G__35244 = o;
var G__35245 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__35230,G__35231,G__35232,G__35233,G__35234,G__35235,G__35236,G__35237,G__35238,G__35239,G__35240,G__35241,G__35242,G__35243,G__35244,G__35245) : self__.dispatch_fn.call(null,G__35230,G__35231,G__35232,G__35233,G__35234,G__35235,G__35236,G__35237,G__35238,G__35239,G__35240,G__35241,G__35242,G__35243,G__35244,G__35245));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35246 = a;
var G__35247 = b;
var G__35248 = c;
var G__35249 = d;
var G__35250 = e;
var G__35251 = f;
var G__35252 = g;
var G__35253 = h;
var G__35254 = i;
var G__35255 = j;
var G__35256 = k;
var G__35257 = l;
var G__35258 = m;
var G__35259 = n;
var G__35260 = o;
var G__35261 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__35246,G__35247,G__35248,G__35249,G__35250,G__35251,G__35252,G__35253,G__35254,G__35255,G__35256,G__35257,G__35258,G__35259,G__35260,G__35261) : target_fn.call(null,G__35246,G__35247,G__35248,G__35249,G__35250,G__35251,G__35252,G__35253,G__35254,G__35255,G__35256,G__35257,G__35258,G__35259,G__35260,G__35261));
});
var G__35830__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35262 = a;
var G__35263 = b;
var G__35264 = c;
var G__35265 = d;
var G__35266 = e;
var G__35267 = f;
var G__35268 = g;
var G__35269 = h;
var G__35270 = i;
var G__35271 = j;
var G__35272 = k;
var G__35273 = l;
var G__35274 = m;
var G__35275 = n;
var G__35276 = o;
var G__35277 = p;
var G__35278 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__35262,G__35263,G__35264,G__35265,G__35266,G__35267,G__35268,G__35269,G__35270,G__35271,G__35272,G__35273,G__35274,G__35275,G__35276,G__35277,G__35278) : self__.dispatch_fn.call(null,G__35262,G__35263,G__35264,G__35265,G__35266,G__35267,G__35268,G__35269,G__35270,G__35271,G__35272,G__35273,G__35274,G__35275,G__35276,G__35277,G__35278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35279 = a;
var G__35280 = b;
var G__35281 = c;
var G__35282 = d;
var G__35283 = e;
var G__35284 = f;
var G__35285 = g;
var G__35286 = h;
var G__35287 = i;
var G__35288 = j;
var G__35289 = k;
var G__35290 = l;
var G__35291 = m;
var G__35292 = n;
var G__35293 = o;
var G__35294 = p;
var G__35295 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__35279,G__35280,G__35281,G__35282,G__35283,G__35284,G__35285,G__35286,G__35287,G__35288,G__35289,G__35290,G__35291,G__35292,G__35293,G__35294,G__35295) : target_fn.call(null,G__35279,G__35280,G__35281,G__35282,G__35283,G__35284,G__35285,G__35286,G__35287,G__35288,G__35289,G__35290,G__35291,G__35292,G__35293,G__35294,G__35295));
});
var G__35830__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35296 = a;
var G__35297 = b;
var G__35298 = c;
var G__35299 = d;
var G__35300 = e;
var G__35301 = f;
var G__35302 = g;
var G__35303 = h;
var G__35304 = i;
var G__35305 = j;
var G__35306 = k;
var G__35307 = l;
var G__35308 = m;
var G__35309 = n;
var G__35310 = o;
var G__35311 = p;
var G__35312 = q;
var G__35313 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__35296,G__35297,G__35298,G__35299,G__35300,G__35301,G__35302,G__35303,G__35304,G__35305,G__35306,G__35307,G__35308,G__35309,G__35310,G__35311,G__35312,G__35313) : self__.dispatch_fn.call(null,G__35296,G__35297,G__35298,G__35299,G__35300,G__35301,G__35302,G__35303,G__35304,G__35305,G__35306,G__35307,G__35308,G__35309,G__35310,G__35311,G__35312,G__35313));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35314 = a;
var G__35315 = b;
var G__35316 = c;
var G__35317 = d;
var G__35318 = e;
var G__35319 = f;
var G__35320 = g;
var G__35321 = h;
var G__35322 = i;
var G__35323 = j;
var G__35324 = k;
var G__35325 = l;
var G__35326 = m;
var G__35327 = n;
var G__35328 = o;
var G__35329 = p;
var G__35330 = q;
var G__35331 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__35314,G__35315,G__35316,G__35317,G__35318,G__35319,G__35320,G__35321,G__35322,G__35323,G__35324,G__35325,G__35326,G__35327,G__35328,G__35329,G__35330,G__35331) : target_fn.call(null,G__35314,G__35315,G__35316,G__35317,G__35318,G__35319,G__35320,G__35321,G__35322,G__35323,G__35324,G__35325,G__35326,G__35327,G__35328,G__35329,G__35330,G__35331));
});
var G__35830__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35332 = a;
var G__35333 = b;
var G__35334 = c;
var G__35335 = d;
var G__35336 = e;
var G__35337 = f;
var G__35338 = g;
var G__35339 = h;
var G__35340 = i;
var G__35341 = j;
var G__35342 = k;
var G__35343 = l;
var G__35344 = m;
var G__35345 = n;
var G__35346 = o;
var G__35347 = p;
var G__35348 = q;
var G__35349 = r;
var G__35350 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__35332,G__35333,G__35334,G__35335,G__35336,G__35337,G__35338,G__35339,G__35340,G__35341,G__35342,G__35343,G__35344,G__35345,G__35346,G__35347,G__35348,G__35349,G__35350) : self__.dispatch_fn.call(null,G__35332,G__35333,G__35334,G__35335,G__35336,G__35337,G__35338,G__35339,G__35340,G__35341,G__35342,G__35343,G__35344,G__35345,G__35346,G__35347,G__35348,G__35349,G__35350));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35351 = a;
var G__35352 = b;
var G__35353 = c;
var G__35354 = d;
var G__35355 = e;
var G__35356 = f;
var G__35357 = g;
var G__35358 = h;
var G__35359 = i;
var G__35360 = j;
var G__35361 = k;
var G__35362 = l;
var G__35363 = m;
var G__35364 = n;
var G__35365 = o;
var G__35366 = p;
var G__35367 = q;
var G__35368 = r;
var G__35369 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__35351,G__35352,G__35353,G__35354,G__35355,G__35356,G__35357,G__35358,G__35359,G__35360,G__35361,G__35362,G__35363,G__35364,G__35365,G__35366,G__35367,G__35368,G__35369) : target_fn.call(null,G__35351,G__35352,G__35353,G__35354,G__35355,G__35356,G__35357,G__35358,G__35359,G__35360,G__35361,G__35362,G__35363,G__35364,G__35365,G__35366,G__35367,G__35368,G__35369));
});
var G__35830__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35370 = a;
var G__35371 = b;
var G__35372 = c;
var G__35373 = d;
var G__35374 = e;
var G__35375 = f;
var G__35376 = g;
var G__35377 = h;
var G__35378 = i;
var G__35379 = j;
var G__35380 = k;
var G__35381 = l;
var G__35382 = m;
var G__35383 = n;
var G__35384 = o;
var G__35385 = p;
var G__35386 = q;
var G__35387 = r;
var G__35388 = s;
var G__35389 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__35370,G__35371,G__35372,G__35373,G__35374,G__35375,G__35376,G__35377,G__35378,G__35379,G__35380,G__35381,G__35382,G__35383,G__35384,G__35385,G__35386,G__35387,G__35388,G__35389) : self__.dispatch_fn.call(null,G__35370,G__35371,G__35372,G__35373,G__35374,G__35375,G__35376,G__35377,G__35378,G__35379,G__35380,G__35381,G__35382,G__35383,G__35384,G__35385,G__35386,G__35387,G__35388,G__35389));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35390 = a;
var G__35391 = b;
var G__35392 = c;
var G__35393 = d;
var G__35394 = e;
var G__35395 = f;
var G__35396 = g;
var G__35397 = h;
var G__35398 = i;
var G__35399 = j;
var G__35400 = k;
var G__35401 = l;
var G__35402 = m;
var G__35403 = n;
var G__35404 = o;
var G__35405 = p;
var G__35406 = q;
var G__35407 = r;
var G__35408 = s;
var G__35409 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__35390,G__35391,G__35392,G__35393,G__35394,G__35395,G__35396,G__35397,G__35398,G__35399,G__35400,G__35401,G__35402,G__35403,G__35404,G__35405,G__35406,G__35407,G__35408,G__35409) : target_fn.call(null,G__35390,G__35391,G__35392,G__35393,G__35394,G__35395,G__35396,G__35397,G__35398,G__35399,G__35400,G__35401,G__35402,G__35403,G__35404,G__35405,G__35406,G__35407,G__35408,G__35409));
});
var G__35830__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__35830 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__35830__1.call(this,self__);
case 2:
return G__35830__2.call(this,self__,a);
case 3:
return G__35830__3.call(this,self__,a,b);
case 4:
return G__35830__4.call(this,self__,a,b,c);
case 5:
return G__35830__5.call(this,self__,a,b,c,d);
case 6:
return G__35830__6.call(this,self__,a,b,c,d,e);
case 7:
return G__35830__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__35830__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__35830__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__35830__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__35830__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__35830__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__35830__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__35830__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__35830__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__35830__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__35830__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__35830__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__35830__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__35830__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__35830__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__35830__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35830.cljs$core$IFn$_invoke$arity$1 = G__35830__1;
G__35830.cljs$core$IFn$_invoke$arity$2 = G__35830__2;
G__35830.cljs$core$IFn$_invoke$arity$3 = G__35830__3;
G__35830.cljs$core$IFn$_invoke$arity$4 = G__35830__4;
G__35830.cljs$core$IFn$_invoke$arity$5 = G__35830__5;
G__35830.cljs$core$IFn$_invoke$arity$6 = G__35830__6;
G__35830.cljs$core$IFn$_invoke$arity$7 = G__35830__7;
G__35830.cljs$core$IFn$_invoke$arity$8 = G__35830__8;
G__35830.cljs$core$IFn$_invoke$arity$9 = G__35830__9;
G__35830.cljs$core$IFn$_invoke$arity$10 = G__35830__10;
G__35830.cljs$core$IFn$_invoke$arity$11 = G__35830__11;
G__35830.cljs$core$IFn$_invoke$arity$12 = G__35830__12;
G__35830.cljs$core$IFn$_invoke$arity$13 = G__35830__13;
G__35830.cljs$core$IFn$_invoke$arity$14 = G__35830__14;
G__35830.cljs$core$IFn$_invoke$arity$15 = G__35830__15;
G__35830.cljs$core$IFn$_invoke$arity$16 = G__35830__16;
G__35830.cljs$core$IFn$_invoke$arity$17 = G__35830__17;
G__35830.cljs$core$IFn$_invoke$arity$18 = G__35830__18;
G__35830.cljs$core$IFn$_invoke$arity$19 = G__35830__19;
G__35830.cljs$core$IFn$_invoke$arity$20 = G__35830__20;
G__35830.cljs$core$IFn$_invoke$arity$21 = G__35830__21;
G__35830.cljs$core$IFn$_invoke$arity$22 = G__35830__22;
return G__35830;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args34982){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34982)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35410 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__35410) : self__.dispatch_fn.call(null,G__35410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35411 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__35411) : target_fn.call(null,G__35411));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35412 = a;
var G__35413 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__35412,G__35413) : self__.dispatch_fn.call(null,G__35412,G__35413));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35414 = a;
var G__35415 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__35414,G__35415) : target_fn.call(null,G__35414,G__35415));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35416 = a;
var G__35417 = b;
var G__35418 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__35416,G__35417,G__35418) : self__.dispatch_fn.call(null,G__35416,G__35417,G__35418));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35419 = a;
var G__35420 = b;
var G__35421 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__35419,G__35420,G__35421) : target_fn.call(null,G__35419,G__35420,G__35421));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35422 = a;
var G__35423 = b;
var G__35424 = c;
var G__35425 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__35422,G__35423,G__35424,G__35425) : self__.dispatch_fn.call(null,G__35422,G__35423,G__35424,G__35425));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35426 = a;
var G__35427 = b;
var G__35428 = c;
var G__35429 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__35426,G__35427,G__35428,G__35429) : target_fn.call(null,G__35426,G__35427,G__35428,G__35429));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35430 = a;
var G__35431 = b;
var G__35432 = c;
var G__35433 = d;
var G__35434 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__35430,G__35431,G__35432,G__35433,G__35434) : self__.dispatch_fn.call(null,G__35430,G__35431,G__35432,G__35433,G__35434));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35435 = a;
var G__35436 = b;
var G__35437 = c;
var G__35438 = d;
var G__35439 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__35435,G__35436,G__35437,G__35438,G__35439) : target_fn.call(null,G__35435,G__35436,G__35437,G__35438,G__35439));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35440 = a;
var G__35441 = b;
var G__35442 = c;
var G__35443 = d;
var G__35444 = e;
var G__35445 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__35440,G__35441,G__35442,G__35443,G__35444,G__35445) : self__.dispatch_fn.call(null,G__35440,G__35441,G__35442,G__35443,G__35444,G__35445));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35446 = a;
var G__35447 = b;
var G__35448 = c;
var G__35449 = d;
var G__35450 = e;
var G__35451 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__35446,G__35447,G__35448,G__35449,G__35450,G__35451) : target_fn.call(null,G__35446,G__35447,G__35448,G__35449,G__35450,G__35451));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35452 = a;
var G__35453 = b;
var G__35454 = c;
var G__35455 = d;
var G__35456 = e;
var G__35457 = f;
var G__35458 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__35452,G__35453,G__35454,G__35455,G__35456,G__35457,G__35458) : self__.dispatch_fn.call(null,G__35452,G__35453,G__35454,G__35455,G__35456,G__35457,G__35458));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35459 = a;
var G__35460 = b;
var G__35461 = c;
var G__35462 = d;
var G__35463 = e;
var G__35464 = f;
var G__35465 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__35459,G__35460,G__35461,G__35462,G__35463,G__35464,G__35465) : target_fn.call(null,G__35459,G__35460,G__35461,G__35462,G__35463,G__35464,G__35465));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35466 = a;
var G__35467 = b;
var G__35468 = c;
var G__35469 = d;
var G__35470 = e;
var G__35471 = f;
var G__35472 = g;
var G__35473 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__35466,G__35467,G__35468,G__35469,G__35470,G__35471,G__35472,G__35473) : self__.dispatch_fn.call(null,G__35466,G__35467,G__35468,G__35469,G__35470,G__35471,G__35472,G__35473));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35474 = a;
var G__35475 = b;
var G__35476 = c;
var G__35477 = d;
var G__35478 = e;
var G__35479 = f;
var G__35480 = g;
var G__35481 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__35474,G__35475,G__35476,G__35477,G__35478,G__35479,G__35480,G__35481) : target_fn.call(null,G__35474,G__35475,G__35476,G__35477,G__35478,G__35479,G__35480,G__35481));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35482 = a;
var G__35483 = b;
var G__35484 = c;
var G__35485 = d;
var G__35486 = e;
var G__35487 = f;
var G__35488 = g;
var G__35489 = h;
var G__35490 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__35482,G__35483,G__35484,G__35485,G__35486,G__35487,G__35488,G__35489,G__35490) : self__.dispatch_fn.call(null,G__35482,G__35483,G__35484,G__35485,G__35486,G__35487,G__35488,G__35489,G__35490));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35491 = a;
var G__35492 = b;
var G__35493 = c;
var G__35494 = d;
var G__35495 = e;
var G__35496 = f;
var G__35497 = g;
var G__35498 = h;
var G__35499 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__35491,G__35492,G__35493,G__35494,G__35495,G__35496,G__35497,G__35498,G__35499) : target_fn.call(null,G__35491,G__35492,G__35493,G__35494,G__35495,G__35496,G__35497,G__35498,G__35499));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35500 = a;
var G__35501 = b;
var G__35502 = c;
var G__35503 = d;
var G__35504 = e;
var G__35505 = f;
var G__35506 = g;
var G__35507 = h;
var G__35508 = i;
var G__35509 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__35500,G__35501,G__35502,G__35503,G__35504,G__35505,G__35506,G__35507,G__35508,G__35509) : self__.dispatch_fn.call(null,G__35500,G__35501,G__35502,G__35503,G__35504,G__35505,G__35506,G__35507,G__35508,G__35509));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35510 = a;
var G__35511 = b;
var G__35512 = c;
var G__35513 = d;
var G__35514 = e;
var G__35515 = f;
var G__35516 = g;
var G__35517 = h;
var G__35518 = i;
var G__35519 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__35510,G__35511,G__35512,G__35513,G__35514,G__35515,G__35516,G__35517,G__35518,G__35519) : target_fn.call(null,G__35510,G__35511,G__35512,G__35513,G__35514,G__35515,G__35516,G__35517,G__35518,G__35519));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35520 = a;
var G__35521 = b;
var G__35522 = c;
var G__35523 = d;
var G__35524 = e;
var G__35525 = f;
var G__35526 = g;
var G__35527 = h;
var G__35528 = i;
var G__35529 = j;
var G__35530 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__35520,G__35521,G__35522,G__35523,G__35524,G__35525,G__35526,G__35527,G__35528,G__35529,G__35530) : self__.dispatch_fn.call(null,G__35520,G__35521,G__35522,G__35523,G__35524,G__35525,G__35526,G__35527,G__35528,G__35529,G__35530));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35531 = a;
var G__35532 = b;
var G__35533 = c;
var G__35534 = d;
var G__35535 = e;
var G__35536 = f;
var G__35537 = g;
var G__35538 = h;
var G__35539 = i;
var G__35540 = j;
var G__35541 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__35531,G__35532,G__35533,G__35534,G__35535,G__35536,G__35537,G__35538,G__35539,G__35540,G__35541) : target_fn.call(null,G__35531,G__35532,G__35533,G__35534,G__35535,G__35536,G__35537,G__35538,G__35539,G__35540,G__35541));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35542 = a;
var G__35543 = b;
var G__35544 = c;
var G__35545 = d;
var G__35546 = e;
var G__35547 = f;
var G__35548 = g;
var G__35549 = h;
var G__35550 = i;
var G__35551 = j;
var G__35552 = k;
var G__35553 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__35542,G__35543,G__35544,G__35545,G__35546,G__35547,G__35548,G__35549,G__35550,G__35551,G__35552,G__35553) : self__.dispatch_fn.call(null,G__35542,G__35543,G__35544,G__35545,G__35546,G__35547,G__35548,G__35549,G__35550,G__35551,G__35552,G__35553));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35554 = a;
var G__35555 = b;
var G__35556 = c;
var G__35557 = d;
var G__35558 = e;
var G__35559 = f;
var G__35560 = g;
var G__35561 = h;
var G__35562 = i;
var G__35563 = j;
var G__35564 = k;
var G__35565 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__35554,G__35555,G__35556,G__35557,G__35558,G__35559,G__35560,G__35561,G__35562,G__35563,G__35564,G__35565) : target_fn.call(null,G__35554,G__35555,G__35556,G__35557,G__35558,G__35559,G__35560,G__35561,G__35562,G__35563,G__35564,G__35565));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35566 = a;
var G__35567 = b;
var G__35568 = c;
var G__35569 = d;
var G__35570 = e;
var G__35571 = f;
var G__35572 = g;
var G__35573 = h;
var G__35574 = i;
var G__35575 = j;
var G__35576 = k;
var G__35577 = l;
var G__35578 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__35566,G__35567,G__35568,G__35569,G__35570,G__35571,G__35572,G__35573,G__35574,G__35575,G__35576,G__35577,G__35578) : self__.dispatch_fn.call(null,G__35566,G__35567,G__35568,G__35569,G__35570,G__35571,G__35572,G__35573,G__35574,G__35575,G__35576,G__35577,G__35578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35579 = a;
var G__35580 = b;
var G__35581 = c;
var G__35582 = d;
var G__35583 = e;
var G__35584 = f;
var G__35585 = g;
var G__35586 = h;
var G__35587 = i;
var G__35588 = j;
var G__35589 = k;
var G__35590 = l;
var G__35591 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__35579,G__35580,G__35581,G__35582,G__35583,G__35584,G__35585,G__35586,G__35587,G__35588,G__35589,G__35590,G__35591) : target_fn.call(null,G__35579,G__35580,G__35581,G__35582,G__35583,G__35584,G__35585,G__35586,G__35587,G__35588,G__35589,G__35590,G__35591));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35592 = a;
var G__35593 = b;
var G__35594 = c;
var G__35595 = d;
var G__35596 = e;
var G__35597 = f;
var G__35598 = g;
var G__35599 = h;
var G__35600 = i;
var G__35601 = j;
var G__35602 = k;
var G__35603 = l;
var G__35604 = m;
var G__35605 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__35592,G__35593,G__35594,G__35595,G__35596,G__35597,G__35598,G__35599,G__35600,G__35601,G__35602,G__35603,G__35604,G__35605) : self__.dispatch_fn.call(null,G__35592,G__35593,G__35594,G__35595,G__35596,G__35597,G__35598,G__35599,G__35600,G__35601,G__35602,G__35603,G__35604,G__35605));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35606 = a;
var G__35607 = b;
var G__35608 = c;
var G__35609 = d;
var G__35610 = e;
var G__35611 = f;
var G__35612 = g;
var G__35613 = h;
var G__35614 = i;
var G__35615 = j;
var G__35616 = k;
var G__35617 = l;
var G__35618 = m;
var G__35619 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__35606,G__35607,G__35608,G__35609,G__35610,G__35611,G__35612,G__35613,G__35614,G__35615,G__35616,G__35617,G__35618,G__35619) : target_fn.call(null,G__35606,G__35607,G__35608,G__35609,G__35610,G__35611,G__35612,G__35613,G__35614,G__35615,G__35616,G__35617,G__35618,G__35619));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35620 = a;
var G__35621 = b;
var G__35622 = c;
var G__35623 = d;
var G__35624 = e;
var G__35625 = f;
var G__35626 = g;
var G__35627 = h;
var G__35628 = i;
var G__35629 = j;
var G__35630 = k;
var G__35631 = l;
var G__35632 = m;
var G__35633 = n;
var G__35634 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__35620,G__35621,G__35622,G__35623,G__35624,G__35625,G__35626,G__35627,G__35628,G__35629,G__35630,G__35631,G__35632,G__35633,G__35634) : self__.dispatch_fn.call(null,G__35620,G__35621,G__35622,G__35623,G__35624,G__35625,G__35626,G__35627,G__35628,G__35629,G__35630,G__35631,G__35632,G__35633,G__35634));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35635 = a;
var G__35636 = b;
var G__35637 = c;
var G__35638 = d;
var G__35639 = e;
var G__35640 = f;
var G__35641 = g;
var G__35642 = h;
var G__35643 = i;
var G__35644 = j;
var G__35645 = k;
var G__35646 = l;
var G__35647 = m;
var G__35648 = n;
var G__35649 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__35635,G__35636,G__35637,G__35638,G__35639,G__35640,G__35641,G__35642,G__35643,G__35644,G__35645,G__35646,G__35647,G__35648,G__35649) : target_fn.call(null,G__35635,G__35636,G__35637,G__35638,G__35639,G__35640,G__35641,G__35642,G__35643,G__35644,G__35645,G__35646,G__35647,G__35648,G__35649));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35650 = a;
var G__35651 = b;
var G__35652 = c;
var G__35653 = d;
var G__35654 = e;
var G__35655 = f;
var G__35656 = g;
var G__35657 = h;
var G__35658 = i;
var G__35659 = j;
var G__35660 = k;
var G__35661 = l;
var G__35662 = m;
var G__35663 = n;
var G__35664 = o;
var G__35665 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__35650,G__35651,G__35652,G__35653,G__35654,G__35655,G__35656,G__35657,G__35658,G__35659,G__35660,G__35661,G__35662,G__35663,G__35664,G__35665) : self__.dispatch_fn.call(null,G__35650,G__35651,G__35652,G__35653,G__35654,G__35655,G__35656,G__35657,G__35658,G__35659,G__35660,G__35661,G__35662,G__35663,G__35664,G__35665));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35666 = a;
var G__35667 = b;
var G__35668 = c;
var G__35669 = d;
var G__35670 = e;
var G__35671 = f;
var G__35672 = g;
var G__35673 = h;
var G__35674 = i;
var G__35675 = j;
var G__35676 = k;
var G__35677 = l;
var G__35678 = m;
var G__35679 = n;
var G__35680 = o;
var G__35681 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__35666,G__35667,G__35668,G__35669,G__35670,G__35671,G__35672,G__35673,G__35674,G__35675,G__35676,G__35677,G__35678,G__35679,G__35680,G__35681) : target_fn.call(null,G__35666,G__35667,G__35668,G__35669,G__35670,G__35671,G__35672,G__35673,G__35674,G__35675,G__35676,G__35677,G__35678,G__35679,G__35680,G__35681));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35682 = a;
var G__35683 = b;
var G__35684 = c;
var G__35685 = d;
var G__35686 = e;
var G__35687 = f;
var G__35688 = g;
var G__35689 = h;
var G__35690 = i;
var G__35691 = j;
var G__35692 = k;
var G__35693 = l;
var G__35694 = m;
var G__35695 = n;
var G__35696 = o;
var G__35697 = p;
var G__35698 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__35682,G__35683,G__35684,G__35685,G__35686,G__35687,G__35688,G__35689,G__35690,G__35691,G__35692,G__35693,G__35694,G__35695,G__35696,G__35697,G__35698) : self__.dispatch_fn.call(null,G__35682,G__35683,G__35684,G__35685,G__35686,G__35687,G__35688,G__35689,G__35690,G__35691,G__35692,G__35693,G__35694,G__35695,G__35696,G__35697,G__35698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35699 = a;
var G__35700 = b;
var G__35701 = c;
var G__35702 = d;
var G__35703 = e;
var G__35704 = f;
var G__35705 = g;
var G__35706 = h;
var G__35707 = i;
var G__35708 = j;
var G__35709 = k;
var G__35710 = l;
var G__35711 = m;
var G__35712 = n;
var G__35713 = o;
var G__35714 = p;
var G__35715 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__35699,G__35700,G__35701,G__35702,G__35703,G__35704,G__35705,G__35706,G__35707,G__35708,G__35709,G__35710,G__35711,G__35712,G__35713,G__35714,G__35715) : target_fn.call(null,G__35699,G__35700,G__35701,G__35702,G__35703,G__35704,G__35705,G__35706,G__35707,G__35708,G__35709,G__35710,G__35711,G__35712,G__35713,G__35714,G__35715));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35716 = a;
var G__35717 = b;
var G__35718 = c;
var G__35719 = d;
var G__35720 = e;
var G__35721 = f;
var G__35722 = g;
var G__35723 = h;
var G__35724 = i;
var G__35725 = j;
var G__35726 = k;
var G__35727 = l;
var G__35728 = m;
var G__35729 = n;
var G__35730 = o;
var G__35731 = p;
var G__35732 = q;
var G__35733 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__35716,G__35717,G__35718,G__35719,G__35720,G__35721,G__35722,G__35723,G__35724,G__35725,G__35726,G__35727,G__35728,G__35729,G__35730,G__35731,G__35732,G__35733) : self__.dispatch_fn.call(null,G__35716,G__35717,G__35718,G__35719,G__35720,G__35721,G__35722,G__35723,G__35724,G__35725,G__35726,G__35727,G__35728,G__35729,G__35730,G__35731,G__35732,G__35733));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35734 = a;
var G__35735 = b;
var G__35736 = c;
var G__35737 = d;
var G__35738 = e;
var G__35739 = f;
var G__35740 = g;
var G__35741 = h;
var G__35742 = i;
var G__35743 = j;
var G__35744 = k;
var G__35745 = l;
var G__35746 = m;
var G__35747 = n;
var G__35748 = o;
var G__35749 = p;
var G__35750 = q;
var G__35751 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__35734,G__35735,G__35736,G__35737,G__35738,G__35739,G__35740,G__35741,G__35742,G__35743,G__35744,G__35745,G__35746,G__35747,G__35748,G__35749,G__35750,G__35751) : target_fn.call(null,G__35734,G__35735,G__35736,G__35737,G__35738,G__35739,G__35740,G__35741,G__35742,G__35743,G__35744,G__35745,G__35746,G__35747,G__35748,G__35749,G__35750,G__35751));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35752 = a;
var G__35753 = b;
var G__35754 = c;
var G__35755 = d;
var G__35756 = e;
var G__35757 = f;
var G__35758 = g;
var G__35759 = h;
var G__35760 = i;
var G__35761 = j;
var G__35762 = k;
var G__35763 = l;
var G__35764 = m;
var G__35765 = n;
var G__35766 = o;
var G__35767 = p;
var G__35768 = q;
var G__35769 = r;
var G__35770 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__35752,G__35753,G__35754,G__35755,G__35756,G__35757,G__35758,G__35759,G__35760,G__35761,G__35762,G__35763,G__35764,G__35765,G__35766,G__35767,G__35768,G__35769,G__35770) : self__.dispatch_fn.call(null,G__35752,G__35753,G__35754,G__35755,G__35756,G__35757,G__35758,G__35759,G__35760,G__35761,G__35762,G__35763,G__35764,G__35765,G__35766,G__35767,G__35768,G__35769,G__35770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35771 = a;
var G__35772 = b;
var G__35773 = c;
var G__35774 = d;
var G__35775 = e;
var G__35776 = f;
var G__35777 = g;
var G__35778 = h;
var G__35779 = i;
var G__35780 = j;
var G__35781 = k;
var G__35782 = l;
var G__35783 = m;
var G__35784 = n;
var G__35785 = o;
var G__35786 = p;
var G__35787 = q;
var G__35788 = r;
var G__35789 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__35771,G__35772,G__35773,G__35774,G__35775,G__35776,G__35777,G__35778,G__35779,G__35780,G__35781,G__35782,G__35783,G__35784,G__35785,G__35786,G__35787,G__35788,G__35789) : target_fn.call(null,G__35771,G__35772,G__35773,G__35774,G__35775,G__35776,G__35777,G__35778,G__35779,G__35780,G__35781,G__35782,G__35783,G__35784,G__35785,G__35786,G__35787,G__35788,G__35789));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35790 = a;
var G__35791 = b;
var G__35792 = c;
var G__35793 = d;
var G__35794 = e;
var G__35795 = f;
var G__35796 = g;
var G__35797 = h;
var G__35798 = i;
var G__35799 = j;
var G__35800 = k;
var G__35801 = l;
var G__35802 = m;
var G__35803 = n;
var G__35804 = o;
var G__35805 = p;
var G__35806 = q;
var G__35807 = r;
var G__35808 = s;
var G__35809 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__35790,G__35791,G__35792,G__35793,G__35794,G__35795,G__35796,G__35797,G__35798,G__35799,G__35800,G__35801,G__35802,G__35803,G__35804,G__35805,G__35806,G__35807,G__35808,G__35809) : self__.dispatch_fn.call(null,G__35790,G__35791,G__35792,G__35793,G__35794,G__35795,G__35796,G__35797,G__35798,G__35799,G__35800,G__35801,G__35802,G__35803,G__35804,G__35805,G__35806,G__35807,G__35808,G__35809));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35810 = a;
var G__35811 = b;
var G__35812 = c;
var G__35813 = d;
var G__35814 = e;
var G__35815 = f;
var G__35816 = g;
var G__35817 = h;
var G__35818 = i;
var G__35819 = j;
var G__35820 = k;
var G__35821 = l;
var G__35822 = m;
var G__35823 = n;
var G__35824 = o;
var G__35825 = p;
var G__35826 = q;
var G__35827 = r;
var G__35828 = s;
var G__35829 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__35810,G__35811,G__35812,G__35813,G__35814,G__35815,G__35816,G__35817,G__35818,G__35819,G__35820,G__35821,G__35822,G__35823,G__35824,G__35825,G__35826,G__35827,G__35828,G__35829) : target_fn.call(null,G__35810,G__35811,G__35812,G__35813,G__35814,G__35815,G__35816,G__35817,G__35818,G__35819,G__35820,G__35821,G__35822,G__35823,G__35824,G__35825,G__35826,G__35827,G__35828,G__35829));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__35831 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__35831);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__11528__auto__,writer__11529__auto__,opt__11530__auto__){
return cljs.core._write(writer__11529__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__35836 = msg;
return Error(G__35836);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__35841 = x;
var G__35842 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__35841,G__35842) : pred.call(null,G__35841,G__35842));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__35843 = y;
var G__35844 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__35843,G__35844) : pred.call(null,G__35843,G__35844));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
